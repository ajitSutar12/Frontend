{"version":3,"sources":["./src/app/shared/dropdownService/bank-Master-dropdown.service.ts","./src/app/shared/elements/a1.service.ts","./src/app/shared/elements/branch.service.ts","./src/app/shared/elements/scheme1.service.ts","./src/app/theme/master/customer/account-opening/account-opening-routing.module.ts","./src/app/theme/master/customer/account-opening/account-opening.component.ts","./src/app/theme/master/customer/account-opening/account-opening.component.html","./src/app/theme/master/customer/account-opening/account-opening.module.ts","./src/app/theme/master/customer/account-opening/account-opening.service.ts","./src/app/theme/master/policy-settings/information/bank-master/bank-master.service.ts"],"names":[],"mappings":"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","file":"default~account-opening-account-opening-module~centralised-passing-centralisedPassing-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n\r\n@Injectable() \r\nexport class BankMasterService {\r\n    bankMasterObject = new Array();\r\n    // API \r\n    //// bank-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getBankList() {\r\n        this.bankMasterObject = [];\r\n        return this.http.get<any>(this.url + '/bank-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.BANK_CODE +' '+ element.BANK_NAME, value: element.id };\r\n                    this.bankMasterObject.push(obj)\r\n                });\r\n                return this.bankMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class A1Service {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '1' },\r\n        { value: '1', label: '2' },\r\n        { value: '2', label: '3' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(A1Service.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(A1Service.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(A1Service.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class BranchService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: 'branch1' },\r\n        { value: '1', label: 'branch2' },\r\n        { value: '2', label: 'branch1' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(BranchService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(BranchService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(BranchService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class Scheme1Service {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '111' },\r\n        { value: '1', label: '222' },\r\n        { value: '2', label: '333' },\r\n        { value: '3', label: 'NA' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(Scheme1Service.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(Scheme1Service.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(Scheme1Service.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {AccountOpeningComponent} from './account-opening.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountOpeningComponent,\r\n    data: {\r\n      title: 'Investment Module',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountOpeningRoutingModule { }\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { BankMasterService } from '../../../../shared/dropdownService/bank-Master-dropdown.service';\r\nimport { OwnbranchMasterService } from '../../../../shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service';\r\nimport { InvestmentService } from './account-opening.service';\r\nimport { BankService } from '../../policy-settings/information/bank-master/bank-master.service';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs-compat';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface InvestmentMaster {\r\n  AC_ACNOTYPE: string\r\n  AC_TYPE: string\r\n  AC_NO: number\r\n  INVEST_BANK: string\r\n  INVEST_BRANCH: string\r\n  AC_NAME: string\r\n  AC_REF_RECEIPTNO: number\r\n  AC_OPDATE: Date\r\n  AC_ASON_DATE: Date\r\n  AC_EXPDT: Date\r\n  AC_MONTHS: number\r\n  AC_DAYS: number\r\n  AC_SCHMAMT: number\r\n  AC_INTRATE: number\r\n  AC_MATUAMT: number\r\n  AC_CLOSEDT: Date\r\n}\r\n@Component({\r\n  selector: 'app-account-opening',\r\n  templateUrl: './account-opening.component.html',\r\n  styleUrls: ['./account-opening.component.scss']\r\n})\r\n\r\nexport class AccountOpeningComponent implements OnInit {\r\n  @Input() childMessage: string;\r\n  @Output() public getUserData = new EventEmitter<string>();\r\n  //api \r\n  url = environment.base_url;\r\n  formSubmitted = false;\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  investmentMaster: InvestmentMaster[];\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  dtExportOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  datemax: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  //variable to get ID to update\r\n  updateID: number = 0;\r\n  // Filter Variable\r\n  filterData = {};\r\n\r\n  //Scheme type variable\r\n  schemeType: string = 'IV'\r\n\r\n  //variables for  add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  newbtnShow: boolean = false;\r\n  id: string = '';\r\n  BankCode: any[];\r\n  BranchCode: any[];\r\n  scheme: any[];\r\n  bsValue\r\n  AC_TYPE: boolean = false\r\n  code: any = null\r\n  ngBank: any = null\r\n  ngBranch: any = null\r\n  DatatableHideShow: boolean = true;\r\n  rejectShow:boolean =false;\r\n  approveShow:boolean =false;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private bankMasterService: BankMasterService,\r\n    private ownbranchMaster: OwnbranchMasterService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private bankService: BankService,\r\n    private investmentService: InvestmentService,\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n\r\n        dataTableParameters.columns.forEach(element => {\r\n          if (element.search.value != '') {\r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          } else {\r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if (this.filterData.hasOwnProperty(element.data)) {\r\n              let value = this.filterData[getColumnName];\r\n              if (columnValue != undefined || value != undefined) {\r\n                delete this.filterData[element.data];\r\n              }\r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            this.url + '/investment',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.investmentMaster = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      columnDefs: [{\r\n        targets: '_all',\r\n        defaultContent: \"\"\r\n      }],\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n        },\r\n        {\r\n          title: 'Scheme',\r\n          data: 'AC_TYPE'\r\n        },\r\n        {\r\n          title: 'Account Number',\r\n          data: 'AC_NO'\r\n        },\r\n        {\r\n          title: 'Member Name',\r\n          data: 'AC_NAME'\r\n        },\r\n        {\r\n          title: 'Bank Code',\r\n          data: 'INVEST_BANK'\r\n        },\r\n        {\r\n          title: 'Branch Code',\r\n          data: 'INVEST_BRANCH'\r\n        },\r\n        {\r\n          title: 'A/c Open Date',\r\n          data: 'AC_OPDATE'\r\n        },\r\n        {\r\n          title: 'As On Date',\r\n          data: 'AC_ASON_DATE'\r\n        },\r\n        {\r\n          title: 'Maturity Date',\r\n          data: 'AC_EXPDT'\r\n        },\r\n        {\r\n          title: 'Receipt No.',\r\n          data: 'AC_REF_RECEIPTNO'\r\n        },\r\n        {\r\n          title: 'Interest Rate',\r\n          data: 'AC_INTRATE'\r\n        },\r\n        {\r\n          title: 'Deposit Amount',\r\n          data: 'AC_SCHMAMT'\r\n        },\r\n\r\n        {\r\n          title: 'Maturity Amount',\r\n          data: 'AC_MATUAMT'\r\n        },\r\n        {\r\n          title: 'Account Closed Date',\r\n          data: 'AC_CLOSEDT'\r\n        },\r\n      ],\r\n      dom: 'Blrtip',\r\n    };\r\n    this.bankMasterService.getBankList().pipe(first()).subscribe(data => {\r\n      this.BankCode = data;\r\n    })\r\n    this.ownbranchMaster.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.BranchCode = data;\r\n    })\r\n    this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data => {\r\n      this.scheme = data;\r\n      this.code = this.scheme[0].value\r\n    })\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      AC_ACNOTYPE: ['IV'],\r\n      AC_TYPE: ['', [Validators.required]],\r\n      AC_NO: [''],\r\n      INVEST_BANK: ['', [Validators.required]],\r\n      INVEST_BRANCH: ['', [Validators.required]],\r\n      AC_NAME: [''],\r\n      AC_REF_RECEIPTNO: ['', [Validators.pattern, Validators.required]],\r\n      AC_OPDATE: ['', [Validators.required]],\r\n      AC_ASON_DATE: ['', [Validators.required]],\r\n      AC_EXPDT: ['', [Validators.required]],\r\n      AC_MONTHS: ['', [Validators.pattern, Validators.required]],\r\n      AC_DAYS: ['', [Validators.pattern, Validators.required]],\r\n      AC_SCHMAMT: ['', [Validators.pattern, Validators.required]],\r\n      AC_INTRATE: ['', [Validators.pattern, Validators.required]],\r\n      AC_MATUAMT: ['', [Validators.pattern]],\r\n      AC_CLOSEDT: ['']\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'AC_ACNOTYPE': formVal.AC_ACNOTYPE,\r\n      'AC_TYPE': formVal.AC_TYPE,\r\n      'AC_NO': formVal.AC_NO,\r\n      'INVEST_BANK': formVal.INVEST_BANK,\r\n      'INVEST_BRANCH': formVal.INVEST_BRANCH,\r\n      'AC_NAME': formVal.AC_NAME,\r\n      'AC_REF_RECEIPTNO': formVal.AC_REF_RECEIPTNO,\r\n      'AC_OPDATE': formVal.AC_OPDATE,\r\n      'AC_ASON_DATE': formVal.AC_ASON_DATE,\r\n      'AC_EXPDT': formVal.AC_EXPDT,\r\n      'AC_MONTHS': formVal.AC_MONTHS,\r\n      'AC_DAYS': formVal.AC_DAYS,\r\n      'AC_SCHMAMT': formVal.AC_SCHMAMT,\r\n      'AC_INTRATE': formVal.AC_INTRATE,\r\n      'AC_MATUAMT': formVal.AC_MATUAMT,\r\n      'AC_CLOSEDT': formVal.AC_CLOSEDT\r\n    }\r\n    this.investmentService.postData(dataToSend).subscribe(data => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n\r\n    //To clear form\r\n    this.resetForm();\r\n  }\r\n  addNewData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    this.newbtnShow = false;\r\n    this.resetForm();\r\n  }\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n  getBankName(id) {\r\n    this.bankService.getFormData(id).subscribe(data => {\r\n      this.angForm.patchValue({\r\n        INVEST_BANK: id.toString(),\r\n        AC_NAME: data.BANK_NAME\r\n      })\r\n    })\r\n  }\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.newbtnShow = true;\r\n    this.investmentService.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        'AC_ACNOTYPE': data.AC_ACNOTYPE,\r\n        'AC_TYPE': data.AC_TYPE,\r\n        'AC_NO': data.AC_NO,\r\n        'INVEST_BANK': data.INVEST_BANK,\r\n        'INVEST_BRANCH': data.INVEST_BRANCH,\r\n        'AC_NAME': data.AC_NAME,\r\n        'AC_REF_RECEIPTNO': data.AC_REF_RECEIPTNO,\r\n        'AC_OPDATE': data.AC_OPDATE,\r\n        'AC_ASON_DATE': data.AC_ASON_DATE,\r\n        'AC_EXPDT': data.AC_EXPDT,\r\n        'AC_MONTHS': data.AC_MONTHS,\r\n        'AC_DAYS': data.AC_DAYS,\r\n        'AC_SCHMAMT': data.AC_SCHMAMT,\r\n        'AC_INTRATE': data.AC_INTRATE,\r\n        'AC_MATUAMT': data.AC_MATUAMT,\r\n        'AC_CLOSEDT': data.AC_CLOSEDT\r\n      })\r\n    })\r\n  }\r\n\r\n  //Method for update data \r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    this.investmentService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.newbtnShow = false;\r\n      this.rerender();\r\n      this.resetForm();\r\n    })\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      $('#mastertable tfoot tr').appendTo('#mastertable thead');\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          } else {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n\r\n    //approve account\r\n    Approve(){\r\n      let user = JSON.parse(localStorage.getItem('user'));\r\n      let obj ={\r\n        id : this.updateID,\r\n        user: user.id\r\n      }\r\n      this.investmentService.approve(obj).subscribe(data=>{\r\n        Swal.fire(\r\n          'Approved',\r\n          'Investment Account approved successfully',\r\n          'success'\r\n        );\r\n        var button = document.getElementById('triggerhide');\r\n        button.click();\r\n  \r\n        this.getUserData.emit('welcome to stackoverflow!');\r\n      },err=>{\r\n        console.log('something is wrong');\r\n      })\r\n    }\r\n  \r\n  \r\n    //reject account\r\n    reject(){\r\n      let user = JSON.parse(localStorage.getItem('user'));\r\n      let obj ={\r\n        id : this.updateID,\r\n        user: user.id\r\n      }\r\n      this.investmentService.reject(obj).subscribe(data=>{\r\n        Swal.fire(\r\n          'Rejected',\r\n          'Investment Account rejected successfully',\r\n          'success'\r\n        );\r\n  \r\n        var button = document.getElementById('triggerhide');\r\n        button.click();\r\n      },err=>{\r\n        console.log('something is wrong');\r\n      })\r\n    }\r\n\r\n}\r\n","<!-- Other Bank's Deposit Master   -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Investment Account Opening</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: white;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select bindValue=\"value\" [(ngModel)]=\"code\" id=\"AC_TYPE\"\r\n                                        formControlName=\"AC_TYPE\" [disabled]=\"AC_TYPE\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Scheme\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                    <label for=\"AC_TYPE\">Scheme <sub class=\"required\"> * </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_NO\" class=\"form-control\" placeholder=\" \" id=\"AC_NO\"\r\n                                        formControlName=\"AC_NO\" disabled>\r\n                                    <label for=\"AC_NO\">Account Number</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select bindValue=\"value\" [(ngModel)]=\"ngBank\" id=\"INVEST_BANK\"\r\n                                        formControlName=\"INVEST_BANK\" title=\"Compulsory Selection\"\r\n                                        (change)=\"getBankName(ngBank)\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        required placeholder=\"Bank Code\">\r\n                                        <ng-option *ngFor=\"let values of BankCode\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                    <label for=\"INVEST_BANK\">Bank Code <sub class=\"required\"> * </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['INVEST_BANK'].invalid && (angForm.controls['INVEST_BANK'].dirty || angForm.controls['INVEST_BANK'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['INVEST_BANK'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select bindValue=\"value\" [(ngModel)]=\"ngBranch\" id=\"INVEST_BRANCH\"\r\n                                        formControlName=\"INVEST_BRANCH\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\r\n                                        placeholder=\"Branch Code\">\r\n                                        <ng-option *ngFor=\"let values of BranchCode\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                    <label for=\"INVEST_BRANCH\">Branch Code <sub class=\"required\"> * </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['INVEST_BRANCH'].invalid && (angForm.controls['INVEST_BRANCH'].dirty || angForm.controls['INVEST_BRANCH'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['INVEST_BRANCH'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_NAME\" class=\"form-control\" placeholder=\" \" id=\"AC_NAME\"\r\n                                        pattern=\"^[A-Za-z\\./ -]+$\" formControlName=\"AC_NAME\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" disabled>\r\n                                    <label for=\"AC_NAME\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_REF_RECEIPTNO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"AC_REF_RECEIPTNO\" required pattern=\"^[0-9]+$\" maxlength=\"10\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                        title=\"Input allowed only 0-9\" formControlName=\"AC_REF_RECEIPTNO\">\r\n                                    <label for=\"AC_REF_RECEIPTNO\">Receipt No. <sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_REF_RECEIPTNO'].invalid && (angForm.controls['AC_REF_RECEIPTNO'].dirty || angForm.controls['AC_REF_RECEIPTNO'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_REF_RECEIPTNO'].errors?.required || angForm.controls['AC_REF_RECEIPTNO'].errors?.pattern || angForm.controls['AC_REF_RECEIPTNO'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AC_OPDATE\" id=\"AC_OPDATE\"\r\n                                        class=\"form-control\" max=\"{{datemax | date:'yyyy-MM-dd'}}\" #date\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"AC_OPDATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        [bsValue]=\"bsValue\" bsDatepicker>\r\n                                    <label for=\"AC_OPDATE\">A/c Open Date</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_OPDATE'].invalid && (angForm.controls['AC_OPDATE'].dirty || angForm.controls['AC_OPDATE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_OPDATE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AC_ASON_DATE\" id=\"AC_ASON_DATE\"\r\n                                        class=\"form-control\" max=\"{{datemax | date:'yyyy-MM-dd'}}\" #date\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"AC_ASON_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        [bsValue]=\"bsValue\" bsDatepicker>\r\n                                    <label for=\"AC_ASON_DATE\">As On Date</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_ASON_DATE'].invalid && (angForm.controls['AC_ASON_DATE'].dirty || angForm.controls['AC_ASON_DATE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_ASON_DATE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AC_EXPDT\" id=\"AC_EXPDT\"\r\n                                        class=\"form-control\" max=\"{{datemax | date:'yyyy-MM-dd'}}\" #date\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"AC_EXPDT\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        [bsValue]=\"bsValue\" bsDatepicker>\r\n                                    <label for=\"AC_EXPDT\">Maturity Date</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_EXPDT'].invalid && (angForm.controls['AC_EXPDT'].dirty || angForm.controls['AC_EXPDT'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_EXPDT'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <h6>Deposit Period:</h6>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_MONTHS\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"AC_MONTHS\" required pattern=\"^[0-9]+$\" title=\"Input allowed only 0-9\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                        formControlName=\"AC_MONTHS\">\r\n                                    <label for=\"AC_MONTHS\">Months<sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_MONTHS'].invalid && (angForm.controls['AC_MONTHS'].dirty || angForm.controls['AC_MONTHS'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_MONTHS'].errors?.pattern || angForm.controls['AC_MONTHS'].errors?.required\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_DAYS\" class=\"form-control\" placeholder=\" \" id=\"AC_DAYS\"\r\n                                        required pattern=\"^[0-9]+$\" title=\"Input allowed only 0-9\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                        formControlName=\"AC_DAYS\">\r\n                                    <label for=\"AC_DAYS\">Days <sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_DAYS'].invalid && (angForm.controls['AC_DAYS'].dirty || angForm.controls['AC_DAYS'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_DAYS'].errors?.pattern || angForm.controls['AC_DAYS'].errors?.required\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_SCHMAMT\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"AC_SCHMAMT\" required=\"\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\r\n                                        style=\"text-align: right;\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                        formControlName=\"AC_SCHMAMT\" [ngClass]=\"{'form-submitted': formSubmitted}\">\r\n                                    <label for=\"AC_SCHMAMT\">Deposit Amount<sub class=\"required\">*\r\n                                        </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_SCHMAMT'].invalid && (angForm.controls['AC_SCHMAMT'].dirty || angForm.controls['AC_SCHMAMT'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_SCHMAMT'].errors?.pattern || angForm.controls['AC_SCHMAMT'].errors?.required\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_INTRATE\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"AC_INTRATE\" required pattern=\"^[0-9]+$\" title=\"Input allowed only 0-9\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                        formControlName=\"AC_INTRATE\">\r\n                                    <label for=\"AC_INTRATE\">Int. Rate <sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_INTRATE'].invalid && (angForm.controls['AC_INTRATE'].dirty || angForm.controls['AC_INTRATE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_INTRATE'].errors?.pattern || angForm.controls['AC_INTRATE'].errors?.required\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_MATUAMT\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"AC_MATUAMT\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\r\n                                        style=\"text-align: right;\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                        formControlName=\"AC_MATUAMT\" [ngClass]=\"{'form-submitted': formSubmitted}\">\r\n                                    <label for=\"AC_MATUAMT\">Maturity Amount</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_MATUAMT'].invalid && (angForm.controls['AC_MATUAMT'].dirty || angForm.controls['AC_MATUAMT'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_MATUAMT'].errors?.pattern\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"AC_CLOSEDT\"\r\n                                        max=\"9999-12-31\" formControlName=\"AC_CLOSEDT\" onfocus=\"(this.type='date')\"\r\n                                        disabled />\r\n                                    <label for=\"AC_CLOSEDT\">Account Closed Date </label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\" style=\"float: right;\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\" (click)=\"submit($event)\">\r\n                            Submit\r\n                          </button>\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"addNewData()\" *ngIf=\"newbtnShow\">\r\n                            Cancel\r\n                          </button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">\r\n                            Update</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"rejectShow\" (click)=\"reject()\">\r\n                            Reject</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"approveShow\" (click)=\"Approve()\">\r\n                            Approve</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card shadow\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"mastertable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"investmentMaster?.length != 0\">\r\n                                    <tr *ngFor=\"let data of investmentMaster\">\r\n                                        <td>\r\n                                            <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\" placement=\"bottom\" ngbTooltip=\"Edit\"></span>\r\n                                        </td>\r\n                                        <td [ngClass]=\"data.AC_TYPE === '' || data.AC_TYPE== null? 'td_center' : 'td_right'\">\r\n                                            {{ data.AC_TYPE === \"\" || data.AC_TYPE== null? \"-\" : data.DPMaster.S_APPL }}\r\n                                        </td>\r\n                                        <td [ngClass]=\"data.AC_NO === '' ? 'td_center' : 'td_right'\">\r\n                                            {{ data.AC_NO === \"\" ? \"-\" : data.AC_NO }}\r\n                                        </td>\r\n                                        <td [ngClass]=\"data.AC_NAME === '' ? 'td_center' : 'td_left'\">\r\n                                            {{data.AC_NAME === ''? '-' : data.AC_NAME}}</td>\r\n                                        <td [ngClass]=\"data.INVEST_BANK === '' ? 'td_center' : 'td_right'\">\r\n                                            {{ data.INVEST_BANK === \"\" ? \"-\" : data.INVEST_BANK }}\r\n                                        </td>\r\n                                        <td [ngClass]=\"data.INVEST_BRANCH === '' ? 'td_center' : 'td_right'\">\r\n                                            {{ data.INVEST_BRANCH === \"\" ? \"-\" : data.INVEST_BRANCH }}\r\n                                        </td>\r\n                                        <td [ngClass]=\"data.AC_OPDATE === '' ? 'td_center' : 'td_center'\">\r\n                                            {{data.AC_OPDATE === ''? '-' : data.AC_OPDATE}}</td>\r\n                                        <td [ngClass]=\"data.AC_ASON_DATE === '' ? 'td_center' : 'td_center'\">\r\n                                            {{data.AC_ASON_DATE === ''? '-' : data.AC_ASON_DATE}}</td>\r\n                                        <td [ngClass]=\"data.AC_EXPDT === '' ? 'td_center' : 'td_center'\">\r\n                                            {{data.AC_EXPDT === ''? '-' : data.AC_EXPDT}}</td>\r\n                                        <td [ngClass]=\"data.AC_REF_RECEIPTNO === '' ? 'td_center' : 'td_right'\">\r\n                                            {{data.AC_REF_RECEIPTNO === ''? '-' : data.AC_REF_RECEIPTNO}}</td>\r\n                                        <td [ngClass]=\"data.AC_INTRATE === '' ? 'td_center' : 'td_right'\">\r\n                                            {{data.AC_INTRATE === ''? '-' : data.AC_INTRATE}}</td>\r\n                                        <td [ngClass]=\"data.AC_SCHMAMT === '' ? 'td_center' : 'td_right'\">\r\n                                            {{data.AC_SCHMAMT === ''? '-' : data.AC_SCHMAMT}}</td>\r\n                                        <td [ngClass]=\"data.AC_MATUAMT === '' ? 'td_center' : 'td_right'\">\r\n                                            {{data.AC_MATUAMT === ''? '-' : data.AC_MATUAMT}}</td>\r\n                                        <td [ngClass]=\"data.AC_CLOSEDT === '' ? 'td_center' : 'td_center'\">\r\n                                            {{data.AC_CLOSEDT === ''? '-' : data.AC_CLOSEDT}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"investmentMaster?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot #filters class=\"filters\">\r\n                                    <tr class=\"testing\">\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_TYPE\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_NO\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_NAME\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"INVEST_BANK\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"INVEST_BRANCH\"> </th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_OPDATE\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_ASON_DATE\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_EXPDT\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_REF_RECEIPTNO\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_INTRATE\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_SCHMAMT\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_MATUAMT\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_CLOSEDT\"></th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountOpeningComponent } from './account-opening.component';\r\nimport { AccountOpeningRoutingModule } from './account-opening-routing.module';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\r\nimport { A1Service } from '../../../../shared/elements/a1.service';\r\nimport { BranchService } from '../../../../shared/elements/branch.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BankMasterService } from '../../../../shared/dropdownService/bank-Master-dropdown.service';\r\nimport { OwnbranchMasterService } from '../../../../shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service';\r\nimport { BankService } from '../../policy-settings/information/bank-master/bank-master.service';\r\nimport { InvestmentService } from './account-opening.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DataTablesModule,\r\n    AccountOpeningRoutingModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot()\r\n  ],\r\n  declarations: [AccountOpeningComponent],\r\n  exports: [AccountOpeningComponent],\r\n  providers: [Scheme1Service, A1Service, BranchService,\r\n    BankMasterService,\r\n    OwnbranchMasterService,\r\n    SchemeCodeDropdownService,\r\n    BankService,\r\n    InvestmentService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UserAuthInterceptor,\r\n      multi: true\r\n    },\r\n  ]\r\n})\r\nexport class AccountOpeningModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../environments/environment'\r\n@Injectable()\r\nexport class InvestmentService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/investment/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/investment/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/investment/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/investment/delete/' + id).pipe(catchError(this.handleError));\r\n    }  \r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport {environment}  from '../../../../../../environments/environment'; \n\n@Injectable()\nexport class BankService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/bank-master/insert', data).pipe(map((res) => res),\n    catchError((error) => {\n      Swal.fire('Please Input Proper Data !');\n      return throwError(error);\n    })\n    )\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/bank-master/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/bank-master/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/bank-master/delete/' + id).pipe(catchError(this.handleError));\n  }\n}\n\n\n"],"sourceRoot":"webpack:///"}