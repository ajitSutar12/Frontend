{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/master/customer/shares-master/shares-master.service.ts","./src/app/theme/master/shares/dividend-transfer-entry/dividend-transfer-entry-routing.module.ts","./src/app/theme/master/shares/dividend-transfer-entry/dividend-transfer-entry.component.ts","./src/app/theme/master/shares/dividend-transfer-entry/dividend-transfer-entry.component.html","./src/app/theme/master/shares/dividend-transfer-entry/dividend-transfer-entry.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGN;AAG2B;;;AAIzD,MAAM,sBAAsB;IAM/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QALpC,0BAAqB,GAAG,IAAI,KAAK,EAAE,CAAC;QACpC,OAAO;QACP,yBAAyB;QACzB,QAAG,GAAG,qEAAW,CAAC,QAAQ,CAAC;IAEa,CAAC;IAElC,gBAAgB;QACnB,IAAI,CAAC,qBAAqB,GAAG,EAAE;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,oBAAoB,CAAC;aACrD,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC;gBAC9F,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC;YACxC,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,qBAAqB,CAAC;QACtC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;4FAlBQ,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB;6FAAtB,sBAAsB;cADlC,wDAAU;;;;;;;;;;;;;;ACTX;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEN;AAC2B;;;AAEzD,MAAM,yBAAyB;IAKlC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,qBAAgB,GAAG,IAAI,KAAK,EAAE,CAAC;QAC/B,iBAAY,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,yBAAyB;QACzB,QAAG,GAAG,qEAAW,CAAC,QAAQ,CAAC;IACa,CAAC;IAElC,iBAAiB,CAAC,MAAM;QAC3B,IAAI,CAAC,gBAAgB,GAAG,EAAE;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,qBAAqB,GAAG,MAAM,CAAC;aAC/D,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,OAAO,CAAC,UAAU,EAAE,CAAC;gBAC5H,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC;YACnC,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAGM,gBAAgB;QACnB,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC;aACtD,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,EAAE,EAAE,OAAO,CAAC,MAAM,EAAC,CAAC;gBACpG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAEM,iBAAiB;QACpB,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC;aACtD,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,CAAC;gBACxG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,CAAC,CAAC,CAAC;YAAA,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,IAAI,CAAC,YAAY,CAAC;YAE9C,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IAEZ,CAAC;IAEM,sBAAsB;QACzB,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,0BAA0B,CAAC;aAC3D,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,CAAC;gBACxG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAEM,qBAAqB;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC;aACtD,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,UAAU,GAAG,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC;gBAClF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IACM,kBAAkB;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC;aACtD,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,YAAY,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC;gBAC7D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IACM,mBAAmB;QACtB,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,6BAA6B,CAAC;aAC9D,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,CAAC;gBACxG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;kGAxFQ,yBAAyB;4GAAzB,yBAAyB,WAAzB,yBAAyB;6FAAzB,yBAAyB;cADrC,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACG;AAC7B;AAEgC;AAClB;AACsC;;;AAE9D,MAAM,kBAAkB;IAK3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,OAAO;QACP,QAAG,GAAG,qEAAW,CAAC,QAAQ,CAAC;IACa,CAAC;IAEzC,qBAAqB;IACrB,QAAQ,CAAC,IAAS;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,sBAAsB,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EACjF,iEAAU,CAAC,CAAC,KAAK,EAAE,EAAE;YACjB,kDAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;YACvC,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CACL;IACL,CAAC;IACD,OAAO;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,uBAAuB,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAChG,CAAC;IACD,kBAAkB;IAClB,WAAW,CAAC,EAAO;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,gBAAgB,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9F,CAAC;IACD,oBAAoB;IACpB,UAAU,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,sBAAsB,EAAE,IAAI,CAAC,CAAC;IAClE,CAAC;IAED,kBAAkB,CAAC,IAAI;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,2BAA2B,EAAE,IAAI,CAAC,CAAC;IACvE,CAAC;IACD,oBAAoB;IACpB,UAAU,CAAC,EAAO;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,uBAAuB,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxG,CAAC;IACD,gBAAgB;IAChB,OAAO,CAAC,IAAS;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,uBAAuB,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACvG,CAAC;IAGD,eAAe;IACf,MAAM,CAAC,IAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,sBAAsB,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtG,CAAC;;oFA5CQ,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB;6FAAlB,kBAAkB;cAD9B,wDAAU;;;;;;;;;;;;;;ACPX;AAAA;AAAA;AAAA;AAAA;AAAuC;AACc;AACgC;;;AAGrF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iGAA8B;QACzC,IAAI,EAAE;YACJ,KAAK,EAAE,+BAA+B;YACtC,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,0DAA0D;YACnE,MAAM,EAAE,IAAI;SACb;KACF;CACF,CAAC;AAMK,MAAM,kCAAkC;;iHAAlC,kCAAkC;8LAAlC,kCAAkC,kBAHpC,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kCAAkC,uFAFnC,4DAAY;6FAEX,kCAAkC;cAJ9C,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBiD;AAMnB;AACkD;AAG1C;;;;;;;;;;ICUC,gFACI;IAAA,uDAAgB;IAAA,4DAAY;;;IADS,4EAAgB;IACrD,0DAAgB;IAAhB,0FAAgB;;;IAU5B,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAPV,0EAKI;IAAA,kIACI;IAER,4DAAM;;;IAHG,0DAAoD;IAApD,+KAAoD;;;IAYjD,gFACI;IAAA,uDAAgC;IAAA,4DAAY;;;IADJ,6EAAgB;IACxD,0DAAgC;IAAhC,iHAAgC;;;IAU5C,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAPV,0EAKI;IAAA,kIACI;IAER,4DAAM;;;IAHG,0DAAkD;IAAlD,2KAAkD;;;IAc/C,gFACI;IAAA,uDAAgB;IAAA,4DAAY;;;IADc,6EAAgB;IAC1D,0DAAgB;IAAhB,2FAAgB;;;IAapB,gFACI;IAAA,uDAAgB;IAAA,4DAAY;;;IADY,6EAAgB;IACxD,0DAAgB;IAAhB,2FAAgB;;;IAcpB,gFACI;IAAA,uDACJ;IAAA,4DAAY;;;IAFoC,6EAAgB;IAC5D,0DACJ;IADI,kHACJ;;;AD9EjC,MAAM,8BAA8B;IAoCzC,YAAoB,EAAe,EAAU,MAAsB,EACzD,uBAA+C,EAC/C,mBAA8C,EAC9C,uBAA+C,EAC/C,mBAAuC;QAJ7B,OAAE,GAAF,EAAE,CAAa;QAAU,WAAM,GAAN,MAAM,CAAgB;QACzD,4BAAuB,GAAvB,uBAAuB,CAAwB;QAC/C,wBAAmB,GAAnB,mBAAmB,CAA2B;QAC9C,4BAAuB,GAAvB,uBAAuB,CAAwB;QAC/C,wBAAmB,GAAnB,mBAAmB,CAAoB;QAvCjD,kBAAa,GAAG,KAAK,CAAC;QAGtB,0BAAqB,GAAQ,EAAE,CAAC;QAGhC,mBAAc,GAAG,GAAG,CAAC;QACrB,eAAU,GAAG,IAAI,CAAC;QAElB,sBAAiB,GAAG,GAAG,CAAC;QACxB,aAAQ,GAAG,CAAC,CAAC;QAEL,YAAO,GAAiB,IAAI,CAAC;QAErC,eAAU,GAAY,IAAI,CAAC;QAC3B,eAAU,GAAY,KAAK,CAAC;QAC5B,eAAU,GAAW,IAAI;QAIzB,cAAS,GAAQ,IAAI;QACrB,iBAAY,GAAQ,IAAI;QACxB,cAAS,GAAQ,IAAI;QACrB,gBAAW,GAAQ,IAAI;QACvB,kBAAa,GAAQ,IAAI;QACzB,aAAQ,GAAQ,IAAI;IAiBpB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACzF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,4CAA4C;QAC9C,CAAC,CAAC;QACF,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7E,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC;QACF,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAEzE,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,MAAM;gBAEzC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC5B,CAAC,CAAC;QACF,oCAAoC;QACpC,6FAA6F;QAC7F,8BAA8B;QAC9B,2BAA2B;QAC3B,KAAK;IACP,CAAC;IAGD,UAAU;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,mBAAmB,EAAE,CAAC,EAAE,CAAC;YACzB,mBAAmB,EAAE,CAAC,EAAE,CAAC;YACzB,iBAAiB,EAAE,CAAC,EAAE,CAAC;SACxB,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,mCAAmC;QACnC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,mCAAmC;SACpC;IACH,CAAC;IAED,QAAQ,CAAC,KAAK;QACZ,2BAA2B;QAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK;QAC3B,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7E,4BAA4B;YAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC;IAED;;KAEC;IACD,kBAAkB;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,QAAQ;QAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAExC,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC/D,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,+BAA+B,EAAE,SAAS,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI;QACvB,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,4BAA4B;QAC5B,uBAAuB;QACvB,qBAAqB;IACvB,CAAC;IAID,SAAS,CAAC,KAAK;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;QACxB,IAAI,CAAC,eAAe,EAAE;IACxB,CAAC;IAED,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK;QAC5B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI;QAC/B,IAAI,CAAC,eAAe,EAAE;IACxB,CAAC;IACD,uDAAuD;IACvD,eAAe;QAEb,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC;QAChD,QAAQ,IAAI,CAAC,aAAa,EAAE;YAE1B,KAAK,IAAI;gBACP,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC3E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC,CAAC;gBACF,MAAM;YAER,KAAK,IAAI;gBACP,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAE1E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC,CAAC;gBACF,MAAM;YAER,KAAK,IAAI;gBACP,IAAI,CAAC,uBAAuB,CAAC,4BAA4B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBACnF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC,CAAC;gBACF,MAAM;YAER,KAAK,IAAI;gBACP,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC7E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC,CAAC;gBACF,MAAM;YAER,KAAK,IAAI;gBACP,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAEhF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAE5B,CAAC,CAAC;gBACF,MAAM;YAER,KAAK,IAAI;gBACP,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAChF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC,CAAC;gBACF,MAAM;YAER,KAAK,IAAI;gBACP,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC/E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC,CAAC;gBACF,MAAM;YAER,KAAK,IAAI;gBACP,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC3E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC,CAAC;gBACF,MAAM;YAER,KAAK,IAAI;gBACP,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC/E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC,CAAC;gBACF,MAAM;SACT;IACH,CAAC;IAGD,OAAO,CAAC,KAAK;QACX,qBAAqB;QACrB,IAAI,IAAI;QACR,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK;QAC9B,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC;QAC1C,2BAA2B;QAC3B,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9E,WAAW;YAEX,oBAAoB;YACpB,IAAI,GAAG,IAAI;YACX,0BAA0B;YAC1B,0BAA0B;YAC1B,yBAAyB;YAEzB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE;gBAClJ,QAAQ;gBACR,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;gBACjC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAExC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC;gBAEhD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAO,OAAO,EAAE,EAAE,CAAC;oBACxC,WAAW;oBACX,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE;wBACrC,QAAQ;wBACR,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,IAAI;wBACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;qBAChC;gBACH,CAAC,EAAC;gBACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;gBAE/B,QAAQ,IAAI,CAAC,aAAa,EAAE;oBAC1B,KAAK,IAAI;wBACP,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;4BAC3E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC5B,CAAC,CAAC;wBACF,MAAM;oBAER,KAAK,IAAI;wBACP,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;4BAC1E,QAAQ;4BACR,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC5B,CAAC,CAAC;wBACF,MAAM;oBAER,KAAK,IAAI;wBACP,IAAI,CAAC,uBAAuB,CAAC,4BAA4B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;4BACnF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC5B,CAAC,CAAC;wBACF,MAAM;oBAER,KAAK,IAAI;wBACP,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;4BAC7E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC5B,CAAC,CAAC;wBACF,MAAM;oBAER,KAAK,IAAI;wBACP,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;4BAEhF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAE5B,CAAC,CAAC;wBACF,MAAM;oBAER,KAAK,IAAI;wBACP,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;4BAChF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC5B,CAAC,CAAC;wBACF,MAAM;oBAER,KAAK,IAAI;wBACP,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;4BAC/E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC5B,CAAC,CAAC;wBACF,MAAM;oBAER,KAAK,IAAI;wBACP,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;4BAC3E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC5B,CAAC,CAAC;wBACF,MAAM;oBAER,KAAK,IAAI;wBACP,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;4BAC/E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC5B,CAAC,CAAC;wBACF,MAAM;iBACT;gBACD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;aAEtC;iBAAM;gBAEL,IAAI,CAAC,YAAY,GAAG,IAAI;gBACxB,IAAI,CAAC,WAAW,GAAG,IAAI;gBACvB,IAAI,CAAC,SAAS,GAAG,IAAI;gBACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,KAAK,EAAE;gBACpD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,KAAK,EAAE;gBACpD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,KAAK,EAAE;aACnD;QAEH,CAAC,CAAC;IACJ,CAAC;IAED,SAAS;QACP,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,QAAQ;QACR,IAAI,CAAC,YAAY,GAAG,IAAI;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,aAAa,GAAG,IAAI;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI;QACpB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE;QACxC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE;IACxC,CAAC;;4GA1TU,8BAA8B;8GAA9B,8BAA8B;QCpB3C,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,gGAAqC;QAAA,4DAAK;QAC9C,wEACI;QAAA,gFAAoB;QAAA,yEAAuB;QAAA,8DAAE;QAAA,4DAAM;QAAA,4EACvD;QAAA,4DAAK;QACT,4DAAM;QACN,8EACI;QADwD,2JAAY,YAAQ,IAAC;QAC7E,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFAII;QAJyB,8MAA2B,0GAE1C,oBAAgB,IAF0B;QAIpD,yIACI;QACR,4DAAY;QACZ,6EAAqB;QAAA,mEAAO;QAAA,0EAAuB;QAAA,+DAAE;QAAA,4DAAM;QAAA,4DAAQ;QACvE,4DAAO;QACX,4DAAM;QACN,6HAKI;QAIR,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFAII;QAJyB,yMAAsB,0GAGT,mBAAe,IAHN;QAI/C,yIACI;QACR,4DAAY;QACZ,6EAAmB;QAAA,0EAAc;QAAA,0EAAuB;QAAA,+DAAE;QAAA,4DAAM;QAAA,4DAAQ;QAC5E,4DAAO;QACX,4DAAM;QACN,6HAKI;QAIR,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFAII;QAJkD,6MAA0B,0GAGlE,qBAAiB,IAHiD;QAI5E,yIACI;QACR,4DAAY;QACZ,6EAAiC;QAAA,kEAAM;QAAA,4DAAQ;QACnD,4DAAO;QACX,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFAII;QAJkD,4MAAyB,0GAGjE,uBAAmB,IAH8C;QAI3E,yIACI;QACR,4DAAY;QACZ,6EAAiC;QAAA,wEACzB;QAAA,4DAAQ;QACpB,4DAAO;QACX,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFAII;QAJgD,0MAAuB,kGAG9D,qBAAiB,IAH6C;QAIvE,yIACI;QAER,4DAAY;QACZ,6EAA+B;QAAA,0EACrB;QAAA,4DAAQ;QACtB,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,8EAA8E;QAA/B,uJAAS,wBAAoB,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACjG,4DAAM;QACV,4DAAM;QAgGV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAzMiC,2DAAqB;QAArB,kFAAqB;QAMK,0DAA2B;QAA3B,sFAA2B;QAIzC,0DAA6B;QAA7B,+EAA6B;QAMG,0DAIlD;QAJkD,+LAIlD;QASgC,0DAAsB;QAAtB,iFAAsB;QAIpC,0DAAgC;QAAhC,kFAAgC;QAMA,0DAItD;QAJsD,yLAItD;QAW6D,0DAA0B;QAA1B,qFAA0B;QAIjE,0DAAkC;QAAlC,oFAAkC;QAUK,0DAAyB;QAAzB,oFAAyB;QAIhE,0DAAgC;QAAhC,kFAAgC;QAWK,0DAAuB;QAAvB,kFAAuB;QAI5D,0DAAoC;QAApC,sFAAoC;;6FD5E1E,8BAA8B;cAN1C,uDAAS;eAAC;gBACT,QAAQ,EAAE,6BAA6B;gBACvC,WAAW,EAAE,0CAA0C;gBACvD,SAAS,EAAE,CAAC,0CAA0C,CAAC;aACxD;;;;;;;;;;;;;;AEnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACO;AACwC;AACT;AAInB;AACX;AACE;AACW;AACd;AACkD;AACR;AACW;AACJ;;AAqBhG,MAAM,2BAA2B;;0GAA3B,2BAA2B;gLAA3B,2BAA2B,mBAN3B,CAAC,sHAAyB,EAAE,8GAAsB,EAAE,yHAAsB,EAAC,qHAAkB,EAAE;YACxG,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,iFAAmB;YAC7B,KAAK,EAAE,IAAI;SACZ,EAAE,YAdM;YACP,4DAAY;YACZ,0GAAkC;YAClC,mEAAgB;YAChB,oEAAS;YACT,mEAAc;YACd,0DAAW;YACX,kEAAmB;SACpB;mIAQU,2BAA2B,mBAPvB,iGAA8B,aAR3C,4DAAY;QACZ,0GAAkC;QAClC,mEAAgB;QAChB,oEAAS;QACT,mEAAc;QACd,0DAAW;QACX,kEAAmB;6FASV,2BAA2B;cAjBvC,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,0GAAkC;oBAClC,mEAAgB;oBAChB,oEAAS;oBACT,mEAAc;oBACd,0DAAW;oBACX,kEAAmB;iBACpB;gBACD,YAAY,EAAE,CAAC,iGAA8B,CAAC;gBAC9C,SAAS,EAAE,CAAC,sHAAyB,EAAE,8GAAsB,EAAE,yHAAsB,EAAC,qHAAkB,EAAE;wBACxG,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,iFAAmB;wBAC7B,KAAK,EAAE,IAAI;qBACZ,EAAE;aACJ","file":"dividend-transfer-entry-dividend-transfer-entry-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() { \r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL};\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });console.log('in service',this.schemeObject)\r\n\r\n                return this.schemeObject;\r\n            }));\r\n            \r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment'\r\n@Injectable()\r\nexport class ShareMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/share-master/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    getData(): Observable<any> {\r\n        return this.http.get(this.url + '/share-master/alldata').pipe(catchError(this.handleError));\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/share-master/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/share-master/update', data);\r\n    }\r\n\r\n    updateDataPyatrans(data): Observable<any> {\r\n        return this.http.put(this.url + '/share-master/payDivTrans', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/share-master/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //approve master\r\n    approve(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/share-master/approve', data).pipe(catchError(this.handleError));\r\n    }\r\n\r\n\r\n    //reject master\r\n    reject(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/share-master/reject', data).pipe(catchError(this.handleError));\r\n    }\r\n\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { DividendTransferEntryComponent } from './dividend-transfer-entry.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DividendTransferEntryComponent,\r\n    data: {\r\n      title: 'Dividend Transfer Instruction',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DividendTransferEntryRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\r\nimport { MembernoService } from '../../../../shared/elements/memberno.service';\r\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { ShareMasterService } from 'src/app/theme/master/customer/shares-master/shares-master.service';\r\n\r\n@Component({\r\n  selector: 'app-dividend-transfer-entry',\r\n  templateUrl: './dividend-transfer-entry.component.html',\r\n  styleUrls: ['./dividend-transfer-entry.component.scss']\r\n})\r\n\r\nexport class DividendTransferEntryComponent implements OnInit {\r\n  formSubmitted = false;\r\n  angForm: FormGroup;\r\n\r\n  dtExportButtonOptions: any = {};\r\n\r\n\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n\r\n  private dataSub: Subscription = null;\r\n\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  schemeType: string = 'SH'\r\n  scheme: any[] //scheme code from schemast(S_ACNOTYPE)\r\n  memnoACNo: any[] //scheme code from schemast(S_ACNOTYPE)\r\n  branch_code: any[]//from ownbranchmaster\r\n  allScheme: any = null\r\n  ngBranchCode: any = null\r\n  ngDivACNO: any = null\r\n  ngDivACType: any = null\r\n  selectedValue: any = null\r\n  memValue: any = null\r\n  divTransferNO\r\n  bcode\r\n  schemeDT: any\r\n\r\n  obj: any\r\n  object: any\r\n  getschemename: any\r\n  getscheme\r\n\r\n  constructor(private fb: FormBuilder, private config: NgSelectConfig,\r\n    private _schemeAccountNoService: SchemeAccountNoService,\r\n    private _SchemeCodeDropdown: SchemeCodeDropdownService,\r\n    private _ownbranchMasterService: OwnbranchMasterService,\r\n    private _shareMasterService: ShareMasterService) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    this._SchemeCodeDropdown.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data => {\r\n      this.scheme = data;\r\n      // this.selectedValue = this.scheme[0].value\r\n    })\r\n    this._ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n    })\r\n    this._SchemeCodeDropdown.getAllSchemeList().pipe(first()).subscribe(data => {\r\n\r\n      var filtered = data.filter(function (scheme) {\r\n\r\n        return (scheme.name != 'AG' && scheme.name != 'PG');\r\n      });\r\n      this.allScheme = filtered;\r\n    })\r\n    // console.log(this.scheme[0].value)\r\n    // this._schemeAccountNoService.getShareSchemeList2(this.scheme[0].value).subscribe(data => {\r\n    //   console.log('data', data)\r\n    //   this.memnoACNo = data;\r\n    // })\r\n  }\r\n\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      AC_TYPE: ['', [Validators.required]],\r\n      AC_NO: ['', [Validators.required]],\r\n      DIV_TRANSFER_BRANCH: [''],\r\n      DIV_TRANSFER_ACTYPE: [''],\r\n      DIV_TRANSFER_ACNO: ['']\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.angForm.valid);\r\n    if (this.angForm.valid) {\r\n      // console.log(this.angForm.value);\r\n    }\r\n  }\r\n\r\n  getmemNo(event) {\r\n    // console.log(event.value)\r\n    this.schemeDT = event.value\r\n    this._schemeAccountNoService.getShareSchemeList2(event.value).subscribe(data => {\r\n      // console.log('data', data)\r\n      this.memnoACNo = data;\r\n    })\r\n  }\r\n\r\n  /**\r\n * @updateData function for update data \r\n */\r\n  updateDataPyatrans() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    \r\n    let data = this.angForm.value;\r\n    data['AC_TYPE'] = this.schemeDT\r\n    data['AC_NO'] = Number(this.updatememno)\r\n\r\n    this._shareMasterService.updateDataPyatrans(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n    });\r\n    this.schemeDT = null\r\n    this.updatememno = null\r\n    this.resetForm();\r\nconsole.log(this.selectedValue)\r\nconsole.log(this.memValue)\r\n    // this.selectedValue = null\r\n    // this.memValue = null\r\n    // this.form.reset();\r\n  }\r\n\r\n\r\n\r\n  getBranch(event) {\r\n    this.bcode = event.value\r\n    this.getDiviTransfer()\r\n  }\r\n\r\n  getDivTrans(event) {\r\n    this.getscheme = event.value\r\n    this.getschemename = event.name\r\n    this.getDiviTransfer()\r\n  }\r\n  //get account no according scheme for dividend transfer\r\n  getDiviTransfer() {\r\n\r\n    this.obj = [this.ngDivACType, this.ngBranchCode]\r\n    switch (this.getschemename) {\r\n\r\n      case 'SB':\r\n        this._schemeAccountNoService.getSavingSchemeList1(this.obj).subscribe(data => {\r\n          this.divTransferNO = data;\r\n        })\r\n        break;\r\n\r\n      case 'SH':\r\n        this._schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n\r\n          this.divTransferNO = data;\r\n        })\r\n        break;\r\n\r\n      case 'CA':\r\n        this._schemeAccountNoService.getCurrentAccountSchemeList1(this.obj).subscribe(data => {\r\n          this.divTransferNO = data;\r\n        })\r\n        break;\r\n\r\n      case 'LN':\r\n        this._schemeAccountNoService.getTermLoanSchemeList1(this.obj).subscribe(data => {\r\n          this.divTransferNO = data;\r\n        })\r\n        break;\r\n\r\n      case 'TD':\r\n        this._schemeAccountNoService.getTermDepositSchemeList1(this.obj).subscribe(data => {\r\n\r\n          this.divTransferNO = data;\r\n\r\n        })\r\n        break;\r\n\r\n      case 'DS':\r\n        this._schemeAccountNoService.getDisputeLoanSchemeList1(this.obj).subscribe(data => {\r\n          this.divTransferNO = data;\r\n        })\r\n        break;\r\n\r\n      case 'CC':\r\n        this._schemeAccountNoService.getCashCreditSchemeList1(this.obj).subscribe(data => {\r\n          this.divTransferNO = data;\r\n        })\r\n        break;\r\n\r\n      case 'GS':\r\n        this._schemeAccountNoService.getAnamatSchemeList1(this.obj).subscribe(data => {\r\n          this.divTransferNO = data;\r\n        })\r\n        break;\r\n\r\n      case 'IV':\r\n        this._schemeAccountNoService.getInvestmentSchemeList1(this.obj).subscribe(data => {\r\n          this.divTransferNO = data;\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  updatememno: any\r\n  getData(event) {\r\n    // console.log(event)\r\n    let info\r\n    this.updatememno = event.value\r\n    this.object = [this.schemeDT, event.value]\r\n    // console.log(this.object)\r\n    this._schemeAccountNoService.getShareSchemeListDT(this.object).subscribe(data => {\r\n      // debugger\r\n\r\n      // console.log(data)\r\n      info = data\r\n      // console.log(info.label)\r\n      // console.log(info.value)\r\n      // console.log(info.name)\r\n\r\n      if ((info[0].label != null && info[0].value != null && info[0].name != null) || (info[0].label != \"\" && info[0].value != \"\" && info[0].name != \"\")) {\r\n        debugger\r\n        this.ngBranchCode = info[0].label\r\n        this.ngDivACType = Number(info[0].value)\r\n\r\n        this.obj = [this.ngDivACType, this.ngBranchCode]\r\n\r\n        this.allScheme.forEach(async (element) => {\r\n          // debugger\r\n          if (element.value == this.ngDivACType) {\r\n            debugger\r\n            this.getschemename = element.name\r\n            console.log(this.getschemename)\r\n          }\r\n        })\r\n        console.log(this.getschemename)\r\n\r\n        switch (this.getschemename) {\r\n          case 'SB':\r\n            this._schemeAccountNoService.getSavingSchemeList1(this.obj).subscribe(data => {\r\n              this.divTransferNO = data;\r\n            })\r\n            break;\r\n\r\n          case 'SH':\r\n            this._schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n              debugger\r\n              this.divTransferNO = data;\r\n            })\r\n            break;\r\n\r\n          case 'CA':\r\n            this._schemeAccountNoService.getCurrentAccountSchemeList1(this.obj).subscribe(data => {\r\n              this.divTransferNO = data;\r\n            })\r\n            break;\r\n\r\n          case 'LN':\r\n            this._schemeAccountNoService.getTermLoanSchemeList1(this.obj).subscribe(data => {\r\n              this.divTransferNO = data;\r\n            })\r\n            break;\r\n\r\n          case 'TD':\r\n            this._schemeAccountNoService.getTermDepositSchemeList1(this.obj).subscribe(data => {\r\n\r\n              this.divTransferNO = data;\r\n\r\n            })\r\n            break;\r\n\r\n          case 'DS':\r\n            this._schemeAccountNoService.getDisputeLoanSchemeList1(this.obj).subscribe(data => {\r\n              this.divTransferNO = data;\r\n            })\r\n            break;\r\n\r\n          case 'CC':\r\n            this._schemeAccountNoService.getCashCreditSchemeList1(this.obj).subscribe(data => {\r\n              this.divTransferNO = data;\r\n            })\r\n            break;\r\n\r\n          case 'GS':\r\n            this._schemeAccountNoService.getAnamatSchemeList1(this.obj).subscribe(data => {\r\n              this.divTransferNO = data;\r\n            })\r\n            break;\r\n\r\n          case 'IV':\r\n            this._schemeAccountNoService.getInvestmentSchemeList1(this.obj).subscribe(data => {\r\n              this.divTransferNO = data;\r\n            })\r\n            break;\r\n        }\r\n        this.ngDivACNO = Number(info[0].name)\r\n\r\n      } else {\r\n\r\n        this.ngBranchCode = null\r\n        this.ngDivACType = null\r\n        this.ngDivACNO = null\r\n        this.angForm.controls['DIV_TRANSFER_BRANCH'].reset()\r\n        this.angForm.controls['DIV_TRANSFER_ACTYPE'].reset()\r\n        this.angForm.controls['DIV_TRANSFER_ACNO'].reset()\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.createForm();\r\n    debugger\r\n    this.ngBranchCode = null\r\n    this.ngDivACType = null\r\n    this.ngDivACNO = null\r\n    this.selectedValue = null\r\n    this.memValue = null\r\n    this.angForm.controls['AC_TYPE'].reset()\r\n    this.angForm.controls['AC_NO'].reset()\r\n  }\r\n}\r\n\r\n\r\n\r\n","<!-- Dividend Transfer Entry -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Payable Dividend Transfer Instruction</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: white;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\" autofocus>\r\n                                    <ng-select bindValue=\"value\" [(ngModel)]=\"selectedValue\" id=\"AC_TYPE\"\r\n                                        formControlName=\"AC_TYPE\" title=\"Compulsory Selection\"\r\n                                        (change)=\"getmemNo($event)\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        required placeholder=\"Scheme\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                    <label for=\"AC_TYPE\">Scheme <sub class=\"required\"> * </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"\r\n                                  angForm.controls['AC_TYPE'].invalid &&\r\n                                  (angForm.controls['AC_TYPE'].dirty ||\r\n                                    angForm.controls['AC_TYPE'].touched)\r\n                                \" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\" autofocus>\r\n                                    <ng-select bindValue=\"value\" [(ngModel)]=\"memValue\" id=\"AC_NO\"\r\n                                        formControlName=\"AC_NO\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\r\n                                        placeholder=\"Member Number\" (change)=\"getData($event)\">\r\n                                        <ng-option *ngFor=\"let values of memnoACNo\" [value]=\"values\">\r\n                                            {{values.label}} {{values.name}}</ng-option>\r\n                                    </ng-select>\r\n                                    <label for=\"AC_NO\">Member Number <sub class=\"required\"> * </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"\r\n                              angForm.controls['AC_NO'].invalid &&\r\n                              (angForm.controls['AC_NO'].dirty ||\r\n                                angForm.controls['AC_NO'].touched)\r\n                            \" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"DIV_TRANSFER_BRANCH\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                        formControlName=\"DIV_TRANSFER_BRANCH\" bindLabel=\"label\"\r\n                                        title=\"Compulsory Selection\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        (change)=\"getBranch($event)\" placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                    <label for=\"DIV_TRANSFER_BRANCH\">Branch</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"DIV_TRANSFER_ACTYPE\" bindValue=\"value\" [(ngModel)]=\"ngDivACType\"\r\n                                        formControlName=\"DIV_TRANSFER_ACTYPE\" bindLabel=\"label\"\r\n                                        title=\"Compulsory Selection\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        (change)=\"getDivTrans($event)\" placeholder=\"Account Type\">\r\n                                        <ng-option *ngFor=\"let values of allScheme\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                    <label for=\"DIV_TRANSFER_ACTYPE\">Account\r\n                                        Type</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-5\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"DIV_TRANSFER_ACNO\" bindValue=\"value\" [(ngModel)]=\"ngDivACNO\"\r\n                                        formControlName=\"DIV_TRANSFER_ACNO\" bindLabel=\"AC_NO\"\r\n                                        title=\"Compulsory Selection\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        (focus)=\"getDiviTransfer()\" placeholder=\"Account Number\">\r\n                                        <ng-option *ngFor=\"let values of divTransferNO\" [value]=\"values\">\r\n                                            {{values.label}} {{values.name}}\r\n                                        </ng-option>\r\n                                    </ng-select>\r\n                                    <label for=\"DIV_TRANSFER_ACNO\">Account\r\n                                        Number</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateDataPyatrans()\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                    placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"Scheme\">\r\n                                </ng-select>\r\n                                <label>{{ message.Scheme}}</label>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"DividendAmount\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"DividendAmount\" value=\"{{ message.DividendAmount }}\"\r\n                                        formControlName=\"DividendAmount\">\r\n                                    <label for=\"DividendAmount\">Dividend Amount</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                    placeholder=\"Member No *\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"MemberNo\">\r\n                                </ng-select>\r\n                                <label>{{ message.MemberNo}}</label>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['MemberNo'].invalid && (angForm.controls['MemberNo'].dirty || angForm.controls['MemberNo'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['MemberNo'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"OtherAmount\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"OtherAmount\" value=\"{{ message.OtherAmount }}\"\r\n                                        formControlName=\"OtherAmount\">\r\n                                    <label for=\"OtherAmount\">Other Amount</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                    placeholder=\"Transfer Scheme *\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"TransferScheme\">\r\n                                </ng-select>\r\n                                <label>{{ message.TransferScheme}}</label>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['TransferScheme'].invalid && (angForm.controls['TransferScheme'].dirty || angForm.controls['TransferScheme'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TransferScheme'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"d\" [multiple]=\"false\"\r\n                                    placeholder=\"Transfer A/c No *\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"TransferAcNo\">\r\n                                </ng-select>\r\n                                <label>{{ message.TransferAcNo }}</label>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['TransferAcNo'].invalid && (angForm.controls['TransferAcNo'].dirty || angForm.controls['TransferAcNo'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TransferAcNo'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\r\n                                [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div> -->\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\r\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { DividendTransferEntryRoutingModule } from './dividend-transfer-entry-routing.module';\r\nimport { DividendTransferEntryComponent } from './dividend-transfer-entry.component';\r\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\r\nimport { MembernoService } from '../../../../shared/elements/memberno.service';\r\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { ShareMasterService } from 'src/app/theme/master/customer/shares-master/shares-master.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DividendTransferEntryRoutingModule,\r\n    DataTablesModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [DividendTransferEntryComponent],\r\n  providers: [SchemeCodeDropdownService, SchemeAccountNoService, OwnbranchMasterService,ShareMasterService, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },]\r\n})\r\nexport class DividendTransferEntryModule { }\r\n"],"sourceRoot":"webpack:///"}