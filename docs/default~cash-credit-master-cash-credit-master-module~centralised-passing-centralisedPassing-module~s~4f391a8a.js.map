{"version":3,"sources":["./src/app/shared/dropdownService/goldsilver.service.ts","./src/app/shared/dropdownService/insurance-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-dropdown.service.ts","./src/app/shared/dropdownService/security-master-dropdown.service.ts","./src/app/shared/elements/ac1.service.ts","./src/app/shared/elements/ac2.service.ts","./src/app/shared/elements/gl-master.service.ts","./src/app/shared/elements/s1.service.ts","./src/app/shared/elements/s2.service.ts","./src/app/theme/master/maintainance/security-details/book-debts/book-debts-routing.module.ts","./src/app/theme/master/maintainance/security-details/book-debts/book-debts.component.ts","./src/app/theme/master/maintainance/security-details/book-debts/book-debts.component.html","./src/app/theme/master/maintainance/security-details/book-debts/book-debts.module.ts","./src/app/theme/master/maintainance/security-details/book-debts/book-debts.service.ts","./src/app/theme/master/maintainance/security-details/customer-insurance/customer-insurance-routing.module.ts","./src/app/theme/master/maintainance/security-details/customer-insurance/customer-insurance.component.ts","./src/app/theme/master/maintainance/security-details/customer-insurance/customer-insurance.component.html","./src/app/theme/master/maintainance/security-details/customer-insurance/customer-insurance.module.ts","./src/app/theme/master/maintainance/security-details/customer-insurance/customer-insurance.service.ts","./src/app/theme/master/maintainance/security-details/fire-policy/fire-policy-routing.module.ts","./src/app/theme/master/maintainance/security-details/fire-policy/fire-policy.component.service.ts","./src/app/theme/master/maintainance/security-details/fire-policy/fire-policy.component.ts","./src/app/theme/master/maintainance/security-details/fire-policy/fire-policy.component.html","./src/app/theme/master/maintainance/security-details/fire-policy/fire-policy.module.ts","./src/app/theme/master/maintainance/security-details/furniture-and-fixture/furniture-and-fixture-routing.module.ts","./src/app/theme/master/maintainance/security-details/furniture-and-fixture/furniture-and-fixture.component.ts","./src/app/theme/master/maintainance/security-details/furniture-and-fixture/furniture-and-fixture.component.html","./src/app/theme/master/maintainance/security-details/furniture-and-fixture/furniture-and-fixture.module.ts","./src/app/theme/master/maintainance/security-details/furniture-and-fixture/furniture-and-fixture.service.ts","./src/app/theme/master/maintainance/security-details/gold-and-silver/gold-and-silver-routing.module.ts","./src/app/theme/master/maintainance/security-details/gold-and-silver/gold-and-silver.component.ts","./src/app/theme/master/maintainance/security-details/gold-and-silver/gold-and-silver.component.html","./src/app/theme/master/maintainance/security-details/gold-and-silver/gold-and-silver.module.ts","./src/app/theme/master/maintainance/security-details/gold-and-silver/gold-and-silver.service.ts","./src/app/theme/master/maintainance/security-details/govt-security-and-lic/govt-security-and-lic-routing.module.ts","./src/app/theme/master/maintainance/security-details/govt-security-and-lic/govt-security-and-lic.component.service.ts","./src/app/theme/master/maintainance/security-details/govt-security-and-lic/govt-security-and-lic.component.ts","./src/app/theme/master/maintainance/security-details/govt-security-and-lic/govt-security-and-lic.component.html","./src/app/theme/master/maintainance/security-details/govt-security-and-lic/govt-security-and-lic.module.ts","./src/app/theme/master/maintainance/security-details/land-and-buildings/land-and-buildings-routing.module.ts","./src/app/theme/master/maintainance/security-details/land-and-buildings/land-and-buildings.component.ts","./src/app/theme/master/maintainance/security-details/land-and-buildings/land-and-buildings.component.html","./src/app/theme/master/maintainance/security-details/land-and-buildings/land-and-buildings.module.ts","./src/app/theme/master/maintainance/security-details/land-and-buildings/land-and-buildings.service.ts","./src/app/theme/master/maintainance/security-details/market-shares/market-shares-routing.module.ts","./src/app/theme/master/maintainance/security-details/market-shares/market-shares.component.service.ts","./src/app/theme/master/maintainance/security-details/market-shares/market-shares.component.ts","./src/app/theme/master/maintainance/security-details/market-shares/market-shares.component.html","./src/app/theme/master/maintainance/security-details/market-shares/market-shares.module.ts","./src/app/theme/master/maintainance/security-details/other-security/other-security-routing.module.ts","./src/app/theme/master/maintainance/security-details/other-security/other-security.component.service.ts","./src/app/theme/master/maintainance/security-details/other-security/other-security.component.ts","./src/app/theme/master/maintainance/security-details/other-security/other-security.component.html","./src/app/theme/master/maintainance/security-details/other-security/other-security.module.ts","./src/app/theme/master/maintainance/security-details/own-deposits/own-deposit.service.ts","./src/app/theme/master/maintainance/security-details/own-deposits/own-deposits-routing.module.ts","./src/app/theme/master/maintainance/security-details/own-deposits/own-deposits.component.ts","./src/app/theme/master/maintainance/security-details/own-deposits/own-deposits.component.html","./src/app/theme/master/maintainance/security-details/own-deposits/own-deposits.module.ts","./src/app/theme/master/maintainance/security-details/plant-and-machinery/plant-and-machinery-routing.module.ts","./src/app/theme/master/maintainance/security-details/plant-and-machinery/plant-and-machinery.component.ts","./src/app/theme/master/maintainance/security-details/plant-and-machinery/plant-and-machinery.component.html","./src/app/theme/master/maintainance/security-details/plant-and-machinery/plant-and-machinery.module.ts","./src/app/theme/master/maintainance/security-details/plant-and-machinery/plant-and-machinery.service.ts","./src/app/theme/master/maintainance/security-details/pleadge-stock/pleadge-stock-routing.module.ts","./src/app/theme/master/maintainance/security-details/pleadge-stock/pleadge-stock.component.ts","./src/app/theme/master/maintainance/security-details/pleadge-stock/pleadge-stock.component.html","./src/app/theme/master/maintainance/security-details/pleadge-stock/pleadge-stock.module.ts","./src/app/theme/master/maintainance/security-details/pleadge-stock/pleadge-stock.service.ts","./src/app/theme/master/maintainance/security-details/security-details.component.ts","./src/app/theme/master/maintainance/security-details/security-details.component.html","./src/app/theme/master/maintainance/security-details/securityDetails-routing.module.ts","./src/app/theme/master/maintainance/security-details/securityDetails.module.ts","./src/app/theme/master/maintainance/security-details/stock-statement/stock-statement-routing.module.ts","./src/app/theme/master/maintainance/security-details/stock-statement/stock-statement.component.service.ts","./src/app/theme/master/maintainance/security-details/stock-statement/stock-statement.component.ts","./src/app/theme/master/maintainance/security-details/stock-statement/stock-statement.component.html","./src/app/theme/master/maintainance/security-details/stock-statement/stock-statement.module.ts","./src/app/theme/master/maintainance/security-details/vehicle/vehicle-routing.module.ts","./src/app/theme/master/maintainance/security-details/vehicle/vehicle.component.ts","./src/app/theme/master/maintainance/security-details/vehicle/vehicle.component.html","./src/app/theme/master/maintainance/security-details/vehicle/vehicle.module.ts","./src/app/theme/master/maintainance/security-details/vehicle/vehicle.service.ts","./src/app/theme/master/policy-settings/definations/security-code/security-code.service.ts"],"names":[],"mappings":"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","file":"default~cash-credit-master-cash-credit-master-module~centralised-passing-centralisedPassing-module~s~4f391a8a.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class GoldsilverService {\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: 'G', label: 'Gold' },\n        { value: 'S', label: 'Silver' },\n        { value: 'P', label: 'Platinum' },\n        { value: 'D', label: 'Diamond' },\n    ];\n\n\n\n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(GoldsilverService.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(GoldsilverService.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(GoldsilverService.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class InsuranceMasterDropdownService {\n\n    // // insurance-master\";\n    url = environment.base_url;\n    insuranceMasterObject = new Array();\n\n    constructor(private http: HttpClient) { }\n\n    public getInsuranceMasterList() {\n        this.insuranceMasterObject = []\n        return this.http.get<any>(this.url + '/insurance-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = {  label: element.CODE + ' ' + element.NAME, value: element.id};\n                    this.insuranceMasterObject.push(obj)\n                });\n                return this.insuranceMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class schemedropdownService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //url = \"http://localhost:4000/own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getschemelsit(data:any) {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class SecurityMasterdropdownService {\n    securityObject = new Array();\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n    public getsecurityMasterList() {\n        this.securityObject = []\n        return this.http.get<any>(this.url + '/security-code')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.SECU_CODE + ' ' + element.SECU_NAME, value: element.id, name: element.SECU_NAME, id: element.SECU_CODE };\n                    this.securityObject.push(obj)\n                });\n                return this.securityObject;\n            }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class Ac1Service {\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: '0', label: '1' },\n        { value: '1', label: '2' },\n        { value: '2', label: '3' }\n             \n    ];\n       \n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(Ac1Service.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(Ac1Service.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(Ac1Service.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class Ac2Service {\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: '0', label: '1' },\n        { value: '1', label: '2' },\n        { value: '2', label: '3' }\n             \n    ];\n       \n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(Ac2Service.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(Ac2Service.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(Ac2Service.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {IOption} from 'ng-select';\n\n\n@Injectable()\nexport class glMasterService {\n  public static readonly PLAYER_ONE: Array<IOption> = [\n    {value: '0', label: 'a'},\n    {value: '1', label: 'b'},\n    {value: '2', label: 'c'},\n    {value: '3', label: 'd'}\n  ];\n\n\n\n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(glMasterService.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(glMasterService.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(glMasterService.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n   \n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class S1Service {\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: '0', label: '1' },\n        { value: '1', label: '2' },\n        { value: '2', label: '3' }\n             \n    ];\n       \n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(S1Service.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(S1Service.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(S1Service.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class S2Service {\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: '0', label: '1' },\n        { value: '1', label: '2' },\n        { value: '2', label: '3' }\n             \n    ];\n       \n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(S2Service.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(S2Service.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(S2Service.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BookDebtsComponent } from './book-debts.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BookDebtsComponent,\n    data: {\n      title: 'Book Debts',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BookDebtsRoutingModule { }\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  Input, Output,\n  EventEmitter,\n  ElementRef,\n} from \"@angular/core\";\nimport Swal from \"sweetalert2\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs\";\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\nimport { environment } from \"src/environments/environment\";\nimport { first } from \"rxjs/operators\";\nimport { BookdebtsService } from \"./book-debts.service\";\nimport { isNullOrUndefined } from \"@swimlane/ngx-datatable\";\nimport { data } from \"jquery\";\nimport { Router } from \"@angular/router\";\nimport * as moment from 'moment';\nimport { SecurityDetailsComponent } from \"../security-details.component\";\n\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface BookMaster {\n  id: number;\n  AC_ACNOTYPE: string;\n  AC_TYPE: number;\n  SUBMISSION_DATE: Date;\n  STATEMENT_DATE: Date;\n  DEBTORS_OP_BAL: number;\n  CREDIT_SALE: number;\n  RECOVERY: number;\n  OVERAGED_DEBTORS: number;\n  CLOSE_BAL: number;\n  CRD_OUTSTAND_BAL: number;\n  MARGIN: number;\n  REMARK: string;\n}\n\n@Component({\n  selector: \"app-book-debts\",\n  templateUrl: \"./book-debts.component.html\",\n  styleUrls: [\"./book-debts.component.scss\"],\n})\nexport class BookDebtsComponent implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n  @ViewChild(SecurityDetailsComponent) child: SecurityDetailsComponent;\n  //passing data form child to parent\n  @Output() newbookEvent = new EventEmitter<any>();\n  datemax: any;\n  newbtnShow: boolean;\n  newItemEvent(value) {\n    this.newbookEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n\n  //api\n  url = environment.base_url;\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  updateID: number; //variable for updating\n\n  submissiondate: any = null\n  statementdate: any = null\n  maxDate: Date;\n  minDate: Date;\n\n\n  // Store data from backend\n  bookMaster: BookMaster[];\n\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  page: number;\n  filterData = {};\n  // //variables for calculating debtors closing balance\n  // debtopen: number = 0;\n  // addcredit: number = 0;\n  // lessrecovery: number = 0;\n  // LessOveragedDebtors: number = 0;\n  // debtclosing: number = 0;\n  // bookdebts: number = 0;\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private _book: BookdebtsService,\n    public router: Router\n  ) {\n\n\n    console.log(this.scheme)\n    console.log(this.Accountno)\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n\n  }\n\n  ngOnInit(): void {\n    console.log(this.scheme)\n    console.log(this.Accountno)\n    this.createForm();\n\n    console.log(this.scheme, this.Accountno, this.AC_ACNOTYPE)\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._book.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.bookMaster = data\n    })\n    this.dtTrigger.next();\n\n    // // Fetching Server side data\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     let data: any = localStorage.getItem('user');\n    //     let result = JSON.parse(data);\n    //     let branchCode = result.branch.id;\n    //     console.log(this.scheme)\n    //     console.log(this.Accountno)\n    //     dataTableParameters['branchCode'] = branchCode;\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/book-debts\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.bookMaster = resp.data;\n\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n    //     {\n    //       title: \"Submission Date\",\n    //       data: \"SUBMISSION_DATE\",\n    //     },\n    //     {\n    //       title: \"Statement Date\",\n    //       data: \"STATEMENT_DATE\",\n    //     },\n    //     {\n    //       title: \"Debtors Opening Balance.\",\n    //       data: \"DEBTORS_OP_BAL\",\n    //     },\n    //     {\n    //       title: \"Credit Sales\",\n    //       data: \"CREDIT_SALE\",\n    //     },\n    //     {\n    //       title: \"Recovery\",\n    //       data: \"RECOVERY\",\n    //     },\n    //     {\n    //       title: \"Overaged Debtors\",\n    //       data: \"OVERAGED_DEBTORS\",\n    //     },\n    //     {\n    //       title: \"Debtors Closing Balance\",\n    //       data: \"CLOSE_BAL\",\n    //     },\n    //     {\n    //       title: \"Creditors O/S Balance\",\n    //       data: \"CRD_OUTSTAND_BAL\",\n    //     },\n    //     {\n    //       title: \"Margin %\",\n    //       data: \"MARGIN\",\n    //     },\n    //     {\n    //       title: \"Remarks\",\n    //       data: \"REMARK\",\n    //     },\n    //   ],\n    //   dom: \"Blrtip\",\n    // };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      SUBMISSION_DATE: [\"\", [Validators.required]],\n      STATEMENT_DATE: [\"\", [Validators.required]],\n      DEBTORS_OP_BAL: [0, [Validators.pattern, Validators.required]],\n      CREDIT_SALE: [\"\", [Validators.pattern]],\n      RECOVERY: [\"\", [Validators.pattern]],\n      OVERAGED_DEBTORS: [\"\", [Validators.pattern]],\n      CLOSE_BAL: [\"\", [Validators.pattern]],\n      CRD_OUTSTAND_BAL: [\"\", [Validators.pattern, Validators.required]],\n      MARGIN: [\"\", [Validators.pattern]],\n      REMARK: [\"\", [Validators.pattern, Validators.required]],\n    });\n  }\n\n  submit(event) {\n\n    event.preventDefault();\n    this.formSubmitted = true;\n    let submissiondate\n    let statementdate\n\n    // let closingbalid = (document.getElementById(\"DebtorsClosingBalance\") as HTMLInputElement).value;\n\n    // this.angForm.patchValue({\n    //   CLOSE_BAL: closingbalid,\n\n    // });\n\n\n\n    if (this.angForm.valid) {\n\n      const formVal = this.angForm.value;\n      //get bank code and branch code from session\n      let data: any = localStorage.getItem('user');\n      let result = JSON.parse(data);\n      let branchCode = result.branch.id;\n\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n\n        SUBMISSION_DATE: (formVal.SUBMISSION_DATE == '' || formVal.SUBMISSION_DATE == 'Invalid date') ? submissiondate = '' : submissiondate = moment(formVal.SUBMISSION_DATE).format('DD/MM/YYYY'),\n        // SUBMISSION_DATE: formVal.SUBMISSION_DATE,\n        STATEMENT_DATE: (formVal.STATEMENT_DATE == '' || formVal.STATEMENT_DATE == 'Invalid date') ? statementdate = '' : statementdate = moment(formVal.STATEMENT_DATE).format('DD/MM/YYYY'),\n        // STATEMENT_DATE: formVal.STATEMENT_DATE,\n        DEBTORS_OP_BAL: formVal.DEBTORS_OP_BAL,\n        CREDIT_SALE: formVal.CREDIT_SALE,\n        RECOVERY: formVal.RECOVERY,\n        OVERAGED_DEBTORS: formVal.OVERAGED_DEBTORS,\n        CLOSE_BAL: formVal.CLOSE_BAL,\n        CRD_OUTSTAND_BAL: formVal.CRD_OUTSTAND_BAL,\n        MARGIN: formVal.MARGIN,\n        REMARK: formVal.REMARK,\n      };\n\n      this._book.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          this.formSubmitted = false;\n          // to reload after insertion of data\n          let info = []\n          info.push(data.id)\n          info.push(\"book\")\n\n          this.newItemEvent(info);\n\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n        },\n        (error) => {\n\n        }\n      );\n      //To clear form\n      this.resetForm();\n    }\n\n\n  }\n\n  //check  if margin values are below 100\n  checkmargin(ele: any) {\n    //check  if given value  is below 100\n\n    if (ele <= 100) {\n\n    }\n    else {\n      Swal.fire(\"Invalid Input\", \"Please insert values below 100\", \"error\");\n      this.angForm.controls['MARGIN'].reset()\n    }\n  }\n\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n    let submissiondate\n    let statementdate\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._book.getFormData(id).subscribe((data) => {\n      this.updatecheckdata = data\n      this.updateID = data.id;\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n\n      // this.newItemEvent(dropdown.scheme)\n\n      dropdown.account = data.AC_NO;\n\n      // this.newItemEvent(dropdown.account)\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newbookEvent.emit(obj1);\n\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      this.angForm.patchValue({\n        // AC_TYPE: this.scheme._value[0],\n        // AC_NO: this.Accountno,\n        'SUBMISSION_DATE': (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? submissiondate = '' : submissiondate = data.SUBMISSION_DATE,\n        // SUBMISSION_DATE: data.SUBMISSION_DATE,\n        'STATEMENT_DATE': (data.STATEMENT_DATE == 'Invalid date' || data.STATEMENT_DATE == '' || data.STATEMENT_DATE == null) ? statementdate = '' : statementdate = data.STATEMENT_DATE,\n        // STATEMENT_DATE: data.STATEMENT_DATE,\n        DEBTORS_OP_BAL: data.DEBTORS_OP_BAL,\n        CREDIT_SALE: data.CREDIT_SALE,\n        RECOVERY: data.RECOVERY,\n        OVERAGED_DEBTORS: data.OVERAGED_DEBTORS,\n        CLOSE_BAL: data.CLOSE_BAL,\n        CRD_OUTSTAND_BAL: data.CRD_OUTSTAND_BAL,\n        MARGIN: data.MARGIN,\n        REMARK: data.REMARK,\n      });\n    });\n  }\n\n  updateData() {\n    let submissiondate\n    let statementdate\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data[\"AC_TYPE\"] = this.scheme\n    data[\"AC_NO\"] = this.Accountno\n    if (this.updatecheckdata.SUBMISSION_DATE != data.SUBMISSION_DATE) {\n      (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? (submissiondate = '', data['SUBMISSION_DATE'] = submissiondate) : (submissiondate = data.SUBMISSION_DATE, data['SUBMISSION_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.STATEMENT_DATE != data.STATEMENT_DATE) {\n      (data.STATEMENT_DATE == 'Invalid date' || data.STATEMENT_DATE == '' || data.STATEMENT_DATE == null) ? (submissiondate = '', data['STATEMENT_DATE'] = statementdate) : (statementdate = data.STATEMENT_DATE, data['STATEMENT_DATE'] = moment(statementdate).format('DD/MM/YYYY'))\n    }\n    this._book.updateData(data).subscribe(() => {\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      // this.rerender();\n      this.resetForm();\n    });\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n  //function for delete button clicked\n  delClickHandler(id: any): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to delete Book Debts  data\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._book.deleteData(id).subscribe((data1) => {\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n        }),\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n    // this.myInputField.nativeElement.focus();//for autofocus\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#informationtable tfoot tr').appendTo('#informationtable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n      // 'SchemeType':null\n    }\n    this.newbookEvent.emit(obj1);\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n  calculateopening() {\n\n\n    let opbal = Number(this.angForm.controls['DEBTORS_OP_BAL'].value);\n    let credit = Number(this.angForm.controls['CREDIT_SALE'].value)\n    let recovery = Number(this.angForm.controls['RECOVERY'].value);\n    let debt = Number(this.angForm.controls['OVERAGED_DEBTORS'].value)\n\n    if (opbal != 0) {\n      let balance\n      balance = opbal + credit - recovery - debt\n      this.angForm.patchValue({\n        CLOSE_BAL: balance\n      })\n    }\n\n\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>Book Debts</h5>\n        <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n      </div>\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"subm_date\" required=\"\" max=\"{{datemax | date:'yyyy-MM-dd'}}\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    formControlName=\"SUBMISSION_DATE\" #autofocus /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"SUBMISSION_DATE\" id=\"subm_date\" class=\"form-control\"\n                    [(ngModel)]=\"submissiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"SUBMISSION_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"subm_date\">Submission Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid && (angForm.controls['SUBMISSION_DATE'].dirty || angForm.controls['SUBMISSION_DATE'].touched)\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"stmt_date\" required=\"\" max=\"{{datemax | date:'yyyy-MM-dd'}}\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    formControlName=\"STATEMENT_DATE\"  id=\"date\" /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"STATEMENT_DATE\" id=\"stmt_date\" class=\"form-control\"\n                    [(ngModel)]=\"statementdate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"STATEMENT_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"stmt_date\">Statement Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['STATEMENT_DATE'].invalid && (angForm.controls['STATEMENT_DATE'].dirty || angForm.controls['STATEMENT_DATE'].touched)\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['STATEMENT_DATE'].errors?.required\">\n                  This field is required\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <h6>Debtors Opening Balance</h6>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"DebtorsOpeningBalance\" class=\"form-control\" placeholder=\" \"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" min=\"0\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    id=\"DebtorsOpeningBalance\" required=\"\" pattern=\"\\d{1,20}(\\.\\d{2})?\" (focusout)=\"calculateopening()\"\n                    title=\"Input allowed only  0-9\" formControlName=\"DEBTORS_OP_BAL\">\n                  <label for=\"DebtorsOpeningBalance\">Debtors Opening Balance<sub class=\"required\">*\n                    </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['DEBTORS_OP_BAL'].invalid && (angForm.controls['DEBTORS_OP_BAL'].dirty || angForm.controls['DEBTORS_OP_BAL'].touched)\"\n                class=\"alert alert-danger\">\n                <div\n                  *ngIf=\"angForm.controls['DEBTORS_OP_BAL'].errors?.pattern || angForm.controls['DEBTORS_OP_BAL'].errors?.required\">\n                  This field is required and Input allowed only . 0-9(after decimal 2 digits)\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <h6>Add Credit Sales</h6>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"AddCreditSales\" class=\"form-control\" placeholder=\" \" id=\"AddCreditSales\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"CREDIT_SALE\" min=\"0\"\n                    (focusout)=\"calculateopening()\">\n                  <label for=\"AddCreditSales\">Add Credit Sales</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['CREDIT_SALE'].invalid && (angForm.controls['CREDIT_SALE'].dirty || angForm.controls['CREDIT_SALE'].touched)\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['CREDIT_SALE'].errors?.pattern\">\n                  Input allowed only . 0-9(after decimal 2 digits)\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <h6>Less Recoveries</h6>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"LessRecoveries\" class=\"form-control\" placeholder=\" \" id=\"LessRecoveries\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"RECOVERY\" min=\"0\"\n                    (focusout)=\"calculateopening()\">\n                  <label for=\"LessRecoveries\">Less Recoveries</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['RECOVERY'].invalid && (angForm.controls['RECOVERY'].dirty || angForm.controls['RECOVERY'].touched)\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['RECOVERY'].errors?.pattern\">\n                  Input allowed only . 0-9(after decimal 2 digits)\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <h6>Less Overaged Debtors</h6>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"LessOveragedDebtors\" class=\"form-control\" placeholder=\" \"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    id=\"LessOveragedDebtors\" pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" min=\"0\"\n                    formControlName=\"OVERAGED_DEBTORS\" (focusout)=\"calculateopening()\">\n                  <label for=\"LessOveragedDebtors\">Less Overaged Debtors</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['OVERAGED_DEBTORS'].invalid && (angForm.controls['OVERAGED_DEBTORS'].dirty || angForm.controls['OVERAGED_DEBTORS'].touched)\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['OVERAGED_DEBTORS'].errors?.pattern\">\n                  Input allowed only . 0-9(after decimal 2 digits)\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <h6>Debtors Closing Balance</h6>\n            </div>\n            <div class=\"col-sm\">\n\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"DebtorsClosingBalance\" class=\"form-control\" placeholder=\" \"\n                    id=\"DebtorsClosingBalance\" required=\"\" pattern=\"\\d{1,20}(\\.\\d{2})?\" disabled\n                    title=\"Input allowed only  0-9\" formControlName=\"CLOSE_BAL\">\n                  <label for=\"DebtorsClosingBalance\">Debtors Closing Balance<sub class=\"required\">*\n                    </sub></label>\n                </span>\n              </div>\n\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"CreditorsOutstanding\" class=\"form-control\" placeholder=\" \"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    id=\"CreditorsOutstanding\" required=\"\" pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\"\n                    formControlName=\"CRD_OUTSTAND_BAL\">\n                  <label for=\"CreditorsOutstanding\">Creditors Outstanding<sub class=\"required\">*\n                    </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['CRD_OUTSTAND_BAL'].invalid && (angForm.controls['CRD_OUTSTAND_BAL'].dirty || angForm.controls['CRD_OUTSTAND_BAL'].touched)\"\n                class=\"alert alert-danger\">\n                <div\n                  *ngIf=\"angForm.controls['CRD_OUTSTAND_BAL'].errors?.pattern || angForm.controls['CRD_OUTSTAND_BAL'].errors?.required\">\n                  This field is required and Input allowed only . 0-9(after decimal 2 digits)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-2\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"Margin\" class=\"form-control\" placeholder=\" \" id=\"Margin\" #margin\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    (keyup)=\"checkmargin(margin.value)\" pattern=\"\\d{1,5}(\\.\\d{2})?\" title=\"Input allowed only  0-9\"\n                    formControlName=\"MARGIN\">\n                  <label for=\"Margin\">Margin % </label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['MARGIN'].invalid && (angForm.controls['MARGIN'].dirty || angForm.controls['MARGIN'].touched)\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['MARGIN'].errors?.pattern\">\n                  Input allowed only . 0-9(after decimal 2 digits)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"remarks\" class=\"form-control\" placeholder=\" \" id=\"remarks\" required=\"\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" maxlength=\"90\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"REMARK\">\n                  <label for=\"remarks\">Remark<sub class=\"required\">*\n                    </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['REMARK'].invalid && (angForm.controls['REMARK'].dirty || angForm.controls['REMARK'].touched)\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['REMARK'].errors?.pattern || angForm.controls['REMARK'].errors?.required\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <!-- [disabled]=\"angForm.invalid\" -->\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\" *ngIf=\"showButton\">Submit</button>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n              &nbsp;\n              <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"newbtnShow\" (click)=\"addNewData()\">Cancel</button>\n            </div>\n          </div>\n\n        </div>\n      </form>\n    </div>\n  </div>\n  <!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card shadow\">\n          <div class=\"card-block\">\n            <div class=\"row\">\n              <div class=\"col-sm\">\n                <div class=\"table-responsive\">\n                  <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                    class=\"table table-striped table-bordered table-hover compact\">\n                    <thead>\n                      <th style=\"text-transform: captalize;\">Action</th>\n                      <th style=\"text-transform: captalize;\">Submission Date</th>\n                      <th style=\"text-transform: captalize;\">Statement Date</th>\n                      <th style=\"text-transform: captalize;\">Debtors Opening Balance</th>\n                      <th style=\"text-transform: captalize;\">Credit Sales</th>\n                      <th style=\"text-transform: captalize;\">Recovery</th>\n                      <th style=\"text-transform: captalize;\">Overaged Debtors</th>\n                      <th style=\"text-transform: captalize;\">Debtors Closing Balance</th>\n                      <th style=\"text-transform: captalize;\">Creditors O/S Balance</th>\n                      <th style=\"text-transform: captalize;\">Margin</th>\n                      <th style=\"text-transform: captalize;\">Remarks</th>\n                    </thead>\n                    <tbody *ngIf=\"bookMaster?.length != 0\">\n                      <tr *ngFor=\"let data of bookMaster\">\n                        <td>\n                          <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\"\n                            placement=\"bottom\" ngbTooltip=\"Edit\"></span>\n                          &nbsp;\n                          <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                        </td>\n\n                        <td class=\"td_right\">{{ data.SUBMISSION_DATE }}</td>\n                        <td class=\"td_right\">{{ data.STATEMENT_DATE }}</td>\n                        <td class=\"td_right\">{{ data.DEBTORS_OP_BAL }}</td>\n                        <td class=\"td_right\" [ngClass]=\"data.CREDIT_SALE === '' ? 'td_center' : 'td_right'\">\n                          {{data.CREDIT_SALE === ''? '-' : data.CREDIT_SALE}}</td>\n                        <!-- <td class=\"td_right\">{{ data.CREDIT_SALE }}</td> -->\n                        <td [ngClass]=\"data.RECOVERY === '' ? 'td_center' : 'td_right'\">{{data.RECOVERY === ''? '-' :\n                          data.RECOVERY}}</td>\n                        <!-- <td class=\"td_right\">{{ data.RECOVERY }}</td> -->\n                        <td class=\"td_right\" [ngClass]=\"data.OVERAGED_DEBTORS === '' ? 'td_center' : 'td_right'\">\n                          {{data.OVERAGED_DEBTORS === ''? '-' : data.OVERAGED_DEBTORS}}</td>\n                        <!-- <td class=\"td_right\">{{ data.OVERAGED_DEBTORS }}</td> -->\n                        <td>{{ data.CLOSE_BAL }}</td>\n                        <td class=\"td_right\" [ngClass]=\"data.CRD_OUTSTAND_BAL === '' ? 'td_center' : 'td_right'\">\n                          {{data.CRD_OUTSTAND_BAL === ''? '-' : data.CRD_OUTSTAND_BAL}}</td>\n                        <!-- <td class=\"td_right\">{{ data.CRD_OUTSTAND_BAL }}</td> -->\n                        <td class=\"td_right\" [ngClass]=\"data.MARGIN === '' ? 'td_center' : 'td_right'\">{{data.MARGIN ===\n                          ''? '-' : data.MARGIN}}</td>\n                        <!-- <td class=\"td_right\">{{ data.MARGIN}}</td> -->\n                        <td [ngClass]=\"data.REMARK === '' ? 'td_center' : 'td_right'\">{{data.REMARK === ''? '-' :\n                          data.REMARK}}</td>\n                        <!-- <td>{{ data.REMARK }}</td> -->\n\n\n                      </tr>\n                    </tbody>\n                    <tbody *ngIf=\"bookMaster?.length == 0\">\n                      <tr>\n                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                      </tr>\n                    </tbody>\n                    <!-- <tfoot #filters class=\"filters\">\n                    <tr class=\"testing\">\n                      <th class=\"testing\"></th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SUBMISSION_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"STATEMENT_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"CRD_OUTSTAND_BAL\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"MARGIN\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"REMARK\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"DEBTORS_OP_BAL\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"CREDIT_SALE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"RECOVERY\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"OVERAGED_DEBTORS\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"CLOSE_BAL\" />\n                      </th>\n                    </tr>\n                  </tfoot> -->\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  <!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BookdebtsService } from './book-debts.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { BookDebtsComponent } from './book-debts.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n// import { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { UserAuthInterceptor } from '../../../../../user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { BookDebtsRoutingModule } from './book-debts-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n\n\n\n@NgModule({\n  declarations: [BookDebtsComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    BookDebtsRoutingModule,\n    DataTablesModule\n  ],\n  providers: [BookdebtsService,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [BookDebtsComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class BookDebtsModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"../../../../../../environments/environment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class BookdebtsService {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/book-debts/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/book-debts/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/book-debts/update\", data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/book-debts/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/book-debts/getdatatable\", data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CustomerInsuranceComponent } from './customer-insurance.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerInsuranceComponent,\n    data: {\n      title: 'Customer Insurance',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomerInsuranceRoutingModule { }\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild, Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n} from \"@angular/core\";\nimport { IOption } from \"ng-select\";\nimport { Subscription } from \"rxjs/Subscription\";\nimport Swal from \"sweetalert2\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { customerinsuranceService } from \"./customer-insurance.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs\";\nimport { InsuranceMasterDropdownService } from '../../../../../shared/dropdownService/insurance-master-dropdown.service'\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\nimport { environment } from \"src/environments/environment\";\nimport { first } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport { NgSelectConfig } from '@ng-select/ng-select';\nimport * as moment from 'moment';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface CustomerMaster {\n  id: number;\n  AC_ACNOTYPE: string;\n  AC_TYPE: number;\n  INSURANCE_DATE: Date;\n  POLICY_NO: number;\n  INSU_COMPANY_CODE: number;\n  INSU_EXP_DATE: Date;\n  INSU_AMOUNT: number;\n}\n\n@Component({\n  selector: \"app-customer-insurance\",\n  templateUrl: \"./customer-insurance.component.html\",\n  styleUrls: [\"./customer-insurance.component.scss\"],\n})\nexport class CustomerInsuranceComponent implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n  //passing data form child to parent\n  @Output() newcustomerInsuranceEvent = new EventEmitter<any>();\n  datemax: string;\n  newbtnShow: boolean;\n  newItemEvent(value) {\n    this.newcustomerInsuranceEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n  //api\n  url = environment.base_url;\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n  // simpleOption: Array<IOption> = this.InsuranceService.getCharacters();\n  selectedOption = \"3\";\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = \"3\";\n  timeLeft = 5;\n  private dataSub: Subscription = null;\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  updateID: number; //variable for updating\n  // Store data from backend\n  nginsurancecom: any = null\n\n  // for date \n  insurancedate: any = null\n  insuranceexpirydate: any = null\n  maxDate: Date;\n  minDate: Date;\n\n  customerMaster: CustomerMaster[];\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  page: number;\n  filterData = {};\n  insuranceoption\n\n  constructor(\n    private fb: FormBuilder,\n    private _customerservice: customerinsuranceService,\n    private http: HttpClient,\n    private _insurancedropdown: InsuranceMasterDropdownService,\n    public router: Router,\n    private config: NgSelectConfig,) {\n\n\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._customerservice.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.customerMaster = data\n    })\n\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/customer-insurance\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.customerMaster = resp.data;\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n    //     {\n    //       title: \"Insurance Date\",\n    //       data: \"INSURANCE_DATE\",\n    //     },\n    //     {\n    //       title: \"Policy No.\",\n    //       data: \"POLICY_NO\",\n    //     },\n    //     {\n    //       title: \"Insurance Company\",\n    //       data: \"INSU_COMPANY_CODE\",\n    //     },\n    //     {\n    //       title: \"Insurance Expiry Date\",\n    //       data: \"INSU_EXP_DATE\",\n    //     },\n    //     {\n    //       title: \"Insurance Amount\",\n    //       data: \"INSU_AMOUNT\",\n    //     },\n    //   ],\n    //   dom: \"Blrtip\",\n    // };\n    this.runTimer();\n    this._insurancedropdown.getInsuranceMasterList().pipe(first()).subscribe(data => {\n      this.insuranceoption = data;\n    })\n\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      INSURANCE_DATE: [\"\", [Validators.required]],\n      POLICY_NO: [\"\", [Validators.pattern, Validators.required]],\n      INSU_COMPANY_CODE: [\"\", [Validators.required]],\n      INSU_EXP_DATE: [\"\", [Validators.required]],\n      INSU_AMOUNT: [\"\", [Validators.pattern, Validators.required]],\n    });\n  }\n\n  submit(event) {\n    let insurancedate\n    let insuranceexpirydate\n    event.preventDefault();\n    this.formSubmitted = true;\n\n\n\n\n    if (this.angForm.valid) {\n\n      const formVal = this.angForm.value;\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n        'INSURANCE_DATE': (formVal.INSURANCE_DATE == '' || formVal.INSURANCE_DATE == 'Invalid date') ? insurancedate = '' : insurancedate = moment(formVal.INSURANCE_DATE).format('DD/MM/YYYY'),\n\n        POLICY_NO: formVal.POLICY_NO,\n        INSU_COMPANY_CODE: formVal.INSU_COMPANY_CODE,\n        'INSU_EXP_DATE': (formVal.INSU_EXP_DATE == '' || formVal.INSU_EXP_DATE == 'Invalid date') ? insuranceexpirydate = '' : insuranceexpirydate = moment(formVal.INSU_EXP_DATE).format('DD/MM/YYYY'),\n\n        INSU_AMOUNT: formVal.INSU_AMOUNT,\n      };\n\n      this._customerservice.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          this.formSubmitted = false;\n          let info = []\n          info.push(data.id)\n          info.push(\"customerInsurance\")\n\n          this.newItemEvent(info);\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n    }\n\n\n  }\n\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n    let insurancedate\n    let insuranceexpirydate\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._customerservice.getFormData(id).subscribe((data) => {\n      this.updatecheckdata = data\n\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n\n\n\n      dropdown.account = data.AC_NO;\n\n\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newcustomerInsuranceEvent.emit(obj1);\n\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      this.nginsurancecom = Number(data.INSU_COMPANY_CODE)\n      this.updateID = data.id;\n      this.angForm.patchValue({\n        AC_ACNOTYPE: data.AC_ACNOTYPE,\n        'INSURANCE_DATE': (data.INSURANCE_DATE == 'Invalid date' || data.INSURANCE_DATE == '' || data.INSURANCE_DATE == null) ? insurancedate = '' : insurancedate = data.INSURANCE_DATE,\n        POLICY_NO: data.POLICY_NO,\n        'INSU_EXP_DATE': (data.INSU_EXP_DATE == 'Invalid date' || data.INSU_EXP_DATE == '' || data.INSU_EXP_DATE == null) ? insuranceexpirydate = '' : insuranceexpirydate = data.INSU_EXP_DATE,\n        INSU_AMOUNT: data.INSU_AMOUNT,\n      });\n    });\n  }\n\n  updateData() {\n    let insurancedate\n    let insuranceexpirydate\n    this.showButton = true;\n    this.updateShow = false;\n\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data[\"AC_TYPE\"] = this.scheme\n    data[\"AC_NO\"] = this.Accountno\n    if (this.updatecheckdata.INSURANCE_DATE != data.INSURANCE_DATE) {\n      (data.INSURANCE_DATE == 'Invalid date' || data.INSURANCE_DATE == '' || data.INSURANCE_DATE == null) ? (insurancedate = '', data['INSURANCE_DATE'] = insurancedate) : (insurancedate = data.INSURANCE_DATE, data['INSURANCE_DATE'] = moment(insurancedate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.INSU_EXP_DATE != data.INSU_EXP_DATE) {\n      (data.INSU_EXP_DATE == 'Invalid date' || data.INSU_EXP_DATE == '' || data.INSU_EXP_DATE == null) ? (insuranceexpirydate = '', data['INSU_EXP_DATE'] = insuranceexpirydate) : (insuranceexpirydate = data.INSU_EXP_DATE, data['INSU_EXP_DATE'] = moment(insuranceexpirydate).format('DD/MM/YYYY'))\n    }\n    this._customerservice.updateData(data).subscribe(() => {\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n\n      this.resetForm();\n    });\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n  //function for delete button clicked\n  delClickHandler(id: any): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to delete Insurance Date  data\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._customerservice.deleteData(id).subscribe((data1) => {\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n        }),\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n\n    // this.myInputField.nativeElement.focus();//for autofocus\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#informationtable tfoot tr').appendTo('#informationtable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    this.nginsurancecom = null\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n    }\n    this.newcustomerInsuranceEvent.emit(obj1);\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>Customer Insurance</h5>\n        <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n      </div>\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"InsuranceDate\" required=\"\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    max=\"{{datemax | date:'yyyy-MM-dd'}}\" formControlName=\"INSURANCE_DATE\"  #autofocus /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"INSURANCE_DATE\" id=\"InsuranceDate\"\n                    class=\"form-control\" [(ngModel)]=\"insurancedate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [maxDate]=\"maxDate\" [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"INSURANCE_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"InsuranceDate\">Insurance Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                    angForm.controls['INSURANCE_DATE'].invalid &&\n                    (angForm.controls['INSURANCE_DATE'].dirty ||\n                      angForm.controls['INSURANCE_DATE'].touched)\n                  \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['INSURANCE_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['INSURANCE_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"PolicyNo\" class=\"form-control\" placeholder=\" \" id=\"label-name\" required=\"\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\" pattern=\"^[A-Z a-z 0-9 / - .]+$\"\n                    maxlength=\"50\" title=\"Input allowed only 0-9\" formControlName=\"POLICY_NO\" />\n                  <label for=\"PolicyNo\">Policy Number<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                    angForm.controls['POLICY_NO'].invalid &&\n                    (angForm.controls['POLICY_NO'].dirty ||\n                      angForm.controls['POLICY_NO'].touched)\n                  \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                      angForm.controls['POLICY_NO'].errors?.pattern ||\n                      angForm.controls['POLICY_NO'].errors?.required\n                    \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <!-- <div class=\"form-group form-primary form-static-label\">\n                <ng-select [ngClass]=\"'ng-select'\" [options]=\"insuranceoption\" [multiple]=\"false\"\n                [ngClass]=\"{'form-submitted': formSubmitted}\"\n                  placeholder=\"Insurance Company *\" formControlName=\"INSU_COMPANY_CODE\">\n                </ng-select>\n              </div> -->\n              <div class=\"form-group form-primary form-static-label\">\n                <span class=\"border-lable-flt\">\n                  <ng-select id=\"INSU_COMPANY_CODE\" bindValue=\"value\" [(ngModel)]=\"nginsurancecom\"\n                    formControlName=\"INSU_COMPANY_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Insurance Company\">\n                    <ng-option *ngFor=\"let values of insuranceoption\" [value]=\"values\">\n                      {{values.label}}</ng-option>\n                  </ng-select>\n                  <label for=\"INSU_COMPANY_CODE\">Insurance Company<sub class=\"required\"> * </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                    angForm.controls['INSU_COMPANY_CODE'].invalid &&\n                    (angForm.controls['INSU_COMPANY_CODE'].dirty ||\n                      angForm.controls['INSU_COMPANY_CODE'].touched)\n                  \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['INSU_COMPANY_CODE'].errors?.required\">\n                  This field is required\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"InsuranceExpiryDate\" required=\"\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    max=\"{{datemax | date:'yyyy-MM-dd'}}\" formControlName=\"INSU_EXP_DATE\"  /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"INSU_EXP_DATE\" id=\"InsuranceExpiryDate\"\n                    class=\"form-control\" [(ngModel)]=\"insuranceexpirydate\"\n                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"minDate\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"INSU_EXP_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"InsuranceExpiryDate\">Insurance Expiry Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                    angForm.controls['INSU_EXP_DATE'].invalid &&\n                    (angForm.controls['INSU_EXP_DATE'].dirty ||\n                      angForm.controls['INSU_EXP_DATE'].touched)\n                  \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['INSU_EXP_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['INSU_EXP_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"InsuranceAmount\" class=\"form-control\" placeholder=\" \" id=\"InsuranceAmount\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\" required=\"\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only 0-9 . \" formControlName=\"INSU_AMOUNT\" />\n                  <label for=\"InsuranceAmount\">Insurance Amount<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                    angForm.controls['INSU_AMOUNT'].invalid &&\n                    (angForm.controls['INSU_AMOUNT'].dirty ||\n                      angForm.controls['INSU_AMOUNT'].touched)\n                  \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                      angForm.controls['INSU_AMOUNT'].errors?.pattern ||\n                      angForm.controls['INSU_AMOUNT'].errors?.required\n                    \">\n                  This field is required and Input allowed only 0-9 .\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\" *ngIf=\"showButton\">Submit</button>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"addNewData()\" *ngIf=\"newbtnShow\">Cancel</button>\n\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card shadow\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"table-responsive\">\n                <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                  class=\"table table-striped table-bordered table-hover compact\">\n                  <thead>\n                    <th style=\"text-transform: captalize;\">Action</th>\n                    <th style=\"text-transform: captalize;\">Insurance Date</th>\n                    <th style=\"text-transform: captalize;\">Policy Number</th>\n                    <th style=\"text-transform: captalize;\">Insurance Company</th>\n                    <th style=\"text-transform: captalize;\">Insurance Expiry Date</th>\n                    <th style=\"text-transform: captalize;\">Insurance Amount</th>\n                  </thead>\n                  <tbody *ngIf=\"customerMaster?.length != 0\">\n                    <tr *ngFor=\"let data of customerMaster\">\n                      <td>\n                        <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\"\n                          placement=\"bottom\" ngbTooltip=\"Edit\"></span>\n                        &nbsp;\n                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                      </td>\n\n                      <td class=\"td_right\">{{ data.INSURANCE_DATE }}</td>\n                      <td class=\"td_right\">{{ data.POLICY_NO }}</td>\n                      <td class=\"td_right\">{{ data.custinsurancemaster.NAME }}</td>\n                      <td class=\"td_right\">{{ data.INSU_EXP_DATE }}</td>\n                      <td class=\"td_right\">{{ data.INSU_AMOUNT }}</td>\n                    </tr>\n                  </tbody>\n                  <tbody *ngIf=\"customerMaster?.length == 0\">\n                    <tr>\n                      <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                    </tr>\n                  </tbody>\n                  <!-- <tfoot #filters class=\"filters\">\n                    <tr class=\"testing\">\n                      <th class=\"testing\"></th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"INSURANCE_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"POLICY_NO\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"INSU_COMPANY_CODE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"INSU_EXP_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"INSU_AMOUNT\" />\n                      </th>\n                    </tr>\n                  </tfoot> -->\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { customerinsuranceService } from './customer-insurance.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { CustomerInsuranceComponent } from './customer-insurance.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n// import { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { UserAuthInterceptor } from '../../../../../user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { CustomerInsuranceRoutingModule } from './customer-insurance-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n\n@NgModule({\n  declarations: [CustomerInsuranceComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    CustomerInsuranceRoutingModule,\n    DataTablesModule\n  ],\n  providers: [customerinsuranceService,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [CustomerInsuranceComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class CustomerInsuranceModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"../../../../../../environments/environment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class customerinsuranceService {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/customer-insurance/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/customer-insurance/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/customer-insurance/update\", data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/customer-insurance/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/customer-insurance/getdatatable\", data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FirePolicyComponent } from './fire-policy.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FirePolicyComponent,\n    data: {\n      title: 'Fire Policy',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FirePolicyRoutingModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"../../../../../../environments/environment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class firepolicycomponentservice {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/fire-policy/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/fire-policy/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/fire-policy/update\", data);\n  }\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/fire-policy/getdatatable\", data);\n  }\n\n  \n\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/fire-policy/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild, Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n} from \"@angular/core\";\n// Used to Call API\nimport { HttpClient } from \"@angular/common/http\";\nimport Swal from \"sweetalert2\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { firepolicycomponentservice } from \"./fire-policy.component.service\";\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\nimport { environment } from \"src/environments/environment\";\nimport { IOption } from \"ng-select\";\nimport { Subscription } from \"rxjs/Subscription\";\nimport { Subject } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\nimport { InsuranceMasterDropdownService } from \"../../../../../shared/dropdownService/insurance-master-dropdown.service\";\nimport { NgSelectConfig } from '@ng-select/ng-select';\nimport * as moment from 'moment';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface FireMaster {\n  id: number;\n  AC_ACNOTYPE: string;\n  AC_TYPE: number;\n  AC_NO: number;\n  SUBMISSION_DATE: Date;\n  POLICY_DUE_DATE: Date;\n  POLICY_NO: string;\n  POLICY_AMT: number;\n  POLICY_NATURE: string;\n  INSU_CO_CODE: number;\n  ADDRESS: string;\n  CITY: string;\n  PREMIUM: number;\n  PREMIUM_DUE_DATE: Date;\n  SECURITY_TYPE: string;\n}\n@Component({\n  selector: \"app-fire-policy\",\n  templateUrl: \"./fire-policy.component.html\",\n  styleUrls: [\"./fire-policy.component.scss\"],\n})\nexport class FirePolicyComponent implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n\n  //passing data form child to parent\n  @Output() newfirePolicyEvent = new EventEmitter<any>();\n  datemax: string;\n  insuranceNo: any;\n  newbtnShow: boolean;\n  newItemEvent(value) {\n    this.newfirePolicyEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n  //api\n  url = environment.base_url;\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  updateID: number;\n  firemaster: FireMaster[];\n  nginsurance: any = null\n\n  // for date \n  submissiondate: any = null\n  policyduedate: any = null\n  premiumduedate: any = null\n  maxDate: Date;\n  minDate: Date;\n\n  //for autofocus\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtTrigger: Subject<any> = new Subject();\n  page: number;\n  filterData = {};\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private _fire: firepolicycomponentservice,\n    public router: Router,\n    private _insurancedropdownservice: InsuranceMasterDropdownService,\n    private config: NgSelectConfig,) {\n\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    console.log(this.scheme, this.Accountno, this.AC_ACNOTYPE)\n\n    // Fetching Server side data\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/fire-policy\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.firemaster = resp.data;\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n\n    //     {\n    //       title: \"Submission Date\",\n    //       data: \"SUBMISSION_DATE\",\n    //     },\n    //     {\n    //       title: \"Policy Due Date\",\n    //       data: \"POLICY_DUE_DATE\",\n    //     },\n    //     {\n    //       title: \"Policy Number\",\n    //       data: \"POLICY_NO\",\n    //     },\n    //     {\n    //       title: \"Policy Amount\",\n    //       data: \"POLICY_AMT\",\n    //     },\n    //     {\n    //       title: \"Policy Nature\",\n    //       data: \"POLICY_NATURE\",\n    //     },\n    //     {\n    //       title: \"Insurance Code\",\n    //       data: \"INSU_CO_CODE\",\n    //     },\n    //     {\n    //       title: \"Address\",\n    //       data: \"ADDRESS\",\n    //     },\n    //     {\n    //       title: \"City\",\n    //       data: \"CITY\",\n    //     },\n    //     {\n    //       title: \"Premium Amount\",\n    //       data: \"PREMIUM\",\n    //     },\n    //     {\n    //       title: \"Premium Due Date\",\n    //       data: \"PREMIUM_DUE_DATE\",\n    //     },\n    //   ],\n    //   dom: \"Blrtip\",\n\n    // };\n\n    console.log(this.scheme, this.Accountno, this.AC_ACNOTYPE)\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._fire.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.firemaster = data\n    })\n    this.dtTrigger.next();\n\n    this._insurancedropdownservice.getInsuranceMasterList().pipe(first()).subscribe(data => {\n      this.insuranceNo = data;\n    })\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      SUBMISSION_DATE: [\"\", [Validators.required]],\n      POLICY_DUE_DATE: [\"\", [Validators.required]],\n      POLICY_NO: [\"\", [Validators.pattern, Validators.required]],\n      POLICY_AMT: [\"\", [Validators.pattern, Validators.required]],\n      POLICY_NATURE: [\"\", [Validators.pattern, Validators.required]],\n      INSU_CO_CODE: [\"\", [Validators.pattern, Validators.required]],\n      CITY: [\"\", [Validators.pattern, Validators.required]],\n      PREMIUM: [\"\", [Validators.pattern, Validators.required]],\n      PREMIUM_DUE_DATE: [\"\", [Validators.required]],\n      ADDRESS: [\"\", [Validators.pattern]],\n    });\n  }\n\n  submit(event) {\n    let submissiondate\n    let policyduedate\n    let premiumduedate\n    event.preventDefault();\n    this.formSubmitted = true;\n\n\n    if (this.angForm.valid) {\n\n      const formVal = this.angForm.value;\n      console.log(this.scheme, this.Accountno, this.AC_ACNOTYPE)\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n\n        'SUBMISSION_DATE': (formVal.SUBMISSION_DATE == '' || formVal.SUBMISSION_DATE == 'Invalid date') ? submissiondate = '' : submissiondate = moment(formVal.SUBMISSION_DATE).format('DD/MM/YYYY'),\n        'POLICY_DUE_DATE': (formVal.POLICY_DUE_DATE == '' || formVal.POLICY_DUE_DATE == 'Invalid date') ? policyduedate = '' : policyduedate = moment(formVal.POLICY_DUE_DATE).format('DD/MM/YYYY'),\n        POLICY_NO: formVal.POLICY_NO,\n        POLICY_AMT: formVal.POLICY_AMT,\n        POLICY_NATURE: formVal.POLICY_NATURE,\n        INSU_CO_CODE: formVal.INSU_CO_CODE,\n        CITY: formVal.CITY,\n        PREMIUM: formVal.PREMIUM,\n        'PREMIUM_DUE_DATE': (formVal.PREMIUM_DUE_DATE == '' || formVal.PREMIUM_DUE_DATE == 'Invalid date') ? premiumduedate = '' : premiumduedate = moment(formVal.PREMIUM_DUE_DATE).format('DD/MM/YYYY'),\n        ADDRESS: formVal.ADDRESS,\n      };\n      this._fire.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          let info = []\n          info.push(data.id)\n          info.push(\"firePolicy\")\n\n          this.newItemEvent(info);\n          this.formSubmitted = false;\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n\n    }\n  }\n\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n    let submissiondate\n    let policyduedate\n    let premiumduedate\n\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._fire.getFormData(id).subscribe((data) => {\n\n      this.updatecheckdata = data\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n      dropdown.account = data.AC_NO;\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newfirePolicyEvent.emit(obj1);\n\n\n      this.updateID = data.id;\n\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      this.nginsurance = Number(data.INSU_CO_CODE)\n      this.angForm.patchValue({\n\n        AC_ACNOTYPE: data.AC_ACNOTYPE,\n        'SUBMISSION_DATE': (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? submissiondate = '' : submissiondate = data.SUBMISSION_DATE,\n        'POLICY_DUE_DATE': (data.POLICY_DUE_DATE == 'Invalid date' || data.POLICY_DUE_DATE == '' || data.POLICY_DUE_DATE == null) ? policyduedate = '' : policyduedate = data.POLICY_DUE_DATE,\n        POLICY_NO: data.POLICY_NO,\n        POLICY_AMT: data.POLICY_AMT,\n        POLICY_NATURE: data.POLICY_NATURE,\n        CITY: data.CITY,\n        PREMIUM: data.PREMIUM,\n        'PREMIUM_DUE_DATE': (data.PREMIUM_DUE_DATE == 'Invalid date' || data.PREMIUM_DUE_DATE == '' || data.PREMIUM_DUE_DATE == null) ? premiumduedate = '' : premiumduedate = data.PREMIUM_DUE_DATE,\n        ADDRESS: data.ADDRESS,\n      });\n    });\n  }\n\n  updateData() {\n    debugger\n    let submissiondate\n    let policyduedate\n    let premiumduedate\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data[\"AC_TYPE\"] = this.scheme\n    data[\"AC_NO\"] = this.Accountno\n    if (this.updatecheckdata.SUBMISSION_DATE != data.SUBMISSION_DATE) {\n      (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? (submissiondate = '', data['SUBMISSION_DATE'] = submissiondate) : (submissiondate = data.SUBMISSION_DATE, data['SUBMISSION_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.POLICY_DUE_DATE != data.POLICY_DUE_DATE) {\n      (data.POLICY_DUE_DATE == 'Invalid date' || data.POLICY_DUE_DATE == '' || data.POLICY_DUE_DATE == null) ? (policyduedate = '', data['POLICY_DUE_DATE'] = policyduedate) : (policyduedate = data.POLICY_DUE_DATE, data['POLICY_DUE_DATE'] = moment(policyduedate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.PREMIUM_DUE_DATE != data.PREMIUM_DUE_DATE) {\n      (data.PREMIUM_DUE_DATE == 'Invalid date' || data.PREMIUM_DUE_DATE == '' || data.PREMIUM_DUE_DATE == null) ? (premiumduedate = '', data['PREMIUM_DUE_DATE'] = premiumduedate) : (premiumduedate = data.PREMIUM_DUE_DATE, data['PREMIUM_DUE_DATE'] = moment(premiumduedate).format('DD/MM/YYYY'))\n    }\n\n    this._fire.updateData(data).subscribe(() => {\n\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      // this.addNewCustomer(data.id);\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      //.rerender();\n      this.resetForm();\n    });\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n  //function for delete button clicked\n  delClickHandler(id: any): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do You Want To Delete Submission Date data\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._fire.deleteData(id).subscribe((data1) => {\n          this.firemaster = data1;\n          Swal.fire(\"Deleted!\", \"Your Data Has Been Deleted.\", \"success\");\n        }),\n          Swal.fire(\"Deleted!\", \"Your Data Has Been Deleted.\", \"success\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your data Is Safe.\", \"error\");\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    // this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n    //   $('#informationtable tfoot tr').appendTo('#informationtable thead');\n    //   dtInstance.columns().every(function () {\n    //     const that = this;\n    //     $('input', this.footer()).on('keyup change', function () {\n    //       if (this['value'] != '') {\n    //         that\n    //           .search(this['value'])\n    //           .draw();\n    //       } else {\n    //         that\n    //           .search(this['value'])\n    //           .draw();\n    //       }\n    //     });\n    //   });\n    // });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    this.nginsurance = null\n\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n    }\n    this.newfirePolicyEvent.emit(obj1);\n\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>Fire Policy</h5>\n        <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n      </div>\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"date\" required=\"\" max=\"{{datemax | date:'yyyy-MM-dd'}}\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"  \n                  formControlName=\"SUBMISSION_DATE\" onfocus=\"(this.type='date')\" id=\"date\" #autofocus /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"SUBMISSION_DATE\" id=\"subm_date\" class=\"form-control\"\n                    [(ngModel)]=\"submissiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"SUBMISSION_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"date\">Submission Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid && (angForm.controls['SUBMISSION_DATE'].dirty || angForm.controls['SUBMISSION_DATE'].touched)\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"policy_due\" required=\"\" max=\"{{datemax | date:'yyyy-MM-dd'}}\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"  \n                  formControlName=\"POLICY_DUE_DATE\" onfocus=\"(this.type='date')\" /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"POLICY_DUE_DATE\" id=\"policy_due\"\n                    class=\"form-control\" [(ngModel)]=\"policyduedate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [minDate]=\"minDate\" [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"POLICY_DUE_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"policy_due\">Policy Due Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['POLICY_DUE_DATE'].invalid && (angForm.controls['POLICY_DUE_DATE'].dirty || angForm.controls['POLICY_DUE_DATE'].touched)\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['POLICY_DUE_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['POLICY_DUE_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"PolicyNumber\" class=\"form-control\" placeholder=\" \" id=\"PolicyNumber\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <=90)||($event.charCode >= 97 && $event.charCode <=122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47 ||($event.charCode >= 48 && $event.charCode < 58)\"\n                    required=\"\" pattern=\"^[A-Za-z0-9'\\.\\-\\s]+$\" maxlength=\"30\" title=\"Input allowed only  0-9\"\n                    formControlName=\"POLICY_NO\">\n                  <label for=\"PolicyNumber\">Policy Number<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['POLICY_NO'].invalid && (angForm.controls['POLICY_NO'].dirty || angForm.controls['POLICY_NO'].touched)\"\n                class=\"alert alert-danger\">\n                <div\n                  *ngIf=\"angForm.controls['POLICY_NO'].errors?.pattern || angForm.controls['POLICY_NO'].errors?.required\">\n                  Input allowed only A-Z a-z 0-9 - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"policy_amount\" class=\"form-control\" placeholder=\" \" id=\"policy_amount\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\" required=\"\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"POLICY_AMT\">\n                  <label for=\"policy_amount\">Policy Amount<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['POLICY_AMT'].invalid && (angForm.controls['POLICY_AMT'].dirty || angForm.controls['POLICY_AMT'].touched)\"\n                class=\"alert alert-danger\">\n                <div\n                  *ngIf=\"angForm.controls['POLICY_AMT'].errors?.pattern || angForm.controls['POLICY_AMT'].errors?.required\">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"policy_nature\" class=\"form-control\" placeholder=\" \" id=\"policy_nature\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <=90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47 ||($event.charCode >= 48 && $event.charCode < 58)\"\n                    required=\"\" pattern=\"^[A-Za-z0-9'\\.\\-\\s]+$\" maxlength=\"100\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" title=\"Input allowed only  A-Z a-z 0-9  - / . (Space)\"\n                    formControlName=\"POLICY_NATURE\">\n                  <label for=\"policy_nature\">Policy Nature<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['POLICY_NATURE'].invalid && (angForm.controls['POLICY_NATURE'].dirty || angForm.controls['POLICY_NATURE'].touched)\"\n                class=\"alert alert-danger\">\n                <div\n                  *ngIf=\"angForm.controls['POLICY_NATURE'].errors?.pattern || angForm.controls['POLICY_NATURE'].errors?.required\">\n                  This field is required and Input allowed only A-Z a-z 0-9 - / . (Space)\n                </div>\n              </div>\n            </div>\n            <!-- <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"INSU_CO_CODE\" class=\"form-control\" placeholder=\" \" id=\"INSU_CO_CODE\"\n                    required=\"\" pattern=\"^[0-9]+$\" max=\"4\" title=\"Input allowed only  0-9\"\n                    formControlName=\"INSU_CO_CODE\">\n                  <label for=\"INSU_CO_CODE\">Insurance Code<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['INSU_CO_CODE'].invalid && (angForm.controls['INSU_CO_CODE'].dirty || angForm.controls['INSU_CO_CODE'].touched)\"\n                class=\"alert alert-danger\">\n                <div\n                  *ngIf=\"angForm.controls['INSU_CO_CODE'].errors?.pattern || angForm.controls['INSU_CO_CODE'].errors?.required\">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div> -->\n            <div class=\"col-sm-3\">\n              <!-- <div class=\"form-group form-primary form-static-label\">\n                  <ng-select [ngClass]=\"'ng-select'\" [options]=\"insuranceNo\" [multiple]=\"false\" \n                      placeholder=\"Insurance Code *\" required title=\"Compulsory Selection\"\n                      formControlName=\"INSU_CO_CODE\">\n                  </ng-select>\n               \n              </div> -->\n              <div class=\"form-group form-primary form-static-label\">\n                <span class=\"border-lable-flt\">\n                  <ng-select id=\"INSU_CO_CODE\" bindValue=\"value\" [(ngModel)]=\"nginsurance\"\n                    formControlName=\"INSU_CO_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Insurance Code\">\n                    <ng-option *ngFor=\"let values of insuranceNo\" [value]=\"values\">\n                      {{values.label}}</ng-option>\n                  </ng-select>\n                  <label for=\"INSU_CO_CODE\">Insurance Code<sub class=\"required\"> * </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['INSU_CO_CODE'].invalid && (angForm.controls['INSU_CO_CODE'].dirty || angForm.controls['INSU_CO_CODE'].touched)\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['INSU_CO_CODE'].errors?.required\">\n                  This field is required\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <textarea type=\"text\" name=\"ADDRESS\" class=\"form-control\" placeholder=\" \" id=\"ADDRESS\"\n                    pattern=\"^[A-Za-z0-9'\\.\\-\\s]+$\" maxlength=\"2000\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47 ||($event.charCode >= 48 && $event.charCode < 58)\"\n                    title=\"Input allowed only  A-Z a-z 0-9  - / . (Space)\" formControlName=\"ADDRESS\"></textarea>\n                  <label for=\"ADDRESS\">Address</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['ADDRESS'].invalid && (angForm.controls['ADDRESS'].dirty || angForm.controls['ADDRESS'].touched)\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['ADDRESS'].errors?.pattern\">\n                  Input allowed only A-Z a-z 0-9 - / . (Space)\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"city\" class=\"form-control\" placeholder=\" \" id=\"city\" required=\"\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47 ||($event.charCode >= 48 && $event.charCode < 58)\"\n                    pattern=\"^[A-Za-z0-9'\\.\\-\\s]+$\" maxlength=\"50\" title=\"Input allowed only  0-9\"\n                    formControlName=\"CITY\">\n                  <label for=\"city\">City<sub class=\"required\">* </sub></label>\n\n\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['CITY'].invalid && (angForm.controls['CITY'].dirty || angForm.controls['CITY'].touched)\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['CITY'].errors?.pattern || angForm.controls['CITY'].errors?.required\">\n                  Input allowed only A-Z a-z 0-9 - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"premium_amount\" class=\"form-control\" placeholder=\" \" id=\"premium_amount\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\" required=\"\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"PREMIUM\">\n                  <label for=\"premium_amount\">Premium Amount<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\"\n                *ngIf=\"angForm.controls['PREMIUM'].invalid && (angForm.controls['PREMIUM'].dirty || angForm.controls['PREMIUM'].touched)\"\n                class=\"alert alert-danger\">\n                <div\n                  *ngIf=\"angForm.controls['PREMIUM'].errors?.pattern || angForm.controls['PREMIUM'].errors?.required\">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"col-sm\">\n                <div class=\"form-group input-group\">\n                  <span class=\"border-lable-flt\">\n                    <!-- <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"premium_due_date\" required=\"\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                      max=\"31-12-9999\" formControlName=\"PREMIUM_DUE_DATE\" onfocus=\"(this.type='date')\" /> -->\n                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"POLICY_DUE_DATE\" id=\"premium_due_date\"\n                      class=\"form-control\" [(ngModel)]=\"premiumduedate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                      [minDate]=\"minDate\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                      formControlName=\"PREMIUM_DUE_DATE\"\n                      (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                      bsDatepicker>\n                    <label for=\"premium_due_date\">Premium Due Date<sub class=\"required\">*\n                      </sub></label>\n\n\n                  </span>\n\n                </div>\n                <div class=\"form-group form-primary form-static-label\"\n                  *ngIf=\"angForm.controls['PREMIUM_DUE_DATE'].invalid && (angForm.controls['PREMIUM_DUE_DATE'].dirty || angForm.controls['PREMIUM_DUE_DATE'].touched)\"\n                  class=\"alert alert-danger\">\n                  <div *ngIf=\"angForm.controls['PREMIUM_DUE_DATE'].errors?.required\">\n                    This field is required\n                  </div>\n                  <div *ngIf=\"angForm.controls['PREMIUM_DUE_DATE'].invalid\">\n                    Fill valid Date\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-sm\">\n                <!-- [disabled]=\"angForm.invalid\" -->\n                <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\"\n                  *ngIf=\"showButton\">Submit</button>\n                <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                &nbsp;\n                <button class=\"btn btn-outline-primary btn-sm\" (click)=\"addNewData()\" *ngIf=\"newbtnShow\">Cancel</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card shadow\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"table-responsive\">\n                <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                  class=\"table table-striped table-bordered table-hover compact\">\n                  <thead>\n                    <th style=\"text-transform: captalize;\">Action</th>\n                    <th style=\"text-transform: captalize;\">Submission Date</th>\n                    <th style=\"text-transform: captalize;\">Policy Due Date</th>\n                    <th style=\"text-transform: captalize;\">Policy Number</th>\n                    <th style=\"text-transform: captalize;\">Policy Amount</th>\n                    <th style=\"text-transform: captalize;\">Policy Nature</th>\n                    <th style=\"text-transform: captalize;\">Insurance Code</th>\n                    <th style=\"text-transform: captalize;\">Address</th>\n                    <th style=\"text-transform: captalize;\">City</th>\n                    <th style=\"text-transform: captalize;\">Premium Amount</th>\n                    <th style=\"text-transform: captalize;\">Premium Due Date</th>\n                  </thead>\n                  <tbody *ngIf=\"firemaster?.length != 0\">\n                    <tr *ngFor=\"let data of firemaster\">\n                      <td>\n                        <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\"\n                          placement=\"bottom\" ngbTooltip=\"Edit\"></span>\n                        &nbsp;\n                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                      </td>\n\n                      <td class=\"td_right\">{{ data.SUBMISSION_DATE }}</td>\n                      <td class=\"td_right\">{{ data.POLICY_DUE_DATE }}</td>\n                      <td class=\"td_right\">{{ data.POLICY_NO }}</td>\n                      <td class=\"td_right\">{{ data.POLICY_AMT }}</td>\n                      <td class=\"td_right\">{{ data.POLICY_NATURE }}</td>\n                      <td class=\"td_right\">{{ data.insurancemaster.NAME }}</td>\n                      <td>{{ data.ADDRESS }}</td>\n                      <td>{{ data.CITY }}</td>\n                      <td class=\"td_right\">{{ data.PREMIUM }}</td>\n                      <td class=\"td_right\">{{ data.PREMIUM_DUE_DATE }}</td>\n\n\n\n\n                    </tr>\n                  </tbody>\n                  <tbody *ngIf=\"firemaster?.length == 0\">\n                    <tr>\n                      <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                    </tr>\n                  </tbody>\n                  <!-- <tfoot #filters class=\"filters\">\n                    <tr class=\"testing\">\n                      <th class=\"testing\"></th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SUBMISSION_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"POLICY_DUE_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"POLICY_NO\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"POLICY_AMT\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"POLICY_NATURE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"INSU_CO_CODE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"ADDRESS\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"CITY\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"PREMIUM\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"PREMIUM_DUE_DATE\" />\n                      </th>\n\n                    </tr>\n                  </tfoot> -->\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { firepolicycomponentservice } from './fire-policy.component.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FirePolicyComponent } from './fire-policy.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { FirePolicyRoutingModule } from './fire-policy-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n@NgModule({\n  declarations: [FirePolicyComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    FirePolicyRoutingModule,\n    DataTablesModule\n  ],\n  providers: [firepolicycomponentservice,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [FirePolicyComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class FirePolicyModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FurnitureAndFixtureComponent } from './furniture-and-fixture.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FurnitureAndFixtureComponent,\n    data: {\n      title: 'Furniture And Fixture',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FurnitureAndFixtureRoutingModule { }\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n} from \"@angular/core\";\nimport { Subject } from \"rxjs\";\n// Creating and maintaining form fields with validation\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n// Displaying Sweet Alert\nimport Swal from \"sweetalert2\";\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\n// Service File For Handling CRUD Operation\nimport { furnitureandfixtureservice } from \"./furniture-and-fixture.service\";\n// Used to Call API\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../../../../../environments/environment\";\nimport { Router } from \"@angular/router\";\nimport * as moment from 'moment';\nimport { first } from \"rxjs/operators\";\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface FurnitureMaster {\n  id: number;\n  AC_ACNOTYPE: string;\n  AC_TYPE: number;\n  SUBMISSION_DATE: Date;\n  ARTICLE_NAME: string;\n  ARTICLE_MAKE: string;\n  AQUISITION_DATE: Date;\n  NEW_ARTICLE: boolean;\n  SUPPLIER_NAME: string;\n  PURCHASE_PRICE: number;\n  MARGIN: number;\n  REMARK: string;\n}\n\n@Component({\n  selector: \"app-furniture-and-fixture\",\n  templateUrl: \"./furniture-and-fixture.component.html\",\n  styleUrls: [\"./furniture-and-fixture.component.scss\"],\n})\nexport class FurnitureAndFixtureComponent\n  implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n  //passing data form child to parent\n  @Output() newfurnitureFixEvent = new EventEmitter<any>();\n  datemax: any;\n  newbtnShow: boolean;\n  newItemEvent(value) {\n    this.newfurnitureFixEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n  //api\n  url = environment.base_url;\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  new_article: boolean = false;\n  page: number;\n  filterData = {};\n  updateID: number; //variable for updating\n\n  // for date \n  submissiondate: any = null\n  acquistitiondate: any = null\n  maxDate: Date;\n  minDate: Date;\n\n\n  // Store data from backend\n  furnituremasters: FurnitureMaster[];\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private _furniture: furnitureandfixtureservice,\n    public router: Router\n  ) {\n\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._furniture.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.furnituremasters = data\n    })\n    this.dtTrigger.next();\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/furniture-and-fixture\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.furnituremasters = resp.data;\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n    //     {\n    //       title: \"Submission Date\",\n    //       data: \"SUBMISSION_DATE\",\n    //     },\n    //     {\n    //       title: \"Article Name\",\n    //       data: \"ARTICLE_NAME\",\n    //     },\n    //     {\n    //       title: \"Article Make.\",\n    //       data: \"ARTICLE_MAKE\",\n    //     },\n    //     {\n    //       title: \"Acquisition Date\",\n    //       data: \"AQUISITION_DATE\",\n    //     },\n    //     {\n    //       title: \"New Article\",\n    //       data: \"NEW_ARTICLE\",\n    //     },\n    //     {\n    //       title: \"Supplier Name\",\n    //       data: \"SUPPLIER_NAME\",\n    //     },\n    //     {\n    //       title: \"Purchase Price\",\n    //       data: \"PURCHASE_PRICE\",\n    //     },\n    //     {\n    //       title: \"Margin %\",\n    //       data: \"MARGIN\",\n    //     },\n    //     {\n    //       title: \"Remarks\",\n    //       data: \"REMARK\",\n    //     },\n    //   ],\n    //   dom: \"Blrtip\",\n    // };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      SUBMISSION_DATE: [\"\", [Validators.required]],\n      ARTICLE_NAME: [\"\", [Validators.pattern, Validators.required]],\n      ARTICLE_MAKE: [\"\", [Validators.pattern, Validators.required]],\n      AQUISITION_DATE: [\"\", [Validators.required]],\n      NEW_ARTICLE: [\"\", [Validators.pattern]],\n      SUPPLIER_NAME: [\"\", [Validators.pattern]],\n      PURCHASE_PRICE: [\"\", [Validators.pattern]],\n      MARGIN: [\"\", [Validators.pattern]],\n      REMARK: [\"\", [Validators.pattern]],\n    });\n  }\n\n  submit(event) {\n    let submissiondate\n    let acquistitiondate\n    event.preventDefault();\n    this.formSubmitted = true;\n\n    if (this.angForm.valid) {\n      const formVal = this.angForm.value;\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n        'SUBMISSION_DATE': (formVal.SUBMISSION_DATE == '' || formVal.SUBMISSION_DATE == 'Invalid date') ? submissiondate = '' : submissiondate = moment(formVal.SUBMISSION_DATE).format('DD/MM/YYYY'),\n\n        ARTICLE_NAME: formVal.ARTICLE_NAME,\n        ARTICLE_MAKE: formVal.ARTICLE_MAKE,\n        'AQUISITION_DATE': (formVal.AQUISITION_DATE == '' || formVal.AQUISITION_DATE == 'Invalid date') ? acquistitiondate = '' : acquistitiondate = moment(formVal.AQUISITION_DATE).format('DD/MM/YYYY'),\n\n        NEW_ARTICLE: (formVal.NEW_ARTICLE == true ? '1' : '0'),\n        SUPPLIER_NAME: formVal.SUPPLIER_NAME,\n        PURCHASE_PRICE: formVal.PURCHASE_PRICE,\n        MARGIN: formVal.MARGIN,\n        REMARK: formVal.REMARK,\n      };\n      this._furniture.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          this.formSubmitted = false;\n          let info = []\n          info.push(data.id)\n          info.push(\"furniture\")\n\n          this.newItemEvent(info);\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n    }\n\n  }\n\n  //check  if margin values are below 100\n  checkmargin(ele: any) {\n    //check  if given value  is below 100\n\n    if (ele <= 100) {\n\n    }\n    else {\n      this.angForm.controls['MARGIN'].reset()\n      Swal.fire(\"Invalid Input\", \"Please insert values below 100\", \"error\");\n    }\n  }\n\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n    let submissiondate\n    let acquistitiondate\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._furniture.getFormData(id).subscribe((data) => {\n      this.updatecheckdata = data\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n      dropdown.account = data.AC_NO;\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newfurnitureFixEvent.emit(obj1);\n\n      this.updateID = data.id;\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      this.angForm.patchValue({\n\n        'SUBMISSION_DATE': (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? submissiondate = '' : submissiondate = data.SUBMISSION_DATE,\n        ARTICLE_NAME: data.ARTICLE_NAME,\n        ARTICLE_MAKE: data.ARTICLE_MAKE,\n        'AQUISITION_DATE': (data.AQUISITION_DATE == 'Invalid date' || data.AQUISITION_DATE == '' || data.AQUISITION_DATE == null) ? acquistitiondate = '' : acquistitiondate = data.AQUISITION_DATE,\n        NEW_ARTICLE: (data.NEW_ARTICLE == '1' ? true : false),\n        SUPPLIER_NAME: data.SUPPLIER_NAME,\n        PURCHASE_PRICE: data.PURCHASE_PRICE,\n        MARGIN: data.MARGIN,\n        REMARK: data.REMARK,\n      });\n    });\n  }\n\n  updateData() {\n    let submissiondate\n    let acquistitiondate\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data['NEW_ARTICLE'] = (data.NEW_ARTICLE == true ? '1' : '0'),\n      data[\"AC_TYPE\"] = this.scheme\n    data[\"AC_NO\"] = this.Accountno\n    if (this.updatecheckdata.SUBMISSION_DATE != data.SUBMISSION_DATE) {\n      (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? (submissiondate = '', data['SUBMISSION_DATE'] = submissiondate) : (submissiondate = data.SUBMISSION_DATE, data['SUBMISSION_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.AQUISITION_DATE != data.AQUISITION_DATE) {\n      (data.AQUISITION_DATE == 'Invalid date' || data.AQUISITION_DATE == '' || data.AQUISITION_DATE == null) ? (acquistitiondate = '', data['AQUISITION_DATE'] = acquistitiondate) : (acquistitiondate = data.AQUISITION_DATE, data['AQUISITION_DATE'] = moment(acquistitiondate).format('DD/MM/YYYY'))\n    }\n    this._furniture.updateData(data).subscribe(() => {\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      // this.rerender();\n      this.resetForm();\n    });\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n  //function for delete button clicked\n  delClickHandler(id: any): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to delete Submission Date data\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._furniture.deleteData(id).subscribe((data1) => {\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n        }),\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#informationtable tfoot tr').appendTo('#informationtable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n    }\n    this.newfurnitureFixEvent.emit(obj1);\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>furniture And Fixture</h5>\n        <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n      </div>\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"subm_date\" required=\"\" max=\"{{datemax | date:'yyyy-MM-dd'}}\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\" \n                    formControlName=\"SUBMISSION_DATE\"  #autofocus /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"SUBMISSION_DATE\" id=\"subm_date\" class=\"form-control\"\n                    [(ngModel)]=\"submissiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"SUBMISSION_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n\n                  <label for=\"subm_date\">Submission Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUBMISSION_DATE'].invalid &&\n                  (angForm.controls['SUBMISSION_DATE'].dirty ||\n                    angForm.controls['SUBMISSION_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"article_name\" class=\"form-control\" placeholder=\" \" id=\"article_name\"\n                    required=\"\" pattern=\"^[A-Za-z'\\.\\-\\s]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    maxlength=\"50\" formControlName=\"ARTICLE_NAME\" />\n                  <label for=\"article_name\">Name of Article<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['ARTICLE_NAME'].invalid &&\n                  (angForm.controls['ARTICLE_NAME'].dirty ||\n                    angForm.controls['ARTICLE_NAME'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['ARTICLE_NAME'].errors?.pattern ||\n                    angForm.controls['ARTICLE_NAME'].errors?.required\n                  \">\n                  This field is required and Input allowed only A-Z a-z - / .\n                  (Space)\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm-7\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"article_make\" class=\"form-control\" placeholder=\" \" id=\"article_make\"\n                    required=\"\" pattern=\"^[A-Za-z'\\.\\-\\s]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    maxlength=\"50\" formControlName=\"ARTICLE_MAKE\" />\n                  <label for=\"article_make\">Article Make<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['ARTICLE_MAKE'].invalid &&\n                  (angForm.controls['ARTICLE_MAKE'].dirty ||\n                    angForm.controls['ARTICLE_MAKE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['ARTICLE_MAKE'].errors?.pattern ||\n                    angForm.controls['ARTICLE_MAKE'].errors?.required\n                  \">\n                  This field is required and Input allowed only A-Z a-z - / .\n                  (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"DateofAcquistition\" required=\"\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\" \n                  max=\"{{datemax | date:'yyyy-MM-dd'}}\" formControlName=\"AQUISITION_DATE\"  /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AQUISITION_DATE\" id=\"DateofAcquistition\"\n                    class=\"form-control\" [(ngModel)]=\"acquistitiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [maxDate]=\"maxDate\" [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"AQUISITION_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"DateofAcquistition\">Date of Acquistition<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['AQUISITION_DATE'].invalid &&\n                  (angForm.controls['AQUISITION_DATE'].dirty ||\n                    angForm.controls['AQUISITION_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['AQUISITION_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['AQUISITION_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <!-- <div class=\"border-checkbox-section\">\n                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                  <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\"\n                    [checked]=\"new_article == true\" formControlName=\"NEW_ARTICLE\" />\n                  <label class=\"border-checkbox-label\" for=\"checkbox1\">New Article ?<span class=\"required\">\n                    </span></label>\n                </div>\n              </div> -->\n              <div class=\"checkbox checkbox-primary\">\n                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                  <input type=\"checkbox\" class=\"border-checkbox\" id=\"checkbox1\" formControlName=\"NEW_ARTICLE\">\n                  <label class=\"border-checkbox-label\" for=\"checkbox1\">New Article?\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"name\" class=\"form-control\" placeholder=\" \" id=\"SupplierName\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\" maxlength=\"90\"\n                    formControlName=\"SUPPLIER_NAME\" />\n                  <label for=\"SupplierName\">Supplier Name</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUPPLIER_NAME'].invalid &&\n                  (angForm.controls['SUPPLIER_NAME'].dirty ||\n                    angForm.controls['SUPPLIER_NAME'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUPPLIER_NAME'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"PurchasePrice\" class=\"form-control\" placeholder=\" \" id=\"PurchasePrice\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"PURCHASE_PRICE\" />\n                  <label for=\"PurchasePrice\">Purchase Price</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['PURCHASE_PRICE'].invalid &&\n                  (angForm.controls['PURCHASE_PRICE'].dirty ||\n                    angForm.controls['PURCHASE_PRICE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['PURCHASE_PRICE'].errors?.pattern\">\n                  Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-2\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"margin\" class=\"form-control\" placeholder=\" \" id=\"margin\" #margin\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    (keyup)=\"checkmargin(margin.value)\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                    pattern=\"\\d{1,5}(\\.\\d{2})?\" formControlName=\"MARGIN\" />\n                  <label for=\"margin\">Margin %</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MARGIN'].invalid &&\n                  (angForm.controls['MARGIN'].dirty ||\n                    angForm.controls['MARGIN'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['MARGIN'].errors?.pattern\">\n                  Input allowed only . 0-9\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"label-name\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" maxlength=\"90\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    formControlName=\"REMARK\" />\n                  <label for=\"label-name\">Remarks</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['REMARK'].invalid &&\n                  (angForm.controls['REMARK'].dirty ||\n                    angForm.controls['REMARK'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['REMARK'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-3\">\n              <!--  -->\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\" *ngIf=\"showButton\">Submit</button>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n              &nbsp;\n              <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"newbtnShow\" (click)=\"addNewData()\">Cancel</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card shadow\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"table-responsive\">\n                <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                  class=\"table table-striped table-bordered table-hover compact\">\n                  <thead>\n                    <th style=\"text-transform: captalize;\">Action</th>\n                    <th style=\"text-transform: captalize;\">Submission Date</th>\n                    <th style=\"text-transform: captalize;\">Article Name</th>\n                    <th style=\"text-transform: captalize;\">Article Make</th>\n                    <th style=\"text-transform: captalize;\">Acquisition Date</th>\n                    <th style=\"text-transform: captalize;\">New Article</th>\n                    <th style=\"text-transform: captalize;\">Supplier Name</th>\n                    <th style=\"text-transform: captalize;\">Purchase Price</th>\n                    <th style=\"text-transform: captalize;\">Margin</th>\n                    <th style=\"text-transform: captalize;\">Remarks</th>\n                  </thead>\n                  <tbody *ngIf=\"furnituremasters?.length != 0\">\n                    <tr *ngFor=\"let data of furnituremasters\">\n                      <td>\n                        <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\"\n                          placement=\"bottom\" ngbTooltip=\"Edit\"></span>\n                        &nbsp;\n                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                      </td>\n\n                      <td class=\"td_right\">{{ data.SUBMISSION_DATE }}</td>\n                      <td>{{ data.ARTICLE_NAME }}</td>\n                      <td>{{ data.ARTICLE_MAKE }}</td>\n                      <td class=\"td_right\">{{ data.AQUISITION_DATE }}</td>\n                      <td>{{ data.NEW_ARTICLE == '1' ? 'Yes' : 'No' }}</td>\n                      <td>{{ data.SUPPLIER_NAME }}</td>\n                      <td class=\"td_right\">{{ data.PURCHASE_PRICE }}</td>\n                      <td class=\"td_right\">{{ data.MARGIN }}</td>\n                      <td>{{ data.REMARK }}</td>\n                    </tr>\n                  </tbody>\n                  <tbody *ngIf=\"furnituremasters?.length == 0\">\n                    <tr>\n                      <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                    </tr>\n                  </tbody>\n                  <!-- <tfoot #filters class=\"filters\">\n                    <tr class=\"testing\">\n                      <th class=\"testing\"></th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SUBMISSION_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"ARTICLE_NAME\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"ARTICLE_MAKE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"AQUISITION_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"NEW_ARTICLE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SUPPLIER_NAME\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"PURCHASE_PRICE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"MARGIN\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"REMARK\" />\n                      </th>\n                    </tr>\n                  </tfoot> -->\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { furnitureandfixtureservice } from './furniture-and-fixture.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FurnitureAndFixtureComponent } from './furniture-and-fixture.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../../../user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { FurnitureAndFixtureRoutingModule } from './furniture-and-fixture-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n@NgModule({\n  declarations: [FurnitureAndFixtureComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    FurnitureAndFixtureRoutingModule,\n    DataTablesModule\n  ],\n  providers: [furnitureandfixtureservice,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [FurnitureAndFixtureComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class FurnitureAndFixtureModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"../../../../../../environments/environment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class furnitureandfixtureservice {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/furniture-and-fixture/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/furniture-and-fixture/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/furniture-and-fixture/update\", data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/furniture-and-fixture/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/furniture-and-fixture/getdatatable\", data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GoldAndSilverComponent } from './gold-and-silver.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GoldAndSilverComponent,\n    data: {\n      title: 'Gold And Silver',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GoldAndSilverRoutingModule { }\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild, Input,\n  Output,\n  EventEmitter,\n} from \"@angular/core\";\nimport { IOption } from \"ng-select\";\nimport { Subscription } from \"rxjs/Subscription\";\nimport { GoldsilverService } from \"../../../../../shared/dropdownService/goldsilver.service\";\nimport Swal from \"sweetalert2\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { goldandsilverService } from \"./gold-and-silver.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs\";\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\nimport { environment } from \"src/environments/environment\";\nimport { Router } from \"@angular/router\";\nimport { NgSelectConfig } from '@ng-select/ng-select';\nimport * as moment from 'moment';\nimport { first } from \"rxjs/operators\";\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface GoldMaster {\n  id: number;\n  AC_ACNOTYPE: string;\n  AC_TYPE: number;\n  ITEM_TYPE: string;\n  SUBMISSION_DATE: Date;\n  BAG_RECEIPT_NO: string;\n  GOLD_BOX_NO: string;\n  MARGIN: number;\n  ARTICLE_NAME: string;\n  TOTAL_WEIGHT_GMS: number;\n  CLEAR_WEIGHT_GMS: number;\n  RATE: number;\n  TOTAL_VALUE: number;\n  REMARK: string;\n  NOMINEE: string;\n  NOMINEE_RELATION: string;\n}\n\n@Component({\n  selector: \"app-gold-and-silver\",\n  templateUrl: \"./gold-and-silver.component.html\",\n  styleUrls: [\"./gold-and-silver.component.scss\"],\n})\nexport class GoldAndSilverComponent\n  implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n  //passing data form child to parent\n  @Output() newGoldsilverEvent = new EventEmitter<any>();\n  newbtnShow: boolean;\n  newItemEvent(value) {\n    this.newGoldsilverEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n  //api\n  url = environment.base_url;\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n  simpleOption: Array<IOption> = this._golddrop.getCharacters();\n  selectedOption = \"3\";\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = \"3\";\n  timeLeft = 5;\n  private dataSub: Subscription = null;\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  ngitem: any = null\n  updateID: number; //variable for updating\n\n  // for date \n  submissiondate: any = null\n  maxDate: Date;\n  minDate: Date;\n\n  // Store data from backend\n  goldMaster: GoldMaster[];\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  page: number;\n  filterData = {};\n  clearvalue: any;\n  ratevalue: string;\n  //varaible for total value calculation\n  ClearWeight: number;\n  rate: number\n\n  constructor(\n    private fb: FormBuilder,\n    public _goldsilverService: goldandsilverService,\n    private _golddrop: GoldsilverService,\n    private http: HttpClient,\n    public router: Router,\n    private config: NgSelectConfig,) {\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._goldsilverService.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.goldMaster = data\n    })\n\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/gold-and-silver\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.goldMaster = resp.data;\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n    //     {\n    //       title: \"Item Type\",\n    //       data: \"ITEM_TYPE\",\n    //     },\n    //     {\n    //       title: \"Submission Date\",\n    //       data: \"SUBMISSION_DATE\",\n    //     },\n    //     {\n    //       title: \"Bag Receipt No.\",\n    //       data: \"BAG_RECEIPT_NO\",\n    //     },\n    //     {\n    //       title: \"Gold Box No.\",\n    //       data: \"GOLD_BOX_NO\",\n    //     },\n    //     {\n    //       title: \"Margin %\",\n    //       data: \"MARGIN\",\n    //     },\n    //     {\n    //       title: \"Article Name\",\n    //       data: \"ARTICLE_NAME\",\n    //     },\n    //     {\n    //       title: \"Total Weight\",\n    //       data: \"TOTAL_WEIGHT_GMS\",\n    //     },\n    //     {\n    //       title: \"Clear Weight\",\n    //       data: \"CLEAR_WEIGHT_GMS\",\n    //     },\n    //     {\n    //       title: \"Rate\",\n    //       data: \"RATE\",\n    //     },\n    //     {\n    //       title: \"Total Value\",\n    //       data: \"TOTAL_VALUE\",\n    //     },\n    //     {\n    //       title: \"Details\",\n    //       data: \"REMARK\",\n    //     },\n    //     {\n    //       title: \"Nominee\",\n    //       data: \"NOMINEE\",\n    //     },\n    //     {\n    //       title: \"Nominee Relation\",\n    //       data: \"NOMINEE_RELATION\",\n    //     },\n    //   ],\n    //   dom: \"Blrtip\",\n    // };\n\n    this.runTimer();\n    this.dataSub = this._golddrop.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      ITEM_TYPE: [\"\", [Validators.required]],\n      SUBMISSION_DATE: [\"\", [Validators.required]],\n      BAG_RECEIPT_NO: [\"\", [Validators.pattern, Validators.required]],\n      GOLD_BOX_NO: [\"\", [Validators.pattern, Validators.required]],\n      MARGIN: [\"\", [Validators.pattern, Validators.required]],\n      ARTICLE_NAME: [\"\", [Validators.pattern]],\n      TOTAL_WEIGHT_GMS: [\"\", [Validators.pattern, Validators.required]],\n      CLEAR_WEIGHT_GMS: [\"\", [Validators.pattern, Validators.required]],\n      RATE: [\"\", [Validators.pattern]],\n      TOTAL_VALUE: [\"\", [Validators.pattern]],\n      REMARK: [\"\", [Validators.pattern]],\n      NOMINEE: [\"\", [Validators.pattern]],\n      NOMINEE_RELATION: [\"\", [Validators.pattern]],\n    });\n  }\n\n  submit(event) {\n    let submissiondate\n    event.preventDefault();\n    this.formSubmitted = true;\n\n    if (this.angForm.valid) {\n      let totalvalueid = (document.getElementById(\"TotalAmount\") as HTMLInputElement).value;\n\n      this.angForm.patchValue({\n        TOTAL_VALUE: totalvalueid,\n\n      });\n      const formVal = this.angForm.value;\n\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n        ITEM_TYPE: formVal.ITEM_TYPE,\n        'SUBMISSION_DATE': (formVal.SUBMISSION_DATE == '' || formVal.SUBMISSION_DATE == 'Invalid date') ? submissiondate = '' : submissiondate = moment(formVal.SUBMISSION_DATE).format('DD/MM/YYYY'),\n        BAG_RECEIPT_NO: formVal.BAG_RECEIPT_NO,\n        GOLD_BOX_NO: formVal.GOLD_BOX_NO,\n        MARGIN: formVal.MARGIN,\n        ARTICLE_NAME: formVal.ARTICLE_NAME,\n        TOTAL_WEIGHT_GMS: formVal.TOTAL_WEIGHT_GMS,\n        CLEAR_WEIGHT_GMS: formVal.CLEAR_WEIGHT_GMS,\n        RATE: formVal.RATE,\n        TOTAL_VALUE: formVal.TOTAL_VALUE,\n        REMARK: formVal.REMARK,\n        NOMINEE: formVal.NOMINEE,\n        NOMINEE_RELATION: formVal.NOMINEE_RELATION,\n      };\n      this._goldsilverService.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          this.formSubmitted = false;\n          let info = []\n          info.push(data.id)\n          info.push(\"goldSilver\")\n\n          this.newItemEvent(info);\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n    }\n\n\n  }\n\n  //check  if margin values are below 100\n  checkmargin(ele: any) {\n    //check  if given value  is below 100\n\n    if (ele <= 100) {\n\n    }\n    else {\n      Swal.fire(\"Invalid Input\", \"Please insert values below 100\", \"error\");\n    }\n  }\n\n\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n    let submissiondate\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._goldsilverService.getFormData(id).subscribe((data) => {\n      this.updatecheckdata = data\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n\n      dropdown.account = data.AC_NO;\n\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newGoldsilverEvent.emit(obj1);\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      this.updateID = data.id;\n      this.angForm.patchValue({\n        AC_ACNOTYPE: data.AC_ACNOTYPE,\n        ITEM_TYPE: data.ITEM_TYPE,\n        'SUBMISSION_DATE': (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? submissiondate = '' : submissiondate = data.SUBMISSION_DATE,\n        BAG_RECEIPT_NO: data.BAG_RECEIPT_NO,\n        GOLD_BOX_NO: data.GOLD_BOX_NO,\n        MARGIN: data.MARGIN,\n        ARTICLE_NAME: data.ARTICLE_NAME,\n        TOTAL_WEIGHT_GMS: data.TOTAL_WEIGHT_GMS,\n        CLEAR_WEIGHT_GMS: data.CLEAR_WEIGHT_GMS,\n        RATE: data.RATE,\n        TOTAL_VALUE: data.TOTAL_VALUE,\n        REMARK: data.REMARK,\n        NOMINEE: data.NOMINEE,\n        NOMINEE_RELATION: data.NOMINEE_RELATION,\n      });\n    });\n  }\n\n  updateData() {\n    let submissiondate\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data[\"AC_TYPE\"] = this.scheme\n    data[\"AC_NO\"] = this.Accountno\n    if (this.updatecheckdata.SUBMISSION_DATE != data.SUBMISSION_DATE) {\n      (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? (submissiondate = '', data['SUBMISSION_DATE'] = submissiondate) : (submissiondate = data.SUBMISSION_DATE, data['SUBMISSION_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n    this._goldsilverService.updateData(data).subscribe(() => {\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      this.resetForm();\n    });\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n  //function for delete button clicked\n  delClickHandler(id: any): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to delete Item Type  data\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._goldsilverService.deleteData(id).subscribe((data1) => {\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n        }),\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#informationtable tfoot tr').appendTo('#informationtable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    this.ngitem = null\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n    }\n    this.newGoldsilverEvent.emit(obj1);\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n\n  total() {\n    // value=\"({{ ClearWeight * rate}}).toFixed(2)\"\n    let weight\n    let rate\n    if (this.angForm.controls['CLEAR_WEIGHT_GMS'].value == '' || this.angForm.controls['CLEAR_WEIGHT_GMS'].value == undefined) {\n      weight = 0\n    } else {\n      weight = this.angForm.controls['CLEAR_WEIGHT_GMS'].value\n    }\n\n    if (this.angForm.controls['RATE'].value == '' || this.angForm.controls['RATE'].value == undefined) {\n      rate = 0\n    } else {\n      rate = this.angForm.controls['RATE'].value\n    }\n    let tot = (weight * rate).toFixed(2)\n    this.angForm.patchValue({\n      TOTAL_VALUE: tot\n    })\n\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>Gold And Silver</h5>\n        <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n      </div>\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <!-- <div class=\"form-group form-primary form-static-label\">\n                <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" [multiple]=\"false\" placeholder=\"Item Type *\"\n                [ngClass]=\"{'form-submitted': formSubmitted}\"\n                  formControlName=\"ITEM_TYPE\" required=\"\">\n                </ng-select>\n              </div> -->\n              <div class=\"form-group form-primary form-static-label\">\n                <span class=\"border-lable-flt\">\n                  <ng-select id=\"ITEM_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngitem\" formControlName=\"ITEM_TYPE\"\n                    bindLabel=\"label\" title=\"Compulsory Selection\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    required placeholder=\"Item Type\">\n                    <ng-option *ngFor=\"let values of simpleOption\" [value]=\"values\">\n                      {{values.label}}</ng-option>\n                  </ng-select>\n                  <label for=\"ITEM_TYPE\">Item Type<sub class=\"required\"> * </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['ITEM_TYPE'].invalid &&\n                  (angForm.controls['ITEM_TYPE'].dirty ||\n                    angForm.controls['ITEM_TYPE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['ITEM_TYPE'].errors?.required\">\n                  This field is required\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"subm_date\" required=\"\" max=\"31-12-9999\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    formControlName=\"SUBMISSION_DATE\"/> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"SUBMISSION_DATE\" id=\"subm_date\" class=\"form-control\"\n                    [(ngModel)]=\"submissiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"SUBMISSION_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"subm_date\">Submission Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUBMISSION_DATE'].invalid &&\n                  (angForm.controls['SUBMISSION_DATE'].dirty ||\n                    angForm.controls['SUBMISSION_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"GoldBagReceiptNo\" class=\"form-control\" placeholder=\" \" id=\"GoldBagReceiptNo\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\" required=\"\" pattern=\"^[0-9]+$\"\n                    title=\"Input allowed only  0-9\" maxlength=\"25\" formControlName=\"BAG_RECEIPT_NO\" />\n                  <label for=\"GoldBagReceiptNo\">Gold Bag/Receipt Number<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['BAG_RECEIPT_NO'].invalid &&\n                  (angForm.controls['BAG_RECEIPT_NO'].dirty ||\n                    angForm.controls['BAG_RECEIPT_NO'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['BAG_RECEIPT_NO'].errors?.pattern ||\n                    angForm.controls['BAG_RECEIPT_NO'].errors?.required\n                  \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"GoldBoxNo\" class=\"form-control\" placeholder=\" \" id=\"GoldBoxNo\" required=\"\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) ||($event.charCode >= 48 && $event.charCode < 58)|| ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Z a-z 0-9 / . -]+$\" maxlength=\"20\" title=\"Input allowed only  0-9\"\n                    formControlName=\"GOLD_BOX_NO\" />\n                  <label for=\"GoldBoxNo\">Gold Box Number<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['GOLD_BOX_NO'].invalid &&\n                  (angForm.controls['GOLD_BOX_NO'].dirty ||\n                    angForm.controls['GOLD_BOX_NO'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['GOLD_BOX_NO'].errors?.pattern ||\n                    angForm.controls['GOLD_BOX_NO'].errors?.required\n                  \">\n                  This field is required and Input allowed only A-Z a-z 0-9 / - . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-2\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"margin\" class=\"form-control\" placeholder=\" \" id=\"margin\" #margin\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\"\n                    (keyup)=\"checkmargin(margin.value)\" required=\"\" pattern=\"\\d{1,5}(\\.\\d{2})?\"\n                    title=\"Input allowed only  0-9\" formControlName=\"MARGIN\" />\n                  <label for=\"margin\">Margin%<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MARGIN'].invalid &&\n                  (angForm.controls['MARGIN'].dirty ||\n                    angForm.controls['MARGIN'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['MARGIN'].errors?.pattern ||\n                    angForm.controls['MARGIN'].errors?.required\n                  \">\n                  This field is required and Input allowed only . 0-9(after decimal 2 digits)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"article_name\" class=\"form-control\" placeholder=\" \" id=\"article_name\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"102\" title=\"Input allowed only  A-Z a-z - / . (Space)\"\n                    formControlName=\"ARTICLE_NAME\" />\n                  <label for=\"article_name\">Name of Articles</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['ARTICLE_NAME'].invalid &&\n                  (angForm.controls['ARTICLE_NAME'].dirty ||\n                    angForm.controls['ARTICLE_NAME'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['ARTICLE_NAME'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"TotalWeightinGram\" class=\"form-control\" placeholder=\" \"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\"\n                    id=\"TotalWeightinGram\" required=\"\" pattern=\"\\d{1,20}(\\.\\d{3})?\" title=\"Input allowed only  0-9\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TOTAL_WEIGHT_GMS\" />\n                  <label for=\" TotalWeightinGram\">Total Weight in Gram<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['TOTAL_WEIGHT_GMS'].invalid &&\n                  (angForm.controls['TOTAL_WEIGHT_GMS'].dirty ||\n                    angForm.controls['TOTAL_WEIGHT_GMS'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['TOTAL_WEIGHT_GMS'].errors?.pattern ||\n                    angForm.controls['TOTAL_WEIGHT_GMS'].errors?.required\n                  \">\n                  This field is required and Input allowed only . 0-9(after decimal 3 digits)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"ClearWeightinGram\" class=\"form-control\" placeholder=\" \"\n                    id=\"ClearWeightinGram\" #ClearWeightinGram required=\"\" pattern=\"\\d{1,20}(\\.\\d{4})?\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" (keyup)=\"total()\"\n                    (keypress)=\" ($event.charCode>= 48 && $event.charCode\n                  < 58 )|| $event.charCode==46\" title=\"Input allowed only  0-9\" formControlName=\"CLEAR_WEIGHT_GMS\"\n                    [(ngModel)]=\"ClearWeight\" />\n                  <label for=\"ClearWeightinGram\">Clear Weight in Grams<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['CLEAR_WEIGHT_GMS'].invalid &&\n                  (angForm.controls['CLEAR_WEIGHT_GMS'].dirty ||\n                    angForm.controls['CLEAR_WEIGHT_GMS'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['CLEAR_WEIGHT_GMS'].errors?.pattern ||\n                    angForm.controls['CLEAR_WEIGHT_GMS'].errors?.required\n                  \">\n                  This field is required and Input allowed only . 0-9(after decimal 4 digits)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"RatePerGram\" class=\"form-control\" placeholder=\" \" id=\"RatePerGram\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" (keyup)=\"total()\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\" required=\"\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" [(ngModel)]=\"rate\"\n                    formControlName=\"RATE\" />\n                  <label for=\"RatePerGram\">Rate Per Gram<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['RATE'].invalid &&\n                  (angForm.controls['RATE'].dirty ||\n                    angForm.controls['RATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['RATE'].errors?.pattern ||\n                    angForm.controls['RATE'].errors?.required\n                  \">\n                  This field is required and Input allowed only . 0-9(after decimal 2 digits)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"TotalAmount\" class=\"form-control\" placeholder=\" \" id=\"TotalAmount\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"TOTAL_VALUE\"\n                     />\n                  <label for=\"TotalAmount\">Total Value</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['TOTAL_VALUE'].invalid &&\n                  (angForm.controls['TOTAL_VALUE'].dirty ||\n                    angForm.controls['TOTAL_VALUE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['TOTAL_VALUE'].errors?.pattern\">\n                  Input allowed only . 0-9\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"article_make\" class=\"form-control\" placeholder=\" \" id=\"article_make\"\n                    required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"4000\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"REMARK\" />\n                  <label for=\"article_make\">Details of Articles<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['REMARK'].invalid &&\n                  (angForm.controls['REMARK'].dirty ||\n                    angForm.controls['REMARK'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['REMARK'].errors?.pattern ||\n                    angForm.controls['REMARK'].errors?.required\n                  \">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"name\" class=\"form-control\" placeholder=\" \" id=\"Nominee\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"90\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    formControlName=\"NOMINEE\" />\n                  <label for=\"Nominee\">Nominee</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['NOMINEE'].invalid &&\n                  (angForm.controls['NOMINEE'].dirty ||\n                    angForm.controls['NOMINEE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['NOMINEE'].errors?.pattern ||\n                    angForm.controls['NOMINEE'].errors?.required\n                  \">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm-8\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"relation\" class=\"form-control\" placeholder=\" \" id=\"relation\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z - / . (Space)\" maxlength=\"30\"\n                    formControlName=\"NOMINEE_RELATION\" />\n                  <label for=\"relation\">Nominee Relation</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['NOMINEE_RELATION'].invalid &&\n                  (angForm.controls['NOMINEE_RELATION'].dirty ||\n                    angForm.controls['NOMINEE_RELATION'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['NOMINEE_RELATION'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <!-- [disabled]=\"angForm.invalid\" -->\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\" *ngIf=\"showButton\">Submit</button>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n              &nbsp;\n              <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"newbtnShow\" (click)=\"addNewData()\">Cancel</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card shadow\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"table-responsive\">\n                <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                  class=\"table table-striped table-bordered table-hover compact\">\n                  <thead>\n                    <th style=\"text-transform: captalize;\">Action</th>\n                    <th style=\"text-transform: captalize;\">Item Type</th>\n                    <th style=\"text-transform: captalize;\">Submission Date</th>\n                    <th style=\"text-transform: captalize;\">Bag Receipt Number</th>\n                    <th style=\"text-transform: captalize;\">Gold Box Number</th>\n                    <th style=\"text-transform: captalize;\">Margin</th>\n                    <th style=\"text-transform: captalize;\">Article Name</th>\n                    <th style=\"text-transform: captalize;\">Total Weight</th>\n                    <th style=\"text-transform: captalize;\">Clear Weight</th>\n                    <th style=\"text-transform: captalize;\">Rate</th>\n                    <th style=\"text-transform: captalize;\">Total Value/th>\n                    <th style=\"text-transform: captalize;\">Details </th>\n                    <th style=\"text-transform: captalize;\">Nominee </th>\n                    <th style=\"text-transform: captalize;\">Nominee Relation\n                    </th>\n                  </thead>\n                  <tbody *ngIf=\"goldMaster?.length != 0\">\n                    <tr *ngFor=\"let data of goldMaster\">\n                      <td>\n                        <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\"\n                          placement=\" bottom\" ngbTooltip=\"Edit\"></span>\n                        &nbsp;\n                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                      </td>\n\n                      <td>{{ data.ITEM_TYPE }}</td>\n                      <td class=\"td_right\">{{ data.SUBMISSION_DATE }}</td>\n                      <td class=\"td_right\">{{ data.BAG_RECEIPT_NO }}</td>\n                      <td class=\"td_right\">{{ data.GOLD_BOX_NO }}</td>\n                      <td class=\"td_right\">{{ data.MARGIN }}</td>\n                      <td>{{ data.ARTICLE_NAME }}</td>\n                      <td class=\"td_right\">{{ data.TOTAL_WEIGHT_GMS }}</td>\n                      <td class=\"td_right\">{{ data.CLEAR_WEIGHT_GMS }}</td>\n                      <td class=\"td_right\">{{ data.RATE }}</td>\n                      <td class=\"td_right\">{{ data.TOTAL_VALUE }}</td>\n                      <td class=\"td_right\">{{ data.REMARK }}</td>\n                      <td>{{ data.NOMINEE }}</td>\n                      <td>{{ data.NOMINEE_RELATION }}</td>\n                    </tr>\n                  </tbody>\n                  <tbody *ngIf=\"goldMaster?.length == 0\">\n                    <tr>\n                      <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                    </tr>\n                  </tbody>\n                  <!-- <tfoot #filters class=\"filters\">\n                    <tr class=\"testing\">\n                      <th class=\"testing\"></th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" class=\"form-control\" name=\"ITEM_TYPE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" class=\"form-control\" name=\"SUBMISSION_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" class=\"form-control\" name=\"BAG_RECEIPT_NO\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" class=\"form-control\" name=\"GOLD_BOX_NO\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" class=\"form-control\" name=\"MARGIN\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" class=\"form-control\" name=\"ARTICLE_NAME\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" class=\"form-control\" name=\"TOTAL_WEIGHT_GMS\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" class=\"form-control\" name=\"CLEAR_WEIGHT_GMS\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" class=\"form-control\" name=\"RATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" class=\"form-control\" name=\"TOTAL_VALUE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" class=\"form-control\" name=\"REMARK\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" class=\"form-control\" name=\"NOMINEE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" class=\"form-control\" name=\"NOMINEE_RELATION\" />\n                      </th>\n                    </tr>\n                  </tfoot> -->\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { goldandsilverService } from './gold-and-silver.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { GoldAndSilverComponent } from './gold-and-silver.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../../../user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { GoldAndSilverRoutingModule } from './gold-and-silver-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n@NgModule({\n  declarations: [GoldAndSilverComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    GoldAndSilverRoutingModule,\n    DataTablesModule\n  ],\n  providers: [goldandsilverService,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [GoldAndSilverComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class GoldAndSilverModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"../../../../../../environments/environment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class goldandsilverService {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/gold-and-silver/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/gold-and-silver/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/gold-and-silver/update\", data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/gold-and-silver/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/gold-and-silver/getdatatable\", data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GovtSecurityAndLicComponent } from './govt-security-and-lic.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GovtSecurityAndLicComponent,\n    data: {\n      title: 'Goverment Security And Lic',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GovtSecurityAndLicRoutingModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"../../../../../../environments/environment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class governmentsecuritycomponentservice {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n  constructor(private http: HttpClient) {\n    console.log(this.url);\n  }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http\n      .post(this.url + \"/govt-security-and-lic/insert\", data)\n      .pipe(\n        map((res) => res),\n        catchError((error) => {\n          Swal.fire(\"Please Input Proper Data !\");\n          return throwError(error);\n        })\n      );\n  }\n\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/govt-security-and-lic/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/govt-security-and-lic/update\", data);\n  }\n\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/govt-security-and-lic/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/govt-security-and-lic/getdatatable\", data);\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n} from \"@angular/core\";\nimport { Subject } from \"rxjs\";\n// Creating and maintaining form fields with validation\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n// Displaying Sweet Alert\nimport Swal from \"sweetalert2\";\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\n// Service File For Handling CRUD Operation\nimport { governmentsecuritycomponentservice } from \"../govt-security-and-lic/govt-security-and-lic.component.service\";\n// Used to Call API\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../../../../../environments/environment\";\nimport { Router } from \"@angular/router\";\nimport * as moment from 'moment';\nimport { first } from \"rxjs/operators\";\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface GovernmentMaster {\n  id: number;\n  AC_ACNOTYPE: string;\n  AC_TYPE: number;\n  AC_NO: number;\n  SECU_CODE: number;\n  SUBMISSION_DATE: Date;\n  CERT_POLICY_DATE: Date;\n  CERT_POLICY_NO: string;\n  MARGIN: number;\n  ASSURED_NAME: string;\n  PAIDUP_AMT: number;\n  SUM_ASSURED: number;\n  PREMIUM: number;\n  SURRENDER_VALUE: number;\n  PREMIUM_DUE_DATE: Date;\n  MATURE_DUE_DATE: Date;\n  NOMINEE: string;\n  REMARK: string;\n}\n@Component({\n  selector: \"app-govt-security-and-lic\",\n  templateUrl: \"./govt-security-and-lic.component.html\",\n  styleUrls: [\"./govt-security-and-lic.component.scss\"],\n})\nexport class GovtSecurityAndLicComponent\n  implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n\n  //passing data form child to parent\n  @Output() newgovtSecurityEvent = new EventEmitter<any>();\n  datemax: any;\n  newbtnShow: boolean;\n  newItemEvent(value) {\n    this.newgovtSecurityEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n\n  //api\n  url = environment.base_url;\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  governmentmasters: GovernmentMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = \"start\";\n  active = 1;\n  activeKeep = 1;\n  // Variables for search\n  filterObject: { name: string; type: string }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  // for date\n  submissiondate: any = null\n  certicatedate: any = null\n  premiumduedate: any = null\n  maturityduedate: any = null\n  maxDate: Date;\n  minDate: Date;\n\n  //filter variable\n  filterData = {};\n  setdate: string;\n  resetmaturedate: any;//reset maturedue date\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private _govsecurity: governmentsecuritycomponentservice,\n    public router: Router\n  ) {\n\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._govsecurity.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.governmentmasters = data\n    })\n    this.dtTrigger.next();\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/govt-security-and-lic\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.governmentmasters = resp.data;\n\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n    //     {\n    //       title: \"Submission Date\",\n    //       data: \"SUBMISSION_DATE\",\n    //     },\n    //     {\n    //       title: \"Cert/Policy Date\",\n    //       data: \"CERT_POLICY_DATE\",\n    //     },\n    //     {\n    //       title: \"Cert/Policy No.\",\n    //       data: \"CERT_POLICY_NO\",\n    //     },\n    //     {\n    //       title: \"Margin %\",\n    //       data: \"MARGIN\",\n    //     },\n    //     {\n    //       title: \"Assured Name\",\n    //       data: \"ASSURED_NAME\",\n    //     },\n    //     {\n    //       title: \"Paid Up Amount\",\n    //       data: \"PAIDUP_AMT\",\n    //     },\n    //     {\n    //       title: \"Sum of Assured\",\n    //       data: \"SUM_ASSURED\",\n    //     },\n    //     {\n    //       title: \"Premium Amount\",\n    //       data: \"PREMIUM\",\n    //     },\n    //     {\n    //       title: \"Surrender Value\",\n    //       data: \"SURRENDER_VALUE\",\n    //     },\n    //     {\n    //       title: \"Premium Due Date\",\n    //       data: \"PREMIUM_DUE_DATE\",\n    //     },\n    //     {\n    //       title: \"Matured Due Date\",\n    //       data: \"MATURE_DUE_DATE\",\n    //     },\n    //     {\n    //       title: \"Nominee\",\n    //       data: \"NOMINEE\",\n    //     },\n    //     {\n    //       title: \"Remarks\",\n    //       data: \"REMARK\",\n    //     },\n    //   ],\n    //   dom: \"Blrtip\",\n    // };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      SUBMISSION_DATE: [\"\", [Validators.required]],\n      CERT_POLICY_DATE: [\"\", [Validators.required]],\n      CERT_POLICY_NO: [\"\", [Validators.pattern, Validators.required]],\n      MARGIN: [\"\", [Validators.pattern, Validators.required]],\n      ASSURED_NAME: [\"\", [Validators.pattern]],\n      PAIDUP_AMT: [\"\", [Validators.pattern]],\n      SUM_ASSURED: [\"\", [Validators.pattern, Validators.required]],\n      PREMIUM: [\"\", [Validators.pattern, Validators.required]],\n      SURRENDER_VALUE: [\"\", Validators.pattern],\n      PREMIUM_DUE_DATE: [\"\", Validators.required],\n      MATURE_DUE_DATE: [\"\", Validators.required],\n      NOMINEE: [\"\", Validators.pattern],\n      REMARK: [\"\", Validators.pattern],\n    });\n  }\n\n  submit(event) {\n    let submissiondate\n    let certicatedate\n    let premiumduedate\n    let maturityduedate\n    event.preventDefault();\n    this.formSubmitted = true;\n\n    if (this.angForm.valid) {\n      const formVal = this.angForm.value;\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n        'SUBMISSION_DATE': (formVal.SUBMISSION_DATE == '' || formVal.SUBMISSION_DATE == 'Invalid date') ? submissiondate = '' : submissiondate = moment(formVal.SUBMISSION_DATE).format('DD/MM/YYYY'),\n\n        'CERT_POLICY_DATE': (formVal.CERT_POLICY_DATE == '' || formVal.CERT_POLICY_DATE == 'Invalid date') ? certicatedate = '' : certicatedate = moment(formVal.CERT_POLICY_DATE).format('DD/MM/YYYY'),\n\n        CERT_POLICY_NO: formVal.CERT_POLICY_NO,\n        MARGIN: formVal.MARGIN,\n        ASSURED_NAME: formVal.ASSURED_NAME,\n        PAIDUP_AMT: formVal.PAIDUP_AMT,\n        SUM_ASSURED: formVal.SUM_ASSURED,\n        PREMIUM: formVal.PREMIUM,\n        SURRENDER_VALUE: formVal.SURRENDER_VALUE,\n        'PREMIUM_DUE_DATE': (formVal.PREMIUM_DUE_DATE == '' || formVal.PREMIUM_DUE_DATE == 'Invalid date') ? premiumduedate = '' : premiumduedate = moment(formVal.PREMIUM_DUE_DATE).format('DD/MM/YYYY'),\n\n        'MATURE_DUE_DATE': (formVal.MATURE_DUE_DATE == '' || formVal.MATURE_DUE_DATE == 'Invalid date') ? maturityduedate = '' : maturityduedate = moment(formVal.MATURE_DUE_DATE).format('DD/MM/YYYY'),\n\n        NOMINEE: formVal.NOMINEE,\n        REMARK: formVal.REMARK,\n      };\n      this._govsecurity.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          this.formSubmitted = false;\n          let info = []\n          info.push(data.id)\n          info.push(\"govSecurity\")\n\n          this.newItemEvent(info);\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n      this.formSubmitted = false;\n    }\n\n  }\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n    let submissiondate\n    let certicatedate\n    let premiumduedate\n    let maturityduedate\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._govsecurity.getFormData(id).subscribe((data) => {\n      this.updatecheckdata = data\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n\n      dropdown.account = data.AC_NO;\n\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newgovtSecurityEvent.emit(obj1);\n      (this.updateID = data.id);\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      this.angForm.patchValue({\n\n        'SUBMISSION_DATE': (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? submissiondate = '' : submissiondate = data.SUBMISSION_DATE,\n\n        'CERT_POLICY_DATE': (data.CERT_POLICY_DATE == 'Invalid date' || data.CERT_POLICY_DATE == '' || data.CERT_POLICY_DATE == null) ? certicatedate = '' : certicatedate = data.CERT_POLICY_DATE,\n\n        CERT_POLICY_NO: data.CERT_POLICY_NO,\n        MARGIN: data.MARGIN,\n        ASSURED_NAME: data.ASSURED_NAME,\n        PAIDUP_AMT: data.PAIDUP_AMT,\n        SUM_ASSURED: data.SUM_ASSURED,\n        PREMIUM: data.PREMIUM,\n        SURRENDER_VALUE: data.SURRENDER_VALUE,\n        'PREMIUM_DUE_DATE': (data.PREMIUM_DUE_DATE == 'Invalid date' || data.PREMIUM_DUE_DATE == '' || data.PREMIUM_DUE_DATE == null) ? premiumduedate = '' : premiumduedate = data.PREMIUM_DUE_DATE,\n\n        'MATURE_DUE_DATE': (data.MATURE_DUE_DATE == 'Invalid date' || data.MATURE_DUE_DATE == '' || data.MATURE_DUE_DATE == null) ? maturityduedate = '' : maturityduedate = data.MATURE_DUE_DATE,\n\n        NOMINEE: data.NOMINEE,\n        REMARK: data.REMARK,\n      });\n    });\n  }\n\n  //check  if margin values are below 100\n  checkmargin(ele: any) {\n    //check  if given value  is below 100\n\n    if (ele <= 100) {\n\n    } else {\n      this.angForm.controls['MARGIN'].reset()\n      Swal.fire(\"Invalid Input\", \"Please insert values below 100\", \"error\");\n    }\n  }\n\n  updateData() {\n    let submissiondate\n    let certicatedate\n    let premiumduedate\n    let maturityduedate\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data[\"AC_TYPE\"] = this.scheme\n    data[\"AC_NO\"] = this.Accountno\n    if (this.updatecheckdata.SUBMISSION_DATE != data.SUBMISSION_DATE) {\n      (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? (submissiondate = '', data['SUBMISSION_DATE'] = submissiondate) : (submissiondate = data.SUBMISSION_DATE, data['SUBMISSION_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.CERT_POLICY_DATE != data.CERT_POLICY_DATE) {\n      (data.CERT_POLICY_DATE == 'Invalid date' || data.CERT_POLICY_DATE == '' || data.CERT_POLICY_DATE == null) ? (certicatedate = '', data['CERT_POLICY_DATE'] = certicatedate) : (certicatedate = data.CERT_POLICY_DATE, data['CERT_POLICY_DATE'] = moment(certicatedate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.PREMIUM_DUE_DATE != data.PREMIUM_DUE_DATE) {\n      (data.PREMIUM_DUE_DATE == 'Invalid date' || data.PREMIUM_DUE_DATE == '' || data.PREMIUM_DUE_DATE == null) ? (premiumduedate = '', data['PREMIUM_DUE_DATE'] = premiumduedate) : (premiumduedate = data.PREMIUM_DUE_DATE, data['PREMIUM_DUE_DATE'] = moment(premiumduedate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.MATURE_DUE_DATE != data.MATURE_DUE_DATE) {\n      (data.MATURE_DUE_DATE == 'Invalid date' || data.MATURE_DUE_DATE == '' || data.MATURE_DUE_DATE == null) ? (maturityduedate = '', data['MATURE_DUE_DATE'] = maturityduedate) : (maturityduedate = data.SUBMISSION_DATE, data['MATURE_DUE_DATE'] = moment(maturityduedate).format('DD/MM/YYYY'))\n    }\n    this._govsecurity.updateData(data).subscribe(() => {\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      // this.rerender();\n      this.resetForm();\n    });\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n  //function for delete button clicked\n  delClickHandler(id: any): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to delete Submission Date  data\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._govsecurity.deleteData(id).subscribe((data1) => {\n          this.governmentmasters = data1;\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n        }),\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\n      }\n    });\n  }\n  //for checking dates\n  checkdate(data: any) {\n    //fetch premium due date value\n    let premium = document.getElementById(\n      \"PREMIUM_DUE_DATE\"\n    ) as HTMLInputElement;\n    let mature = document.getElementById(\"maturity\") as HTMLInputElement;\n    this.setdate = premium.value;\n\n    if (data != \"\") {\n      if (this.setdate > data) {\n\n        Swal.fire(\n          \"Cancelled\",\n          \"Premium Due Date must be less than Mature due date\",\n          \"error\"\n        );\n\n        this.resetmaturedate = \"\";\n      } else {\n\n      }\n    }\n  }\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#informationtable tfoot tr').appendTo('#informationtable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n\n    }\n    this.newgovtSecurityEvent.emit(obj1);\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>Government Security & LIC</h5>\n        <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n      </div>\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"subm_date\" required=\"\" max=\"{{datemax | date:'yyyy-MM-dd'}}\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    formControlName=\"SUBMISSION_DATE\"  #autofocus /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"SUBMISSION_DATE\" id=\"subm_date\" class=\"form-control\"\n                    [(ngModel)]=\"submissiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"SUBMISSION_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"subm_date\">Submission Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUBMISSION_DATE'].invalid &&\n                  (angForm.controls['SUBMISSION_DATE'].dirty ||\n                    angForm.controls['SUBMISSION_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"policy_due\" required=\"\" max=\"31-12-9999\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    formControlName=\"CERT_POLICY_DATE\"  /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"CERT_POLICY_DATE\" id=\"policy_due\"\n                    class=\"form-control\" [(ngModel)]=\"certicatedate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"CERT_POLICY_DATE\" [maxDate]=\"maxDate\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"policy_due\">Certificate / Policy Date<sub class=\"required\">*\n                    </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['CERT_POLICY_DATE'].invalid &&\n                  (angForm.controls['CERT_POLICY_DATE'].dirty ||\n                    angForm.controls['CERT_POLICY_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['CERT_POLICY_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['CERT_POLICY_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"policy_no\" class=\"form-control\" placeholder=\" \" id=\"policy_no\" required=\"\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\" pattern=\"^[0-9]+$\" maxlength=\"20\"\n                    title=\"Input allowed only  0-9\" formControlName=\"CERT_POLICY_NO\" />\n                  <label for=\"policy_no\">Certificate / Policy Number<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['CERT_POLICY_NO'].invalid &&\n                  (angForm.controls['CERT_POLICY_NO'].dirty ||\n                    angForm.controls['CERT_POLICY_NO'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['CERT_POLICY_NO'].errors?.pattern ||\n                    angForm.controls['CERT_POLICY_NO'].errors?.required\n                  \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"margin\" class=\"form-control\" placeholder=\" \" id=\"margin\" required=\"\" #margin\n                    (keyup)=\"checkmargin(margin.value)\" pattern=\"\\d{1,5}(\\.\\d{2})?\" title=\"Input allowed only  0-9\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\"\n                    formControlName=\"MARGIN\" />\n                  <label for=\"margin\">Margin<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MARGIN'].invalid &&\n                  (angForm.controls['MARGIN'].dirty ||\n                    angForm.controls['MARGIN'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['MARGIN'].errors?.pattern ||\n                    angForm.controls['MARGIN'].errors?.required\n                  \">\n                  This field is required and Input allowed only . 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"name\" class=\"form-control\" placeholder=\" \" id=\"name\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" maxlength=\"90\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    formControlName=\"ASSURED_NAME\" />\n                  <label for=\"name\">Name of Assured</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['ASSURED_NAME'].invalid &&\n                  (angForm.controls['ASSURED_NAME'].dirty ||\n                    angForm.controls['ASSURED_NAME'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['ASSURED_NAME'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"PaidUpAmount\" class=\"form-control\" placeholder=\" \" id=\"PaidUpAmount\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"PAIDUP_AMT\" />\n                  <label for=\"PaidUpAmount\">Paid up Amount</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['PAIDUP_AMT'].invalid &&\n                  (angForm.controls['PAIDUP_AMT'].dirty ||\n                    angForm.controls['PAIDUP_AMT'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['PAIDUP_AMT'].errors?.pattern\">\n                  Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"SumAssured\" class=\"form-control\" placeholder=\" \" id=\"SumAssured\" required=\"\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"SUM_ASSURED\" />\n                  <label for=\"SumAssured\">Sum Assured<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n              angForm.controls['SUM_ASSURED'].invalid &&\n              (angForm.controls['SUM_ASSURED'].dirty ||\n                angForm.controls['SUM_ASSURED'].touched)\n            \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                angForm.controls['SUM_ASSURED'].errors?.pattern ||\n                angForm.controls['SUM_ASSURED'].errors?.required\n              \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n              <!-- <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUM_ASSURED'].invalid &&\n                  (angForm.controls['SUM_ASSURED'].dirty ||\n                    angForm.controls['SUM_ASSURED'].touched)\n                \" class=\"alert alert-danger\">\n\n                <div *ngIf=\"\n                    angForm.controls['SUM_ASSURED'].errors?.pattern ||\n                    angForm.controls['SumAssured'].errors?.required\n                  \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div> -->\n\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"premium_amount\" class=\"form-control\" placeholder=\" \" id=\"premium_amount\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\" required=\"\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"PREMIUM\" />\n                  <label for=\"premium_amount\">Premium Amount<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['PREMIUM'].invalid &&\n                  (angForm.controls['PREMIUM'].dirty ||\n                    angForm.controls['PREMIUM'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['PREMIUM'].errors?.pattern ||\n                    angForm.controls['PREMIUM'].errors?.required\n                  \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"SurrenderValue\" class=\"form-control\" placeholder=\" \" id=\"SurrenderValue\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"SURRENDER_VALUE\" />\n                  <label for=\"SurrenderValue\">Surrender Value</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SURRENDER_VALUE'].invalid &&\n                  (angForm.controls['SURRENDER_VALUE'].dirty ||\n                    angForm.controls['SURRENDER_VALUE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SURRENDER_VALUE'].errors?.pattern\">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"PREMIUM_DUE_DATE\" required=\"\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    max=\"{{datemax | date:'yyyy-MM-dd'}}\" name=\"PREMIUM_DUE_DATE\" formControlName=\"PREMIUM_DUE_DATE\"\n                     /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"PREMIUM_DUE_DATE\" id=\"PREMIUM_DUE_DATE\"\n                    class=\"form-control\" [(ngModel)]=\"premiumduedate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [minDate]=\"minDate\" [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"PREMIUM_DUE_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"PREMIUM_DUE_DATE\">Premium Due Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['PREMIUM_DUE_DATE'].invalid &&\n                  (angForm.controls['PREMIUM_DUE_DATE'].dirty ||\n                    angForm.controls['PREMIUM_DUE_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['PREMIUM_DUE_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['PREMIUM_DUE_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"maturity\" #maturity_date required=\"\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    [min]=\"setdate\" max=\"9999-12-31\" name=\"maturity_date\" [value]=\"resetmaturedate\"\n                    formControlName=\"MATURE_DUE_DATE\"  id=\"date\"\n                    (focusout)=\"checkdate(maturity_date.value)\" /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"MATURE_DUE_DATE\" id=\"maturity_date\"\n                    class=\"form-control\" [(ngModel)]=\"maturityduedate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [minDate]=\"minDate\" [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"MATURE_DUE_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"maturity_date\">Matured Due Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MATURE_DUE_DATE'].invalid &&\n                  (angForm.controls['MATURE_DUE_DATE'].dirty ||\n                    angForm.controls['MATURE_DUE_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['MATURE_DUE_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['MATURE_DUE_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"nominee\" class=\"form-control\" placeholder=\" \" id=\"nominee\" maxlength=\"90\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    formControlName=\"NOMINEE\" />\n                  <label for=\"nominee\">Nominee</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['NOMINEE'].invalid &&\n                  (angForm.controls['NOMINEE'].dirty ||\n                    angForm.controls['NOMINEE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['NOMINEE'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"remarks\" class=\"form-control\" placeholder=\" \" id=\"remarks\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" maxlength=\"90\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    formControlName=\"REMARK\" />\n                  <label for=\"remarks\">Remarks</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['REMARK'].invalid &&\n                  (angForm.controls['REMARK'].dirty ||\n                    angForm.controls['REMARK'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['REMARK'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <!-- [disabled]=\"angForm.invalid\" -->\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\" *ngIf=\"showButton\">Submit</button>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n              &nbsp;\n              <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"newbtnShow\" (click)=\"addNewData()\">Cancel</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card shadow\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"table-responsive\">\n                <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                  class=\"table table-striped table-bordered table-hover compact\">\n                  <thead>\n                    <th style=\"text-transform: captalize;\">Action</th>\n                    <th style=\"text-transform: captalize;\">Submission Date</th>\n                    <th style=\"text-transform: captalize;\">Certificate /Policy Date</th>\n                    <th style=\"text-transform: captalize;\">Certificate/Policy Number</th>\n                    <th style=\"text-transform: captalize;\">Margin</th>\n                    <th style=\"text-transform: captalize;\">Assured Name</th>\n                    <th style=\"text-transform: captalize;\">Paid Up Amount</th>\n                    <th style=\"text-transform: captalize;\">Sum of Assured</th>\n                    <th style=\"text-transform: captalize;\">Premium Amount</th>\n                    <th style=\"text-transform: captalize;\">Surrender Value</th>\n                    <th style=\"text-transform: captalize;\">Premium Due Date</th>\n                    <th style=\"text-transform: captalize;\">Matured Due Date </th>\n                    <th style=\"text-transform: captalize;\">Nominee </th>\n                    <th style=\"text-transform: captalize;\">Remarks </th>\n                  </thead>\n                  <tbody *ngIf=\"governmentmasters?.length != 0\">\n                    <tr *ngFor=\"let data of governmentmasters\">\n                      <td>\n                        <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\"\n                          placement=\"bottom\" ngbTooltip=\"Edit\"></span>\n                        &nbsp;\n                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                      </td>\n\n                      <td class=\"td_right\">{{ data.SUBMISSION_DATE }}</td>\n                      <td class=\"td_right\">{{ data.CERT_POLICY_DATE }}</td>\n                      <td class=\"td_right\">{{ data.CERT_POLICY_NO }}</td>\n                      <td class=\"td_right\">{{ data.MARGIN }}</td>\n                      <td>{{ data.ASSURED_NAME }}</td>\n                      <td class=\"td_right\">{{ data.PAIDUP_AMT }}</td>\n                      <td class=\"td_right\">{{ data.SUM_ASSURED }}</td>\n                      <td class=\"td_right\">{{ data.PREMIUM }}</td>\n                      <td class=\"td_right\">{{ data.SURRENDER_VALUE }}</td>\n                      <td class=\"td_right\">{{ data.PREMIUM_DUE_DATE }}</td>\n                      <td class=\"td_right\">{{ data.MATURE_DUE_DATE }}</td>\n                      <td>{{ data.NOMINEE }}</td>\n                      <td>{{ data.REMARK }}</td>\n                    </tr>\n                  </tbody>\n                  <tbody *ngIf=\"governmentmasters?.length == 0\">\n                    <tr>\n                      <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                    </tr>\n                  </tbody>\n                  <!-- <tfoot #filters class=\"filters\">\n                    <tr class=\"testing\">\n                      <th class=\"testing\"></th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SUBMISSION_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"CERT_POLICY_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"CERT_POLICY_NO\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"MARGIN\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"ASSURED_NAME\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"PAIDUP_AMT\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SUM_ASSURED\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"PREMIUM\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SURRENDER_VALUE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"PREMIUM_DUE_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"MATURE_DUE_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"NOMINEE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"REMARK\" />\n                      </th>\n                    </tr>\n                  </tfoot> -->\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { governmentsecuritycomponentservice } from './govt-security-and-lic.component.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { GovtSecurityAndLicComponent } from './govt-security-and-lic.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../../../user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { GovtSecurityAndLicRoutingModule } from './govt-security-and-lic-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n@NgModule({\n  declarations: [GovtSecurityAndLicComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    GovtSecurityAndLicRoutingModule,\n    DataTablesModule\n  ],\n  providers: [governmentsecuritycomponentservice,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [GovtSecurityAndLicComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class GovtSecurityAndLicModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LandAndBuildingsComponent } from './land-and-buildings.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LandAndBuildingsComponent,\n    data: {\n      title: 'Land And Buildings',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LandAndBuildingsRoutingModule { }\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild, Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n} from \"@angular/core\";\n// Used to Call API\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs\";\nimport Swal from \"sweetalert2\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { landandbuildingsService } from \"./land-and-buildings.service\";\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\nimport { environment } from \"src/environments/environment\";\nimport { Router } from \"@angular/router\";\nimport * as moment from 'moment';\nimport { first } from \"rxjs/operators\";\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface LandMaster {\n  id: number;\n  AC_ACNOTYPE: string;\n  AC_TYPE: number;\n  SUBMISSION_DATE: Date;\n  VALUE: number;\n  LOCATION: string;\n  AREA: number;\n  UNIT_AREA: string;\n  MARGIN: number;\n  REMARK: string;\n  CITY_SURVEY_NO: string;\n  CITY_SURVEY_DATE: Date;\n  REG_NO: string;\n}\n\n@Component({\n  selector: \"app-land-and-buildings\",\n  templateUrl: \"./land-and-buildings.component.html\",\n  styleUrls: [\"./land-and-buildings.component.scss\"],\n})\nexport class LandAndBuildingsComponent implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n  //passing data form child to parent\n  @Output() newLandBuldingEvent = new EventEmitter<any>();\n  datemax: string;\n  newbtnShow: boolean;\n  newItemEvent(value) {\n    this.newLandBuldingEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n  //api\n  url = environment.base_url;\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  isnew_equip: boolean = false;\n  new_article: boolean;\n\n  updateID: number; //variable for updating\n\n  // for date \n  submissiondate: any = null\n  citysurveydate: any = null\n  maxDate: Date;\n  minDate: Date;\n\n  // Store data from backend\n  landMasters: LandMaster[];\n\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  page: number;\n  filterData = {};\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private _land: landandbuildingsService,\n    public router: Router\n  ) {\n\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._land.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.landMasters = data\n    })\n    this.dtTrigger.next();\n\n    // Fetching Server side data\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/land-and-buildings\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.landMasters = resp.data;\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n    //     {\n    //       title: \"Submission Date\",\n    //       data: \"SUBMISSION_DATE\",\n    //     },\n    //     {\n    //       title: \"Valuation Amount\",\n    //       data: \"VALUE\",\n    //     },\n    //     {\n    //       title: \"Location.\",\n    //       data: \"LOCATION\",\n    //     },\n    //     {\n    //       title: \"Area\",\n    //       data: \"AREA\",\n    //     },\n    //     {\n    //       title: \"Unit Area\",\n    //       data: \"UNIT_AREA\",\n    //     },\n    //     {\n    //       title: \"Margin %\",\n    //       data: \"MARGIN\",\n    //     },\n    //     {\n    //       title: \"Remarks\",\n    //       data: \"REMARK\",\n    //     },\n\n    //     {\n    //       title: \"City Survey Number\",\n    //       data: \"CITY_SURVEY_NO\",\n    //     },\n    //     {\n    //       title: \"City Survey Date\",\n    //       data: \"CITY_SURVEY_DATE\",\n    //     },\n    //     {\n    //       title: \"Registration Number\",\n    //       data: \"REG_NO\",\n    //     },\n\n\n\n    //   ],\n    //   dom: \"Blrtip\",\n    // };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      SUBMISSION_DATE: [\"\", [Validators.required]],\n      VALUE: [\"\", [Validators.pattern, Validators.required]],\n      LOCATION: [\"\", [Validators.pattern, Validators.required]],\n      AREA: [\"\", [Validators.pattern, Validators.required]],\n      UNIT_AREA: [\"\", [Validators.pattern, Validators.required]],\n      MARGIN: [\"\", [Validators.pattern]],\n      REMARK: [\"\", [Validators.pattern]],\n      CITY_SURVEY_NO: [\"\", [Validators.pattern, Validators.required]],\n      CITY_SURVEY_DATE: [\"\", [Validators.required]],\n      REG_NO: [\"\", [Validators.pattern, Validators.required]],\n    });\n  }\n\n  submit(event) {\n    let submissiondate\n    let citysurveydate\n    event.preventDefault();\n    this.formSubmitted = true;\n\n    if (this.angForm.valid) {\n      const formVal = this.angForm.value;\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n        'SUBMISSION_DATE': (formVal.SUBMISSION_DATE == '' || formVal.SUBMISSION_DATE == 'Invalid date') ? submissiondate = '' : submissiondate = moment(formVal.SUBMISSION_DATE).format('DD/MM/YYYY'),\n        VALUE: formVal.VALUE,\n        LOCATION: formVal.LOCATION,\n        AREA: formVal.AREA,\n        UNIT_AREA: formVal.UNIT_AREA,\n        MARGIN: formVal.MARGIN,\n        REMARK: formVal.REMARK,\n        CITY_SURVEY_NO: formVal.CITY_SURVEY_NO,\n        'CITY_SURVEY_DATE': (formVal.CITY_SURVEY_DATE == '' || formVal.CITY_SURVEY_DATE == 'Invalid date') ? citysurveydate = '' : citysurveydate = moment(formVal.CITY_SURVEY_DATE).format('DD/MM/YYYY'),\n        REG_NO: formVal.REG_NO,\n      };\n      this._land.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          this.formSubmitted = false;\n          let info = []\n          info.push(data.id)\n          info.push(\"landBuilding\")\n\n          this.newItemEvent(info);\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n    }\n  }\n\n  //check  if margin values are below 100\n  checkmargin(ele: any) {\n    //check  if given value  is below 100\n\n    if (ele <= 100) {\n    }\n    else {\n      this.angForm.controls['MARGIN'].reset()\n      Swal.fire(\"Invalid Input\", \"Please insert values below 100\", \"error\");\n    }\n  }\n\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n    let submissiondate\n    let citysurveydate\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._land.getFormData(id).subscribe((data) => {\n      this.updatecheckdata = data\n      this.updateID = data.id;\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n\n      dropdown.account = data.AC_NO;\n\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newLandBuldingEvent.emit(obj1);\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      this.angForm.patchValue({\n\n        'SUBMISSION_DATE': (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? submissiondate = '' : submissiondate = data.SUBMISSION_DATE,\n\n        VALUE: data.VALUE,\n        LOCATION: data.LOCATION,\n        AREA: data.AREA,\n        UNIT_AREA: data.UNIT_AREA,\n        MARGIN: data.MARGIN,\n        REMARK: data.REMARK,\n        CITY_SURVEY_NO: data.CITY_SURVEY_NO,\n        'CITY_SURVEY_DATE': (data.CITY_SURVEY_DATE == 'Invalid date' || data.CITY_SURVEY_DATE == '' || data.CITY_SURVEY_DATE == null) ? citysurveydate = '' : citysurveydate = data.CITY_SURVEY_DATE,\n\n        REG_NO: data.REG_NO,\n      });\n    });\n  }\n\n  updateData() {\n    let submissiondate\n    let citysurveydate\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data[\"AC_TYPE\"] = this.scheme\n    data[\"AC_NO\"] = this.Accountno\n    if (this.updatecheckdata.SUBMISSION_DATE != data.SUBMISSION_DATE) {\n      (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? (submissiondate = '', data['SUBMISSION_DATE'] = submissiondate) : (submissiondate = data.SUBMISSION_DATE, data['SUBMISSION_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.CITY_SURVEY_DATE != data.CITY_SURVEY_DATE) {\n      (data.CITY_SURVEY_DATE == 'Invalid date' || data.CITY_SURVEY_DATE == '' || data.CITY_SURVEY_DATE == null) ? (citysurveydate = '', data['CITY_SURVEY_DATE'] = citysurveydate) : (citysurveydate = data.SUBMISSION_DATE, data['CITY_SURVEY_DATE'] = moment(citysurveydate).format('DD/MM/YYYY'))\n    }\n    this._land.updateData(data).subscribe(() => {\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      // this.rerender();\n      this.resetForm();\n    });\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n  //function for delete button clicked\n  delClickHandler(id: any): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to delete Submission Date  data\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._land.deleteData(id).subscribe((data1) => {\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n        }),\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#informationtable tfoot tr').appendTo('#informationtable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n\n    }\n    this.newLandBuldingEvent.emit(obj1);\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>Land And Buildings</h5>\n        <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n      </div>\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"subm_date\" required=\"\"\n                    max=\"{{datemax | date:'yyyy-MM-dd'}}\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    formControlName=\"SUBMISSION_DATE\" #autofocus /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"SUBMISSION_DATE\" id=\"subm_date\" class=\"form-control\"\n                    [(ngModel)]=\"submissiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"SUBMISSION_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"subm_date\">Submission Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUBMISSION_DATE'].invalid &&\n                  (angForm.controls['SUBMISSION_DATE'].dirty ||\n                    angForm.controls['SUBMISSION_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"ValuationAmount\" class=\"form-control\" placeholder=\" \" id=\"ValuationAmount\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" pattern=\"\\d{1,20}(\\.\\d{2})?\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    title=\"Input allowed only  0-9\" formControlName=\"VALUE\" />\n                  <label for=\"ValuationAmount\">Valuation Amount<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['VALUE'].invalid &&\n                  (angForm.controls['VALUE'].dirty ||\n                    angForm.controls['VALUE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['VALUE'].errors?.pattern ||\n                    angForm.controls['VALUE'].errors?.required\n                  \">\n                  This field is required and Input allowed only . 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"Location\" class=\"form-control\" placeholder=\" \" id=\"Location\" required=\"\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    maxlength=\"50\" formControlName=\"LOCATION\" />\n                  <label for=\"Location\">Location<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['LOCATION'].invalid &&\n                  (angForm.controls['LOCATION'].dirty ||\n                    angForm.controls['LOCATION'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['LOCATION'].errors?.pattern ||\n                    angForm.controls['LOCATION'].errors?.required\n                  \">\n                  This field is required and Input allowed only A-Z a-z - / .\n                  (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"area\" class=\"form-control\" placeholder=\" \" id=\"area\" required=\"\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" pattern=\"\\d{1,20}(\\.\\d{2})?\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    title=\"Input allowed only 0-9 \" formControlName=\"AREA\" />\n                  <label for=\"area\">Area<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['AREA'].invalid &&\n                  (angForm.controls['AREA'].dirty ||\n                    angForm.controls['AREA'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['AREA'].errors?.pattern ||\n                    angForm.controls['AREA'].errors?.required\n                  \">\n                  This field is required and Input allowed only . 0-9\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"unit_area\" class=\"form-control\" placeholder=\" \" id=\"unit_area\" required=\"\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" pattern=\"^[0-9]+$\" maxlength=\"30\"\n                    title=\"Input allowed only 0-9\" formControlName=\"UNIT_AREA\" />\n                  <label for=\"unit_area\">Unit of Area<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['UNIT_AREA'].invalid &&\n                  (angForm.controls['UNIT_AREA'].dirty ||\n                    angForm.controls['UNIT_AREA'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['UNIT_AREA'].errors?.pattern ||\n                    angForm.controls['UNIT_AREA'].errors?.required\n                  \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-2\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"margin\" class=\"form-control\" placeholder=\" \" id=\"label-name\" #margin\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\"\n                    (keyup)=\"checkmargin(margin.value)\" pattern=\"\\d{1,5}(\\.\\d{2})?\" title=\"Input allowed only  0-9\"\n                    formControlName=\"MARGIN\" />\n                  <label for=\"label-name\">Margin </label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MARGIN'].invalid &&\n                  (angForm.controls['MARGIN'].dirty ||\n                    angForm.controls['MARGIN'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['MARGIN'].errors?.pattern\">\n                  Input allowed only . 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"CitySurveyNumber\" class=\"form-control\" placeholder=\" \" id=\"CitySurveyNumber\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" required=\"\" pattern=\"^[0-9]+$\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\" title=\"Input allowed only 0-9\"\n                    maxlength=\"20\" formControlName=\"CITY_SURVEY_NO\" />\n                  <label for=\"CitySurveyNumber\">City Survey Number<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['CITY_SURVEY_NO'].invalid &&\n                  (angForm.controls['CITY_SURVEY_NO'].dirty ||\n                    angForm.controls['CITY_SURVEY_NO'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['CITY_SURVEY_NO'].errors?.pattern ||\n                    angForm.controls['CITY_SURVEY_NO'].errors?.required\n                  \">\n                  This field is required Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"CitySurveyDate\" required=\"\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" max=\"{{datemax | date:'yyyy-MM-dd'}}\"\n                    name=\"CitySurveyDate\" formControlName=\"CITY_SURVEY_DATE\" /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"CITY_SURVEY_DATE\" id=\"CitySurveyDate\"\n                    class=\"form-control\" [(ngModel)]=\"citysurveydate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [maxDate]=\"maxDate\" [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"CITY_SURVEY_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"CitySurveyDate\">City Survey Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['CITY_SURVEY_DATE'].invalid &&\n                  (angForm.controls['CITY_SURVEY_DATE'].dirty ||\n                    angForm.controls['CITY_SURVEY_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['CITY_SURVEY_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['CITY_SURVEY_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"RegistrationNumber\" class=\"form-control\" placeholder=\" \"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47||($event.charCode >= 48 && $event.charCode < 58)\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" id=\"RegistrationNumber\" required=\"\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s 0-9]+$\" title=\"Input allowed only 0-9\" maxlength=\"20\"\n                    formControlName=\"REG_NO\" />\n                  <label for=\"RegistrationNumber\">Registration Number<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['REG_NO'].invalid &&\n                  (angForm.controls['REG_NO'].dirty ||\n                    angForm.controls['REG_NO'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['REG_NO'].errors?.pattern ||\n                    angForm.controls['REG_NO'].errors?.required\n                  \">\n                  This field is required and Input allowed only A-Z a-z - / .(Space) 0-9\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-sm-6\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"remarks\" class=\"form-control\" placeholder=\" \" id=\"remarks\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" maxlength=\"90\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    formControlName=\"REMARK\" />\n                  <label for=\"remarks\">Remarks</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['REMARK'].invalid &&\n                  (angForm.controls['REMARK'].dirty ||\n                    angForm.controls['REMARK'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['REMARK'].errors?.pattern ||\n                    angForm.controls['REMARK'].errors?.required\n                  \">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-sm\">\n\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\" *ngIf=\"showButton\">Submit</button>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n              &nbsp;\n              <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"newbtnShow\" (click)=\"addNewData()\">Cancel</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card shadow\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"table-responsive\">\n                <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                  class=\"table table-striped table-bordered table-hover compact\">\n                  <thead>\n                    <th style=\"text-transform: captalize;\">Action</th>\n                    <th style=\"text-transform: captalize;\">Submission Date</th>\n                    <th style=\"text-transform: captalize;\">Valuation Amount</th>\n                    <th style=\"text-transform: captalize;\">Location</th>\n                    <th style=\"text-transform: captalize;\">Area</th>\n                    <th style=\"text-transform: captalize;\">Unit Area</th>\n                    <th style=\"text-transform: captalize;\">Margin</th>\n                    <th style=\"text-transform: captalize;\">Remarks</th>\n                    <th style=\"text-transform: captalize;\">City Survey Number</th>\n                    <th style=\"text-transform: captalize;\">City Survey Date</th>\n                    <th style=\"text-transform: captalize;\">Registration Number</th>\n                  </thead>\n                  <tbody *ngIf=\"landMasters?.length != 0\">\n                    <tr *ngFor=\"let data of landMasters\">\n                      <td>\n                        <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\"\n                          placement=\"bottom\" ngbTooltip=\"Edit\"></span>\n                        &nbsp;\n                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                      </td>\n\n                      <td class=\"td_right\">{{ data.SUBMISSION_DATE }}</td>\n                      <td class=\"td_right\">{{ data.VALUE }}</td>\n                      <td>{{ data.LOCATION }}</td>\n                      <td>{{ data.AREA }}</td>\n                      <td class=\"td_right\">{{ data.UNIT_AREA }}</td>\n                      <td class=\"td_right\">{{ data.MARGIN }}</td>\n                      <td>{{ data.REMARK }}</td>\n                      <td class=\"td_right\">{{ data.CITY_SURVEY_NO }}</td>\n                      <td class=\"td_right\">{{ data.CITY_SURVEY_DATE }}</td>\n                      <td class=\"td_right\">{{ data.REG_NO }}</td>\n                    </tr>\n                  </tbody>\n                  <tbody *ngIf=\"landMasters?.length == 0\">\n                    <tr>\n                      <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                    </tr>\n                  </tbody>\n                  <!-- <tfoot #filters class=\"filters\">\n                    <tr class=\"testing\">\n                      <th class=\"testing\"></th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" \n                          name=\"SUBMISSION_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"VALUE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"LOCATION\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"AREA\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"UNIT_AREA\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"MARGIN\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"REMARK\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"CITY_SURVEY_NO\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"CITY_SURVEY_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"REG_NO\" />\n                      </th>\n                    </tr>\n                  </tfoot> -->\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { landandbuildingsService } from './land-and-buildings.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { LandAndBuildingsComponent } from './land-and-buildings.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../../../user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { LandAndBuildingsRoutingModule } from './land-and-buildings-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n@NgModule({\n  declarations: [LandAndBuildingsComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    LandAndBuildingsRoutingModule,\n    DataTablesModule\n  ],\n  providers: [landandbuildingsService,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [LandAndBuildingsComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class LandAndBuildingsModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"../../../../../../environments/environment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class landandbuildingsService {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/land-and-buildings/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/land-and-buildings/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/land-and-buildings/update\", data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/land-and-buildings/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/land-and-buildings/getdatatable\", data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MarketSharesComponent } from './market-shares.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MarketSharesComponent,\n    data: {\n      title: 'Market Shares',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MarketSharesRoutingModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"../../../../../../environments/environment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class marketsharesomponentservice {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/market-shares/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/market-shares/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/market-shares/update\", data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/market-shares/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/market-shares/getdatatable\", data);\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild, Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n} from \"@angular/core\";\n// Used to Call API\nimport { HttpClient } from \"@angular/common/http\";\nimport Swal from \"sweetalert2\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { marketsharesomponentservice } from \"./market-shares.component.service\";\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\nimport { Subject } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport { Router } from \"@angular/router\";\nimport * as moment from 'moment';\nimport { first } from \"rxjs/operators\";\n\n\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface MarketMaster {\n  id: number;\n  AC_ACNOTYPE: string;\n  AC_TYPE: number;\n  AC_NO: number;\n  SECU_CODE: number;\n  BRANCH_CODE: number;\n  SUBMISSION_DATE: Date;\n  CO_CODE: number;\n  CO_NAME: string;\n  MARKET_VALUE: number;\n  MARGIN: number;\n  SHARES: number;\n  UPDATED_BY: string;\n  RELEASE_DATE: Date;\n  RELEASE_BY: string;\n  SECURITY_TYPE: string;\n}\n\n@Component({\n  selector: \"app-market-shares\",\n  templateUrl: \"./market-shares.component.html\",\n  styleUrls: [\"./market-shares.component.scss\"],\n})\nexport class MarketSharesComponent implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n  //passing data form child to parent\n  @Output() newmarketShareEvent = new EventEmitter<any>();\n  datemax: string;\n  newbtnShow: boolean;\n  newItemEvent(value) {\n    this.newmarketShareEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n  //api \n  url = environment.base_url;\n  //autofocus\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\n\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  marketmaster: MarketMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n\n  //  variables for date\n  submissiondate: any = null\n  releaseddate: any = null\n  maxDate: Date;\n  minDate: Date;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private _marketservice: marketsharesomponentservice,\n    private http: HttpClient,\n    public router: Router\n  ) {\n\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._marketservice.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.marketmaster = data\n    })\n    this.dtTrigger.next();\n    // Fetching Server side data\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/market-shares\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.marketmaster = resp.data;\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n\n    //     {\n    //       title: \"Company Code\",\n    //       data: \"CO_CODE\",\n    //     },\n    //     {\n    //       title: \"Company Name \",\n    //       data: \"CO_NAME\",\n    //     },\n    //     {\n    //       title: \"Market Value\",\n    //       data: \"MARKET_VALUE\",\n    //     },\n    //     {\n    //       title: \"Margin %\",\n    //       data: \"MARGIN\",\n    //     },\n    //     {\n    //       title: \"No. of Shares\",\n    //       data: \"SHARES\",\n    //     },\n    //     {\n    //       title: \"Subm. Date\",\n    //       data: \"SUBMISSION_DATE\",\n    //     },\n    //     {\n    //       title: \"Updated By\",\n    //       data: \"UPDATED_BY\",\n    //     },\n    //     {\n    //       title: \"Release Date\",\n    //       data: \"RELEASE_DATE\",\n    //     },\n    //     {\n    //       title: \"Release By\",\n    //       data: \"RELEASE_BY\",\n    //     },\n    //   ],\n    //   dom: \"Blrtip\",\n\n\n    // };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      SUBMISSION_DATE: [\"\", [Validators.required]],\n      CO_CODE: [\"\", [Validators.pattern, Validators.required]],\n      CO_NAME: [\"\", [Validators.pattern, Validators.required]],\n      MARKET_VALUE: [\"\", [Validators.pattern, Validators.required]],\n      MARGIN: [\"\", [Validators.pattern, Validators.required]],\n      SHARES: [\"\", [Validators.pattern]],\n      UPDATED_BY: [\"\", [Validators.pattern, Validators.required]],\n      RELEASE_DATE: [\"\", [Validators.required]],\n      RELEASE_BY: [\"\", [Validators.pattern, Validators.required]],\n    });\n  }\n  submit(event) {\n    let submissiondate\n    let releaseddate\n    event.preventDefault();\n    if (this.angForm.valid) {\n\n\n      const formVal = this.angForm.value;\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n        'SUBMISSION_DATE': (formVal.SUBMISSION_DATE == '' || formVal.SUBMISSION_DATE == 'Invalid date') ? submissiondate = '' : submissiondate = moment(formVal.SUBMISSION_DATE).format('DD/MM/YYYY'),\n\n        CO_CODE: formVal.CO_CODE,\n        CO_NAME: formVal.CO_NAME,\n        MARKET_VALUE: formVal.MARKET_VALUE,\n        MARGIN: formVal.MARGIN,\n        SHARES: formVal.SHARES,\n        UPDATED_BY: formVal.UPDATED_BY,\n        'RELEASE_DATE': (formVal.RELEASE_DATE == '' || formVal.RELEASE_DATE == 'Invalid date') ? releaseddate = '' : releaseddate = moment(formVal.RELEASE_DATE).format('DD/MM/YYYY'),\n\n        RELEASE_BY: formVal.RELEASE_BY,\n      };\n      this._marketservice.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          this.formSubmitted = false;\n          let info = []\n          info.push(data.id)\n          info.push(\"marketShare\")\n\n          this.newItemEvent(info);\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n\n    }\n  }\n\n\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n    let submissiondate\n    let releaseddate\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._marketservice.getFormData(id).subscribe((data) => {\n      this.updatecheckdata = data\n\n      //sending values to parent\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n      dropdown.account = data.AC_NO;\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newmarketShareEvent.emit(obj1);\n      this.updateID = data.id;\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      this.angForm.patchValue({\n\n        'SUBMISSION_DATE': (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? submissiondate = '' : submissiondate = data.SUBMISSION_DATE,\n\n        CO_CODE: data.CO_CODE,\n        CO_NAME: data.CO_NAME,\n        MARKET_VALUE: data.MARKET_VALUE,\n        MARGIN: data.MARGIN,\n        SHARES: data.SHARES,\n        UPDATED_BY: data.UPDATED_BY,\n        'RELEASE_DATE': (data.RELEASE_DATE == 'Invalid date' || data.RELEASE_DATE == '' || data.RELEASE_DATE == null) ? releaseddate = '' : releaseddate = data.RELEASE_DATE,\n\n        RELEASE_BY: data.RELEASE_BY,\n      });\n    });\n  }\n  //check  if margin values are below 100\n  checkmargin(ele: any) {\n\n\n    if (ele <= 100) {\n    }\n    else {\n      this.angForm.controls['MARGIN'].reset()\n      Swal.fire(\"Invalid Input\", \"Please Insert Values Below 100\", \"error\");\n    }\n  }\n\n  updateData() {\n    let submissiondate\n    let releaseddate\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data[\"AC_TYPE\"] = this.scheme\n    data[\"AC_NO\"] = this.Accountno\n    if (this.updatecheckdata.SUBMISSION_DATE != data.SUBMISSION_DATE) {\n      (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? (submissiondate = '', data['SUBMISSION_DATE'] = submissiondate) : (submissiondate = data.SUBMISSION_DATE, data['SUBMISSION_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.RELEASE_DATE != data.RELEASE_DATE) {\n      (data.RELEASE_DATE == 'Invalid date' || data.RELEASE_DATE == '' || data.RELEASE_DATE == null) ? (releaseddate = '', data['RELEASE_DATE'] = releaseddate) : (releaseddate = data.RELEASE_DATE, data['RELEASE_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n    this._marketservice.updateData(data).subscribe(() => {\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      // this.rerender();\n      this.resetForm();\n    });\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n  //function for delete button clicked\n  delClickHandler(id: any): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do You Want To Delete Company Code Data\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._marketservice.deleteData(id).subscribe((data1) => {\n          Swal.fire(\"Deleted!\", \"Your Data Has Been Deleted.\", \"success\");\n        }),\n          Swal.fire(\"Deleted!\", \"Your Data Has Been Deleted.\", \"success\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your Data Is Safe.\", \"error\");\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#informationtable tfoot tr').appendTo('#informationtable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n    }\n    this.newmarketShareEvent.emit(obj1);\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>Market Shares</h5>\n        <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n      </div>\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"company_code\" class=\"form-control\" placeholder=\" \" id=\"company_code\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\" required=\"\" pattern=\"^[0-9]+$\"\n                    title=\"Input allowed only  0-9\" maxlength=\"4\" formControlName=\"CO_CODE\" #autofocus />\n                  <label for=\"company_code\">Company Code<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['CO_CODE'].invalid &&\n                  (angForm.controls['CO_CODE'].dirty ||\n                    angForm.controls['CO_CODE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['CO_CODE'].errors?.pattern ||\n                    angForm.controls['CO_CODE'].errors?.required\">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"company_name\" class=\"form-control\" placeholder=\" \" id=\"company_name\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" required=\"\" onfocus=\"isDisplay=true\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    title=\"Input allowed only  A-Z a-z  - / . (Space)\" maxlength=\"100\" formControlName=\"CO_NAME\" />\n                  <label for=\"company_name\">Company Name<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['CO_NAME'].invalid &&\n                  (angForm.controls['CO_NAME'].dirty ||\n                    angForm.controls['CO_NAME'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['CO_NAME'].errors?.pattern ||\n                    angForm.controls['CO_NAME'].errors?.required\n                  \">\n                  This field is required and Input allowed only A-Z a-z - / .\n                  (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"market_value\" class=\"form-control\" placeholder=\" \" id=\"market_value\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\" required=\"\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" maxlength=\"20\"\n                    formControlName=\"MARKET_VALUE\" />\n                  <label for=\"market_value\">Market Value<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MARKET_VALUE'].invalid &&\n                  (angForm.controls['MARKET_VALUE'].dirty ||\n                    angForm.controls['MARKET_VALUE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['MARKET_VALUE'].errors?.pattern ||\n                    angForm.controls['MARKET_VALUE'].errors?.required\n                  \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"margin\" class=\"form-control\" placeholder=\" \" id=\"margin\" #margin\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    (keyup)=\"checkmargin(margin.value)\" required=\"\" pattern=\"\\d{1,5}(\\.\\d{2})?\"\n                    title=\"Input allowed only  0-9\" formControlName=\"MARGIN\" />\n                  <label for=\"margin\">Margin %<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MARGIN'].invalid &&\n                  (angForm.controls['MARGIN'].dirty ||\n                    angForm.controls['MARGIN'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['MARGIN'].errors?.pattern ||\n                    angForm.controls['MARGIN'].errors?.required\n                  \">\n                  This field is required and Input allowed only . 0-9\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"no_of_shares\" class=\"form-control\" placeholder=\" \" id=\"no_of_shares\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\" pattern=\"^[0-9]+$\" maxlength=\"5\"\n                    title=\"Input allowed only  0-9\" formControlName=\"SHARES\" />\n                  <label for=\"no_of_shares\">Number of Shares</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SHARES'].invalid &&\n                  (angForm.controls['SHARES'].dirty ||\n                    angForm.controls['SHARES'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SHARES'].errors?.pattern\">\n                  Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"subm_date\" required=\"\" max=\"31-12-9999\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    formControlName=\"SUBMISSION_DATE\"  /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"SUBMISSION_DATE\" id=\"subm_date\" class=\"form-control\"\n                    [(ngModel)]=\"submissiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"SUBMISSION_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"subm_date\">Submission Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUBMISSION_DATE'].invalid &&\n                  (angForm.controls['SUBMISSION_DATE'].dirty ||\n                    angForm.controls['SUBMISSION_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid\">\n                  Invalid Date\n                </div>\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"updated_by\" class=\"form-control\" placeholder=\" \" id=\"label-name\" required=\"\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <=90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" maxlength=\"100\" title=\"Input allowed only  A-Z a-z - / . (Space)\"\n                    formControlName=\"UPDATED_BY\" />\n                  <label for=\"label-name\">Updated By<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['UPDATED_BY'].invalid &&\n                  (angForm.controls['UPDATED_BY'].dirty ||\n                    angForm.controls['UPDATED_BY'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['UPDATED_BY'].errors?.pattern ||\n                    angForm.controls['UPDATED_BY'].errors?.required\n                  \">\n                  This field is required and Input allowed only A-Z a-z - / .\n                  (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"released_on\" required=\"\" max=\"31-12-9999\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    formControlName=\"RELEASE_DATE\"  id=\"date\" /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"RELEASE_DATE\" id=\"released_on\" class=\"form-control\"\n                    [(ngModel)]=\"releaseddate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"minDate\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"RELEASE_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"released_on\">Released On Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['RELEASE_DATE'].invalid &&\n                  (angForm.controls['RELEASE_DATE'].dirty ||\n                    angForm.controls['RELEASE_DATE'].touched   )\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['RELEASE_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['RELEASE_DATE'].invalid\">\n                  Invalid Date\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"released_by\" class=\"form-control\" placeholder=\" \" id=\"released_by\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    required=\"\" pattern=\"^[A-Za-z'\\.\\-\\s]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    maxlength=\"100\" formControlName=\"RELEASE_BY\" />\n                  <label for=\"released_by\">Released By<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['RELEASE_BY'].invalid &&\n                  (angForm.controls['RELEASE_BY'].dirty ||\n                    angForm.controls['RELEASE_BY'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['RELEASE_BY'].errors?.pattern ||\n                    angForm.controls['RELEASE_BY'].errors?.required\n                  \">\n                  This field is required and Input allowed only A-Z a-z - / .\n                  (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <!-- [disabled]=\"angForm.invalid\" -->\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\" *ngIf=\"showButton\">Submit</button>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n              &nbsp;\n              <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"newbtnShow\" (click)=\"addNewData()\">Cancel</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card shadow\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"table-responsive\">\n                <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                  class=\"table table-striped table-bordered table-hover compact\">\n                  <thead>\n                    <th style=\"text-transform: captalize;\">Action</th>\n                    <th style=\"text-transform: captalize;\">Company Code</th>\n                    <th style=\"text-transform: captalize;\">Company Name</th>\n                    <th style=\"text-transform: captalize;\">Market Value</th>\n                    <th style=\"text-transform: captalize;\">Margin</th>\n                    <th style=\"text-transform: captalize;\">Number of Shares</th>\n                    <th style=\"text-transform: captalize;\">Submission Date</th>\n                    <th style=\"text-transform: captalize;\">Updated By</th>\n                    <th style=\"text-transform: captalize;\">Release Date</th>\n                    <th style=\"text-transform: captalize;\">Release By</th>\n                  </thead>\n                  <tbody *ngIf=\"marketmaster?.length != 0\">\n                    <tr *ngFor=\"let data of marketmaster\">\n                      <td>\n                        <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\"\n                          placement=\"bottom\" ngbTooltip=\"Edit\"></span>\n\n                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                      </td>\n                      <td class=\"td_right\">{{ data.CO_CODE }}</td>\n                      <td>{{ data.CO_NAME }}</td>\n                      <td class=\"td_right\">{{ data.MARKET_VALUE }}</td>\n                      <td class=\"td_right\">{{ data.MARGIN }}</td>\n                      <td class=\"td_right\">{{ data.SHARES }}</td>\n                      <td class=\"td_right\">{{ data.SUBMISSION_DATE }}</td>\n                      <td>{{ data.UPDATED_BY }}</td>\n                      <td class=\"td_right\">{{ data.RELEASE_DATE }}</td>\n                      <td>{{ data.RELEASE_BY }}</td>\n                    </tr>\n                  </tbody>\n                  <tbody *ngIf=\"marketmaster?.length == 0\">\n                    <tr>\n                      <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                    </tr>\n                  </tbody>\n                  <!-- <tfoot #filters class=\"filters\">\n                    <tr class=\"testing\">\n                      <th class=\"testing\"></th>\n                      \n                      <th><input type=\"text\" class=\"form-control\" name=\"CO_CODE\" /></th>\n                      <th> <input type=\"text\" class=\"form-control\" name=\"CO_NAME\" /> </th>\n                      <th><input type=\"text\" class=\"form-control\" name=\"MARKET_VALUE\" /></th>\n                      <th><input type=\"text\" class=\"form-control\" name=\"MARGIN\" />  </th>\n                      <th><input type=\"text\" class=\"form-control\" name=\"SHARES\" /> </th>\n                      <th><input type=\"text\" class=\"form-control\" name=\"SUBMISSION_DATE\" /></th>\n                      <th> <input type=\"text\" class=\"form-control\" name=\"UPDATED_BY\" /></th>\n                      <th> <input type=\"text\" class=\"form-control\" name=\"RELEASE_DATE\" /></th>\n                      <th><input type=\"text\" class=\"form-control\" name=\"RELEASE_BY\" />\n                      </th>\n                    </tr>\n                  </tfoot> -->\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { marketsharesomponentservice } from './market-shares.component.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { MarketSharesComponent } from './market-shares.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../../../user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { MarketSharesRoutingModule } from './market-shares-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n@NgModule({\n  declarations: [MarketSharesComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    MarketSharesRoutingModule,\n    DataTablesModule\n  ],\n  providers: [marketsharesomponentservice,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [MarketSharesComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class MarketSharesModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OtherSecurityComponent } from './other-security.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OtherSecurityComponent,\n    data: {\n      title: 'Other Security',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OtherSecurityRoutingModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"../../../../../../environments/environment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class othersecuritycomponentservice {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/other-security/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/other-security/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/other-security/update\", data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/other-security/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/other-security/getdatatable\", data);\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n} from \"@angular/core\";\nimport Swal from \"sweetalert2\";\n// Used to Call API\nimport { HttpClient } from \"@angular/common/http\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { othersecuritycomponentservice } from \"./other-security.component.service\";\nimport { Subject } from \"rxjs\";\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\nimport { environment } from \"src/environments/environment\";\nimport { Router } from \"@angular/router\";\nimport * as moment from 'moment';\nimport { first } from \"rxjs/operators\";\n\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface SecurityMaster {\n  id: number;\n  AC_ACNOTYPE: string;\n  AC_TYPE: number;\n  SUBMISSION_DATE: Date;\n  SHORT_DETAILS: string;\n  TOTAL_VALUE: number;\n  MARGIN: number;\n  DETAILS: string;\n}\n\n\n@Component({\n  selector: \"app-other-security\",\n  templateUrl: \"./other-security.component.html\",\n  styleUrls: [\"./other-security.component.scss\"],\n})\nexport class OtherSecurityComponent\n  implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n  //passing data form child to parent\n  @Output() newOtherSecurityEvent = new EventEmitter<any>();\n  datemax: string;\n  newbtnShow: boolean;\n  newItemEvent(value) {\n    this.newOtherSecurityEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n  //api\n  url = environment.base_url;\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  updateID: number; //variable for updating\n  //for date\n  submissiondate: any = null\n  maxDate: Date;\n  minDate: Date;\n  // Store data from backend\n  securitymasters: SecurityMaster[];\n\n  //for autofocus\n  @ViewChild(\"autofocus\") myInputField: ElementRef;  //input field autofocus\n\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  filterData = {};\n  page: number;\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private _security: othersecuritycomponentservice,\n    public router: Router\n  ) {\n\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._security.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.securitymasters = data\n    })\n    this.dtTrigger.next();\n\n\n    // Fetching Server side data\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/other-security\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.securitymasters = resp.data;\n\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n\n    //     {\n    //       title: \"Date of Submission\",\n    //       data: \"SUBMISSION_DATE\",\n    //     },\n    //     {\n    //       title: \"Short Details\",\n    //       data: \"SHORT_DETAILS\",\n    //     },\n    //     {\n    //       title: \"Total Valuet\",\n    //       data: \"TOTAL_VALUE\",\n    //     },\n    //     {\n    //       title: \"Margin %\",\n    //       data: \"MARGIN\",\n    //     },\n    //     {\n    //       title: \"Security Details\",\n    //       data: \"DETAILS\",\n    //     },\n    //   ],\n    //   dom: \"Blrtip\",\n    // };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      AC_TYPE: [''],\n      AC_NO: [''],\n      SUBMISSION_DATE: [\"\", [Validators.required]],\n      SHORT_DETAILS: [\"\", [Validators.pattern, Validators.required]],\n      TOTAL_VALUE: [\"\", [Validators.pattern, Validators.required]],\n      MARGIN: [\"\", [Validators.pattern]],\n      DETAILS: [\"\", [Validators.pattern, Validators.required]],\n    });\n  }\n  submit(event) {\n    let submissiondate\n    event.preventDefault();\n    this.formSubmitted = true;\n\n    if (this.angForm.valid) {\n\n      const formVal = this.angForm.value;\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n        'SUBMISSION_DATE': (formVal.SUBMISSION_DATE == '' || formVal.SUBMISSION_DATE == 'Invalid date') ? submissiondate = '' : submissiondate = moment(formVal.SUBMISSION_DATE).format('DD/MM/YYYY'),\n\n        SHORT_DETAILS: formVal.SHORT_DETAILS,\n        TOTAL_VALUE: formVal.TOTAL_VALUE,\n        MARGIN: formVal.MARGIN,\n        DETAILS: formVal.DETAILS,\n      };\n      this._security.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          this.formSubmitted = false;\n          let info = []\n          info.push(data.id)\n          info.push(\"otherSecurity\")\n\n          this.newItemEvent(info);\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n    }\n\n  }\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n    let submissiondate\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._security.getFormData(id).subscribe((data) => {\n      this.updatecheckdata = data\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n\n      dropdown.account = data.AC_NO;\n\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newOtherSecurityEvent.emit(obj1);\n\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      this.updateID = data.id;\n\n      this.angForm.patchValue({\n        'SUBMISSION_DATE': (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? submissiondate = '' : submissiondate = data.SUBMISSION_DATE,\n\n        SHORT_DETAILS: data.SHORT_DETAILS,\n        TOTAL_VALUE: data.TOTAL_VALUE,\n        MARGIN: data.MARGIN,\n        DETAILS: data.DETAILS,\n      });\n    });\n  }\n  //check  if margin values are below 100\n  checkmargin(ele: any) {\n\n\n    if (ele <= 100) {\n\n    }\n    else {\n      this.angForm.controls['MARGIN'].reset()\n      Swal.fire(\"Invalid Input\", \"Please Insert Values Below 100\", \"error\");\n    }\n  }\n\n  updateData() {\n\n    let submissiondate\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n\n    data[\"id\"] = this.updateID;\n    data[\"AC_TYPE\"] = this.scheme\n    data[\"AC_NO\"] = this.Accountno\n    if (this.updatecheckdata.SUBMISSION_DATE != data.SUBMISSION_DATE) {\n      (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? (submissiondate = '', data['SUBMISSION_DATE'] = submissiondate) : (submissiondate = data.SUBMISSION_DATE, data['SUBMISSION_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n\n    this._security.updateData(data).subscribe(() => {\n\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      // this.rerender();\n      this.resetForm();\n    });\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n  //function for delete button clicked\n  delClickHandler(info: any): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do You Want To Delete Date Of Submission data\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\"Deleted!\", \"Your Data Has Been Deleted.\", \"success\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your Data Is Safe.\", \"error\");\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n\n\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#informationtable tfoot tr').appendTo('#informationtable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n\n    }\n    this.newOtherSecurityEvent.emit(obj1);\n\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>Other Security</h5>\n        <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n      </div>\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"subm_date\" required=\"\" max=\"31-12-9999\"  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    formControlName=\"SUBMISSION_DATE\" onfocus=\"(this.type='date')\" id=\"date\" #autofocus /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"SUBMISSION_DATE\" id=\"SUBMISSION_DATE\"\n                    class=\"form-control\" [(ngModel)]=\"submissiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"SUBMISSION_DATE\" [maxDate]=\"maxDate\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"SUBMISSION_DATE\">Date of Submission<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUBMISSION_DATE'].invalid &&\n                  (angForm.controls['SUBMISSION_DATE'].dirty ||\n                    angForm.controls['SUBMISSION_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"SHORT_DETAILS\" class=\"form-control\" placeholder=\" \" id=\"short_details\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" required=\"\" maxlength=\"90\"\n                    formControlName=\"SHORT_DETAILS\" />\n                  <label for=\"short_details\">Short Details<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SHORT_DETAILS'].invalid &&\n                  (angForm.controls['SHORT_DETAILS'].dirty ||\n                    angForm.controls['SHORT_DETAILS'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['SHORT_DETAILS'].errors?.pattern ||\n                    angForm.controls['SHORT_DETAILS'].errors?.required\n                  \">\n                  This field is required\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"TOTAL_VALUE\" class=\"form-control\" placeholder=\" \" id=\"total_value\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\" required=\"\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"TOTAL_VALUE\" />\n                  <label for=\"total_value\">Total Value<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['TOTAL_VALUE'].invalid &&\n                  (angForm.controls['TOTAL_VALUE'].dirty ||\n                    angForm.controls['TOTAL_VALUE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['TOTAL_VALUE'].errors?.pattern ||\n                    angForm.controls['TOTAL_VALUE'].errors?.required\n                  \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-2\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"MARGIN\" class=\"form-control\" placeholder=\" \" #margin\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    (keyup)=\"checkmargin(margin.value)\" id=\"margin\" pattern=\"\\d{1,5}(\\.\\d{2})?\"\n                    title=\"Input allowed only  0-9\" formControlName=\"MARGIN\" />\n                  <label for=\"margin\">Margin %</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MARGIN'].invalid &&\n                  (angForm.controls['MARGIN'].dirty ||\n                    angForm.controls['MARGIN'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['MARGIN'].errors?.pattern\">\n                  Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"DETAILS\" class=\"form-control\" placeholder=\" \" id=\"security_details\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" required=\"\" maxlength=\"4000\"\n                    formControlName=\"DETAILS\" />\n                  <label for=\"security_details\">Security Details<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['DETAILS'].invalid &&\n                  (angForm.controls['DETAILS'].dirty ||\n                    angForm.controls['DETAILS'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['DETAILS'].errors?.pattern ||\n                    angForm.controls['DETAILS'].errors?.required\n                  \">\n                  This field is required\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <!-- [disabled]=\"angForm.invalid\" -->\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\" *ngIf=\"showButton\">Submit</button>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n              &nbsp;\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"addNewData()\" *ngIf=\"newbtnShow\">Cancel</button>\n            </div>\n          </div>\n\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card shadow\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"table-responsive\">\n                <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                  class=\"table table-striped table-bordered table-hover compact\">\n                  <thead>\n                    <th style=\"text-transform: captalize;\">Action</th>\n                    <th style=\"text-transform: captalize;\">Submission Date</th>\n                    <th style=\"text-transform: captalize;\">Short Details</th>\n                    <th style=\"text-transform: captalize;\">Total Value</th>\n                    <th style=\"text-transform: captalize;\">Margin</th>\n                    <th style=\"text-transform: captalize;\">Security Details</th>\n                  </thead>\n                  <tbody *ngIf=\"securitymasters?.length != 0\">\n                    <tr *ngFor=\"let data of securitymasters\">\n                      <td>\n                        <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\"\n                          placement=\"bottom\" ngbTooltip=\"Edit\"></span>\n                        &nbsp;\n                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                      </td>\n\n                      <td class=\"td_right\">{{ data.SUBMISSION_DATE }}</td>\n                      <td>{{ data.SHORT_DETAILS }}</td>\n                      <td class=\"td_right\">{{ data.TOTAL_VALUE }}</td>\n                      <td class=\"td_right\">{{ data.MARGIN }}</td>\n                      <td>{{ data.DETAILS }}</td>\n                    </tr>\n                  </tbody>\n                  <tbody *ngIf=\"securitymasters?.length == 0\">\n                    <tr>\n                      <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                    </tr>\n                  </tbody>\n                  <!-- <tfoot #filters class=\"filters\">\n                    <tr class=\"testing\">\n                      <th class=\"testing\"></th>\n                      <th><input type=\"text\" class=\"form-control\" name=\"SUBMISSION_DATE\" /></th>\n                      <th><input type=\"text\" class=\"form-control\" name=\"SHORT_DETAILS\" /></th>\n                      <th><input type=\"text\" class=\"form-control\" name=\"TOTAL_VALUE\" /></th>\n                      <th><input type=\"text\" class=\"form-control\" name=\"MARGIN\" /></th>\n                      <th><input type=\"text\" class=\"form-control\" name=\"DETAILS\" /></th> \n                    </tr>\n                  </tfoot> -->\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { othersecuritycomponentservice } from './other-security.component.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { OtherSecurityComponent } from './other-security.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../../../user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { OtherSecurityRoutingModule } from './other-security-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n@NgModule({\n  declarations: [OtherSecurityComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    OtherSecurityRoutingModule,\n    DataTablesModule\n  ],\n  providers: [othersecuritycomponentservice,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [OtherSecurityComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class OtherSecurityModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwnDepositsComponentService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n  url = environment.base_url;\n\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/own-deposits/insert', data).pipe(map((res) => res),\n      catchError((error) => {\n        Swal.fire('Please Input Proper Data !');\n        return throwError(error);\n      })\n    )\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/own-deposits/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/own-deposits/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/own-deposits/delete/' + id).pipe(catchError(this.handleError));\n  }\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/own-deposits/getdatatable\", data);\n  }\n\n  getTermDeposit(data): Observable<any> {\n    return this.http.get(this.url + '/term-deposits-master/scheme/' + data);\n  }\n\n  getPigmyAccount(data): Observable<any> {\n    return this.http.get(this.url + '/pigmy-account-master/scheme/' + data);\n  }\n\n  getledgerbalance(data: any): Observable<any> {\n    return this.http.post(this.url + '/voucher/getledgerbalance', data).pipe(catchError(this.handleError));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OwnDepositsComponent } from './own-deposits.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OwnDepositsComponent,\n    data: {\n      title: 'Own Deposits',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OwnDepositsRoutingModule { }\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  Input,\n  Output,\n  EventEmitter,\n} from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport { IOption } from \"ng-select\";\nimport { Subscription } from \"rxjs/Subscription\";\nimport { S2Service } from \"../../../../../shared/elements/s2.service\";\nimport { Ac2Service } from \"../../../../../shared/elements/ac2.service\";\nimport Swal from \"sweetalert2\";\n// Used to Call API\nimport { HttpClient } from \"@angular/common/http\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { OwnDepositsComponentService } from \"./own-deposit.service\"; //Injecting service into component.\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\n//Dropdown service file\nimport { OwnbranchMasterService } from \"../../../../../shared/dropdownService/own-branch-master-dropdown.service\";\nimport { first } from \"rxjs/operators\";\nimport { schemedropdownService } from \"../../../../../shared/dropdownService/scheme-dropdown.service\";\nimport { environment } from \"src/environments/environment\";\nimport { Router } from \"@angular/router\";\n\n\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { NgSelectConfig } from '@ng-select/ng-select';\nimport * as moment from 'moment';\nimport { number } from \"ngx-custom-validators/src/app/number/validator\";\nimport { data } from \"jquery\";\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface DepositeMaster {\n  id: number;\n  AC_ACNOTYPE: string;\n  AC_TYPE: number;\n  AC_NO: number;\n\n  BRANCH_CODE: string;\n  DEPO_AC_TYPE: string;\n  DEPO_AC_NO: number;\n  SUBMISSION_DATE: Date;\n  RECEIPT_NO: number;\n  DEPOSIT_AMT: number;\n  REMARK: string;\n  MATURITY_DATE: Date;\n  MARGIN: number;\n  LEDGER_Bal: number;\n  AC_INTRNAME: string\n}\n@Component({\n  selector: \"app-own-deposits\",\n  templateUrl: \"./own-deposits.component.html\",\n  styleUrls: [\"./own-deposits.component.scss\"],\n})\nexport class OwnDepositsComponent implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n  //passing data form child to parent\n  @Output() newOwnDepositEvent = new EventEmitter<any>();\n  datemax: string;\n  newbtnShow: boolean;\n\n  newItemEvent(value) {\n    this.newOwnDepositEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n  //api\n  url = environment.base_url;\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  updateID: number; //variable for updating\n  // Store data from backend\n  depositemasters: DepositeMaster[];\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  //filter variable\n  filterData = {};\n  ACNo: any;\n\n  // schemeList:any\n  //Dropdown option variable\n  branchOption: any;\n  ngbranch: any = null;\n  ngscheme: any = null;\n  ngacno: any = null;\n  // for date\n  submissiondate: any = null\n  maxDate: Date;\n  minDate: Date;\n  obj: any = { type: \"own deposite form\" };\n  page: number;\n  //Scheme type variable\n  schemeList\n  schemeType: string = 'TD'\n\n  constructor(\n    private fb: FormBuilder,\n    public S2Service: S2Service,\n    public Ac2Service: Ac2Service,\n    private _deposite: OwnDepositsComponentService,\n    private _ownbranchmasterservice: OwnbranchMasterService,\n    private _sheme: schemedropdownService,\n    private http: HttpClient,\n    public router: Router,\n\n    public schemeCodeDropdownService: SchemeCodeDropdownService,\n    private schemeAccountNoService: SchemeAccountNoService,\n    private config: NgSelectConfig,) {\n\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    console.log(result)\n    if (result.RoleDefine[0].RoleId == 1) {\n      this.ngbranch = result.branchId\n      this.angForm.controls['BRANCH_CODE'].enable()\n    } else {\n      this.ngbranch = result.branchId\n      this.angForm.controls['BRANCH_CODE'].disable()\n\n    }\n\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._deposite.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.depositemasters = data\n    })\n    this.dtTrigger.next();\n\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/own-deposits\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.depositemasters = resp.data;\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n    //     {\n    //       title: \"Branch\",\n    //       data: \"BRANCH_CODE\",\n    //     },\n    //     {\n    //       title: \"Scheme\",\n    //       data: \"DEPO_AC_TYPE\",\n    //     },\n    //     {\n    //       title: \"Account Number\",\n    //       data: \"DEPO_AC_NO\",\n    //     },\n    //     {\n    //       title: \"Date of Submission\",\n    //       data: \"SUBMISSION_DATE\",\n    //     },\n    //     {\n    //       title: \"Receipt Number\",\n    //       data: \"RECEIPT_NO\",\n    //     },\n    //     {\n    //       title: \"Deposit Amount\",\n    //       data: \"DEPOSIT_AMT\",\n    //     },\n    //     {\n    //       title: \"Remarks\",\n    //       data: \"REMARK\",\n    //     },\n    //     {\n    //       title: \"Maturity Date\",\n    //       data: \"MATURITY_DATE\",\n    //     },\n    //     {\n    //       title: \"Margin %\",\n    //       data: \"MARGIN\",\n    //     },\n    //     {\n    //       title: \"Ledger Balance\",\n    //       data: \"LEDGER_Bal\",\n    //     },\n    //   ],\n    //   dom: \"Blrtip\",\n    // };\n\n    this.schemeCodeDropdownService.getAllSchemeList1().pipe(first()).subscribe(data => {\n      var filtered = data.filter(function (scheme) {\n        return (scheme.name == 'TD' || scheme.name == 'PG');\n      });\n      this.schemeList = filtered;\n\n    })\n\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branchOption = data;\n    })\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      AC_TYPE: [\"\"],\n      AC_NO: [\"\"],\n      AC_ACNOTYPE: ['LN'],\n      BRANCH_CODE: [\"\", [Validators.pattern, Validators.required]],\n      DEPO_AC_TYPE: [\"\", [Validators.required]],\n      DEPO_AC_NO: [\"\", [Validators.required]],\n      SUBMISSION_DATE: [\"\", [Validators.required]],\n      RECEIPT_NO: [\"\"],\n      DEPOSIT_AMT: [\"\", [Validators.pattern]],\n      REMARK: [\"\", [Validators.pattern]],\n      MATURITY_DATE: [\"\"],\n      MARGIN: [\"\", [Validators.pattern]],\n      LEDGER_Bal: [\"\"],\n      AC_INTRNAME: [''],\n    });\n  }\n\n  getBranch() {\n\n    this.getIntroducer()\n  }\n  obj1: any\n  getschemename: any\n  schemecode: any\n  getIntro(event) {\n\n    this.getschemename = event.name\n    this.schemecode = event.code\n\n    this.getIntroducer()\n  }\n\n  //get account no according scheme for introducer\n  getIntroducer() {\n\n    this.obj1 = [this.ngscheme, this.ngbranch]\n    switch (this.getschemename) {\n      case 'TD':\n\n        this._deposite.getTermDeposit(this.obj1).pipe(first()).subscribe(data => {\n          this.ACNo = data;\n\n        })\n        break;\n      case 'PG':\n\n        this._deposite.getPigmyAccount(this.obj1).pipe(first()).subscribe(data => {\n\n          this.ACNo = data;\n        })\n        break;\n\n    }\n  }\n  temacno\n  bindvalue(event) {\n    console.log(this.ngacno)\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    console.log(result.branch.syspara.CURRENT_DATE)\n    let datadate = result.branch.syspara.CURRENT_DATE\n    this.temacno = event.BANKACNO\n    var addInFrom = moment(datadate, \"DD/MM/YYYY\").subtract(1, 'days').format('DD/MM/YYYY')\n    let obj = {\n      scheme: this.schemecode,\n      acno: event.BANKACNO,\n      date: addInFrom\n    }\n    this._deposite.getledgerbalance(obj).subscribe(data => {\n      this.angForm.patchValue({\n        'RECEIPT_NO': event.AC_REF_RECEIPTNO,\n        'DEPOSIT_AMT': event.AC_SCHMAMT,\n        'MATURITY_DATE': event.AC_EXPDT,\n        'LEDGER_Bal': Math.abs(data)\n      })\n    })\n\n  }\n\n  submit(event) {\n\n    let submissiondate\n    event.preventDefault();\n    this.formSubmitted = true;\n\n    if (this.angForm.valid) {\n\n\n      const formVal = this.angForm.value;\n\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n        // BRANCH_CODE: formVal.BRANCH_CODE,\n        DEPO_AC_TYPE: formVal.DEPO_AC_TYPE,\n        DEPO_AC_NO: this.temacno,\n        'SUBMISSION_DATE': (formVal.SUBMISSION_DATE == '' || formVal.SUBMISSION_DATE == 'Invalid date') ? submissiondate = '' : submissiondate = moment(formVal.SUBMISSION_DATE).format('DD/MM/YYYY'),\n\n        RECEIPT_NO: formVal.RECEIPT_NO,\n        DEPOSIT_AMT: formVal.DEPOSIT_AMT,\n        REMARK: formVal.REMARK,\n        MATURITY_DATE: formVal.MATURITY_DATE,\n        MARGIN: formVal.MARGIN,\n        LEDGER_Bal: formVal.LEDGER_Bal,\n        AC_INTRNAME: formVal.AC_INTRNAME,\n      };\n\n      this._deposite.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          this.formSubmitted = false;\n\n          let info = []\n          info.push(data.id)\n          info.push(\"ownDeposit\")\n\n          this.newItemEvent(info);\n\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n\n\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n    }\n\n\n  }\n\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n    let submissiondate\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._deposite.getFormData(id).subscribe((data) => {\n      this.updatecheckdata = data\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n\n      dropdown.account = data.AC_NO;\n\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newOwnDepositEvent.emit(obj1);\n      this.updateID = data.id;\n\n\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      //after clicking edit to get value in dropdown\n      this.ngbranch = Number(data.BRANCH_CODE)\n      this.ngscheme = Number(data.DEPO_AC_TYPE)\n      this.ngacno = Number(data.DEPO_AC_NO)\n      console.log(this.ngacno)\n\n      this.angForm.patchValue({\n\n        AC_ACNOTYPE: data.AC_ACNOTYPE,\n        'SUBMISSION_DATE': (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? submissiondate = '' : submissiondate = data.SUBMISSION_DATE,\n\n        RECEIPT_NO: data.RECEIPT_NO,\n        DEPOSIT_AMT: data.DEPOSIT_AMT,\n        REMARK: data.REMARK,\n        MATURITY_DATE: data.MATURITY_DATE,\n        MARGIN: data.MARGIN,\n        LEDGER_Bal: data.LEDGER_Bal,\n        AC_INTRNAME: data.AC_INTRNAME,\n      });\n    });\n  }\n\n  updateData() {\n    let submissiondate\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data[\"AC_TYPE\"] = this.scheme\n    data[\"AC_NO\"] = this.Accountno\n    if (this.updatecheckdata.SUBMISSION_DATE != data.SUBMISSION_DATE) {\n      (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? (submissiondate = '', data['SUBMISSION_DATE'] = submissiondate) : (submissiondate = data.SUBMISSION_DATE, data['SUBMISSION_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n    this._deposite.updateData(data).subscribe(() => {\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      // this.rerender();\n      this.resetForm();\n    });\n  }\n\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n\n  //function for delete button clicked\n  delClickHandler(id: number): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to delete advocate Master data.\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._deposite.deleteData(id).subscribe((data1) => {\n          Swal.fire(\"Deleted!\", \"Your Data Has Been Deleted.\", \"success\");\n        }),\n          (error) => {\n\n          };\n        // to reload after delete of data\n        this.rerender();\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your Data Is Safe.\", \"error\");\n      }\n    });\n  }\n  //check  if margin values are below 100\n  checkmargin(ele: any) {\n    //check  if given value  is below 100\n\n    if (ele <= 100) {\n\n    }\n    else {\n      Swal.fire(\"Invalid Input\", \"Please Insert Values Below 100\", \"error\");\n    }\n  }\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#informationtable tfoot tr').appendTo('#informationtable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    this.ngbranch = null\n    this.ngscheme = null\n    this.ngacno = null\n\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n\n    }\n    this.newOwnDepositEvent.emit(obj1);\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Own Deposits</h5>\n                <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-2\">\n                            <!-- <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"branchOption\" [multiple]=\"false\"\n                                formControlName=\"username\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                    placeholder=\"Branch*\" required title=\"Compulsory Selection\"\n                                    formControlName=\"BRANCH_CODE\">\n                                </ng-select>\n                               \n                            </div> -->\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngbranch\"\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" (change)=\"getBranch()\"\n                                        placeholder=\"Branch\">\n                                        <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"BRANCH_CODE\">Branch</label>\n                                </span>\n                            </div>\n\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <!-- <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"scheme\" [multiple]=\"false\" \n                                formControlName=\"username\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                    placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"DEPO_AC_TYPE\">\n                                </ng-select>\n                             \n                            </div> -->\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"DEPO_AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\n                                        formControlName=\"DEPO_AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" (change)=\"getIntro($event)\"\n                                        placeholder=\"Scheme\">\n                                        <ng-option *ngFor=\"let values of schemeList\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"DEPO_AC_TYPE\">Scheme</label>\n                                </span>\n                            </div>\n\n                            <!-- <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"DEPO_AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\n                                        (change)=\"getIntro($event)\" formControlName=\"DEPO_AC_TYPE\" bindLabel=\"label\"\n                                        title=\"Compulsory Selection\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                        required placeholder=\"Scheme\">\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n\n                                    </ng-select>\n                                    <label for=\"DEPO_AC_TYPE\">Scheme<sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div> -->\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['DEPO_AC_TYPE'].invalid && (angForm.controls['DEPO_AC_TYPE'].dirty || angForm.controls['DEPO_AC_TYPE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['DEPO_AC_TYPE'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <!-- <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"ACNo\" [multiple]=\"false\"\n                                formControlName=\"username\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                    placeholder=\"Account No. *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"DEPO_AC_NO\">\n                                </ng-select>\n                            </div> -->\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"DEPO_AC_NO\" bindValue=\"AC_NO\" [(ngModel)]=\"ngacno\"\n                                        (change)=\"getIntroducer();bindvalue($event)\" formControlName=\"DEPO_AC_NO\"\n                                        bindLabel=\"AC_NO\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\n                                        placeholder=\"Account No.\">\n                                        <ng-option *ngFor=\"let values of ACNo\" [value]=\"values\">\n                                            {{values.AC_NO}} {{values.AC_NAME}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"DEPO_AC_NO\">Account Number<sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['DEPO_AC_NO'].invalid && (angForm.controls['DEPO_AC_NO'].dirty || angForm.controls['DEPO_AC_NO'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['DEPO_AC_NO'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n\n\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"subm_date\" required=\"\"\n                                        max=\"{{datemax | date:'yyyy-MM-dd'}}\" formControlName=\"SUBMISSION_DATE\"\n                                         [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                        onfocus=\"(this.type='date')\" /> -->\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"SUBMISSION_DATE\" id=\"subm_date\"\n                                        class=\"form-control\" [(ngModel)]=\"submissiondate\"\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"SUBMISSION_DATE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        bsDatepicker>\n                                    <label for=\"subm_date\">Date of Submission<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid && (angForm.controls['SUBMISSION_DATE'].dirty || angForm.controls['SUBMISSION_DATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].errors?.required\">\n                                    This field is required\n                                </div>\n                                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid\">\n                                    Fill valid Date\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"receipt_no\" class=\"form-control\" placeholder=\" \"\n                                        id=\"receipt_no\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"RECEIPT_NO\" disabled>\n                                    <label for=\"receipt_no\">Receipt Number</label>\n                                </span>\n                            </div>\n\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"deposit_amount\" class=\"form-control\" placeholder=\" \"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                                        id=\"deposit_amount\" pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"DEPOSIT_AMT\" disabled>\n                                    <label for=\"deposit_amount\">Deposit Amount</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['DEPOSIT_AMT'].invalid && (angForm.controls['DEPOSIT_AMT'].dirty || angForm.controls['DEPOSIT_AMT'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['DEPOSIT_AMT'].errors?.pattern\">\n                                    Input allowed only . 0-9(after decimal 2 digits)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"maturity_date\"\n                                        formControlName=\"MATURITY_DATE\" id=\"MATURITY_DATE\" disabled />\n                                    <label for=\"MATURITY_DATE\">Maturity Date</label>\n                                </span>\n                            </div>\n\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"LedgerBal\" class=\"form-control\" placeholder=\" \"\n                                        id=\"LedgerBal\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"LEDGER_Bal\" disabled>\n                                    <label for=\"LedgerBal\">Ledger Balance</label>\n                                </span>\n                            </div>\n\n                        </div>\n\n                    </div>\n                    <div class=\"row mt-2\">\n                        <div class=\"col-sm-2\">\n\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"margin\" class=\"form-control\" placeholder=\" \" id=\"margin\"\n                                        #margin (keyup)=\"checkmargin(margin.value)\" pattern=\"\\d{1,5}(\\.\\d{2})?\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"MARGIN\">\n                                    <label for=\"margin\">Margin %</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['MARGIN'].invalid && (angForm.controls['MARGIN'].dirty || angForm.controls['MARGIN'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['MARGIN'].errors?.pattern\">\n                                    Input allowed only . 0-9(after decimal 2 digits)\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-sm-6\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"remarks\" class=\"form-control\" placeholder=\" \" id=\"remarks\"\n                                        pattern=\"^[A-Za-z'\\.\\-\\s]+$\" maxlength=\"90\"\n                                        (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                                        title=\"Input allowed only  A-Z a-z 0-9  - / . (Space)\" formControlName=\"REMARK\">\n                                    <label for=\"remarks\">Remarks</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['REMARK'].invalid && (angForm.controls['REMARK'].dirty || angForm.controls['REMARK'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['REMARK'].errors?.pattern\">\n                                    Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <!-- [disabled]=\"angForm.invalid\" -->\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\"\n                                *ngIf=\"showButton\">Submit</button>\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button> &nbsp;\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"newbtnShow\"\n                                (click)=\"addNewData()\">Cancel</button>\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"card shadow\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"table-responsive\">\n                                <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\"\n                                    [dtTrigger]=\"dtTrigger\"\n                                    class=\"table table-striped table-bordered table-hover compact\">\n                                    <thead>\n                                        <th style=\"text-transform: captalize;\">Action</th>\n                                        <th style=\"text-transform: captalize;\">Branch</th>\n                                        <th style=\"text-transform: captalize;\">Scheme</th>\n                                        <th style=\"text-transform: captalize;\">Account Number</th>\n                                        <th style=\"text-transform: captalize;\">Date of Submission</th>\n                                        <th style=\"text-transform: captalize;\">Receipt Number</th>\n                                        <th style=\"text-transform: captalize;\">Deposit Amount</th>\n                                        <th style=\"text-transform: captalize;\">Remarks</th>\n                                        <th style=\"text-transform: captalize;\">Maturity Date</th>\n                                        <th style=\"text-transform: captalize;\">Margin</th>\n                                        <th style=\"text-transform: captalize;\">Ledger Balance</th>\n                                    </thead>\n                                    <tbody *ngIf=\"depositemasters?.length != 0\">\n                                        <tr *ngFor=\"let data of depositemasters\">\n                                            <td><span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\"\n                                                    (click)=\"editClickHandler(data.id)\" placement=\"bottom\"\n                                                    ngbTooltip=\"Edit\"></span> &nbsp;\n                                                <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                            </td>\n                                            <td>{{ data.BRANCH_CODE }}</td>\n                                            <td>{{ data.DEPO_AC_TYPE }}</td>\n                                            <td class=\"td_right\">{{data.DEPO_AC_NO}}</td>\n                                            <td class=\"td_right\">{{data.SUBMISSION_DATE}}</td>\n                                            <td class=\"td_right\">{{data.RECEIPT_NO}}</td>\n                                            <td class=\"td_right\">{{data.DEPOSIT_AMT}}</td>\n                                            <td>{{data.REMARK}}</td>\n                                            <td class=\"td_right\">{{data.MATURITY_DATE}}</td>\n                                            <td class=\"td_right\">{{data.MARGIN}}</td>\n                                            <td class=\"td_right\">{{data.LEDGER_Bal}}</td>\n                                        </tr>\n                                    </tbody>\n                                    <tbody *ngIf=\"depositemasters?.length == 0\">\n                                        <tr>\n                                            <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                        </tr>\n                                    </tbody>\n                                    <!-- <tfoot #filters class=\"filters\">\n                                        <tr class=\"testing\">\n                                            <th class=\"testing\"></th>\n                                            <th><input type=\"text\" class=\"form-control\" name=\"BRANCH_CODE\"></th>\n                                            <th><input type=\"text\" class=\"form-control\" name=\"DEPO_AC_TYPE\"></th>\n                                            <th><input type=\"text\" class=\"form-control\" name=\"DEPO_AC_NO\"></th>\n                                            <th><input type=\"text\" class=\"form-control\" name=\"SUBMISSION_DATE\"></th>\n                                            <th><input type=\"text\" class=\"form-control\" name=\"RECEIPT_NO\"></th>\n                                            <th><input type=\"text\" class=\"form-control\" name=\"DEPOSIT_AMT\"></th>\n                                            <th><input type=\"text\" class=\"form-control\" name=\"REMARK\"></th>\n                                            <th><input type=\"text\" class=\"form-control\" name=\"MATURITY_DATE\"></th>\n                                            <th><input type=\"text\" class=\"form-control\" name=\"MARGIN\"></th>\n                                            <th><input type=\"text\" class=\"form-control\" name=\"LEDGER_Bal\"></th>\n\n                                        </tr>\n                                    </tfoot> -->\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n<!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { OwnDepositsComponentService } from './own-deposit.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { OwnDepositsComponent } from './own-deposits.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../../../user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { OwnDepositsRoutingModule } from './own-deposits-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n@NgModule({\n  declarations: [OwnDepositsComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    OwnDepositsRoutingModule,\n    DataTablesModule\n  ],\n  providers: [OwnDepositsComponentService,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [OwnDepositsComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class OwnDepositsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PlantAndMachineryComponent } from './plant-and-machinery.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlantAndMachineryComponent,\n    data: {\n      title: 'Plant And Machinery',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PlantAndMachineryRoutingModule { }\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild, Input, Output,\n  EventEmitter,\n  ElementRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\n// Used to Call API\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs\";\nimport Swal from \"sweetalert2\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { plantmachineryService } from \"./plant-and-machinery.service\";\n\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\nimport { environment } from \"src/environments/environment\";\nimport { Router } from \"@angular/router\";\nimport * as moment from 'moment';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface PlantMaster {\n  id: number;\n  AC_ACNOTYPE: string;\n  AC_TYPE: number;\n  SUBMISSION_DATE: Date;\n  MACHINE_NAME: string;\n  MACHINE_TYPE: string;\n  DISTINCTIVE_NO: string;\n  SPECIFICATION: string;\n  AQUISITION_DATE: Date;\n  NEW_EQUIPEMENT: number;\n  SUPPLIER_NAME: string;\n  PURCHASE_PRICE: number;\n  MARGIN: number;\n  REMARK: string;\n}\n@Component({\n  selector: \"app-plant-and-machinery\",\n  templateUrl: \"./plant-and-machinery.component.html\",\n  styleUrls: [\"./plant-and-machinery.component.scss\"],\n})\nexport class PlantAndMachineryComponent\n  implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n  //passing data form child to parent\n  @Output() newPlantandMachiEvent = new EventEmitter<any>();\n  datemax: string;\n  newbtnShow: boolean;\n  newItemEvent(value) {\n    this.newPlantandMachiEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n  //api\n  url = environment.base_url;\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  isnew_equip: boolean = false;\n\n  updateID: number; //variable for updating\n\n  // for date \n  submissiondate: any = null\n  acquisitiondate: any = null\n  maxDate: Date;\n  minDate: Date;\n\n\n  // Store data from backend\n  plantmasters: PlantMaster[];\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  page: number;\n  filterData = {};\n\n  constructor(\n    private fb: FormBuilder,\n    private _plant: plantmachineryService,\n    private http: HttpClient,\n    public router: Router\n  ) {\n\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    console.log(this.scheme, this.Accountno, this.AC_ACNOTYPE)\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._plant.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.plantmasters = data\n    })\n    this.dtTrigger.next();\n\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/plant-and-machinery\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.plantmasters = resp.data;\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n    //     {\n    //       title: \"Submission Date\",\n    //       data: \"SUBMISSION_DATE\",\n    //     },\n    //     {\n    //       title: \"Machinery Name\",\n    //       data: \"MACHINE_NAME\",\n    //     },\n    //     {\n    //       title: \"Machinery Type\",\n    //       data: \"MACHINE_TYPE\",\n    //     },\n    //     {\n    //       title: \"Distinctive Number\",\n    //       data: \"DISTINCTIVE_NO\",\n    //     },\n    //     {\n    //       title: \"Specification\",\n    //       data: \"SPECIFICATION\",\n    //     },\n    //     {\n    //       title: \"Acquisition Date\",\n    //       data: \"AQUISITION_DATE\",\n    //     },\n    //     {\n    //       title: \"New Equipment\",\n    //       data: \"NEW_EQUIPEMENT\",\n    //     },\n    //     {\n    //       title: \"Supplier Name\",\n    //       data: \"SUPPLIER_NAME\",\n    //     },\n    //     {\n    //       title: \"Purchase Price\",\n    //       data: \"PURCHASE_PRICE\",\n    //     },\n    //     {\n    //       title: \"Margin %\",\n    //       data: \"MARGIN\",\n    //     },\n    //     {\n    //       title: \"Remarks\",\n    //       data: \"REMARK\",\n    //     },\n    //   ],\n    //   dom: \"Blrtip\",\n    // };\n  }\n  createForm() {\n    this.angForm = this.fb.group({\n      SUBMISSION_DATE: [\"\", [Validators.required]],\n      MACHINE_NAME: [\"\", [Validators.pattern, Validators.required]],\n      MACHINE_TYPE: [\"\", [Validators.pattern, Validators.required]],\n      DISTINCTIVE_NO: [\"\", [Validators.pattern, Validators.required]],\n      SPECIFICATION: [\"\", [Validators.pattern]],\n      AQUISITION_DATE: [\"\"],\n      NEW_EQUIPEMENT: [\"\", [Validators.pattern, Validators.required]],\n      SUPPLIER_NAME: [\"\", [Validators.pattern, Validators.required]],\n      PURCHASE_PRICE: [\"\", [Validators.pattern]],\n      MARGIN: [\"\", [Validators.pattern]],\n      REMARK: [\"\", [Validators.pattern]],\n    });\n  }\n\n  submit(event) {\n    let submissiondate\n    let acquisitiondate\n    event.preventDefault();\n    this.formSubmitted = true;\n\n    if (this.angForm.valid) {\n\n      const formVal = this.angForm.value;\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n        'SUBMISSION_DATE': (formVal.SUBMISSION_DATE == '' || formVal.SUBMISSION_DATE == 'Invalid date') ? submissiondate = '' : submissiondate = moment(formVal.SUBMISSION_DATE).format('DD/MM/YYYY'),\n\n        MACHINE_NAME: formVal.MACHINE_NAME,\n        MACHINE_TYPE: formVal.MACHINE_TYPE,\n        DISTINCTIVE_NO: formVal.DISTINCTIVE_NO,\n        SPECIFICATION: formVal.SPECIFICATION,\n        'AQUISITION_DATE': (formVal.AQUISITION_DATE == '' || formVal.AQUISITION_DATE == 'Invalid date') ? acquisitiondate = '' : acquisitiondate = moment(formVal.AQUISITION_DATE).format('DD/MM/YYYY'),\n\n        NEW_EQUIPEMENT: (formVal.NEW_EQUIPEMENT == true ? '1' : '0'),\n        SUPPLIER_NAME: formVal.SUPPLIER_NAME,\n        PURCHASE_PRICE: formVal.PURCHASE_PRICE,\n        MARGIN: formVal.MARGIN,\n        REMARK: formVal.REMARK,\n      };\n      this._plant.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          this.formSubmitted = false;\n          let info = []\n          info.push(data.id)\n          info.push(\"plantMachinary\")\n\n          this.newItemEvent(info);\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n    }\n\n  }\n\n  //check  if margin values are below 100\n  checkmargin(ele: any) {\n    //check  if given value  is below 100\n\n    if (ele <= 100) {\n\n    }\n    else {\n      this.angForm.controls['MARGIN'].reset()\n\n      Swal.fire(\"Invalid Input\", \"Please insert values below 100\", \"error\");\n    }\n  }\n\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n    let submissiondate\n    let acquisitiondate\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._plant.getFormData(id).subscribe((data) => {\n      this.updatecheckdata = data\n\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n      dropdown.account = data.AC_NO;\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newPlantandMachiEvent.emit(obj1);\n      this.updateID = data.id;\n\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      this.angForm.patchValue({\n\n\n        AC_ACNOTYPE: data.AC_ACNOTYPE,\n        'SUBMISSION_DATE': (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? submissiondate = '' : submissiondate = data.SUBMISSION_DATE,\n\n        MACHINE_NAME: data.MACHINE_NAME,\n        MACHINE_TYPE: data.MACHINE_TYPE,\n        DISTINCTIVE_NO: data.DISTINCTIVE_NO,\n        SPECIFICATION: data.SPECIFICATION,\n        'AQUISITION_DATE': (data.AQUISITION_DATE == 'Invalid date' || data.AQUISITION_DATE == '' || data.AQUISITION_DATE == null) ? acquisitiondate = '' : acquisitiondate = data.AQUISITION_DATE,\n\n        NEW_EQUIPEMENT: (data.NEW_EQUIPEMENT == '1' ? true : false),\n        SUPPLIER_NAME: data.SUPPLIER_NAME,\n        PURCHASE_PRICE: data.PURCHASE_PRICE,\n        MARGIN: data.MARGIN,\n        REMARK: data.REMARK,\n      });\n    });\n  }\n\n  updateData() {\n    let submissiondate\n    let acquisitiondate\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data[\"AC_TYPE\"] = this.scheme\n    data[\"AC_NO\"] = this.Accountno\n    data['NEW_EQUIPEMENT']= (data.NEW_EQUIPEMENT == true ? '1' : '0')\n    if (this.updatecheckdata.SUBMISSION_DATE != data.SUBMISSION_DATE) {\n      (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? (submissiondate = '', data['SUBMISSION_DATE'] = submissiondate) : (submissiondate = data.SUBMISSION_DATE, data['SUBMISSION_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.AQUISITION_DATE != data.AQUISITION_DATE) {\n      (data.AQUISITION_DATE == 'Invalid date' || data.AQUISITION_DATE == '' || data.AQUISITION_DATE == null) ? (submissiondate = '', data['AQUISITION_DATE'] = acquisitiondate) : (acquisitiondate = data.AQUISITION_DATE, data['AQUISITION_DATE'] = moment(acquisitiondate).format('DD/MM/YYYY'))\n    }\n\n    this._plant.updateData(data).subscribe(() => {\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      // this.rerender();\n      this.resetForm();\n    });\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n  //function for delete button clicked\n  delClickHandler(id: any): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to delete Plant and Machinery data\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._plant.deleteData(id).subscribe((data1) => {\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n        }),\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#informationtable tfoot tr').appendTo('#informationtable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n\n    }\n    this.newPlantandMachiEvent.emit(obj1);\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>Plant And Machinery</h5>\n        <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n      </div>\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"subm_date\" required=\"\" max=\"{{datemax | date:'yyyy-MM-dd'}}\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"  \n                  formControlName=\"SUBMISSION_DATE\"  #autofocus /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"SUBMISSION_DATE\" id=\"subm_date\" class=\"form-control\"\n                    [(ngModel)]=\"submissiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"SUBMISSION_DATE\" [maxDate]=\"maxDate\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n\n                  <label for=\"subm_date\">Submission Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUBMISSION_DATE'].invalid &&\n                  (angForm.controls['SUBMISSION_DATE'].dirty ||\n                    angForm.controls['SUBMISSION_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].errors?.required\">\n                  This field is required\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"machinery_name\" class=\"form-control\" placeholder=\" \" id=\"machinery_name\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    required=\"\" pattern=\"^[A-Za-z'\\.\\-\\s]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    maxlength=\"90\" formControlName=\"MACHINE_NAME\" />\n                  <label for=\"machinery_name\">Machinery Name<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MACHINE_NAME'].invalid &&\n                  (angForm.controls['MACHINE_NAME'].dirty ||\n                    angForm.controls['MACHINE_NAME'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['MACHINE_NAME'].errors?.pattern ||\n                    angForm.controls['MACHINE_NAME'].errors?.required\n                  \">\n                  This field is required and Input allowed only A-Z a-z- / .\n                  (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"machinery_type\" class=\"form-control\" placeholder=\" \" id=\"machinery_type\"\n                    required=\"\" pattern=\"^[A-Za-z'\\.\\-\\s]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    maxlength=\"50\" formControlName=\"MACHINE_TYPE\" />\n                  <label for=\"machinery_type\">Machinery Type<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MACHINE_TYPE'].invalid &&\n                  (angForm.controls['MACHINE_TYPE'].dirty ||\n                    angForm.controls['MACHINE_TYPE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['MACHINE_TYPE'].errors?.pattern ||\n                    angForm.controls['MACHINE_TYPE'].errors?.required\n                  \">\n                  This field is required and Input allowed only A-Z a-z- / .\n                  (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"DistinctiveNumber\" class=\"form-control\" placeholder=\" \"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\" id=\"DistinctiveNumber\" required=\"\"\n                    pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" maxlength=\"50\"\n                    formControlName=\"DISTINCTIVE_NO\" />\n                  <label for=\"DistinctiveNumber\">Distinctive Number<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['DISTINCTIVE_NO'].invalid &&\n                  (angForm.controls['DISTINCTIVE_NO'].dirty ||\n                    angForm.controls['DISTINCTIVE_NO'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['DISTINCTIVE_NO'].errors?.pattern ||\n                    angForm.controls['DISTINCTIVE_NO'].errors?.required\n                  \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"specification\" class=\"form-control\" placeholder=\" \" id=\"Specification\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\" maxlength=\"50\"\n                    formControlName=\"SPECIFICATION\" />\n                  <label for=\"Specification\">Specification</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SPECIFICATION'].invalid &&\n                  (angForm.controls['SPECIFICATION'].dirty ||\n                    angForm.controls['SPECIFICATION'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SPECIFICATION'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"DateofAcquisition\" required=\"\"\n                    max=\"{{datemax | date:'yyyy-MM-dd'}}\" formControlName=\"AQUISITION_DATE\"  /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AQUISITION_DATE\" id=\"DateofAcquisition\"\n                    class=\"form-control\" [(ngModel)]=\"acquisitiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [maxDate]=\"maxDate\" [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"AQUISITION_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"DateofAcquisition\">Date of Acquisition</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['AQUISITION_DATE'].invalid &&\n                  (angForm.controls['AQUISITION_DATE'].dirty ||\n                    angForm.controls['AQUISITION_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                Please fill this field\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <!-- <div class=\"border-checkbox-section\">\n                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                  <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" formControlName=\"NEW_EQUIPEMENT\"\n                    value=\"checkbox\" [checked]=\"isnew_equip == true\" />\n                  <label class=\"border-checkbox-label\" for=\"checkbox1\">New Equipment ?</label>\n                </div>\n              </div> -->\n              <div class=\"checkbox checkbox-primary\">\n                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                  <input type=\"checkbox\" class=\"border-checkbox\" id=\"checkbox1\" formControlName=\"NEW_EQUIPEMENT\">\n                  <label class=\"border-checkbox-label\" for=\"checkbox1\">New Equipment?\n                  </label>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"name\" class=\"form-control\" placeholder=\" \" id=\"Suppliername\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\" maxlength=\"90\"\n                    formControlName=\"SUPPLIER_NAME\" />\n                  <label for=\"Suppliername\">Supplier Name<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUPPLIER_NAME'].invalid &&\n                  (angForm.controls['SUPPLIER_NAME'].dirty ||\n                    angForm.controls['SUPPLIER_NAME'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['SUPPLIER_NAME'].errors?.pattern ||\n                    angForm.controls['SUPPLIER_NAME'].errors?.required\n                  \">\n                  This field is required and Input allowed only A-Z a-z - / .\n                  (Space)\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"PurchasePrice\" class=\"form-control\" placeholder=\" \" id=\"PurchasePrice\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\" required=\"\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" maxlength=\"20\"\n                    formControlName=\"PURCHASE_PRICE\" />\n                  <label for=\"PurchasePrice\">Purchase Price<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['PURCHASE_PRICE'].invalid &&\n                  (angForm.controls['PURCHASE_PRICE'].dirty ||\n                    angForm.controls['PURCHASE_PRICE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['PURCHASE_PRICE'].errors?.pattern ||\n                    angForm.controls['PURCHASE_PRICE'].errors?.required\n                  \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"margin\" class=\"form-control\" placeholder=\" \" id=\"margin\" #margin\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    (keyup)=\"checkmargin(margin.value)\" pattern=\"\\d{1,5}(\\.\\d{2})?\" title=\"Input allowed only  0-9\"\n                    formControlName=\"MARGIN\" />\n                  <label for=\"margin\">Margin %</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MARGIN'].invalid &&\n                  (angForm.controls['MARGIN'].dirty ||\n                    angForm.controls['MARGIN'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['MARGIN'].errors?.pattern\">\n                  Input allowed only . 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"remarks\" class=\"form-control\" placeholder=\" \" id=\"remarks\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" maxlength=\"90\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    formControlName=\"REMARK\" />\n                  <label for=\"remarks\">Remarks</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['REMARK'].invalid &&\n                  (angForm.controls['REMARK'].dirty ||\n                    angForm.controls['REMARK'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['REMARK'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <!-- [disabled]=\"angForm.invalid\" -->\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\" *ngIf=\"showButton\">Submit</button>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n              &nbsp;\n              <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"newbtnShow\" (click)=\"addNewData()\">Cancel</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card shadow\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"table-responsive\">\n                <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                  class=\"table table-striped table-bordered table-hover compact\">\n                  <thead>\n                    <th style=\"text-transform: captalize;\">Action</th>\n                    <th style=\"text-transform: captalize;\">Submission Date</th>\n                    <th style=\"text-transform: captalize;\">Machinery Name</th>\n                    <th style=\"text-transform: captalize;\">Machinery Type</th>\n                    <th style=\"text-transform: captalize;\">Distinctive Number</th>\n                    <th style=\"text-transform: captalize;\">Specification</th>\n                    <th style=\"text-transform: captalize;\">Acquisition Date</th>\n                    <th style=\"text-transform: captalize;\">New Equipment</th>\n                    <th style=\"text-transform: captalize;\">Supplier Name</th>\n                    <th style=\"text-transform: captalize;\">Purchase Price</th>\n                    <th style=\"text-transform: captalize;\">Margin</th>\n                    <th style=\"text-transform: captalize;\">Remarks</th>\n                  </thead>\n                  <tbody *ngIf=\"plantmasters?.length != 0\">\n                    <tr *ngFor=\"let data of plantmasters\">\n                      <td>\n                        <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\"\n                          placement=\" bottom\" ngbTooltip=\"Edit\"></span>\n                        &nbsp;\n                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                      </td>\n\n                      <td class=\"td_right\">{{ data.SUBMISSION_DATE }}</td>\n                      <td>{{ data.MACHINE_NAME }}</td>\n                      <td>{{ data.MACHINE_TYPE }}</td>\n                      <td class=\"td_right\">{{ data.DISTINCTIVE_NO }}</td>\n                      <td>{{ data.SPECIFICATION }}</td>\n                      <td class=\"td_right\">{{ data.AQUISITION_DATE }}</td>\n                      <td>{{ data.NEW_EQUIPEMENT == '1' ? 'Yes' : 'No' }}</td>\n                      <td>{{ data.SUPPLIER_NAME }}</td>\n                      <td class=\"td_right\">{{ data.PURCHASE_PRICE }}</td>\n                      <td class=\"td_right\">{{ data.MARGIN }}</td>\n                      <td>{{ data.REMARK }}</td>\n\n                    </tr>\n                  </tbody>\n                  <tbody *ngIf=\"plantmasters?.length == 0\">\n                    <tr>\n                      <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                    </tr>\n                  </tbody>\n                  <!-- <tfoot #filters class=\"filters\">\n                    <tr class=\"testing\">\n                      <th class=\"testing\"></th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SUBMISSION_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"MACHINE_NAME\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"MACHINE_TYPE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"DISTINCTIVE_NO\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SPECIFICATION\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"AQUISITION_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"NEW_EQUIPEMENT\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SUPPLIER_NAME\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"PURCHASE_PRICE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"MARGIN\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"REMARK\" />\n                      </th>\n\n                    </tr>\n                  </tfoot> -->\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { plantmachineryService } from './plant-and-machinery.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { PlantAndMachineryComponent } from './plant-and-machinery.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../../../user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { PlantAndMachineryRoutingModule } from './plant-and-machinery-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n@NgModule({\n  declarations: [PlantAndMachineryComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    PlantAndMachineryRoutingModule,\n    DataTablesModule\n  ],\n  providers: [plantmachineryService,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [PlantAndMachineryComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class PlantAndMachineryModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"../../../../../../environments/environment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class plantmachineryService {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/plant-and-machinery/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/plant-and-machinery/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/plant-and-machinery/update\", data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/plant-and-machinery/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/plant-and-machinery/getdatatable\", data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PleadgeStockComponent } from './pleadge-stock.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PleadgeStockComponent,\n    data: {\n      title: 'Pleadge Stock',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PleadgeStockRoutingModule { }\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n} from \"@angular/core\";\nimport Swal from \"sweetalert2\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { pleadgestockService } from \"./pleadge-stock.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs\";\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\nimport { environment } from \"src/environments/environment\";\nimport { first } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport * as moment from 'moment';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface PleadgeMaster {\n  id: number;\n  AC_TYPE: number;\n  AC_ACNOTYPE: string;\n\n  AC_NO: number;\n  SUBMISSION_DATE: Date;\n  STORAGE_MEMO_NO: number;\n  STORAGE_DATE: Date;\n  GOODS_QTY: number;\n  MANUF_MILL: string;\n  DISCRIPTION: string;\n  BALANCE_QTY: number;\n  RATE: number;\n  VALUE: number;\n  MARGIN: string;\n  REMARK: string;\n}\n@Component({\n  selector: \"app-pleadge-stock\",\n  templateUrl: \"./pleadge-stock.component.html\",\n  styleUrls: [\"./pleadge-stock.component.scss\"],\n})\nexport class PleadgeStockComponent implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n  //passing data form child to parent\n  @Output() newPleadgeEvent = new EventEmitter<any>();\n  datemax: string;\n  newbtnShow: boolean;\n  newItemEvent(value) {\n    this.newPleadgeEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n  //api\n  url = environment.base_url;\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  updateID: number; //variable for updating\n  // for date \n  submissiondate: any = null\n  storagedate: any = null\n  maxDate: Date;\n  minDate: Date;\n\n\n  // Store data from backend\n  pleadgeMaster: PleadgeMaster[];\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  page: number;\n  filterData = {};\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private _pleadge: pleadgestockService,\n    public router: Router\n  ) {\n\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._pleadge.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.pleadgeMaster = data\n    })\n    this.dtTrigger.next();\n    // Fetching Server side data\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/pleadge-stock\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.pleadgeMaster = resp.data;\n\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n    //     {\n    //       title: \"Submission Date\",\n    //       data: \"SUBMISSION_DATE\",\n    //     },\n    //     {\n    //       title: \"Storage Memo No.\",\n    //       data: \"STORAGE_MEMO_NO\",\n    //     },\n    //     {\n    //       title: \"Storage Date.\",\n    //       data: \"STORAGE_DATE\",\n    //     },\n    //     {\n    //       title: \"Goods Qty\",\n    //       data: \"GOODS_QTY\",\n    //     },\n    //     {\n    //       title: \"Manufacturer/Mill\",\n    //       data: \"MANUF_MILL\",\n    //     },\n    //     {\n    //       title: \"Description\",\n    //       data: \"DISCRIPTION\",\n    //     },\n    //     {\n    //       title: \"Bal. Quantity\",\n    //       data: \"BALANCE_QTY\",\n    //     },\n    //     {\n    //       title: \"Rate\",\n    //       data: \"RATE\",\n    //     },\n    //     {\n    //       title: \"Value\",\n    //       data: \"VALUE\",\n    //     },\n    //     {\n    //       title: \"Margin %\",\n    //       data: \"MARGIN\",\n    //     },\n    //     {\n    //       title: \"Remarks\",\n    //       data: \"REMARK\",\n    //     },\n    //   ],\n    //   dom: \"Blrtip\",\n    // };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      SUBMISSION_DATE: [\"\", [Validators.required]],\n      STORAGE_MEMO_NO: [\"\", [Validators.pattern, Validators.required]],\n      STORAGE_DATE: [\"\", [Validators.required]],\n      GOODS_QTY: [\"\", [Validators.pattern, Validators.required]],\n      MANUF_MILL: [\"\", [Validators.pattern]],\n      DISCRIPTION: [\"\", [Validators.pattern]],\n      BALANCE_QTY: [\"\", [Validators.pattern, Validators.required]],\n      RATE: [\"\", [Validators.pattern]],\n      VALUE: [\"\", [Validators.pattern]],\n      MARGIN: [\"\", [Validators.pattern]],\n      REMARK: [\"\", [Validators.pattern]],\n    });\n  }\n\n  submit(event) {\n    let submissiondate\n    let storagedate\n    event.preventDefault();\n    this.formSubmitted = true;\n\n    if (this.angForm.valid) {\n\n      const formVal = this.angForm.value;\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n        'SUBMISSION_DATE': (formVal.SUBMISSION_DATE == '' || formVal.SUBMISSION_DATE == 'Invalid date') ? submissiondate = '' : submissiondate = moment(formVal.SUBMISSION_DATE).format('DD/MM/YYYY'),\n\n        STORAGE_MEMO_NO: formVal.STORAGE_MEMO_NO,\n        'STORAGE_DATE': (formVal.STORAGE_DATE == '' || formVal.STORAGE_DATE == 'Invalid date') ? storagedate = '' : storagedate = moment(formVal.STORAGE_DATE).format('DD/MM/YYYY'),\n\n        GOODS_QTY: formVal.GOODS_QTY,\n        MANUF_MILL: formVal.MANUF_MILL,\n        DISCRIPTION: formVal.DISCRIPTION,\n        BALANCE_QTY: formVal.BALANCE_QTY,\n        RATE: formVal.RATE,\n        VALUE: formVal.VALUE,\n        MARGIN: formVal.MARGIN,\n        REMARK: formVal.REMARK,\n      };\n\n      this._pleadge.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          this.formSubmitted = false;\n          let info = []\n          info.push(data.id)\n          info.push(\"pleadge\")\n\n          this.newItemEvent(info);\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n    }\n\n\n  }\n  //check  if margin values are below 100\n  checkmargin(ele: any) {\n    //check  if given value  is below 100\n\n    if (ele <= 100) {\n\n    }\n    else {\n      this.angForm.controls['MARGIN'].reset()\n      Swal.fire(\"Invalid Input\", \"Please insert values below 100\", \"error\");\n    }\n  }\n\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n    let submissiondate\n    let storagedate\n\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._pleadge.getFormData(id).subscribe((data) => {\n      this.updatecheckdata = data\n      this.updateID = data.id;\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n      dropdown.account = data.AC_NO;\n\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newPleadgeEvent.emit(obj1);\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      this.angForm.patchValue({\n\n        'SUBMISSION_DATE': (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? submissiondate = '' : submissiondate = data.SUBMISSION_DATE,\n\n        STORAGE_MEMO_NO: data.STORAGE_MEMO_NO,\n        'STORAGE_DATE': (data.STORAGE_DATE == 'Invalid date' || data.STORAGE_DATE == '' || data.STORAGE_DATE == null) ? storagedate = '' : storagedate = data.STORAGE_DATE,\n\n        GOODS_QTY: data.GOODS_QTY,\n        MANUF_MILL: data.MANUF_MILL,\n        DISCRIPTION: data.DISCRIPTION,\n        BALANCE_QTY: data.BALANCE_QTY,\n        RATE: data.RATE,\n        VALUE: data.VALUE,\n        MARGIN: data.MARGIN,\n        REMARK: data.REMARK,\n      });\n    });\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n  //function for delete button clicked\n  delClickHandler(id: any): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to delete Submission Date  data\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._pleadge.deleteData(id).subscribe((data1) => {\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n        }),\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\n      }\n    });\n  }\n\n  updateData() {\n    let submissiondate\n    let storagedate\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data[\"AC_TYPE\"] = this.scheme;\n    data[\"AC_NO\"] = this.Accountno;\n    if (this.updatecheckdata.SUBMISSION_DATE != data.SUBMISSION_DATE) {\n      (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? (submissiondate = '', data['SUBMISSION_DATE'] = submissiondate) : (submissiondate = data.SUBMISSION_DATE, data['SUBMISSION_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.STORAGE_DATE != data.STORAGE_DATE) {\n      (data.STORAGE_DATE == 'Invalid date' || data.STORAGE_DATE == '' || data.STORAGE_DATE == null) ? (storagedate = '', data['STORAGE_DATE'] = storagedate) : (storagedate = data.STORAGE_DATE, data['STORAGE_DATE'] = moment(storagedate).format('DD/MM/YYYY'))\n    }\n    this._pleadge.updateData(data).subscribe(() => {\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      // this.rerender();\n      this.resetForm();\n    });\n  }\n  ngAfterViewInit(): void {\n\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#informationtable tfoot tr').appendTo('#informationtable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n    }\n    this.newPleadgeEvent.emit(obj1);\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>Pleadge Stock</h5>\n        <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n      </div>\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"subm_date\" required=\"\" max=\"{{datemax | date:'yyyy-MM-dd'}}\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    formControlName=\"SUBMISSION_DATE\"  #autofocus /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"SUBMISSION_DATE\" id=\"subm_date\" class=\"form-control\"\n                    [(ngModel)]=\"submissiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"SUBMISSION_DATE\" [maxDate]='maxDate'\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"subm_date\">Date of Submission<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUBMISSION_DATE'].invalid &&\n                  (angForm.controls['SUBMISSION_DATE'].dirty ||\n                    angForm.controls['SUBMISSION_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-4\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"StorageMemoNo\" class=\"form-control\" placeholder=\" \" id=\"StorageMemoNo\"\n                    required=\"\" maxlength=\"50\" pattern=\"^[A-Za-z 0-9]+$\" title=\"Input allowed only  0-9\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"STORAGE_MEMO_NO\" />\n                  <label for=\"StorageMemoNo\">Storage Memo No<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['STORAGE_MEMO_NO'].invalid &&\n                  (angForm.controls['STORAGE_MEMO_NO'].dirty ||\n                    angForm.controls['STORAGE_MEMO_NO'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['STORAGE_MEMO_NO'].errors?.pattern ||\n                    angForm.controls['STORAGE_MEMO_NO'].errors?.required\n                  \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"DateofStorage\" required=\"\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    max=\"{{datemax | date:'yyyy-MM-dd'}}\" formControlName=\"STORAGE_DATE\"  /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"STORAGE_DATE\" id=\"DateofStorage\"\n                    class=\"form-control\" [(ngModel)]=\"storagedate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [maxDate]=\"maxDate\" [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"STORAGE_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"DateofStorage\">Date of Storage<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['STORAGE_DATE'].invalid &&\n                  (angForm.controls['STORAGE_DATE'].dirty ||\n                    angForm.controls['STORAGE_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['STORAGE_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['STORAGE_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"GoodsQuantity\" class=\"form-control\" placeholder=\" \" id=\"GoodsQuantity\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\" required=\"\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"GOODS_QTY\" />\n                  <label for=\"GoodsQuantity\">Goods Quantity<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['GOODS_QTY'].invalid &&\n                  (angForm.controls['GOODS_QTY'].dirty ||\n                    angForm.controls['GOODS_QTY'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['GOODS_QTY'].errors?.pattern ||\n                    angForm.controls['GOODS_QTY'].errors?.required\n                  \">\n                  This field is required and Input allowed only . 0-9(after decimal 2 digits)\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"ManufacturerMill\" class=\"form-control\" placeholder=\" \" id=\"ManufacturerMill\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"90\" title=\"Input allowed only  A-Z a-z - / . (Space)\"\n                    formControlName=\"MANUF_MILL\" />\n                  <label for=\"ManufacturerMill\">Manufacturer/Mill</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MANUF_MILL'].invalid &&\n                  (angForm.controls['MANUF_MILL'].dirty ||\n                    angForm.controls['MANUF_MILL'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['MANUF_MILL'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"Description\" class=\"form-control\" placeholder=\" \" id=\"Description\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"90\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    formControlName=\"DISCRIPTION\" />\n                  <label for=\"Description\">Description</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['DISCRIPTION'].invalid &&\n                  (angForm.controls['DISCRIPTION'].dirty ||\n                    angForm.controls['DISCRIPTION'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['DISCRIPTION'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n\n\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"BalanceQuantity\" class=\"form-control\" placeholder=\" \" id=\"BalanceQuantity\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\" required=\"\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"BALANCE_QTY\" />\n                  <label for=\"BalanceQuantity\">Balance Quantity<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['BALANCE_QTY'].invalid &&\n                  (angForm.controls['BALANCE_QTY'].dirty ||\n                    angForm.controls['BALANCE_QTY'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['BALANCE_QTY'].errors?.pattern ||\n                    angForm.controls['BALANCE_QTY'].errors?.required\n                  \">\n                  This field is required and Input allowed only . 0-9(after decimal 2 digits)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"Rate\" class=\"form-control\" placeholder=\" \" id=\"Rate\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"RATE\" />\n                  <label for=\"Rate\">Rate</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['RATE'].invalid &&\n                  (angForm.controls['RATE'].dirty ||\n                    angForm.controls['RATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['RATE'].errors?.pattern\">\n                  Input allowed only . 0-9(after decimal 2 digits)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"Value\" class=\"form-control\" placeholder=\" \" id=\"Value\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"VALUE\" />\n                  <label for=\"label-nameValue\">Value</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['VALUE'].invalid &&\n                  (angForm.controls['VALUE'].dirty ||\n                    angForm.controls['VALUE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['VALUE'].errors?.pattern ||\n                    angForm.controls['VALUE'].errors?.required\n                  \">\n                  Input allowed only . 0-9(after decimal 2 digits)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"margin\" #margin (keyup)=\"checkmargin(margin.value)\" class=\"form-control\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    placeholder=\" \" id=\"margin\" pattern=\"\\d{1,5}(\\.\\d{2})?\" title=\"Input allowed only  0-9\"\n                    formControlName=\"MARGIN\" />\n                  <label for=\"margin\">Margin %</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MARGIN'].invalid &&\n                  (angForm.controls['MARGIN'].dirty ||\n                    angForm.controls['MARGIN'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['MARGIN'].errors?.pattern\">\n                  Input allowed only . 0-9(after decimal 2 digits)\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm-8\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"remarks\" class=\"form-control\" placeholder=\" \" id=\"remarks\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"90\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    formControlName=\"REMARK\" />\n                  <label for=\"Remarks\">Remarks</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['REMARK'].invalid &&\n                  (angForm.controls['REMARK'].dirty ||\n                    angForm.controls['REMARK'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['REMARK'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <!-- [disabled]=\"angForm.invalid\" -->\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\" *ngIf=\"showButton\">Submit</button>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n              &nbsp;\n              <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"newbtnShow\" (click)=\"addNewData()\">Cancel</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card shadow\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"table-responsive\">\n                <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                  class=\"table table-striped table-bordered table-hover compact\">\n                  <thead>\n                    <th style=\"text-transform: captalize;\">Action</th>\n                    <th style=\"text-transform: captalize;\">Submission Date</th>\n                    <th style=\"text-transform: captalize;\">Storage Memo Number</th>\n                    <th style=\"text-transform: captalize;\">Storage Date</th>\n                    <th style=\"text-transform: captalize;\">Goods Quantity</th>\n                    <th style=\"text-transform: captalize;\">Manufacturer/Mill</th>\n                    <th style=\"text-transform: captalize;\">Description</th>\n                    <th style=\"text-transform: captalize;\">Balance Quantity</th>\n                    <th style=\"text-transform: captalize;\">Rate</th>\n                    <th style=\"text-transform: captalize;\">Value</th>\n                    <th style=\"text-transform: captalize;\">Margin</th>\n                    <th style=\"text-transform: captalize;\">Remarks</th>\n                  </thead>\n                  <tbody *ngIf=\"pleadgeMaster?.length != 0\">\n                    <tr *ngFor=\"let data of pleadgeMaster\">\n                      <td>\n                        <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\"\n                          placement=\"bottom\" ngbTooltip=\"Edit\"></span>\n                        &nbsp;\n                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                      </td>\n\n                      <td class=\"td_right\">{{ data.SUBMISSION_DATE }}</td>\n                      <td class=\"td_right\">{{ data.STORAGE_MEMO_NO }}</td>\n                      <td class=\"td_right\">{{ data.STORAGE_DATE }}</td>\n                      <td class=\"td_right\">{{ data.GOODS_QTY }}</td>\n                      <td class=\"td_right\">{{ data.MANUF_MILL }}</td>\n                      <td>{{ data.DISCRIPTION }}</td>\n                      <td>{{ data.BALANCE_QTY }}</td>\n                      <td class=\"td_right\">{{ data.RATE }}</td>\n                      <td class=\"td_right\">{{ data.VALUE }}</td>\n                      <td class=\"td_right\">{{ data.MARGIN }}</td>\n                      <td>{{ data.REMARK }}</td>\n                    </tr>\n                  </tbody>\n                  <tbody *ngIf=\"pleadgeMaster?.length == 0\">\n                    <tr>\n                      <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                    </tr>\n                  </tbody>\n                  <!-- <tfoot #filters class=\"filters\">\n                    <tr class=\"testing\">\n                      <th class=\"testing\"></th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SUBMISSION_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"STORAGE_MEMO_NO\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"STORAGE_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"GOODS_QTY\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"MANUF_MILL\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"DISCRIPTION\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"BALANCE_QTY\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"RATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"VALUE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"MARGIN\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"REMARK\" />\n                      </th>\n                    </tr>\n                  </tfoot> -->\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { pleadgestockService } from './pleadge-stock.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { PleadgeStockComponent } from './pleadge-stock.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../../../user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { PleadgeStockRoutingModule } from './pleadge-stock-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n@NgModule({\n  declarations: [PleadgeStockComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    PleadgeStockRoutingModule,\n    DataTablesModule\n  ],\n  providers: [pleadgestockService,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [PleadgeStockComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class PleadgeStockModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"../../../../../../environments/environment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class pleadgestockService {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/pleadge-stock/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/pleadge-stock/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/pleadge-stock/update\", data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/pleadge-stock/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/pleadge-stock/getdatatable\", data);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { S1Service } from '../../../../shared/elements/s1.service';\nimport { Ac1Service } from '../../../../shared/elements/ac1.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { schemedropdownService } from 'src/app/shared/dropdownService/scheme-dropdown.service';\nimport { environment } from '../../../../../environments/environment'\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { NgSelectConfig } from '@ng-select/ng-select';\nimport { SecurityMasterdropdownService } from 'src/app/shared/dropdownService/security-master-dropdown.service';\nimport { SecurityCodeService } from '../../policy-settings/definations/security-code/security-code.service';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { VoucherEntryService } from '../../../transaction/voucher-entry/voucher-entry.service'\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-security-details',\n  templateUrl: './security-details.component.html',\n  styleUrls: ['./security-details.component.scss']\n})\nexport class SecurityDetailsComponent implements OnInit {\n  formSubmitted = false;\n  scheme: any;\n  Accountno: any;\n  schemeedit: any;\n  accountedit: any;\n  accountedit1: any;\n  acno: any;\n\n\n  angForm: FormGroup;\n  ownDepositsTrue: boolean = false;\n  otherSecurityTrue: boolean = false;\n  firePolicyTrue: boolean = false;\n  marketSharesTrue: boolean = false;\n  stockStatementTrue: boolean = false;\n  govtSecurityAndLicTrue: boolean = false;\n  plantAndMachineryTrue: boolean = false;\n  furnitureAndFixtureTrue: boolean = false;\n  vehicleTrue: boolean = false;\n  landAndBuildingsTrue: boolean = false;\n  goldAndSilverTrue: boolean = false;\n  otherSecurityTrue2: boolean = false;\n  customerInsuranceTrue: boolean = false;\n  bookDebtsTrue: boolean = false;\n  pleadgeStockTrue: boolean = false;\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  //Datatable\n  dtExportButtonOptions: any = {};\n  //Scheme type variable\n  schemeType: string = 'CC'\n  schemeType1: string = 'LN'\n  ngBranchCode: any\n\n  Data: any;\n  security: any[]\n  ngsecurityCode: any\n  //title select variables\n  simpleOption: Array<IOption> = this.S1Service.getCharacters();\n  Ac: Array<IOption> = this.Ac1Service.getCharacters();\n  branch_code: any[]\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n  schemeACNo: any;\n  getscheme: any;\n  constructor(\n    private fb: FormBuilder,\n    private_router: Router,\n    public S1Service: S1Service,\n    public Ac1Service: Ac1Service,\n    private securityMaster: SecurityMasterdropdownService,\n    private _SecurityCode: SecurityCodeService,\n    public schemeCodeDropdownService: SchemeCodeDropdownService,\n    private schemeAccountNoService: SchemeAccountNoService,\n    private ownbranchMasterService: OwnbranchMasterService,\n    private _voucher: VoucherEntryService,\n\n    private config: NgSelectConfig,) { }\n  ngOnInit(): void {\n    this.createForm()\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    console.log(result)\n    if (result.RoleDefine[0].RoleId == 1) {\n      this.ngBranchCode = result.branchId\n      this.angForm.controls['BRANCH_CODE'].enable()\n    } else {\n      this.ngBranchCode = result.branchId\n      this.angForm.controls['BRANCH_CODE'].disable()\n\n    }\n\n    // this.dtExportButtonOptions = {\n    //   ajax: 'fake-data/datatable-data.json',\n    //   columns: [\n    //     {\n    //       title: 'Action',\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\">Edit</button>' + ' ' + '<button class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n    //       }\n    //     },\n    //     {\n    //       title: 'Name',\n    //       data: 'name'\n    //     }, {\n    //       title: 'Position',\n    //       data: 'position'\n    //     }, {\n    //       title: 'Office',\n    //       data: 'office'\n    //     }, {\n    //       title: 'Age',\n    //       data: 'age'\n    //     }, {\n    //       title: 'Start Date',\n    //       data: 'date'\n    //     }, {\n    //       title: 'Salary',\n    //       data: 'salary'\n    //     }],\n    //   dom: 'Bfrtip',\n    //   buttons: [\n    //     'copy',\n    //     'print',\n    //     'excel',\n    //     'csv'\n    //   ]\n\n    // };\n\n    this.runTimer();\n\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branch_code = data;\n\n    })\n    this.schemeCodeDropdownService.getAllSchemeList1().pipe(first()).subscribe(data => {\n      var filtered = data.filter(function (scheme) {\n        return (scheme.name == 'LN' || scheme.name == 'CC');\n      });\n      this.scheme = filtered;\n    })\n\n    this.securityMaster.getsecurityMasterList().pipe(first()).subscribe(data => {\n      this.security = data;\n    })\n  }\n\n\n  // newItemEvent(scheme){\n  //   console.log(scheme)\n  // }\n\n  schemechange(event) {\n\n    this.getschemename = event.name\n    this.schemeedit = event.value\n    this.getIntroducer()\n\n  }\n\n  obj: any\n  getschemename: any\n  //get account no according scheme for introducer\n  getIntroducer() {\n\n    this.obj = [this.schemeedit, this.ngBranchCode]\n\n    switch (this.getschemename) {\n      case 'CC':\n        this.schemeAccountNoService.getCashCreditSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.schemeACNo = data;\n        })\n        break;\n      case 'LN':\n        this.schemeAccountNoService.getTermLoanSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.schemeACNo = data;\n        })\n        break;\n    }\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      AC_TYPE: ['', [Validators.required]],\n      AC_NO: ['', [Validators.required]],\n      LEDGER_BAL: [''],\n      SECURITY_CODE: [''],\n      BRANCH_CODE: [''],\n\n    });\n  }\n  submit() {\n    // this.formSubmitted = true;\n    if (this.angForm.valid) {\n\n    }\n    //get bank code and branch code from session\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    let branchCode = result.branch.id;\n  }\n\n  //output functionality\n  addItem(newItem: any) {\n\n    console.log('NEWITEM', newItem);\n\n\n    newItem.AccountType == null ? this.schemeedit = null : this.schemeedit = Number(newItem.AccountType)\n    newItem.SchemeType == null ? this.getschemename = null : this.getschemename = newItem.SchemeType\n\n\n    this.getIntroducer()\n\n    this.accountedit = newItem.AccountNo\n    newItem.AccountNo == null ? this.accountedit = null : this.accountedit = newItem.AccountNo\n  }\n\n  Accountnochange(event) {\n\n    this.Accountno = event.bankacno;\n    this.accountedit = event.bankacno\n    this.accountedit1 = event.value\n\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    console.log(result.branch.syspara.CURRENT_DATE)\n    let datadate = result.branch.syspara.CURRENT_DATE\n    var addInFrom = moment(datadate, \"DD/MM/YYYY\").subtract(1, 'days').format('DD/MM/YYYY')\n    let obj = {\n      scheme: this.schemeedit,\n      acno: event.bankacno,\n      date: addInFrom\n    }\n    this._voucher.getledgerbalance(obj).subscribe(data => {\n      this.angForm.patchValue({\n\n        'LEDGER_BAL': Math.abs(data)\n      })\n    })\n\n  }\n\n  OpenLink(val) {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n    // \n    if (val == 1) {\n      this.ownDepositsTrue = true;\n      this.otherSecurityTrue = false;\n      this.firePolicyTrue = false;\n      this.marketSharesTrue = false;\n      this.stockStatementTrue = false;\n      this.govtSecurityAndLicTrue = false;\n      this.plantAndMachineryTrue = false;\n      this.furnitureAndFixtureTrue = false;\n      this.vehicleTrue = false;\n      this.landAndBuildingsTrue = false;\n      this.goldAndSilverTrue = false;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = false;\n      this.bookDebtsTrue = false;\n      this.pleadgeStockTrue = false;\n    }\n    if (val == 2) {\n      this.ownDepositsTrue = false;\n      this.otherSecurityTrue = true;\n      this.firePolicyTrue = false;\n      this.marketSharesTrue = false;\n      this.stockStatementTrue = false;\n      this.govtSecurityAndLicTrue = false;\n      this.plantAndMachineryTrue = false;\n      this.furnitureAndFixtureTrue = false;\n      this.vehicleTrue = false;\n      this.landAndBuildingsTrue = false;\n      this.goldAndSilverTrue = false;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = false;\n      this.bookDebtsTrue = false;\n      this.pleadgeStockTrue = false;\n    }\n    if (val == 3) {\n      this.ownDepositsTrue = false;\n      this.otherSecurityTrue = false;\n      this.firePolicyTrue = true;\n      this.marketSharesTrue = false;\n      this.stockStatementTrue = false;\n      this.govtSecurityAndLicTrue = false;\n      this.plantAndMachineryTrue = false;\n      this.furnitureAndFixtureTrue = false;\n      this.vehicleTrue = false;\n      this.landAndBuildingsTrue = false;\n      this.goldAndSilverTrue = false;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = false;\n      this.bookDebtsTrue = false;\n      this.pleadgeStockTrue = false;\n    }\n    if (val == 4) {\n      this.ownDepositsTrue = false;\n      this.otherSecurityTrue = false;\n      this.firePolicyTrue = false;\n      this.marketSharesTrue = true;\n      this.stockStatementTrue = false;\n      this.govtSecurityAndLicTrue = false;\n      this.plantAndMachineryTrue = false;\n      this.furnitureAndFixtureTrue = false;\n      this.vehicleTrue = false;\n      this.landAndBuildingsTrue = false;\n      this.goldAndSilverTrue = false;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = false;\n      this.bookDebtsTrue = false;\n      this.pleadgeStockTrue = false;\n    }\n    if (val == 5) {\n      this.ownDepositsTrue = false;\n      this.otherSecurityTrue = false;\n      this.firePolicyTrue = false;\n      this.marketSharesTrue = false;\n      this.stockStatementTrue = true;\n      this.govtSecurityAndLicTrue = false;\n      this.plantAndMachineryTrue = false;\n      this.furnitureAndFixtureTrue = false;\n      this.vehicleTrue = false;\n      this.landAndBuildingsTrue = false;\n      this.goldAndSilverTrue = false;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = false;\n      this.bookDebtsTrue = false;\n      this.pleadgeStockTrue = false;\n    }\n    if (val == 6) {\n      this.ownDepositsTrue = false;\n      this.otherSecurityTrue = false;\n      this.firePolicyTrue = false;\n      this.marketSharesTrue = false;\n      this.stockStatementTrue = false;\n      this.govtSecurityAndLicTrue = true;\n      this.plantAndMachineryTrue = false;\n      this.furnitureAndFixtureTrue = false;\n      this.vehicleTrue = false;\n      this.landAndBuildingsTrue = false;\n      this.goldAndSilverTrue = false;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = false;\n      this.bookDebtsTrue = false;\n      this.pleadgeStockTrue = false;\n    }\n    if (val == 7) {\n      this.ownDepositsTrue = false;\n      this.otherSecurityTrue = false;\n      this.firePolicyTrue = false;\n      this.marketSharesTrue = false;\n      this.stockStatementTrue = false;\n      this.govtSecurityAndLicTrue = false;\n      this.plantAndMachineryTrue = true;\n      this.furnitureAndFixtureTrue = false;\n      this.vehicleTrue = false;\n      this.landAndBuildingsTrue = false;\n      this.goldAndSilverTrue = false;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = false;\n      this.bookDebtsTrue = false;\n      this.pleadgeStockTrue = false;\n    }\n    if (val == 8) {\n      this.ownDepositsTrue = false;\n      this.otherSecurityTrue = false;\n      this.firePolicyTrue = false;\n      this.marketSharesTrue = false;\n      this.stockStatementTrue = false;\n      this.govtSecurityAndLicTrue = false;\n      this.plantAndMachineryTrue = false;\n      this.furnitureAndFixtureTrue = true;\n      this.vehicleTrue = false;\n      this.landAndBuildingsTrue = false;\n      this.goldAndSilverTrue = false;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = false;\n      this.bookDebtsTrue = false;\n      this.pleadgeStockTrue = false;\n    }\n    if (val == 9) {\n      this.ownDepositsTrue = false;\n      this.otherSecurityTrue = false;\n      this.firePolicyTrue = false;\n      this.marketSharesTrue = false;\n      this.stockStatementTrue = false;\n      this.govtSecurityAndLicTrue = false;\n      this.plantAndMachineryTrue = false;\n      this.furnitureAndFixtureTrue = false;\n      this.vehicleTrue = true;\n      this.landAndBuildingsTrue = false;\n      this.goldAndSilverTrue = false;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = false;\n      this.bookDebtsTrue = false;\n      this.pleadgeStockTrue = false;\n    }\n    if (val == 10) {\n      this.ownDepositsTrue = false;\n      this.otherSecurityTrue = false;\n      this.firePolicyTrue = false;\n      this.marketSharesTrue = false;\n      this.stockStatementTrue = false;\n      this.govtSecurityAndLicTrue = false;\n      this.plantAndMachineryTrue = false;\n      this.furnitureAndFixtureTrue = false;\n      this.vehicleTrue = false;\n      this.landAndBuildingsTrue = true;\n      this.goldAndSilverTrue = false;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = false;\n      this.bookDebtsTrue = false;\n      this.pleadgeStockTrue = false;\n    }\n    if (val == 11) {\n      this.ownDepositsTrue = false;\n      this.otherSecurityTrue = false;\n      this.firePolicyTrue = false;\n      this.marketSharesTrue = false;\n      this.stockStatementTrue = false;\n      this.govtSecurityAndLicTrue = false;\n      this.plantAndMachineryTrue = false;\n      this.furnitureAndFixtureTrue = false;\n      this.vehicleTrue = false;\n      this.landAndBuildingsTrue = false;\n      this.goldAndSilverTrue = true;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = false;\n      this.bookDebtsTrue = false;\n      this.pleadgeStockTrue = false;\n    }\n    // if(val == 12){\n    //   this.ownDepositsTrue = false;\n    //   this.otherSecurityTrue = false;\n    //   this.firePolicyTrue = false;\n    //   this.marketSharesTrue = false; \n    //   this.stockStatementTrue = false;\n    //   this.govtSecurityAndLicTrue = false;\n    //   this.plantAndMachineryTrue = false;\n    //   this.furnitureAndFixtureTrue = false;\n    //   this.vehicleTrue = false;\n    //   this.landAndBuildingsTrue = false;\n    //   this.goldAndSilverTrue = false;\n    //   this.otherSecurityTrue2 = true;\n    //   this.customerInsuranceTrue = false;\n    //   this.bookDebtsTrue = false;\n    //   this.pleadgeStockTrue = false;\n    // }\n    if (val == 13) {\n      this.ownDepositsTrue = false;\n      this.otherSecurityTrue = false;\n      this.firePolicyTrue = false;\n      this.marketSharesTrue = false;\n      this.stockStatementTrue = false;\n      this.govtSecurityAndLicTrue = false;\n      this.plantAndMachineryTrue = false;\n      this.furnitureAndFixtureTrue = false;\n      this.vehicleTrue = false;\n      this.landAndBuildingsTrue = false;\n      this.goldAndSilverTrue = false;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = true;\n      this.bookDebtsTrue = false;\n      this.pleadgeStockTrue = false;\n    }\n    if (val == 14) {\n      this.ownDepositsTrue = false;\n      this.otherSecurityTrue = false;\n      this.firePolicyTrue = false;\n      this.marketSharesTrue = false;\n      this.stockStatementTrue = false;\n      this.govtSecurityAndLicTrue = false;\n      this.plantAndMachineryTrue = false;\n      this.furnitureAndFixtureTrue = false;\n      this.vehicleTrue = false;\n      this.landAndBuildingsTrue = false;\n      this.goldAndSilverTrue = false;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = false;\n      this.bookDebtsTrue = true;\n      this.pleadgeStockTrue = false;\n    }\n    if (val == 15) {\n      this.ownDepositsTrue = false;\n      this.otherSecurityTrue = false;\n      this.firePolicyTrue = false;\n      this.marketSharesTrue = false;\n      this.stockStatementTrue = false;\n      this.govtSecurityAndLicTrue = false;\n      this.plantAndMachineryTrue = false;\n      this.furnitureAndFixtureTrue = false;\n      this.vehicleTrue = false;\n      this.landAndBuildingsTrue = false;\n      this.goldAndSilverTrue = false;\n      this.otherSecurityTrue2 = false;\n      this.customerInsuranceTrue = false;\n      this.bookDebtsTrue = false;\n      this.pleadgeStockTrue = true;\n    }\n  }\n  securityTrue: boolean = false\n  BOOK_DEBTS: boolean = false\n  CUST_INSURANCE: boolean = false\n  FIRE_POLICY: boolean = false\n  FURNITURE_FIXTURE: boolean = false\n  GOLD_SILVER: boolean = false\n  GOVT_SECU_LIC: boolean = false\n  LAND_BUILDING: boolean = false\n  MARKET_SHARE: boolean = false\n  OTHER_SECURITY: boolean = false\n  OWN_DEPOSIT: boolean = false\n  PLANT_MACHINARY: boolean = false\n  PLEDGE_STOCK: boolean = false\n  STOCK_STATEMENT: boolean = false\n  VEHICLE: boolean = false\n  securityDetails(event) {\n    if (event == undefined) {\n      this.securityTrue = false\n      console.log(event)\n    } else {\n      this.securityTrue = true\n      console.log(event, ' else block')\n      this._SecurityCode.getFormData(event.id).subscribe(data => {\n\n        if (data.BOOK_DEBTS == true) {\n          this.BOOK_DEBTS = true\n        } else {\n          this.BOOK_DEBTS = false\n\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n\n        }\n        if (data.CUST_INSURANCE == true) {\n          this.CUST_INSURANCE = true\n        } else {\n          this.CUST_INSURANCE = false\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n        }\n\n        if (data.FIRE_POLICY == true) {\n          this.FIRE_POLICY = true\n        } else {\n          this.FIRE_POLICY = false\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n        }\n\n        if (data.FURNITURE_FIXTURE == true) {\n          this.FURNITURE_FIXTURE = true\n        }\n        else {\n          this.FURNITURE_FIXTURE = false\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n        }\n\n        if (data.GOLD_SILVER == true) {\n          this.GOLD_SILVER = true\n        }\n        else {\n          this.GOLD_SILVER = false\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n        }\n\n        if (data.GOVT_SECU_LIC == true) {\n          this.GOVT_SECU_LIC = true\n        } else {\n          this.GOVT_SECU_LIC = false\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n        }\n\n        if (data.LAND_BUILDING == true) {\n          this.LAND_BUILDING = true\n        } else {\n          this.LAND_BUILDING = false\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n        }\n\n        if (data.MARKET_SHARE == true) {\n          this.MARKET_SHARE = true\n        } else {\n          this.MARKET_SHARE = false\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n        }\n\n        if (data.OTHER_SECURITY == true) {\n          this.OTHER_SECURITY = true\n        } else {\n          this.OTHER_SECURITY = false\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n        }\n\n        if (data.OWN_DEPOSIT == true) {\n          this.OWN_DEPOSIT = true\n        } else {\n          this.OWN_DEPOSIT = false\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n        }\n\n        if (data.PLANT_MACHINARY == true) {\n          this.PLANT_MACHINARY = true\n        } else {\n          this.PLANT_MACHINARY = false\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n        }\n\n        if (data.PLEDGE_STOCK == true) {\n          this.PLEDGE_STOCK = true\n        } else {\n          this.PLEDGE_STOCK = false\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n        }\n\n        if (data.STOCK_STATEMENT == true) {\n          this.STOCK_STATEMENT = true\n        } else {\n          this.STOCK_STATEMENT = false\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n        }\n\n        if (data.VEHICLE == true) {\n          this.VEHICLE = true\n        } else {\n          this.VEHICLE = false\n          this.ownDepositsTrue = false;\n          this.otherSecurityTrue = false;\n          this.firePolicyTrue = false;\n          this.marketSharesTrue = false;\n          this.stockStatementTrue = false;\n          this.govtSecurityAndLicTrue = false;\n          this.plantAndMachineryTrue = false;\n          this.furnitureAndFixtureTrue = false;\n          this.vehicleTrue = false;\n          this.landAndBuildingsTrue = false;\n          this.goldAndSilverTrue = false;\n          this.otherSecurityTrue2 = false;\n          this.customerInsuranceTrue = false;\n          this.bookDebtsTrue = false;\n          this.pleadgeStockTrue = false;\n        }\n      });\n    }\n\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Security Details</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\n                                        bindLabel=\"label\" title=\"Compulsory Selection\" placeholder=\"Branch Code\"\n                                        formControlName=\"BRANCH_CODE\">\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"BRANCH_CODE\">Branch</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"schemeedit\"\n                                        (change)=\"schemechange($event)\" formControlName=\"AC_TYPE\" bindLabel=\"label\"\n                                        title=\"Compulsory Selection\" required placeholder=\"Scheme\">\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"AC_TYPE\">Scheme</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"AC_NO\" bindValue=\"value\" [(ngModel)]=\"accountedit1\"\n                                        (change)=\"Accountnochange($event)\" formControlName=\"AC_NO\" bindLabel=\"label\"\n                                        title=\"Compulsory Selection\" required placeholder=\"Account No.\">\n                                        <ng-option *ngFor=\"let values of schemeACNo\" [value]=\"values\">\n                                            {{values.label}} {{values.name}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"AC_NO\">Account Number</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"SECURITY_CODE\" bindValue=\"value\" [(ngModel)]=\"ngsecurityCode\"\n                                        formControlName=\"SECURITY_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" (change)=\"securityDetails($event)\"\n                                        placeholder=\"Security Details\">\n                                        <ng-option *ngFor=\"let values of security\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"SECURITY_CODE\">Security Details</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"LEDGER_BAL\"\n                                        required=\"\" formControlName=\"LEDGER_BAL\" disabled>\n                                    <label for=\"LEDGER_BAL\">Ledger Balance</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"securityTrue\">\n    <div class=\"col-sm-3\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"col-md-12\">\n                    <perfect-scrollbar style=\"max-width: 600px; max-height: 450px;\">\n\n                        <ul class=\"basic-list\">\n                            <li *ngIf=\"OWN_DEPOSIT\">\n                                <h6> <a (click)=\"OpenLink(1)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': ownDepositsTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Own Deposits</a></h6>\n                            </li>\n                            <li *ngIf=\"OTHER_SECURITY\">\n                                <h6> <a (click)=\"OpenLink(2)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': otherSecurityTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Other Security</a></h6>\n                            </li>\n                            <li *ngIf=\"FIRE_POLICY\">\n                                <h6> <a (click)=\"OpenLink(3)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': firePolicyTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Fire Policy</a></h6>\n                            </li>\n                            <li *ngIf=\"MARKET_SHARE\">\n                                <h6> <a (click)=\"OpenLink(4)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': marketSharesTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Market Shares</a></h6>\n                            </li>\n                            <li *ngIf=\"STOCK_STATEMENT\">\n                                <h6> <a (click)=\"OpenLink(5)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': stockStatementTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Stock Statement</a></h6>\n                            </li>\n                            <li *ngIf=\"GOVT_SECU_LIC\">\n                                <h6> <a (click)=\"OpenLink(6)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': govtSecurityAndLicTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Government Security & LIC</a></h6>\n                            </li>\n                            <li *ngIf=\"PLANT_MACHINARY\">\n                                <h6> <a (click)=\"OpenLink(7)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': plantAndMachineryTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Plant & Machinery</a></h6>\n                            </li>\n                            <li *ngIf=\"FURNITURE_FIXTURE\">\n                                <h6> <a (click)=\"OpenLink(8)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': furnitureAndFixtureTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Furniture & Fixture</a></h6>\n                            </li>\n                            <li *ngIf=\"VEHICLE\">\n                                <h6> <a (click)=\"OpenLink(9)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': vehicleTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Vehicle</a></h6>\n                            </li>\n                            <li *ngIf=\"LAND_BUILDING\">\n                                <h6> <a (click)=\"OpenLink(10)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': landAndBuildingsTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Land & Buildings</a></h6>\n                            </li>\n                            <li *ngIf=\"GOLD_SILVER\">\n                                <h6> <a (click)=\"OpenLink(11)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': goldAndSilverTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Gold & Silver</a></h6>\n                            </li>\n                            <li *ngIf=\"CUST_INSURANCE\">\n                                <h6> <a (click)=\"OpenLink(13)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': customerInsuranceTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Customer Insurance</a></h6>\n                            </li>\n                            <li *ngIf=\"BOOK_DEBTS\">\n                                <h6> <a (click)=\"OpenLink(14)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': bookDebtsTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Book Debts</a></h6>\n                            </li>\n                            <li *ngIf=\"PLEDGE_STOCK\">\n                                <h6> <a (click)=\"OpenLink(15)\" routerLink=\"/master/Maintainance/securityDetails\"\n                                        [ngClass]=\"{'isActive': pleadgeStockTrue}\" routerLinkActive=\"active\"\n                                        class=\"text-right f-w-600\" id=\"pointer\"> Pleadge Stock</a></h6>\n                            </li>\n\n                        </ul>\n                    </perfect-scrollbar>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-sm-9\">\n        <div class=\"card-block\">\n            <div *ngIf=\"ownDepositsTrue\">\n                <app-own-deposits [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\" (newOwnDepositEvent)=\"addItem($event)\">\n                </app-own-deposits>\n            </div>\n            <div *ngIf=\"otherSecurityTrue\">\n                <app-other-security [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\" (newOtherSecurityEvent)=\"addItem($event)\">\n                </app-other-security>\n            </div>\n            <div *ngIf=\"firePolicyTrue\">\n                <app-fire-policy [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\" (newfirePolicyEvent)=\"addItem($event)\">\n                </app-fire-policy>\n            </div>\n            <div *ngIf=\"marketSharesTrue\">\n                <app-market-shares [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\" (newmarketShareEvent)=\"addItem($event)\">\n                </app-market-shares>\n            </div>\n            <div *ngIf=\"stockStatementTrue\">\n                <app-stock-statement [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\" (newStockEvent)=\"addItem($event)\">\n                </app-stock-statement>\n            </div>\n            <div *ngIf=\"govtSecurityAndLicTrue\">\n                <app-govt-security-and-lic [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\" (newgovtSecurityEvent)=\"addItem($event)\">\n                </app-govt-security-and-lic>\n            </div>\n            <div *ngIf=\"plantAndMachineryTrue\">\n                <app-plant-and-machinery [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\" (newPlantandMachiEvent)=\"addItem($event)\">\n                </app-plant-and-machinery>\n            </div>\n            <div *ngIf=\"furnitureAndFixtureTrue\">\n                <app-furniture-and-fixture [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\" (newfurnitureFixEvent)=\"addItem($event)\">\n                </app-furniture-and-fixture>\n            </div>\n            <div *ngIf=\"vehicleTrue\">\n                <app-vehicle [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\" (newVehicalEvent)=\"addItem($event)\">\n                </app-vehicle>\n            </div>\n            <div *ngIf=\"landAndBuildingsTrue\">\n                <app-land-and-buildings [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\" (newLandBuldingEvent)=\"addItem($event)\">\n                </app-land-and-buildings>\n            </div>\n            <div *ngIf=\"goldAndSilverTrue\">\n                <app-gold-and-silver [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\" (newGoldsilverEvent)=\"addItem($event)\">\n                </app-gold-and-silver>\n            </div>\n            <!-- <div *ngIf=\"otherSecurityTrue2\">\n                <app-other-security2 [scheme]=\"scheme\" [Accountno]=\"Accountno\" (newItemEvent)=\"addItem($event)\">\n                </app-other-security2>\n            </div> -->\n            <div *ngIf=\"customerInsuranceTrue\">\n                <app-customer-insurance [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\"\n                    (newcustomerInsuranceEvent)=\"addItem($event)\">\n                </app-customer-insurance>\n            </div>\n            <div *ngIf=\"bookDebtsTrue\">\n                <app-book-debts [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\" (newbookEvent)=\"addItem($event)\">\n                </app-book-debts>\n            </div>\n            <div *ngIf=\"pleadgeStockTrue\">\n                <app-pleadge-stock [AC_ACNOTYPE]=\"getschemename\" [scheme]=\"schemeedit\" [Accountno]=\"accountedit\"\n                    [sec_code]=\"ngsecurityCode\" [branchCode]=\"ngBranchCode\" (newPleadgeEvent)=\"addItem($event)\">\n                </app-pleadge-stock>\n            </div>\n        </div>\n    </div>\n</div>","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { SecurityDetailsComponent } from './security-details.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SecurityDetailsComponent,\n    data: {\n      title: 'Security Details',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SecurityDetailsRoutingModule { }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\n\nimport { DataTablesModule } from \"angular-datatables\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ColorPickerModule } from \"ngx-color-picker\";\n\nimport { SecurityDetailsComponent } from \"./security-details.component\";\nimport { SecurityDetailsRoutingModule } from \"./securityDetails-routing.module\";\n\nimport { OwnDepositsModule } from \"./own-deposits/own-deposits.module\";\nimport { OtherSecurityModule } from \"./other-security/other-security.module\";\nimport { FirePolicyModule } from \"./fire-policy/fire-policy.module\";\n// import { FirePolicyComponent } from \"./fire-policy/fire-policy.component\";\nimport { MarketSharesModule } from \"./market-shares/market-shares.module\";\nimport { StockStatementModule } from \"./stock-statement/stock-statement.module\";\nimport { GovtSecurityAndLicModule } from \"./govt-security-and-lic/govt-security-and-lic.module\";\nimport { PlantAndMachineryModule } from \"./plant-and-machinery/plant-and-machinery.module\";\nimport { FurnitureAndFixtureModule } from \"./furniture-and-fixture/furniture-and-fixture.module\";\nimport { VehicleModule } from \"./vehicle/vehicle.module\";\nimport { LandAndBuildingsModule } from \"./land-and-buildings/land-and-buildings.module\";\nimport { GoldAndSilverModule } from \"./gold-and-silver/gold-and-silver.module\";\n\nimport { CustomerInsuranceModule } from \"./customer-insurance/customer-insurance.module\";\nimport { BookDebtsModule } from \"./book-debts/book-debts.module\";\nimport { PleadgeStockModule } from \"./pleadge-stock/pleadge-stock.module\";\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\n//import { SelectModule } from \"ng-select\";\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { glMasterService } from \"../../../../shared/elements/gl-master.service\";\n// import { GoldsilverService } from \"../../../../shared/elements/goldsilver.service\";\n// import { InsuranceMasterDropdownService } from \"../../../../shared/dropdownService/insurance-master-dropdown.service\";\nimport { Ac1Service } from \"../../../../shared/elements/ac1.service\";\nimport { S1Service } from \"../../../../shared/elements/s1.service\";\nimport { Ac2Service } from \"../../../../shared/elements/ac2.service\";\nimport { S2Service } from \"../../../../shared/elements/s2.service\";\nimport { OwnDepositsComponentService } from \"./own-deposits/own-deposit.service\";\nimport { othersecuritycomponentservice } from \"./other-security/other-security.component.service\";\nimport { firepolicycomponentservice } from \"./fire-policy/fire-policy.component.service\";\nimport { OwnbranchMasterService } from \"../../../../shared/dropdownService/own-branch-master-dropdown.service\";\nimport { schemedropdownService } from \"../../../../shared/dropdownService/scheme-dropdown.service\";\nimport { marketsharesomponentservice } from \"../security-details/market-shares/market-shares.component.service\";\nimport { stockcomponentservice } from \"../security-details/stock-statement/stock-statement.component.service\";\nimport { governmentsecuritycomponentservice } from \"../security-details/govt-security-and-lic/govt-security-and-lic.component.service\";\nimport { customerinsuranceService } from '../security-details/customer-insurance/customer-insurance.service'\nimport { goldandsilverService } from '../security-details/gold-and-silver/gold-and-silver.service'\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { GoldsilverService } from \"../../../../shared/dropdownService/goldsilver.service\";\nimport { InsuranceMasterDropdownService } from '../../../../shared/dropdownService/insurance-master-dropdown.service';\n\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { SecurityMasterdropdownService } from 'src/app/shared/dropdownService/security-master-dropdown.service';\nimport { SecurityCodeService } from '../../policy-settings/definations/security-code/security-code.service';\nimport { VoucherEntryService } from '../../../transaction/voucher-entry/voucher-entry.service'\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataTablesModule,\n    SecurityDetailsRoutingModule,\n    NgbModule,\n    ColorPickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n    FirePolicyModule,\n    BookDebtsModule,\n    CustomerInsuranceModule,\n    FurnitureAndFixtureModule,\n    GoldAndSilverModule,\n    GovtSecurityAndLicModule,\n    LandAndBuildingsModule,\n    MarketSharesModule,\n    OtherSecurityModule,\n    OwnDepositsModule,\n    PleadgeStockModule,\n    StockStatementModule,\n    VehicleModule,\n    PlantAndMachineryModule\n  ],\n  exports: [SecurityDetailsComponent,\n    OtherSecurityModule,\n    // FirePolicyComponent,\n    MarketSharesModule,\n    StockStatementModule,\n    GovtSecurityAndLicModule,\n    PlantAndMachineryModule,\n    FurnitureAndFixtureModule,\n    VehicleModule,\n    LandAndBuildingsModule,\n    GoldAndSilverModule,\n    CustomerInsuranceModule,\n    BookDebtsModule,\n    PleadgeStockModule,\n    OwnDepositsModule,\n\n    FirePolicyModule],\n  providers: [\n    GoldsilverService,\n    GoldsilverService,\n    InsuranceMasterDropdownService,\n    Ac1Service,\n    S1Service,\n    Ac2Service,\n    S2Service,\n    SecurityCodeService,\n    VoucherEntryService,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    glMasterService,\n    OwnDepositsComponentService,\n    othersecuritycomponentservice,\n    firepolicycomponentservice,\n    OwnbranchMasterService,\n    schemedropdownService,\n    marketsharesomponentservice,\n    stockcomponentservice,\n    governmentsecuritycomponentservice,\n    customerinsuranceService,\n    goldandsilverService,\n    SchemeCodeDropdownService,\n    SchemeAccountNoService,\n    SecurityMasterdropdownService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n\n  ],\n  declarations: [\n    SecurityDetailsComponent,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n\n})\nexport class SecurityDetailsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StockStatementComponent } from './stock-statement.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StockStatementComponent,\n    data: {\n      title: 'Stock Statement',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StockStatementRoutingModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"../../../../../../environments/environment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class stockcomponentservice {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/stock-statement/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/stock-statement/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/stock-statement/update\", data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/stock-statement/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/stock-statement/getdatatable\", data);\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n} from \"@angular/core\";\nimport { Subject } from \"rxjs\";\n// Creating and maintaining form fields with validation\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n// Displaying Sweet Alert\nimport Swal from \"sweetalert2\";\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\n// Service File For Handling CRUD Operation\nimport { stockcomponentservice } from \"./stock-statement.component.service\";\n// Used to Call API\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../../../../../environments/environment\";\nimport { Router } from \"@angular/router\";\nimport * as moment from 'moment';\nimport { first } from \"rxjs/operators\";\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface StockMaster {\n  id: number;\n  AC_ACNOTYPE: string;\n  AC_TYPE: number;\n  BRANCH_CODE: string;\n  AC_NO: number;\n  SECU_CODE: number;\n  SR_NO: number;\n  SUBMISSION_DATE: Date;\n  STATEMENT_DATE: Date;\n  RAW_MATERIAL: number;\n  RAW_MARGIN: number;\n  WORK_PROGRESS: number;\n  FINISHED_GOODS: number;\n  WORK_MARGIN: number;\n  FINISHED_MARGIN: number;\n  REMARK: string;\n  SECURITY_TYPE: string;\n}\n@Component({\n  selector: \"app-stock-statement\",\n  templateUrl: \"./stock-statement.component.html\",\n  styleUrls: [\"./stock-statement.component.scss\"],\n})\nexport class StockStatementComponent\n  implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n  //passing data form child to parent\n  @Output() newStockEvent = new EventEmitter<any>();\n  datemax: string;\n  newbtnShow: boolean;\n  newItemEvent(value) {\n    this.newStockEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n  //api\n  //api\n  url = environment.base_url;\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  stockmasters: StockMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = \"start\";\n  active = 1;\n  activeKeep = 1;\n  // Variables for search\n  filterObject: { name: string; type: string }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n\n  // for date \n  submissiondate: any = null\n  statementdate: any = null\n  maxDate: Date;\n  minDate: Date;\n\n  constructor(\n    private fb: FormBuilder,\n    private _stock: stockcomponentservice,\n    private http: HttpClient,\n    public router: Router\n  ) {\n\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._stock.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.stockmasters = data\n    })\n    this.dtTrigger.next();\n\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/stock-statement\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.stockmasters = resp.data;\n\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n    //     {\n    //       title: \"Submission Date\",\n    //       data: \"SUBMISSION_DATE\",\n    //     },\n    //     {\n    //       title: \"Statement Date\",\n    //       data: \"STATEMENT_DATE\",\n    //     },\n    //     {\n    //       title: \"Raw Materials\",\n    //       data: \"RAW_MATERIAL\",\n    //     },\n    //     {\n    //       title: \"R/M Margin %\",\n    //       data: \"RAW_MARGIN\",\n    //     },\n    //     {\n    //       title: \"Work In Progress\",\n    //       data: \"WORK_PROGRESS\",\n    //     },\n\n    //     {\n    //       title: \"Finished Goods\",\n    //       data: \"FINISHED_GOODS\",\n    //     },\n    //     {\n    //       title: \"W/P Margin %\",\n    //       data: \"WORK_MARGIN\",\n    //     },\n    //     {\n    //       title: \"F/G Margin %\",\n    //       data: \"FINISHED_MARGIN\",\n    //     },\n    //     {\n    //       title: \"Remarks\",\n    //       data: \"REMARK\",\n    //     },\n    //   ],\n    //   dom: \"Blrtip\",\n    // };\n\n\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      SUBMISSION_DATE: [\"\", [Validators.required]],\n      STATEMENT_DATE: [\"\", [Validators.required]],\n      RAW_MATERIAL: [\"\", [Validators.pattern]],\n      RAW_MARGIN: [\"\", [Validators.pattern]],\n      WORK_PROGRESS: [\"\", [Validators.pattern]],\n      FINISHED_GOODS: [\"\", [Validators.pattern, Validators.required]],\n      WORK_MARGIN: [\"\", [Validators.pattern]],\n      FINISHED_MARGIN: [\"\", [Validators.pattern, Validators.required]],\n      REMARK: [\"\", [Validators.pattern]],\n    });\n  }\n\n  submit(event) {\n    let submissiondate\n    let statementdate\n    event.preventDefault();\n    this.formSubmitted = true;\n    if (this.angForm.valid) {\n\n      const formVal = this.angForm.value;\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n        'SUBMISSION_DATE': (formVal.SUBMISSION_DATE == '' || formVal.SUBMISSION_DATE == 'Invalid date') ? submissiondate = '' : submissiondate = moment(formVal.SUBMISSION_DATE).format('DD/MM/YYYY'),\n\n        'STATEMENT_DATE': (formVal.STATEMENT_DATE == '' || formVal.STATEMENT_DATE == 'Invalid date') ? statementdate = '' : statementdate = moment(formVal.STATEMENT_DATE).format('DD/MM/YYYY'),\n\n        RAW_MATERIAL: formVal.RAW_MATERIAL,\n        RAW_MARGIN: formVal.RAW_MARGIN,\n        WORK_PROGRESS: formVal.WORK_PROGRESS,\n        FINISHED_GOODS: formVal.FINISHED_GOODS,\n        WORK_MARGIN: formVal.WORK_MARGIN,\n        FINISHED_MARGIN: formVal.FINISHED_MARGIN,\n        REMARK: formVal.REMARK,\n        LEDGER_Bal: formVal.LEDGER_Bal,\n      };\n\n      this._stock.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          this.formSubmitted = false;\n          let info = []\n          info.push(data.id)\n          info.push(\"stockStatement\")\n\n          this.newItemEvent(info);\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n    }\n\n  }\n  //check  if margin values are below 100\n  checkmargin(ele: any) {\n\n    //check  if given value  is below 100\n\n    if (ele <= 100) {\n\n    }\n    else {\n      Swal.fire(\"Invalid Input\", \"Please insert values below 100\", \"error\");\n    }\n  }\n\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n\n    let submissiondate\n    let statementdate\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._stock.getFormData(id).subscribe((data) => {\n      this.updatecheckdata = data\n\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n      dropdown.account = data.AC_NO;\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newStockEvent.emit(obj1);\n      (this.updateID = data.id);\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      this.angForm.patchValue({\n\n        'SUBMISSION_DATE': (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? submissiondate = '' : submissiondate = data.SUBMISSION_DATE,\n\n        'STATEMENT_DATE': (data.STATEMENT_DATE == 'Invalid date' || data.STATEMENT_DATE == '' || data.STATEMENT_DATE == null) ? statementdate = '' : statementdate = data.STATEMENT_DATE,\n\n        RAW_MATERIAL: data.RAW_MATERIAL,\n        RAW_MARGIN: data.RAW_MARGIN,\n        WORK_PROGRESS: data.WORK_PROGRESS,\n        FINISHED_GOODS: data.FINISHED_GOODS,\n        WORK_MARGIN: data.WORK_MARGIN,\n        FINISHED_MARGIN: data.FINISHED_MARGIN,\n        REMARK: data.REMARK,\n      });\n    });\n  }\n\n  updateData() {\n    let submissiondate\n    let statementdate\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data[\"AC_TYPE\"] = this.scheme\n    data[\"AC_NO\"] = this.Accountno\n    if (this.updatecheckdata.SUBMISSION_DATE != data.SUBMISSION_DATE) {\n      (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? (submissiondate = '', data['SUBMISSION_DATE'] = submissiondate) : (submissiondate = data.SUBMISSION_DATE, data['SUBMISSION_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.STATEMENT_DATE != data.STATEMENT_DATE) {\n      (data.STATEMENT_DATE == 'Invalid date' || data.STATEMENT_DATE == '' || data.STATEMENT_DATE == null) ? (statementdate = '', data['STATEMENT_DATE'] = statementdate) : (statementdate = data.STATEMENT_DATE, data['STATEMENT_DATE'] = moment(statementdate).format('DD/MM/YYYY'))\n    }\n    this._stock.updateData(data).subscribe(() => {\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      // this.rerender();\n      this.resetForm();\n    });\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n  //function for delete button clicked\n  delClickHandler(id: any): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to delete Submission Date  data\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._stock.deleteData(id).subscribe((data1) => {\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n        }),\n          (error) => {\n            console.log(error);\n          };\n        Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#informationtable tfoot tr').appendTo('#informationtable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n\n    }\n    this.newStockEvent.emit(obj1);\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>Stock Statement</h5>\n        <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n      </div>\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"subm_date\" required=\"\" max=\"{{datemax | date:'yyyy-MM-dd'}}\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    formControlName=\"SUBMISSION_DATE\" #autofocus/> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"SUBMISSION_DATE\" id=\"subm_date\" class=\"form-control\"\n                    [(ngModel)]=\"submissiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"SUBMISSION_DATE\" [maxDate]=\"maxDate\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"subm_date\">Submission Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUBMISSION_DATE'].invalid &&\n                  (angForm.controls['SUBMISSION_DATE'].dirty ||\n                    angForm.controls['SUBMISSION_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"stmt_date\" required=\"\" max=\"{{datemax | date:'yyyy-MM-dd'}}\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    formControlName=\"STATEMENT_DATE\"  /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"STATEMENT_DATE\" id=\"stmt_date\" class=\"form-control\"\n                    [(ngModel)]=\"statementdate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"minDate\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"STATEMENT_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"stmt_date\">Statement Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['STATEMENT_DATE'].invalid &&\n                  (angForm.controls['STATEMENT_DATE'].dirty ||\n                    angForm.controls['STATEMENT_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['STATEMENT_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['STATEMENT_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"raw_material\" class=\"form-control\" placeholder=\" \" id=\"raw_material\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    title=\"Input allowed only 0-9\" formControlName=\"RAW_MATERIAL\" />\n                  <label for=\"raw_material\">Raw Material Cost</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['RAW_MATERIAL'].invalid &&\n                  (angForm.controls['RAW_MATERIAL'].dirty ||\n                    angForm.controls['RAW_MATERIAL'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['RAW_MATERIAL'].errors?.pattern\">\n                  Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"rm_margin\" class=\"form-control\" placeholder=\" \" id=\"rm_margin\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    #marginmaterialcost (keyup)=\"checkmargin(marginmaterialcost.value)\" pattern=\"\\d{1,5}(\\.\\d{2})?\"\n                    maxlength=\"3\" title=\"Input allowed only  0-9\" formControlName=\"RAW_MARGIN\" />\n                  <label for=\"rm_margin\">(Margin) Raw Material Cost </label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['RAW_MARGIN'].invalid &&\n                  (angForm.controls['RAW_MARGIN'].dirty ||\n                    angForm.controls['RAW_MARGIN'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['RAW_MARGIN'].errors?.pattern\">\n                  Input allowed only . 0-9\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"wp_goods\" class=\"form-control\" placeholder=\" \" id=\"wp_goods\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\" pattern=\"\\d{1,20}(\\.\\d{2})?\"\n                    title=\"Input allowed only 0-9\" formControlName=\"WORK_PROGRESS\" />\n                  <label for=\"wp_goods\">Work In Progress Goods</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['WORK_PROGRESS'].invalid &&\n                  (angForm.controls['WORK_PROGRESS'].dirty ||\n                    angForm.controls['WORK_PROGRESS'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['WORK_PROGRESS'].errors?.pattern\">\n                  Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"wp_margin\" class=\"form-control\" placeholder=\" \" id=\"wp_margin\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\"\n                    #marginworkprogress (keyup)=\"checkmargin(marginworkprogress.value)\" pattern=\"\\d{1,5}(\\.\\d{2})?\"\n                    title=\"Input allowed only  0-9\" formControlName=\"WORK_MARGIN\" />\n                  <label for=\"wp_margin\">(Margin) Work In Progress Goods</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['WORK_MARGIN'].invalid &&\n                  (angForm.controls['WORK_MARGIN'].dirty ||\n                    angForm.controls['WORK_MARGIN'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['WORK_MARGIN'].errors?.pattern\">\n                  Input allowed only . 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"fg_cost\" class=\"form-control\" placeholder=\" \" id=\"fg_cost\" required=\"\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"FINISHED_GOODS\" />\n                  <label for=\"fg_cost\">Finished Goods Cost<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['FINISHED_GOODS'].invalid &&\n                  (angForm.controls['FINISHED_GOODS'].dirty ||\n                    angForm.controls['FINISHED_GOODS'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['FINISHED_GOODS'].errors?.pattern ||\n                    angForm.controls['FINISHED_GOODS'].errors?.required\n                  \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"fg_margin\" class=\"form-control\" placeholder=\" \" id=\"fg_margin\" required=\"\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\"\n                    #margingoodscost (keyup)=\"checkmargin(margingoodscost.value)\" pattern=\"\\d{1,5}(\\.\\d{2})?\"\n                    title=\"Input allowed only  0-9\" formControlName=\"FINISHED_MARGIN\" />\n                  <label for=\"fg_margin\">(Margin) Finished Goods Cost<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['FINISHED_MARGIN'].invalid &&\n                  (angForm.controls['FINISHED_MARGIN'].dirty ||\n                    angForm.controls['FINISHED_MARGIN'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['FINISHED_MARGIN'].errors?.pattern ||\n                    angForm.controls['FINISHED_MARGIN'].errors?.required\n                  \">\n                  This field is required and Input allowed only . 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"remarks\" class=\"form-control\" placeholder=\" \" id=\"remarks\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" title=\"Input allowed only  A-Z a-z 0-9  - / . (Space)\" maxlength=\"90\"\n                    formControlName=\"REMARK\" />\n                  <label for=\"remarks\">Remark</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['REMARK'].invalid &&\n                  (angForm.controls['REMARK'].dirty ||\n                    angForm.controls['REMARK'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['REMARK'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <!-- [disabled]=\"angForm.invalid\" -->\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\" *ngIf=\"showButton\">Submit</button>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n              &nbsp;\n              <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"newbtnShow\" (click)=\"addNewData()\">Cancel</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card shadow\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"table-responsive\">\n                <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                  class=\"table table-striped table-bordered table-hover compact\">\n                  <thead>\n                    <th style=\"text-transform: captalize;\">Action</th>\n                    <th style=\"text-transform: captalize;\">Submission Date</th>\n                    <th style=\"text-transform: captalize;\">Raw Materials</th>\n                    <th style=\"text-transform: captalize;\">R/M Margin</th>\n                    <th style=\"text-transform: captalize;\">Work In Progress</th>\n                    <th style=\"text-transform: captalize;\">Finished Goods</th>\n                    <th style=\"text-transform: captalize;\">W/P Margin</th>\n                    <th style=\"text-transform: captalize;\">F/G Margin</th>\n                    <th style=\"text-transform: captalize;\">Remarks</th>\n                  </thead>\n                  <tbody *ngIf=\"stockmasters?.length != 0\">\n                    <tr *ngFor=\"let data of stockmasters\">\n                      <td>\n                        <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\"\n                          placement=\"bottom\" ngbTooltip=\"Edit\"></span>\n                        &nbsp;\n                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                      </td>\n\n                      <td class=\"td_right\">{{ data.SUBMISSION_DATE }}</td>\n                      <td class=\"td_right\">{{ data.STATEMENT_DATE }}</td>\n                      <td class=\"td_right\">{{ data.RAW_MATERIAL }}</td>\n                      <td class=\"td_right\">{{ data.RAW_MARGIN }}</td>\n                      <td>{{ data.WORK_PROGRESS }}</td>\n                      <td class=\"td_right\">{{ data.WORK_MARGIN }}</td>\n                      <td>{{ data.FINISHED_GOODS }}</td>\n                      <td class=\"td_right\">{{ data.FINISHED_MARGIN }}</td>\n                      <td>{{ data.REMARK }}</td>\n                    </tr>\n                  </tbody>\n                  <tbody *ngIf=\"stockmasters?.length == 0\">\n                    <tr>\n                      <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                    </tr>\n                  </tbody>\n                  <!-- <tfoot #filters class=\"filters\">\n                    <tr class=\"testing\">\n                      <th class=\"testing\"></th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SUBMISSION_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"STATEMENT_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"RAW_MATERIAL\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"RAW_MARGIN\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"WORK_PROGRESS\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"WORK_MARGIN\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"FINISHED_GOODS\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"FINISHED_MARGIN\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"REMARK\" />\n                      </th>\n                    </tr>\n                  </tfoot> -->\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { stockcomponentservice } from './stock-statement.component.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { StockStatementComponent } from './stock-statement.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../../../user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { StockStatementRoutingModule } from './stock-statement-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n@NgModule({\n  declarations: [StockStatementComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    StockStatementRoutingModule,\n    DataTablesModule\n  ],\n  providers: [stockcomponentservice,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [StockStatementComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class StockStatementModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { VehicleComponent } from './vehicle.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VehicleComponent,\n    data: {\n      title: 'Vehicle',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VehicleRoutingModule { }\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild, Input, Output,\n  EventEmitter,\n  ElementRef,\n} from \"@angular/core\";\n// Used to Call API\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs\";\nimport Swal from \"sweetalert2\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { VehicleService } from \"./vehicle.service\";\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\nimport { environment } from \"src/environments/environment\";\nimport { Router } from \"@angular/router\";\nimport * as moment from 'moment';\nimport { first } from \"rxjs/operators\";\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface VehicleMaster {\n  id: number;\n  AC_ACNOTYPE: string;\n  AC_TYPE: number;\n  SUBMISSION_DATE: Date;\n  RTO_REG_DATE: Date;\n  VEHICLE_MAKE: string;\n  MANUFACTURE_YEAR: number;\n  VEHICLE_NO: string;\n  CHASSIS_NO: string;\n  AQUISITION_DATE: Date;\n  NEW_VEHICLE: number;\n  SUPPLIER_NAME: string;\n  PURCHASE_PRICE: number;\n  MARGIN: number;\n  REMARK: string;\n}\n\n@Component({\n  selector: \"app-vehicle\",\n  templateUrl: \"./vehicle.component.html\",\n  styleUrls: [\"./vehicle.component.scss\"],\n})\nexport class VehicleComponent implements OnInit, AfterViewInit, OnDestroy {\n  formSubmitted = false;\n  //passing data form child to parent\n  @Output() newVehicalEvent = new EventEmitter<any>();\n  datemax: string;\n  newbtnShow: boolean;\n  newItemEvent(value) {\n    this.newVehicalEvent.emit(value);\n  }\n  //passing data from parent to child component\n  @Input() scheme: any;\n  @Input() Accountno: any;\n  @Input() AC_ACNOTYPE: any;\n  @Input() branchCode: any;\n  @Input() sec_code: any;\n  //api\n  //api\n  url = environment.base_url;\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  isnew_equip: boolean = false;\n  new_article: boolean;\n\n  // for date \n  submissiondate: any = null\n  rtoregdate: any = null\n  acquisitiondate: any = null\n  maxDate: Date;\n  minDate: Date;\n\n  updateID: number; //variable for updating\n  // Store data from backend\n  vehiclemasters: VehicleMaster[];\n\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  page: number;\n  filterData = {};\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private _vehicle: VehicleService,\n    public router: Router\n  ) {\n\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      dom: 'ftip'\n    }\n\n    let obj = {\n      scheme: this.scheme,\n      ac_no: this.Accountno,\n      acnotype: this.AC_ACNOTYPE,\n      branch: this.branchCode\n    }\n    this._vehicle.getdatatable(obj).pipe(first()).subscribe((data) => {\n      this.vehiclemasters = data\n    })\n    this.dtTrigger.next();\n\n\n    // this.dtExportButtonOptions = {\n    //   pagingType: \"full_numbers\",\n    //   paging: true,\n    //   pageLength: 10,\n    //   serverSide: true,\n    //   processing: true,\n    //   ajax: (dataTableParameters: any, callback) => {\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\n    //     dataTableParameters.maxNumber =\n    //       dataTableParameters.start + dataTableParameters.length;\n    //     let datatableRequestParam: any;\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\n\n    //     dataTableParameters.columns.forEach((element) => {\n    //       if (element.search.value != \"\") {\n    //         let string = element.search.value;\n    //         this.filterData[element.data] = string;\n    //       } else {\n    //         let getColumnName = element.data;\n    //         let columnValue = element.value;\n    //         if (this.filterData.hasOwnProperty(element.data)) {\n    //           let value = this.filterData[getColumnName];\n    //           if (columnValue != undefined || value != undefined) {\n    //             delete this.filterData[element.data];\n    //           }\n    //         }\n    //       }\n    //     });\n    //     dataTableParameters[\"filterData\"] = this.filterData;\n    //     this.http\n    //       .post<DataTableResponse>(\n    //         this.url + \"/vehicle\",\n    //         dataTableParameters\n    //       )\n    //       .subscribe((resp) => {\n    //         this.vehiclemasters = resp.data;\n    //         callback({\n    //           recordsTotal: resp.recordsTotal,\n    //           recordsFiltered: resp.recordsTotal,\n    //           data: [],\n    //         });\n    //       });\n    //   },\n\n    //   columns: [\n    //     {\n    //       title: \"Action\",\n    //       render: function (data: any, type: any, full: any) {\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n    //       },\n    //     },\n    //     {\n    //       title: \"Submission Date\",\n    //       data: \"SUBMISSION_DATE\",\n    //     },\n    //     {\n    //       title: \"RTO Registration Date\",\n    //       data: \"RTO_REG_DATE\",\n    //     },\n    //     {\n    //       title: \"Vehicle Make.\",\n    //       data: \"VEHICLE_MAKE\",\n    //     },\n    //     {\n    //       title: \"Year of Manufacture\",\n    //       data: \"MANUFACTURE_YEAR\",\n    //     },\n    //     {\n    //       title: \"Vehicle No.\",\n    //       data: \"VEHICLE_NO\",\n    //     },\n    //     {\n    //       title: \"Chassis No\",\n    //       data: \"CHASSIS_NO\",\n    //     },\n    //     {\n    //       title: \"Date of Acquisition\",\n    //       data: \"AQUISITION_DATE\",\n    //     },\n    //     {\n    //       title: \"New Vehicle\",\n    //       data: \"NEW_VEHICLE\",\n    //     },\n    //     {\n    //       title: \"Supplier Name\",\n    //       data: \"SUPPLIER_NAME\",\n    //     },\n    //     {\n    //       title: \"Purchase Price\",\n    //       data: \"PURCHASE_PRICE\",\n    //     },\n    //     {\n    //       title: \"Margin %\",\n    //       data: \"MARGIN\",\n    //     },\n    //     {\n    //       title: \"Remarks\",\n    //       data: \"REMARK\",\n    //     },\n    //   ],\n    //   dom: \"Blrtip\",\n    // };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      SUBMISSION_DATE: [\"\", [Validators.required]],\n      RTO_REG_DATE: [\"\", [Validators.required]],\n      VEHICLE_MAKE: [\"\", [Validators.pattern, Validators.required]],\n      MANUFACTURE_YEAR: [\"\", [Validators.pattern, Validators.required]],\n      VEHICLE_NO: [\"\", [Validators.pattern, Validators.required]],\n      CHASSIS_NO: [\"\", [Validators.pattern]],\n      AQUISITION_DATE: [\"\"],\n      NEW_VEHICLE: [\"\"],\n      SUPPLIER_NAME: [\"\", [Validators.pattern]],\n      PURCHASE_PRICE: [\"\", [Validators.pattern, Validators.required]],\n      MARGIN: [\"\", [Validators.pattern]],\n      REMARK: [\"\", [Validators.pattern]],\n    });\n  }\n\n  submit(event) {\n    let submissiondate\n    let acquisitiondate\n    event.preventDefault();\n    this.formSubmitted = true;\n\n    if (this.angForm.valid) {\n      console.log(this.angForm.value); // Process your form\n      const formVal = this.angForm.value;\n      const dataToSend = {\n        AC_TYPE: this.scheme,\n        AC_NO: this.Accountno,\n        AC_ACNOTYPE: this.AC_ACNOTYPE,\n        BRANCH_CODE: this.branchCode,\n        SECU_CODE: this.sec_code,\n        'SUBMISSION_DATE': (formVal.SUBMISSION_DATE == '' || formVal.SUBMISSION_DATE == 'Invalid date') ? submissiondate = '' : submissiondate = moment(formVal.SUBMISSION_DATE).format('DD/MM/YYYY'),\n\n        RTO_REG_DATE: formVal.RTO_REG_DATE,\n        VEHICLE_MAKE: formVal.VEHICLE_MAKE,\n        MANUFACTURE_YEAR: formVal.MANUFACTURE_YEAR,\n        VEHICLE_NO: formVal.VEHICLE_NO,\n        CHASSIS_NO: formVal.CHASSIS_NO,\n        'AQUISITION_DATE': (formVal.AQUISITION_DATE == '' || formVal.AQUISITION_DATE == 'Invalid date') ? acquisitiondate = '' : acquisitiondate = moment(formVal.AQUISITION_DATE).format('DD/MM/YYYY'),\n\n        NEW_VEHICLE: (formVal.NEW_VEHICLE == true ? '1' : '0'),\n        SUPPLIER_NAME: formVal.SUPPLIER_NAME,\n        PURCHASE_PRICE: formVal.PURCHASE_PRICE,\n        MARGIN: formVal.MARGIN,\n        REMARK: formVal.REMARK,\n      };\n      console.log(dataToSend);\n      this._vehicle.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          this.formSubmitted = false;\n          let info = []\n          info.push(data.id)\n          info.push(\"vehicle\")\n\n          this.newItemEvent(info);\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n\n    }\n\n\n  }\n\n  //check  if margin values are below 100\n  checkmargin(ele: any) {\n    //check  if given value  is below 100\n    console.log(ele);\n    if (ele <= 100) {\n      console.log(ele);\n    }\n    else {\n      this.angForm.controls['MARGIN'].reset()\n      Swal.fire(\"Invalid Input\", \"Please insert values below 100\", \"error\");\n    }\n  }\n  updatecheckdata: any\n  //function for edit button clicked\n  editClickHandler(id: any): void {\n    let submissiondate\n    let acquisitiondate\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._vehicle.getFormData(id).subscribe((data) => {\n      this.updatecheckdata = data\n\n\n      //sending values to parent\n      let dropdown: any = {};\n      dropdown.scheme = data.AC_TYPE;\n\n\n      dropdown.account = data.AC_NO;\n\n      let obj1 = {\n        'AccountType': data.AC_TYPE,\n        'AccountNo': data.AC_NO,\n        'SchemeType': data.AC_ACNOTYPE\n      }\n      this.newVehicalEvent.emit(obj1);\n      this.updateID = data.id;\n\n      this.scheme = data.AC_TYPE\n      this.Accountno = data.AC_NO\n      this.angForm.patchValue({\n\n        AC_ACNOTYPE: data.AC_ACNOTYPE,\n        'SUBMISSION_DATE': (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? submissiondate = '' : submissiondate = data.SUBMISSION_DATE,\n\n        RTO_REG_DATE: data.RTO_REG_DATE,\n        VEHICLE_MAKE: data.VEHICLE_MAKE,\n        MANUFACTURE_YEAR: data.MANUFACTURE_YEAR,\n        VEHICLE_NO: data.VEHICLE_NO,\n        CHASSIS_NO: data.CHASSIS_NO,\n        'AQUISITION_DATE': (data.AQUISITION_DATE == 'Invalid date' || data.AQUISITION_DATE == '' || data.AQUISITION_DATE == null) ? acquisitiondate = '' : acquisitiondate = data.AQUISITION_DATE,\n\n        NEW_VEHICLE: (data.NEW_VEHICLE == '1' ? true : false),\n        SUPPLIER_NAME: data.SUPPLIER_NAME,\n        PURCHASE_PRICE: data.PURCHASE_PRICE,\n        MARGIN: data.MARGIN,\n        REMARK: data.REMARK,\n      });\n    });\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n\n\n  updateData() {\n    let submissiondate\n    let acquisitiondate\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data[\"AC_TYPE\"] = this.scheme\n    data[\"AC_NO\"] = this.Accountno\n    data['NEW_VEHICLE'] = (data.NEW_VEHICLE == true ? '1' : '0')\n    if (this.updatecheckdata.SUBMISSION_DATE != data.SUBMISSION_DATE) {\n      (data.SUBMISSION_DATE == 'Invalid date' || data.SUBMISSION_DATE == '' || data.SUBMISSION_DATE == null) ? (submissiondate = '', data['SUBMISSION_DATE'] = submissiondate) : (submissiondate = data.SUBMISSION_DATE, data['SUBMISSION_DATE'] = moment(submissiondate).format('DD/MM/YYYY'))\n    }\n    if (this.updatecheckdata.AQUISITION_DATE != data.AQUISITION_DATE) {\n      (data.AQUISITION_DATE == 'Invalid date' || data.AQUISITION_DATE == '' || data.AQUISITION_DATE == null) ? (acquisitiondate = '', data['AQUISITION_DATE'] = acquisitiondate) : (acquisitiondate = data.AQUISITION_DATE, data['AQUISITION_DATE'] = moment(acquisitiondate).format('DD/MM/YYYY'))\n    }\n    this._vehicle.updateData(data).subscribe(() => {\n      console.log(data);\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n\n      this.resetForm();\n    });\n  }\n  //function for delete button clicked\n  delClickHandler(id: any): void {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to delete Submission Date  data\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._vehicle.deleteData(id).subscribe((data1) => {\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n        }),\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#informationtable tfoot tr').appendTo('#informationtable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    let obj1 = {\n      'AccountType': null,\n      'AccountNo': null,\n\n    }\n    this.newVehicalEvent.emit(obj1);\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>Vehicle</h5>\n        <!-- <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6> -->\n      </div>\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"subm_date\" required=\"\" max=\"{{datemax | date:'yyyy-MM-dd'}}\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    formControlName=\"SUBMISSION_DATE\"  #autofocus /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"SUBMISSION_DATE\" id=\"subm_date\" class=\"form-control\"\n                    [(ngModel)]=\"submissiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"SUBMISSION_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"subm_date\">Submission Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUBMISSION_DATE'].invalid &&\n                  (angForm.controls['SUBMISSION_DATE'].dirty ||\n                    angForm.controls['SUBMISSION_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['SUBMISSION_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"RTORegistrationDate\" required=\"\"\n                  [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    max=\"{{datemax | date:'yyyy-MM-dd'}}\" formControlName=\"RTO_REG_DATE\"  /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"RTO_REG_DATE\" id=\"RTORegistrationDate\"\n                    class=\"form-control\" [(ngModel)]=\"rtoregdate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [maxDate]=\"maxDate\" [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"RTO_REG_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"RTORegistrationDate\">RTO Registration Date<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['RTO_REG_DATE'].invalid &&\n                  (angForm.controls['RTO_REG_DATE'].dirty ||\n                    angForm.controls['RTO_REG_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['RTO_REG_DATE'].errors?.required\">\n                  This field is required\n                </div>\n                <div *ngIf=\"angForm.controls['RTO_REG_DATE'].invalid\">\n                  Fill valid Date\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"vehicle_make\" class=\"form-control\" placeholder=\" \" id=\"vehicle_make\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    required=\"\" pattern=\"^[A-Za-z'\\.\\-\\s]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    maxlength=\"50\" formControlName=\"VEHICLE_MAKE\" />\n                  <label for=\"vehicle_make\">Vehicle Make<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['VEHICLE_MAKE'].invalid &&\n                  (angForm.controls['VEHICLE_MAKE'].dirty ||\n                    angForm.controls['VEHICLE_MAKE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['VEHICLE_MAKE'].errors?.pattern ||\n                    angForm.controls['VEHICLE_MAKE'].errors?.required\n                  \">\n                  This field is required and Input allowed only A-Z a-z - / .\n                  (Space)\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"YearofManufacture\" required=\"\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\" pattern=\"^[0-9]+$\" maxlength=\"4\"\n                    formControlName=\"MANUFACTURE_YEAR\" title=\"Input allowed only  0-9\" />\n                  <label for=\"YearofManufacture\">Year of Manufacture<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MANUFACTURE_YEAR'].invalid &&\n                  (angForm.controls['MANUFACTURE_YEAR'].dirty ||\n                    angForm.controls['MANUFACTURE_YEAR'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['MANUFACTURE_YEAR'].errors?.pattern ||\n                    angForm.controls['MANUFACTURE_YEAR'].errors?.required\n                  \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"VehicleNumber\" class=\"form-control\" placeholder=\" \" id=\"VehicleNumber\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) ||($event.charCode >= 48 && $event.charCode <= 57)|| ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    required=\"\" pattern=\"^[A-Za-z0-9\\./ -]+$\" maxlength=\"30\"\n                    title=\"Input allowed only A-Z a-z 0-9  - / . (Space)\" formControlName=\"VEHICLE_NO\" />\n                  <label for=\"VehicleNumber\">Vehicle Number<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['VEHICLE_NO'].invalid &&\n                  (angForm.controls['VEHICLE_NO'].dirty ||\n                    angForm.controls['VEHICLE_NO'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['VEHICLE_NO'].errors?.pattern ||\n                    angForm.controls['VEHICLE_NO'].errors?.required\n                  \">\n                  This field is required and Input allowed only A-Z a-z 0-9 - /\n                  . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-2\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"ChasisNumber\" class=\"form-control\" placeholder=\" \" id=\"ChasisNumber\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) ||($event.charCode >= 48 && $event.charCode <= 57)|| ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z0-9\\./ -]+$\" maxlength=\"30\" title=\"Input allowed only A-Z a-z 0-9  - / . (Space)\"\n                    formControlName=\"CHASSIS_NO\" />\n                  <label for=\"ChasisNumber\">Chasis Number</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['CHASSIS_NO'].invalid &&\n                  (angForm.controls['CHASSIS_NO'].dirty ||\n                    angForm.controls['CHASSIS_NO'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['CHASSIS_NO'].errors?.pattern\">\n                  Input allowed only A-Z a-z 0-9 - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <!-- <input type=\"date\" class=\"form-control\" placeholder=\" \" id=\"DateofAcquisition\" required=\"\"\n                    max=\"{{datemax | date:'yyyy-MM-dd'}}\" formControlName=\"AQUISITION_DATE\"  id=\"date\" /> -->\n                  <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AQUISITION_DATE\" id=\"DateofAcquisition\"\n                    class=\"form-control\" [(ngModel)]=\"acquisitiondate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                    [maxDate]=\"maxDate\" [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"AQUISITION_DATE\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" bsDatepicker>\n                  <label for=\"DateofAcquisition\">Date of Acquisition</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['AQUISITION_DATE'].invalid &&\n                  (angForm.controls['AQUISITION_DATE'].dirty ||\n                    angForm.controls['AQUISITION_DATE'].touched)\n                \" class=\"alert alert-danger\">\n                Please fill this field\n              </div>\n            </div>\n            <div class=\"col-sm\">\n              <!-- <div class=\"border-checkbox-section\">\n                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                  <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\"\n                   [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    [checked]=\"new_article == true\" formControlName=\"NEW_VEHICLE\" />\n                  <label class=\"border-checkbox-label\" for=\"checkbox1\">New Vehicle ?<span\n                      class=\"required\"> </span></label>\n                </div>\n              </div> -->\n              <div class=\"checkbox checkbox-primary\">\n                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                  <input type=\"checkbox\" class=\"border-checkbox\" id=\"checkbox1\" formControlName=\"NEW_VEHICLE\">\n                  <label class=\"border-checkbox-label\" for=\"checkbox1\">New Vehicle?\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"SupplierName\" class=\"form-control\" placeholder=\" \" id=\"SupplierName\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\" maxlength=\"90\"\n                    formControlName=\"SUPPLIER_NAME\" />\n                  <label for=\"SupplierName\">Supplier Name</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['SUPPLIER_NAME'].invalid &&\n                  (angForm.controls['SUPPLIER_NAME'].dirty ||\n                    angForm.controls['SUPPLIER_NAME'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['SUPPLIER_NAME'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-3\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"PurchasePrice\" class=\"form-control\" placeholder=\" \" id=\"PurchasePrice\"\n                    [ngClass]=\"{'form-submitted': formSubmitted}\"\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\" required=\"\"\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" title=\"Input allowed only  0-9\" formControlName=\"PURCHASE_PRICE\" />\n                  <label for=\"PurchasePrice\">Purchase Price<sub class=\"required\">* </sub></label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['PURCHASE_PRICE'].invalid &&\n                  (angForm.controls['PURCHASE_PRICE'].dirty ||\n                    angForm.controls['PURCHASE_PRICE'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"\n                    angForm.controls['PURCHASE_PRICE'].errors?.pattern ||\n                    angForm.controls['PURCHASE_PRICE'].errors?.required\n                  \">\n                  This field is required and Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-2\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"margin\" class=\"form-control\" placeholder=\" \" id=\"margin\" #margin\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                    (keyup)=\"checkmargin(margin.value)\" pattern=\"\\d{1,5}(\\.\\d{2})?\" title=\"Input allowed only  0-9\"\n                    formControlName=\"MARGIN\" />\n                  <label for=\"margin\">Margin %</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['MARGIN'].invalid &&\n                  (angForm.controls['MARGIN'].dirty ||\n                    angForm.controls['MARGIN'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['MARGIN'].errors?.pattern\">\n                  Input allowed only 0-9\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm-8\">\n              <div class=\"form-group input-group\">\n                <span class=\"border-lable-flt\">\n                  <input type=\"text\" name=\"remarks\" class=\"form-control\" placeholder=\" \" id=\"remarks\"\n                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) || ($event.charCode <= 32) || $event.charCode == 46 || $event.charCode == 45 || $event.charCode == 47\"\n                    pattern=\"^[A-Za-z'\\.\\-\\s]+$\" maxlength=\"90\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                    formControlName=\"REMARK\" />\n                  <label for=\"remarks\">Remarks</label>\n                </span>\n              </div>\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                  angForm.controls['REMARK'].invalid &&\n                  (angForm.controls['REMARK'].dirty ||\n                    angForm.controls['REMARK'].touched)\n                \" class=\"alert alert-danger\">\n                <div *ngIf=\"angForm.controls['REMARK'].errors?.pattern\">\n                  Input allowed only A-Z a-z - / . (Space)\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm\">\n\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit($event)\" *ngIf=\"showButton\">Submit</button>\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n              &nbsp;\n              <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"newbtnShow\" (click)=\"addNewData()\">Cancel</button>\n            </div>\n          </div>\n\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!-- <ng-container *ngIf='router.url===\"/master/Maintainance/securityDetails\"'> -->\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card shadow\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-sm\">\n              <div class=\"table-responsive\">\n                <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                  class=\"table table-striped table-bordered table-hover compact\">\n                  <thead>\n                    <th style=\"text-transform: captalize;\">Action</th>\n                    <th style=\"text-transform: captalize;\">Submission Date</th>\n                    <th style=\"text-transform: captalize;\">RTO Registration Date</th>\n                    <th style=\"text-transform: captalize;\">Vehicle Make</th>\n                    <th style=\"text-transform: captalize;\">Year of Manufacture</th>\n                    <th style=\"text-transform: captalize;\">Vehicle Number</th>\n                    <th style=\"text-transform: captalize;\">Chassis Number</th>\n                    <th style=\"text-transform: captalize;\">Date of Acquisition</th>\n                    <th style=\"text-transform: captalize;\">New Vehicle</th>\n                    <th style=\"text-transform: captalize;\">Supplier Name</th>\n                    <th style=\"text-transform: captalize;\">Purchase Price</th>\n                    <th style=\"text-transform: captalize;\">Margin </th>\n                    <th style=\"text-transform: captalize;\">Remarks </th>\n                  </thead>\n                  <tbody *ngIf=\"vehiclemasters?.length != 0\">\n                    <tr *ngFor=\"let data of vehiclemasters\">\n                      <td>\n                        <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\" (click)=\"editClickHandler(data.id)\"\n                          placement=\"bottom\" ngbTooltip=\"Edit\"></span>\n                        &nbsp;\n                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                      </td>\n\n                      <td class=\"td_right\">{{ data.SUBMISSION_DATE }}</td>\n                      <td class=\"td_right\">{{ data.RTO_REG_DATE }}</td>\n                      <td>{{ data.VEHICLE_MAKE }}</td>\n                      <td class=\"td_right\">{{ data.MANUFACTURE_YEAR }}</td>\n                      <td class=\"td_right\">{{ data.VEHICLE_NO }}</td>\n                      <td class=\"td_right\">{{ data.CHASSIS_NO }}</td>\n                      <td class=\"td_right\">{{ data.AQUISITION_DATE }}</td>\n                      <td>{{ data.NEW_VEHICLE == '1' ? 'Yes' : 'No' }}</td>\n                      <td>{{ data.SUPPLIER_NAME }}</td>\n                      <td class=\"td_right\">{{ data.PURCHASE_PRICE }}</td>\n                      <td class=\"td_right\">{{ data.MARGIN }}</td>\n                      <td>{{ data.REMARK }}</td>\n                    </tr>\n                  </tbody>\n                  <tbody *ngIf=\"vehiclemasters?.length == 0\">\n                    <tr>\n                      <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                    </tr>\n                  </tbody>\n                  <!-- <tfoot #filters class=\"filters\">\n                    <tr class=\"testing\">\n                      <th class=\"testing\"></th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SUBMISSION_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"RTO_REG_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"VEHICLE_MAKE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"MANUFACTURE_YEAR\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"VEHICLE_NO\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"CHASSIS_NO\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"AQUISITION_DATE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"NEW_VEHICLE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"SUPPLIER_NAME\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"PURCHASE_PRICE\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"MARGIN\" />\n                      </th>\n                      <th>\n                        <input type=\"text\" class=\"form-control\" name=\"REMARK\" />\n                      </th>\n                    </tr>\n                  </tfoot> -->\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<!-- </ng-container> -->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { VehicleService } from './vehicle.service'\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { VehicleComponent } from './vehicle.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../../../user-auth.interceptor';\n\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { PERFECT_SCROLLBAR_CONFIG } from \"ngx-perfect-scrollbar\";\nimport { PerfectScrollbarConfigInterface } from \"ngx-perfect-scrollbar\";\nimport { VehicleRoutingModule } from './vehicle-routing.module';\nimport { DataTablesModule } from \"angular-datatables\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n};\n@NgModule({\n  declarations: [VehicleComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DatepickerModule,\n    BsDatepickerModule,\n    NgSelectModule,\n    PerfectScrollbarModule,\n    VehicleRoutingModule,\n    DataTablesModule\n  ],\n  providers: [VehicleService,\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  exports: [VehicleComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class VehicleModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"../../../../../../environments/environment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class VehicleService {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/vehicle/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/vehicle/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/vehicle/update\", data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/vehicle/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n\n  getdatatable(data): Observable<any> {\n    return this.http.post(this.url + \"/vehicle/getdatatable\", data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../../environments/environment';\n\n@Injectable()\nexport class SecurityCodeService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n  url = environment.base_url;\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/security-code/insert', data).pipe(map((res) => res),\n      catchError((error) => {\n        Swal.fire('Please Input Proper Data !');\n        return throwError(error);\n      })\n    )\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/security-code/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/security-code/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/security-code/delete/' + id).pipe(catchError(this.handleError));\n  }\n\n  getData(): Observable<any> {\n    return this.http.get(this.url + '/security-code/').pipe(catchError(this.handleError));\n  }\n}\n\n\n"],"sourceRoot":"webpack:///"}