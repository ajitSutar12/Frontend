{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/user-defination-dropdown.service.ts","./src/app/theme/utility/user-defination/user-defination-routing.module.ts","./src/app/theme/utility/user-defination/user-defination.component.ts","./src/app/theme/utility/user-defination/user-defination.component.html","./src/app/theme/utility/user-defination/user-defination.module.ts"],"names":[],"mappings":"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","file":"user-defination-user-defination-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class UserdefinationServiceD{\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: '0', label: 'Super Administrator' },\n        { value: '1', label: 'Administrator' },\n        { value: '2', label: 'Sub Administrator' },\n        { value: '3', label: 'Manager' },\n        { value: '4', label: 'Sub Manager' },\n        { value: '5', label: 'Clerk' },\n        { value: '6', label: 'Cashier' },\n        { value: '7', label: 'Guest' }\n    ];\n\n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(UserdefinationServiceD.PLAYER_ONE);\n    }\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(UserdefinationServiceD.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(UserdefinationServiceD.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { UserDefinationComponent } from './user-defination.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserDefinationComponent,\n    data: {\n      title: 'User Defination',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserDefinationRoutingModule { }\n","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\n\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { UserDefinationService } from './user-defination.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n// static dropdown\nimport { UserdefinationServiceD } from '../../../shared/dropdownService/user-defination-dropdown.service';\nimport { OwnbranchMasterService } from '../../../shared/dropdownService/own-branch-master-dropdown.service';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { first } from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface userdefination {\n  //id:number\n  F_NAME: string;\n  L_NAME: String;\n  DOB: string;\n  MOB_NO: number;\n  EMAIL: string;\n  ROLE: string;\n  USER_NAME: string;\n  PASSWORD: string;\n\n\n\n  STATUS: boolean;\n  // USER_CREATED_AT:string;\n\n\n}\n\n@Component({\n  selector: 'app-user-defination',\n  templateUrl: './user-defination.component.html',\n  styleUrls: ['./user-defination.component.scss']\n})\nexport class UserDefinationComponent implements OnInit {\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\n\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  userdef: userdefination[];\n  // Created Form Group\n  angForm: FormGroup;\n  angEditForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  updateID: number = 0;\n  url = environment.base_url;\n  companyCode: any;\n  schemeCode: any;\n\n  //for search functionality\n  filterData = {};\n  //Title\n  //  ROLE: Array<IOption> = this.userdefinationservice.getRoleList();\n  // ROLE: IOption[];\n  ROLE: any;\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  selectedRole :Array<string> = ['1'];;\n  timeLeft = 5;\n  barnchData: any;\n  userId: any;\n\n  showAdd: boolean = true;\n  showEdit: boolean = false;\n\n  private dataSub: Subscription = null;\n  selectedRoleName: string;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private userdefinationservice: UserDefinationService,\n    private UserdefinationServiceD: UserdefinationServiceD,\n    private _branchMasterServices: OwnbranchMasterService\n\n  ) {\n    this._branchMasterServices.getOwnbranchList().subscribe(data => {\n      this.barnchData = data;\n    })\n  }\n\n  ngOnInit(): void {\n\n    this.userdefinationservice.getRoleList().subscribe(data => {\n      this.ROLE = data;\n      console.log(this.ROLE);\n    });\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        this.http\n          .post<DataTableResponse>(\n            this.url + '/user-defination',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.userdef = resp.data;\n            console.log(this.userdef);\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\n          }\n        },\n        {\n          title: 'First Name',\n          data: 'F_NAME',\n        },\n        {\n          title: 'Last Name',\n          data: 'L_NAME',\n        },\n        {\n          title: 'DOB',\n          data: 'DOB',\n        },\n        {\n          title: 'Mobile',\n          data: 'MOB_NO',\n        },\n        {\n          title: 'Email',\n          data: 'EMAIL',\n        },\n\n        {\n          title: 'Role',\n          data: 'ROLE',\n        },\n\n        {\n          title: 'User Name',\n          data: 'USER_NAME',\n        },\n        // {\n        //   title: 'Password',\n        //   data: 'PASSWORD',\n        // },\n        {\n          title: 'Status',\n          data: 'STATUS',\n        },\n        // {\n        //   title: 'User Created-at',\n        //   data: 'USER_CREATED_AT',\n        // }\n\n      ],\n      dom: 'Blrtip',\n    };\n    // this.UserdefinationServiceD.getuserdefinationList().pipe(first()).subscribe(data => {\n    //   this.userdef = data;\n    // })\n    this.runTimer();\n\n    this.dataSub = this.UserdefinationServiceD.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n  createForm() {\n\n    this.angEditForm = this.fb.group({\n      FULL_NAME: [''],\n      Edit_branchId: ['', [Validators.required]],\n      EDIT_ROLE: ['', [Validators.required]],\n      STATUS1: ['',[Validators.required]]\n    });\n    this.angForm = this.fb.group({\n      F_NAME: ['', [Validators.required, Validators.pattern]],\n      L_NAME: ['', [Validators.pattern]],\n      DOB: [''],\n      MOB_NO: ['', [Validators.required, Validators.pattern]],\n      EMAIL: ['', [Validators.required, Validators.pattern]],\n      ROLE: ['', [Validators.required]],\n      USER_NAME: ['', [Validators.required, Validators.pattern]],\n      // PASSWORD: ['', [Validators.required, Validators.pattern]],\n      STATUS: new FormControl('active'),\n      branchId: ['', [Validators.required]]\n      // USER_CREATED_AT: ['', [ Validators.pattern]],\n    });\n  }\n  // Method to insert data into database through NestJS\n  submit() {\n    debugger\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'F_NAME': formVal.F_NAME,\n      'L_NAME': formVal.L_NAME,\n      'DOB': formVal.DOB,\n      'MOB_NO': formVal.MOB_NO,\n      'EMAIL': formVal.EMAIL,\n      'roleId': formVal.ROLE,\n      'USER_NAME': formVal.USER_NAME,\n      'PASSWORD': 'Admin@21',\n      'STATUS': formVal.STATUS,\n      'branchId': formVal.branchId\n      // 'USER_CREATED_AT': formVal.USER_CREATED_AT,\n    }\n\n    this.userdefinationservice.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.angForm.reset();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n   \n    this.showAdd = false;\n    this.showEdit = true;\n    \n    this.userdefinationservice.getFormData(id).subscribe(data=>{\n      console.log(data);\n      let array = new Array;\n      let selectedRoleName = '';\n      data.RoleDefine.forEach(ele=>{\n     \n        array.push(ele.RoleId.toString())\n        if(selectedRoleName == ''){\n          selectedRoleName = ele.Role.NAME;\n        }else{\n          selectedRoleName = selectedRoleName +', '+ele.Role.NAME;\n        }\n      })\n      this.selectedRoleName = selectedRoleName;\n      let list = array;\n      this.userId = data.id;\n      this.selectedRole = list;\n      this.angEditForm.patchValue({\n        'FULL_NAME' : data.F_NAME+' '+data.L_NAME,\n        'Edit_branchId' : data.branchId.toString(),\n        'STATUS1' : data.STATUS\n      })\n    })\n    // this.userdefinationservice.getFormData(id).subscribe(data => {\n    //   this.updateID = data.id;\n    //   this.angForm.setValue({\n    //     'F_NAME': data.F_NAME,\n    //     'L_NAME': data.L_NAME,\n    //     'DOB': data.DOB,\n    //     'MOB_NO': data.MOB_NO,\n    //     'EMAIL': data.EMAIL,\n    //     // 'ROLE': data.ROLE,\n    //     'USER_NAME': data.USER_NAME,\n    //     // 'PASSWORD': data.PASSWORD,\n    //     'STATUS': data.STATUS,\n    //     // 'USER_CREATED_AT': data.USER_CREATED_AT,\n\n    //   })\n    // })\n  }\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.userdefinationservice.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.angForm.reset();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete narration data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.userdefinationservice.deleteData(id).subscribe(data1 => {\n          this.userdef = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.myInputField.nativeElement.focus();\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n\n  saveEdit(){\n    let data = this.angEditForm.value;\n    data['id'] = this.userId;\n    this.userdefinationservice.updateRoleBranch(data).subscribe(data=>{\n      Swal.fire('Success!', 'Role and Branch Update Successfully !', 'success');\n      this.rerender();\n    },err=>{\n      Swal.fire(err.error.error, err.error.message, 'error');\n    })\n  }\n\n  closeEditForm(){\n    this.showAdd = true;\n    this.showEdit = false;\n  }\n}\n\n\n//   // For reloading angular datatable after CRUD operation\n  //   @ViewChild(DataTableDirective, { static: false })\n  //   dtElement: DataTableDirective;\n  //   dtOptions: DataTables.Settings = {};\n  //   dtTrigger: Subject<any> = new Subject();\n  //   // Store data from backend\n  //   userdefination: userdefination[];\n  //   // Created Form Group\n  //   angForm: FormGroup;\n  //   //Datatable variable\n  //   dtExportButtonOptions: DataTables.Settings = {};\n  //   Data: any;\n  //   //variables for pagination\n  //   page: number = 1;\n  //   passenger: any;\n  //   itemsPerPage = 10;\n  //   totalItems: any;\n  //   currentJustify = 'start';\n  //   active = 1;\n  //   activeKeep = 1;\n  //   // Variables for search \n  //   filterObject: { name: string; type: string; }[];\n  //   filter: any;\n  //   filterForm: FormGroup;\n  //   // Variables for hide/show add and update button\n  //   showButton: boolean = true;\n  //   updateShow: boolean = false;\n  //   //variable to get Id to update\n  //   updateID: number = 0;\n\n  //   //option for dropdown\n  // //userdef: any;\n\n  //   //Title select variables\n\n\n  //   private dataSub: Subscription = null\n  //   userdef: Array<IOption> = this.UserdefinationServiceD.getCharacters();\n  //   selectedOption1 = '3';\n  //   isDisabled1 = true;\n  //   characters1: Array<IOption>;\n  //   selectedCharacter1 = '3';\n  //   timeLeft1 = 5;\n","<div class=\"row\" *ngIf=\"showAdd\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>User Defination </h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"F_NAME\" maxlength=\"2000\" class=\"form-control\"\n                                    #autofocus placeholder=\" \" id=\"label-name\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"F_NAME\">\n                                    <label for=\"label-name\">First Name<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['F_NAME'].invalid && (angForm.controls['F_NAME'].dirty || angForm.controls['F_NAME'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['F_NAME'].errors?.pattern || angForm.controls['F_NAME'].errors?.required || angForm.controls['F_NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"L_NAME\" maxlength=\"2000\" class=\"form-control\"\n                                        placeholder=\" \" id=\"label-name\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"L_NAME\">\n                                    <label for=\"label-name\">Last Name<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['L_NAME'].invalid && (angForm.controls['L_NAME'].dirty || angForm.controls['L_NAME'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['L_NAME'].errors?.pattern || angForm.controls['L_NAME'].errors?.required || angForm.controls['L_NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"DOB\" class=\"form-control\" placeholder=\" \"\n                                        id=\"DOB\" max=\"9999-12-31\" onfocus=\"(this.type='date')\"\n                                        formControlName=\"DOB\">\n                                    <label for=\"DOB\">Birth Date</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"MOB_NO\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" id=\"MOB_NO\"\n                                        formControlName=\"MOB_NO\">\n                                    <label for=\"MOB_NO\">Mobile<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['MOB_NO'].invalid && (angForm.controls['MOB_NO'].dirty || angForm.controls['MOB_NO'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['MOB_NO'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"EMAIL\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" title=\"Enter valid Email\"\n                                        id=\"EMAIL\" formControlName=\"EMAIL\">\n                                    <label for=\"EMAIL\">Email<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['EMAIL'].invalid && (angForm.controls['EMAIL'].dirty || angForm.controls['EMAIL'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['EMAIL'].errors?.pattern\">\n                                    Enter valid Email\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select (focus)=\"hasFocus = true\" [ngClass]=\"'ng-select'\" [options]=\"ROLE\" [multiple]=\"true\" placeholder=\"Role\" formControlName=\"ROLE\">\n                                </ng-select>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['ROLE'].invalid && (angForm.controls['ROLE'].dirty || angForm.controls['ROLE'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['ROLE'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"USER_NAME\" maxlength=\"2000\" class=\"form-control\"\n                                        placeholder=\" \" id=\"label-name\" required=\"\" pattern=\"^[A-Za-z0-9\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z 0-9  - / . (Space)\" formControlName=\"USER_NAME\">\n                                    <label for=\"USER_NAME\">User Name<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['USER_NAME'].invalid && (angForm.controls['USER_NAME'].dirty || angForm.controls['USER_NAME'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['USER_NAME'].errors?.pattern || angForm.controls['USER_NAME'].errors?.required || angForm.controls['USER_NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z 0-9 - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"col-md\">\n                                <div class=\"form-group form-primary form-static-label\" style=\"width: 108%;margin-left: -4%;\">\n                                    <ng-select (focus)=\"hasFocus = true\" [ngClass]=\"'ng-select'\" [options]=\"barnchData\" [multiple]=\"false\" placeholder=\"Branch\" formControlName=\"branchId\">\n                                    </ng-select>\n                                </div>\n                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['branchId'].invalid && (angForm.controls['branchId'].dirty || angForm.controls['branchId'].touched)\" class=\"alert alert-danger\">\n                                    <div *ngIf=\"angForm.controls['branchId'].errors?.required\">\n                                        This field is required\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- <div class=\"col-md-4\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"PASSWORD\" class=\"form-control\" placeholder=\" \" maxlength=\"12\" minlength=\"8\"\n                                         title=\"Enter password of minlength  and 8 maxlength 12 \"\n                                        id=\"PASSWORD\" formControlName=\"PASSWORD\">\n                                    <label for=\"PASSWORD\">Password</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['PASSWORD'].invalid && (angForm.controls['PASSWORD'].dirty || angForm.controls['PASSWORD'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['PASSWORD'].errors?.pattern\">\n                                    Enter valid password\n                                </div>\n                            </div>\n                        </div> -->\n                        <div class=\"col-md-1\">\n                            <label for=\"status\"> Status</label>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"STATUS\"\n                                            checked=\"checked\" value=\"active\"\n                                            formControlName=\"STATUS\">\n                                        <i class=\"helper\"></i>Active\n                                    </label>\n                                </div>\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"STATUS\"\n                                            checked=\"checked\" value=\"inactive\"\n                                            formControlName=\"STATUS\">\n                                        <i class=\"helper\"></i>Inactive\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                        </div>\n\n                    </div>\n\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>\n\n<div class=\"row\" *ngIf=\"showEdit\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Edit Role and Branch</h5>\n            </div>\n            <div class=\"card-body\">\n                <form [formGroup]=\"angEditForm\" novalidate>\n                    <div class=\"row\">\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"F_NAME\" maxlength=\"2000\" class=\"form-control\"\n                                        placeholder=\" \" id=\"label-name\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"FULL_NAME\">\n                                    <label for=\"label-name\">Full Name<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"col-md\">\n                                <div class=\"form-group form-primary form-static-label\" style=\"width: 108%;margin-left: -4%;\">\n                                    <ng-select (focus)=\"hasFocus = true\" [ngClass]=\"'ng-select'\" [options]=\"barnchData\" [multiple]=\"false\" placeholder=\"Branch\" formControlName=\"Edit_branchId\">\n                                    </ng-select>\n                                </div>\n                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['branchId'].invalid && (angForm.controls['branchId'].dirty || angForm.controls['branchId'].touched)\" class=\"alert alert-danger\">\n                                    <div *ngIf=\"angForm.controls['branchId'].errors?.required\">\n                                        This field is required\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select (focus)=\"hasFocus = true\" [ngClass]=\"'ng-select'\" [(ngModel)]=\"selectedRole\" [options]=\"ROLE\" [multiple]=\"true\" placeholder=\"Role\" formControlName=\"EDIT_ROLE\">\n                                </ng-select>\n                            </div>\n                            <label>Existing Role : {{selectedRoleName}}</label>\n                            \n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['ROLE'].invalid && (angForm.controls['ROLE'].dirty || angForm.controls['ROLE'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['ROLE'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-1\">\n                            <label for=\"status\"> Status</label>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"STATUS1\"\n                                            checked=\"checked\" value=\"active\"\n                                            formControlName=\"STATUS1\">\n                                        <i class=\"helper\"></i>Active\n                                    </label>\n                                </div>\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"STATUS1\"\n                                            checked=\"checked\" value=\"inactive\"\n                                            formControlName=\"STATUS1\">\n                                        <i class=\"helper\"></i>Inactive\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-primary\"(click)=\"saveEdit()\" [disabled]=\"!angEditForm.valid\">Save</button>\n                <span style=\"margin-left: 5px;\"><button class=\"btn btn-primary\" (click)=\"closeEditForm()\">Cancel</button></span>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"userdef?.length != 0\">\n                                    <tr *ngFor=\"let data of userdef\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                    \n                                        <td>{{ data.F_NAME }}</td>\n                                        <td>{{ data.L_NAME }}</td>\n                                        <td>{{ data.DOB }}</td>\n                                        <td>{{ data.MOB_NO }}</td>\n                                        <td>{{ data.EMAIL }}</td>\n                                        <td>{{ data.RoleDefine[0].Role.NAME }}</td>\n                                        <td>{{ data.USER_NAME }}</td>\n                                        <!-- <td>{{ data.PASSWORD }}</td> -->\n                                        <td>{{ data.STATUS }}</td>\n                                        <!-- <td>{{ data.USER_CREATED_AT }}</td> -->\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"userdef?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search first nmae\" name=\"F_NAME\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Last Name\" name=\"L_NAME\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search DOB\" name=\"DOB\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search MOB_NO\" name=\"MOB_NO\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search EMAIL\" name=\"EMAIL\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search ROLE\" name=\"ROLE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search USER_NAME\" name=\"USER_NAME\"></th>\n                                        <!-- <th><input type=\"text\" placeholder=\"Search PASSWORD\" name=\"PASSWORD\"></th> -->\n                                        <th><input type=\"text\" placeholder=\"Search STATUS\" name=\"STATUS\"></th>\n\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserDefinationComponent } from './user-defination.component';\nimport { UserDefinationRoutingModule } from './user-defination-routing.module';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { UserdefinationServiceD } from '../../../shared/dropdownService/user-defination-dropdown.service';\nimport { OwnbranchMasterService } from '../../../shared/dropdownService/own-branch-master-dropdown.service';\nimport { UserDefinationService } from './user-defination.service'\nimport { DataTablesModule } from 'angular-datatables';\nimport {SelectModule} from 'ng-select';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\n@NgModule({\n  imports: [\n    CommonModule,\n    UserDefinationRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    SelectModule,\n  \n\n  ],\n  declarations: [UserDefinationComponent],\n  providers:[UserdefinationServiceD,UserDefinationService,OwnbranchMasterService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },]\n})\nexport class UserDefinationModule { }\n"],"sourceRoot":"webpack:///"}