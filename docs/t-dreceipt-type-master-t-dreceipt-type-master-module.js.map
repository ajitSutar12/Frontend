{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/dropdownService/tdReceipt-type.service.ts","./src/app/theme/master/policy-settings/t-dreceipt-type-master/t-dreceipt-type-master-routing.module.ts","./src/app/theme/master/policy-settings/t-dreceipt-type-master/t-dreceipt-type-master.component.service.ts","./src/app/theme/master/policy-settings/t-dreceipt-type-master/t-dreceipt-type-master.component.ts","./src/app/theme/master/policy-settings/t-dreceipt-type-master/t-dreceipt-type-master.component.html","./src/app/theme/master/policy-settings/t-dreceipt-type-master/t-dreceipt-type-master.module.ts"],"names":[],"mappings":"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","file":"t-dreceipt-type-master-t-dreceipt-type-master-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {IOption} from 'ng-select';\n\n\n@Injectable()\nexport class TdReceiptService {\n  public static readonly PLAYER_ONE: Array<IOption> = [\n    {value: 'A', label: 'A'},\n    {value: 'B', label: 'B'},\n    {value: 'C', label: 'C'},\n    {value: 'D', label: 'D'},\n    {value: 'E', label: 'E'},\n    {value: 'F', label: 'F'},\n    {value: 'G', label: 'G'},\n    {value: 'H', label: 'H'},\n    {value: 'I', label: 'I'},\n    {value: 'J', label: 'J'},\n    {value: 'K', label: 'K'},\n    {value: 'L', label: 'L'},\n    {value: 'M', label: 'M'},\n    {value: 'N', label: 'N'},\n    {value: 'O', label: 'O'},\n    {value: 'P', label: 'P'},\n    {value: 'Q', label: 'Q'},\n    {value: 'R', label: 'R'},\n    {value: 'S', label: 'S'},\n    {value: 'T', label: 'T'},\n    {value: 'U', label: 'U'},\n    {value: 'V', label: 'V'},\n    {value: 'W', label: 'W'},\n    {value: 'X', label: 'X'},\n    {value: 'Y', label: 'Y'},\n    {value: 'Z', label: 'Z'},\n  ];\n\n\n\n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(TdReceiptService.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(TdReceiptService.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(TdReceiptService.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n   \n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TDReceiptTypeMasterComponent} from './t-dreceipt-type-master.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TDReceiptTypeMasterComponent,\n    data: {\n      title: 'TD Receipt Type Master',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TDReceiptTypeMasterRoutingModule { }\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { Observable, throwError } from \"rxjs\";\nimport Swal from \"sweetalert2\";\n@Injectable()\nexport class TDReceiptService {\n  url = environment.base_url;\n  handleError: any;\n\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    console.log(data);\n    return this.http.post(this.url + \"/td-receipt-type/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/td-receipt-type/' + id).pipe(catchError(this.handleError));\n  }\n  \n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/td-receipt-type/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/td-receipt-type/delete/' + id).pipe(catchError(this.handleError));\n  }\n}\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { IOption } from 'ng-select';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n// Service File For Handling CRUD Operation\nimport { TDReceiptService } from './t-dreceipt-type-master.component.service';\nimport { TdReceiptService } from '../../../../shared/dropdownService/tdReceipt-type.service';\nimport { environment } from '../../../../../environments/environment'\nimport { first } from 'rxjs/operators';\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\ninterface TDReceiptinterface {\n  LAST_RECEIPT_NO: number,\n  RECEIPT_TYPE: string,\n}\n\n@Component({\n  selector: 'app-t-dreceipt-type-master',\n  templateUrl: './t-dreceipt-type-master.component.html',\n  styleUrls: ['./t-dreceipt-type-master.component.scss'],\n})\nexport class TDReceiptTypeMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  //api \n  url = environment.base_url;\n  angForm: FormGroup;\n  formSubmitted = false;\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  dtExportButtonOptions: any = {};\n  // Variables for hide/show add and update and new button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  newbtnShow: boolean = false;\n\n  // tdMaster: any[]\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n  //variables for pagination\n  page: number = 1;\n\n  // Store data from backend\n  tdReceipt: TDReceiptinterface[];\n\n  selectedValue: any = null\n  receipt: number\n  //title select variables\n  tdMaster: Array<IOption> = this._tdReceiptService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n  private dataSub: Subscription = null;\n\n  constructor(private fb: FormBuilder, private _receipt: TDReceiptService,\n    private http: HttpClient,\n    private _tdReceiptService: TdReceiptService,) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        this.http\n          .post<DataTableResponse>(\n            this.url + '/td-receipt-type',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.tdReceipt = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columnDefs: [{\n        targets: '_all',\n        defaultContent: \"\"\n      }],\n      columns: [\n        // {\n        //   title: 'Action',\n        // },\n        {\n          title: 'Receipt Type',\n          data: 'RECEIPT_TYPE'\n        },\n        {\n          title: 'Last Receipt No',\n          data: 'LAST_RECEIPT_NO'\n        }\n      ],\n      dom: 'Blrtip',\n    };\n\n    this.runTimer();\n    this.dataSub = this._tdReceiptService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n\n  }\n  createForm() {\n    this.angForm = this.fb.group({\n      LAST_RECEIPT_NO: [, [Validators.pattern, Validators.required]],\n      RECEIPT_TYPE: ['', [Validators.required]]\n    });\n  }\n\n  submit() {\n    this.formSubmitted = true;\n    if (this.angForm.valid) {\n      const formVal = this.angForm.value;\n      console.log(this.receipt)\n      const dataToSend = {\n        'LAST_RECEIPT_NO': formVal.LAST_RECEIPT_NO,\n        'RECEIPT_TYPE': formVal.RECEIPT_TYPE\n      };\n      console.log(this.angForm.value);\n      console.log(dataToSend, \"dataToSend\");\n      this._receipt.postData(dataToSend).subscribe(\n        (data) => {\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n          // to reload after insertion of data\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.ajax.reload()\n          });\n          this.formSubmitted = false;\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      //To clear form\n      this.resetForm();\n    }\n  }\n  //function toggle update to add button\n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this._receipt.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.newbtnShow = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      this.resetForm();\n    })\n  }\n  //function for edit button clicked\n  editClickHandler(id): void {\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this._receipt.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.patchValue({\n        RECEIPT_TYPE: data.RECEIPT_TYPE,\n        LAST_RECEIPT_NO: data.LAST_RECEIPT_NO\n      })\n    })\n  }\n\n  //function for delete button clicked\n  delClickHandler() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your file has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your imaginary file is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    this.selectedValue = null\n  }\n\n  //reset function while update\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next()\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#ftable tfoot tr').appendTo('#ftable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n\n  getValue(event) {\n    this.http.get<any>(\n      this.url + '/td-receipt-type',\n    ).subscribe(resp => {\n      if (resp.length != 0) {\n        for (let element of resp) {\n          if (event.value == element.RECEIPT_TYPE) {\n            this.angForm.patchValue({\n              LAST_RECEIPT_NO: element.LAST_RECEIPT_NO\n            })\n            break\n          }\n          else {\n            this.angForm.patchValue({\n              LAST_RECEIPT_NO: 0\n            })\n          }\n        }\n      }\n      else {\n        this.angForm.patchValue({\n          LAST_RECEIPT_NO: 0\n        })\n      }\n    })\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>TD Receipt Type Master</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <div class=\"card-block\">\n                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select bindValue=\"value\" [(ngModel)]=\"selectedValue\" id=\"RECEIPT_TYPE\"\n                                        bindValue=\"value\" bindLabel=\"label\" formControlName=\"RECEIPT_TYPE\"\n                                        title=\"Compulsory Selection\" (change)=\"getValue($event)\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\n                                        placeholder=\"Receipt Type \">\n                                        <ng-option *ngFor=\"let values of tdMaster\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"RECEIPT_TYPE\">Receipt Type <sub class=\"required\"> *</sub></label>\n                                </span>\n                            </div>\n\n                            <!-- <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"tdMaster\" [multiple]=\"false\"\n                                    placeholder=\"Receipt Type *\" required title=\"Compulsory Selection\"\n                                    [(ngModel)]=\"selectedValue\" (selected)=\"getValue($event)\"\n                                    formControlName=\"RECEIPT_TYPE\">\n                                </ng-select>\n                            </div> -->\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['RECEIPT_TYPE'].invalid && (angForm.controls['RECEIPT_TYPE'].dirty || angForm.controls['RECEIPT_TYPE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['RECEIPT_TYPE'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"LAST_RECEIPT_NO\" class=\"form-control\" placeholder=\" \"\n                                        id=\"LAST_RECEIPT_NO\" pattern=\"^[0-9]+$\" maxlength=\"10\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"LAST_RECEIPT_NO\" required>\n                                    <label for=\"LAST_RECEIPT_NO\">Last Receipt No.<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['LAST_RECEIPT_NO'].invalid && (angForm.controls['LAST_RECEIPT_NO'].dirty || angForm.controls['LAST_RECEIPT_NO'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['LAST_RECEIPT_NO'].errors?.pattern || angForm.controls['LAST_RECEIPT_NO'].errors?.maxlength  || angForm.controls['LAST_RECEIPT_NO'].errors?.required\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <!-- <div class=\"col-sm-3\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\"\n                                [disabled]=\"angForm.invalid\">Update</button>&nbsp;\n                            <button class=\"btn btn-primary ripple light\" (click)=\"addNewData()\"\n                                *ngIf=\"newbtnShow\">New</button>\n                        </div> -->\n                        <div class=\"col-sm-3\" style=\"float: right;\">\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\"\n                                (click)=\"submit()\" [disabled]=\"angForm.invalid\">\n                                Submit\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card shadow\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table id=\"ftable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover compact\">\n                                <tbody *ngIf=\"tdReceipt?.length != 0\">\n                                    <tr *ngFor=\"let data of tdReceipt\">\n                                        <!-- <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp; -->\n                                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" -->\n                                        <!-- (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        <!-- </td> -->\n                                        <td>{{ data.RECEIPT_TYPE}}</td>\n                                        <td>{{ data.LAST_RECEIPT_NO}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"tdReceipt?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"2\" style=\"text-align: center;\" class=\"no-data-available\">No data!\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                <tfoot #filters class=\"filters\">\n                                    <tr class=\"testing\">\n                                        <th><input type=\"text\" class=\"form-control\" name=\"RECEIPT_TYPE\"> </th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"LAST_RECEIPT_NO\"> </th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TDReceiptTypeMasterComponent } from './t-dreceipt-type-master.component';\nimport { TDReceiptTypeMasterRoutingModule } from './t-dreceipt-type-master-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataTablesModule } from 'angular-datatables';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { TDReceiptService } from './t-dreceipt-type-master.component.service'\nimport { TdReceiptService } from '../../../../shared/dropdownService/tdReceipt-type.service';\nimport { NgSelectModule } from '@ng-select/ng-select';\n@NgModule({\n  imports: [\n    CommonModule,\n    TDReceiptTypeMasterRoutingModule,\n    DataTablesModule,\n    NgbModule,\n    FormsModule, ReactiveFormsModule,\n    NgSelectModule\n  ],\n  declarations: [TDReceiptTypeMasterComponent],\n  providers: [TDReceiptService, TdReceiptService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: UserAuthInterceptor,\n\n    multi: true\n  },]\n})\nexport class TDReceiptTypeMasterModule { }\n"],"sourceRoot":"webpack:///"}