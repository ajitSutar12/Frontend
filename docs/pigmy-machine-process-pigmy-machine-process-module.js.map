{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/utility/pigmy-machine-process/pigmy-machine-process-routing.module.ts","./src/app/theme/utility/pigmy-machine-process/pigmy-machine-process.component.ts","./src/app/theme/utility/pigmy-machine-process/pigmy-machine-process.component.html","./src/app/theme/utility/pigmy-machine-process/pigmy-machine-process.module.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"pigmy-machine-process-pigmy-machine-process-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class SchemeCodeDropdownService {\n    schemeCodeObject = new Array();\n    schemeObject = new Array();\n    // // scheme-parameters\";\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n\n    public getSchemeCodeList(scheme) {\n        this.schemeCodeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF };\n                    this.schemeCodeObject.push(obj)\n                });\n                return this.schemeCodeObject;\n            }));\n    }\n\n\n    public getAllSchemeList() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n    public getAllSchemeList1() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\n                    this.schemeObject.push(obj)\n                });\n\n                return this.schemeObject;\n            }));\n\n    }\n\n    public getTermDepositSchemeRD() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\n\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n    public getTermDepositSchemePatD() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n    public getTermDepositeScheme() {\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n    public getTdReceiptScheme() {\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n    public getAllSchemeListINT() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PigmyMachineProcessComponent } from './pigmy-machine-process.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PigmyMachineProcessComponent,\n    data: {\n      title: 'Pigmy Machine Process',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PigmyMachineProcessRoutingModule { }\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport Swal from 'sweetalert2';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { SystemMasterParametersService } from '../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service'\nimport { OwnbranchMasterService } from '../../../shared/dropdownService/own-branch-master-dropdown.service'\nimport { SchemeCodeDropdownService } from '../../../shared/dropdownService/scheme-code-dropdown.service'\nimport { SchemeAccountNoService } from '../../../shared/dropdownService/schemeAccountNo.service'\nimport * as moment from 'moment';\nimport { first } from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment'\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from 'rxjs';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n@Component({\n  selector: 'app-pigmy-machine-process',\n  templateUrl: './pigmy-machine-process.component.html',\n  styleUrls: ['./pigmy-machine-process.component.scss']\n})\nexport class PigmyMachineProcessComponent implements OnInit {\n  //api \n  url = environment.base_url;\n  angForm: FormGroup;\n  sysDate\n  ngBranchCode: any = null\n  ngschemeCode: any = null\n  branch_code\n  scheme\n  branch\n  ngAgentCode: any = null\n  agentACNO\n  branchCode\n  userID\n  agentBankACNO\n  S_GLACNO\n  obj\n  tableArr: any\n  mem\n  isChartNo: boolean = true\n\n  //Scheme type variable\n  schemeType: string = 'AG'\n  dtOptions: DataTables.Settings = {};\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  //filter variable\n  filterData = {};\n  dtTrigger: Subject<any> = new Subject<any>();\n  formSubmitted: boolean = false\n  constructor(private fb: FormBuilder,\n    private systemParameter: SystemMasterParametersService,\n    private ownbranchMasterService: OwnbranchMasterService,\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\n    private schemeAccountNoService: SchemeAccountNoService,\n    private http: HttpClient,) { }\n\n  ngOnInit(): void {\n    this.createForm()\n    this.getSystemParaDate()\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/datatable-data.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\">Edit</button>' + ' ' + '<button class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Name',\n          data: 'name'\n        }, {\n          title: 'Position',\n          data: 'position'\n        }, {\n          title: 'Office',\n          data: 'office'\n        }, {\n          title: 'Age',\n          data: 'age'\n        }, {\n          title: 'Start Date',\n          data: 'date'\n        }, {\n          title: 'Salary',\n          data: 'salary'\n        }],\n      dom: 'Bfrtip',\n    };\n\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    this.userID = result.USER_NAME\n    if (result.RoleDefine[0].Role.id == 1) {\n      this.angForm.controls['BRANCH'].enable()\n    }\n    else {\n      this.angForm.controls['BRANCH'].disable()\n      this.ngBranchCode = result.branch.id\n      this.branchCode = result.branch.CODE\n    }\n\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branch_code = data;\n    })\n\n    this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data => {\n      this.scheme = data\n    })\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      TRAN_DATE: [''],\n      BRANCH: ['', [Validators.required]],\n      AGENT_ACTYPE: ['', [Validators.required]],\n      CHART_NO: [1, [Validators.maxLength, Validators.minLength]],\n      TRAN_AMOUNT: [0],\n      AGENT_ACNO: ['', [Validators.required]]\n    });\n  }\n\n  //get agent account number after branch selection\n  getBranch(event) {\n    this.branchCode = event.name\n    this.getPigmyAgentAcnoList()\n  }\n\n  //get syspara table data for date and pigmy auto voucher flag\n  getSystemParaDate() {\n    this.systemParameter.getFormData(1).subscribe(data => {\n      this.angForm.patchValue({\n        TRAN_DATE: data.PIGMY_CURRENT_DATE\n      })\n    })\n  }\n\n  //select content of field\n  selectAllContent($event) {\n    $event.target.select();\n  }\n\n  //fetch acno list according scheme and branch code\n  getPigmyAgentAcnoList() {\n    this.ngAgentCode = null\n    this.agentACNO = [];\n    this.obj = [this.ngschemeCode, this.ngBranchCode]\n    this.schemeAccountNoService.getpigmyChartAcno(this.obj).subscribe(data => {\n      this.agentACNO = data;\n    })\n  }\n\n  pigmyMachineRadio(value) {\n    value == 1 ? this.isChartNo = true : this.isChartNo = false\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    let branchCode = result.branch.id;\n    var full = []\n    var fullDate = formVal.TRAN_DATE;\n    full = fullDate.split(' ');\n    var date = full[0].split(/\\//);\n    var newDate = date[1] + '/' + date[0] + '/' + date[2]\n    var k = new Date(newDate);\n    var expiryDate = moment(k).format('DD.MM.YYYY');\n    let mem = [this.ngschemeCode, this.ngAgentCode, this.ngBranchCode, expiryDate]\n    this.http.get(this.url + '/pigmy-chart/machine/' + mem).subscribe((data) => {\n      console.log(data)\n      if (data != '') {\n        Swal.fire(\"Success!\", \"Pigmy Agent Processed Successfully !\", \"success\");\n      }\n      else {\n        Swal.fire({\n          icon: 'info',\n          title: 'Pigmy Agent Do Not Have Account',\n        })\n      }\n    })\n\n    this.userID = result.USER_NAME\n    if (result.RoleDefine[0].Role.id == 1) {\n      this.angForm.controls['BRANCH'].enable()\n    }\n    else {\n      this.angForm.controls['BRANCH'].disable()\n      this.ngBranchCode = result.branch.id\n      this.branchCode = result.branch.CODE\n    }\n\n    //To clear form\n    this.resetForm();\n\n  }\n\n\n  resetForm() {\n    this.createForm()\n    this.ngBranchCode = null\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    this.userID = result.USER_NAME\n    if (result.RoleDefine[0].Role.id == 1) {\n      this.angForm.controls['BRANCH'].enable()\n    }\n    else {\n      this.angForm.controls['BRANCH'].disable()\n      this.ngBranchCode = result.branch.id\n      this.branchCode = result.branch.CODE\n    }\n\n    this.ngschemeCode = null\n    this.ngAgentCode = null\n    this.getSystemParaDate()\n    this.angForm.patchValue({\n      BRANCH: result.branch.id\n    })\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Pigmy Machine Process</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\" (click)=\"pigmyMachineRadio(1)\" checked>\n                                        <i class=\"helper\"></i>Pigmy Machine To System<span class=\"required\"> </span>\n                                    </label>\n                                </div>\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\" (click)=\"pigmyMachineRadio(2)\">\n                                        <i class=\"helper\"></i>System To Pigmy Machine<span class=\"required\"> </span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"TRAN_DATE\" class=\"form-control\" formControlName=\"TRAN_DATE\"\n                                        disabled>\n                                    <label for=\"TRAN_DATE\">Date</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"BRANCH\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\n                                        formControlName=\"BRANCH\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" (change)=\"getBranch($event)\"\n                                        placeholder=\"Branch\">\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"BRANCH\">Branch</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['BRANCH'].invalid && (angForm.controls['BRANCH'].dirty || angForm.controls['BRANCH'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['BRANCH'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select bindValue=\"value\" [(ngModel)]=\"ngschemeCode\" id=\"AGENT_ACTYPE\"\n                                        bindLabel=\"label\" formControlName=\"AGENT_ACTYPE\"\n                                        (change)=\"getPigmyAgentAcnoList()\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Scheme\">\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                            {{values.label}} </ng-option>\n                                    </ng-select>\n                                    <label for=\"AGENT_ACTYPE\">Scheme <sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AGENT_ACTYPE'].invalid && (angForm.controls['AGENT_ACTYPE'].dirty || angForm.controls['AGENT_ACTYPE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AGENT_ACTYPE'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select bindValue=\"value\" [(ngModel)]=\"ngAgentCode\" id=\"AGENT_ACNO\"\n                                        bindLabel=\"label\" formControlName=\"AGENT_ACNO\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Agent\">\n                                        <ng-option *ngFor=\"let values of agentACNO\" [value]=\"values\">\n                                            {{values.label}} {{values.name}} </ng-option>\n                                    </ng-select>\n                                    <label for=\"AGENT_ACNO\">Agent<sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AGENT_ACNO'].invalid && (angForm.controls['AGENT_ACNO'].dirty || angForm.controls['AGENT_ACNO'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AGENT_ACNO'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\" *ngIf=\"isChartNo\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" style=\"text-align: right;\" name=\"CHART_NO\" class=\"form-control\"\n                                        placeholder=\" \" id=\"CHART_NO\" title=\"Input allowed only 0-9\"\n                                        (focus)=\"selectAllContent($event)\" maxlength=\"1\" minlength=\"1\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\n                                        formControlName=\"CHART_NO\">\n                                    <label for=\"CHART_NO\">Chart Number<sub class=\"required\"> *\n                                        </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['CHART_NO'].invalid && (angForm.controls['CHART_NO'].dirty || angForm.controls['CHART_NO'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['CHART_NO'].errors?.required || angForm.controls['CHART_NO'].errors?.minlength || angForm.controls['CHART_NO'].errors?.maxlength\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\" style=\"float: right;\">\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" (click)=\"submit()\"> Process\n                            </button>&nbsp;&nbsp;&nbsp;\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"resetForm()\">\n                                Cancel </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PigmyMachineProcessComponent } from './pigmy-machine-process.component';\nimport { PigmyMachineProcessRoutingModule } from './pigmy-machine-process-routing.module';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../../app/user-auth.interceptor';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { SystemMasterParametersService } from '../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service'\nimport { SchemeCodeDropdownService } from '../../../shared/dropdownService/scheme-code-dropdown.service'\nimport { OwnbranchMasterService } from '../../../shared/dropdownService/own-branch-master-dropdown.service'\nimport { SchemeAccountNoService } from '../../../shared/dropdownService/schemeAccountNo.service'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PigmyMachineProcessRoutingModule,\n    SharedModule,\n    DataTablesModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n    NgSelectModule\n  ],\n  declarations: [PigmyMachineProcessComponent],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: UserAuthInterceptor,\n    multi: true\n  }, SystemMasterParametersService, SchemeCodeDropdownService,\n    OwnbranchMasterService, SchemeAccountNoService,\n  ]\n})\nexport class PigmyMachineProcessModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n\n@Injectable()\nexport class SystemMasterParametersService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n  // url = \"http://localhost:4000/system-master-parameters\";\n  url = environment.base_url;\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\n      catchError((error) => {\n        let errorMessage = 'Please add valid length';\n        Swal.fire('Kindly Add Valid Length !');\n        return throwError(errorMessage);\n      })\n    )\n  }\n\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/system-master-parameters/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\n  }\n\n  getData(): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\n  }\n\n\n}\n\n\n"],"sourceRoot":"webpack:///"}