{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/reports/statement/bnk-lnamt-statement/bnk-lnamt-statement-routing.module.ts","./src/app/theme/reports/statement/bnk-lnamt-statement/bnk-lnamt-statement.component.ts","./src/app/theme/reports/statement/bnk-lnamt-statement/bnk-lnamt-statement.component.html","./src/app/theme/reports/statement/bnk-lnamt-statement/bnk-lnamt-statement.module.ts"],"names":[],"mappings":"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","file":"bnk-lnamt-statement-bnk-lnamt-statement-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class SchemeCodeDropdownService {\n    schemeCodeObject = new Array();\n    schemeObject = new Array();\n    // // scheme-parameters\";\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n\n    public getSchemeCodeList(scheme) {\n        this.schemeCodeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF };\n                    this.schemeCodeObject.push(obj)\n                });\n                return this.schemeCodeObject;\n            }));\n    }\n\n\n    public getAllSchemeList() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n    public getAllSchemeList1() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\n                    this.schemeObject.push(obj)\n                });\n\n                return this.schemeObject;\n            }));\n\n    }\n\n    public getTermDepositSchemeRD() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\n\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n    public getTermDepositSchemePatD() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n    public getTermDepositeScheme() {\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n    public getTdReceiptScheme() {\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n    public getAllSchemeListINT() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { BnkLNamtStatementComponent } from './bnk-lnamt-statement.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  BnkLNamtStatementComponent,\r\n    data: {\r\n      title: 'Term Loan stament with other amount',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class  BnkLNamtStatementRoutingModule { }","\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { NgSelectConfig } from '@ng-select/ng-select'\r\n// Creating and maintaining form fields with validation\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from \"@angular/router\";\r\nimport { OwnbranchMasterService } from \"src/app/shared/dropdownService/own-branch-master-dropdown.service\";\r\nimport { SchemeAccountNoService } from '../../../../shared/dropdownService/schemeAccountNo.service'\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service'\r\nimport { first } from 'rxjs/operators';\r\nimport Swal from \"sweetalert2\";\r\nimport * as moment from \"moment\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-bnk-lnamt-statement',\r\n  templateUrl: './bnk-lnamt-statement.component.html',\r\n  styleUrls: ['./bnk-lnamt-statement.component.scss'],\r\n  providers: [SchemeCodeDropdownService, SchemeAccountNoService, OwnbranchMasterService]\r\n})\r\nexport class BnkLNamtStatementComponent implements OnInit {\r\n  //date\r\n  maxDate: Date;\r\n  minDate: Date;\r\n  startingdate: any = null\r\n  endingdate: any = null\r\n\r\n  ngForm: FormGroup;\r\n  iframe2url:any='';\r\n  clicked:boolean=false;\r\n  //api\r\n  url = environment.base_url;\r\n  report_url = environment.report_url;\r\n  formSubmitted = false;\r\n     //account\r\n     memFrom\r\n     memTo\r\n     branch\r\n     mem:any\r\n\r\n  //dropdown\r\n  scheme: any[];\r\n  startingacc: any[];\r\n  endingacc: any[];\r\n  branchOption: any[];\r\n  // for dropdown ng module\r\n  ngbranch: any = null;\r\n  schemeCode: any = null;\r\n  obj: any;\r\n  startingAccount: any = null;\r\n  EndingAccount: any = null;\r\n\r\n  showRepo:boolean=false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private _ownbranchmasterservice: OwnbranchMasterService,\r\n    public router: Router,\r\n    private http: HttpClient,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private sanitizer: DomSanitizer,\r\n\r\n  ) {\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n\r\n    //branch List\r\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branchOption = data;\r\n    })\r\n    // Scheme Code\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      var filtered = data.filter(function (scheme) {\r\n        return (scheme.name == 'LN' || scheme.name == 'CC' || scheme.name == 'DS');\r\n      });\r\n      this.scheme = filtered;\r\n\r\n    })\r\n  }\r\n\r\n  // validations for ngForm\r\n  createForm() {\r\n    this.ngForm = this.fb.group({\r\n      BRANCH_CODE: ['', [Validators.required]],\r\n      Scheme_code: ['', [Validators.required]],\r\n      Starting_Account: ['', [Validators.required]],\r\n      Ending_Account: ['', [Validators.required]],\r\n      Starting_Date: ['', [Validators.required]],\r\n      Ending_Date: ['', [Validators.required]],\r\n      Print_Every_Account_on_New_Page: [''],\r\n      Print_Closed_Account: [''],\r\n      Print_Added_Penal_Interest: [''],\r\n      Print_Concise_Report: [''],\r\n    });\r\n  }\r\n\r\n\r\n  //For Starting account and Ending Account dropdown\r\n  getschemename: any\r\n\r\n  getBranch() {\r\n    this.getIntroducer()\r\n  }\r\n  getIntro(event) {\r\n    this.getschemename = event.name\r\n    this.getIntroducer()\r\n  }\r\n\r\n\r\n  getIntroducer() {\r\n\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    let branchCode = result.branch.id;\r\n    this.obj = [this.schemeCode, branchCode]\r\n    switch (this.getschemename) {\r\n\r\n\r\n      case 'LN':\r\n        this.schemeAccountNoService.getTermLoanSchemeList1(this.obj).subscribe(data => {\r\n          this.startingacc = data;\r\n          this.startingAccount = null\r\n          this.endingacc = data;\r\n          this.EndingAccount = null\r\n        })\r\n        break;\r\n      case 'CC':\r\n        this.schemeAccountNoService.getCashCreditSchemeList1(this.obj).subscribe(data => {\r\n          this.startingacc = data;\r\n          this.startingAccount = null\r\n          this.endingacc = data;\r\n          this.EndingAccount = null\r\n        })\r\n        break;\r\n      case 'DS':\r\n        this.schemeAccountNoService.getDisputeLoanSchemeList1(this.obj).subscribe(data => {\r\n          this.startingacc = data;\r\n          this.startingAccount = null\r\n          this.endingacc = data;\r\n          this.EndingAccount = null\r\n        })\r\n        break;\r\n\r\n    }\r\n  }\r\n\r\n  src: any;\r\n  View(event) {\r\n     \r\n     event.preventDefault();\r\n     this.formSubmitted = true;\r\n\r\n     let userData = JSON.parse(localStorage.getItem('user'));\r\n     let bankName = userData.branch.syspara.BANK_NAME;\r\n     let branchName = userData.branch.NAME\r\n\r\n     if(this.ngForm.valid){\r\n \r\n      this.showRepo = true;\r\n     let obj = this.ngForm.value\r\n     let startDate = moment(obj.Starting_Date).format('DD/MM/YYYY');\r\n     let endDate = moment(obj.Ending_Date).format('DD/MM/YYYY');\r\n     let branch = obj.BRANCH_CODE;\r\n      let startingcode= obj.Starting_Account;\r\n     let endingcode =obj.Ending_Account;\r\n     let PrintEveryAccountonNewPage=obj.Print_Every_Account_on_New_Page;\r\n     let PrintClosedAccount=obj.Print_Closed_Account;\r\n     let PrintAddedPenalInterest=obj.Print_Added_Penal_Interest;\r\n     let PrintConciseReporteme=obj.Print_Concise_Report;\r\n     let scheme=obj.Scheme_code;\r\n  \r\n \r\n    this.iframe2url=this.report_url+\"examples/LoanStatement.php?startDate='\" + startDate +\"'&endDate='\"+endDate+ \"'&branchName='\"+branchName+\"'&startingcode='\"+startingcode +\"'&endingcode='\"+ endingcode +\"'&scheme= '\"+scheme+\r\n                    \"' &PrintEveryAccountonNewPage= '\"+PrintEveryAccountonNewPage+\"' &PrintClosedAccount= '\"+PrintClosedAccount+\"'&PrintAddedPenalInterest= '\"+PrintAddedPenalInterest+\"' &PrintConciseReporteme= '\"+PrintConciseReporteme+\"' &bankName='\" + bankName + \"'\";\r\n    this.iframe2url=this.sanitizer.bypassSecurityTrustResourceUrl(this.iframe2url);\r\n    \r\n   }\r\n   else {\r\n     Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning');\r\n   }\r\n   \r\n }\r\n   //load acno according start and end acno\r\n   loadAcno() {\r\n    this.memFrom = this.ngForm.controls['Starting_Account'].value\r\n    this.memTo = this.ngForm.controls['Ending_Account'].value\r\n    this.branch = this.ngForm.controls['BRANCH_CODE'].value\r\n    if (this.ngForm.controls['Starting_Account'].value < this.ngForm.controls['Ending_Account'].value) {\r\n      this.mem = [this.memFrom, this.memTo, this.branch]\r\n     \r\n      if (this.getschemename == 'LN') {\r\n        this.http.get(this.url + '/term-loan-master/scheme/' + this.mem).subscribe((data) => {\r\n        });\r\n      }\r\n      else if (this.getschemename == 'CC') {\r\n        this.http.get(this.url + '/cash-credit-master/scheme/' + this.mem).subscribe((data) => {\r\n        });\r\n      }\r\n      else if (this.getschemename == 'DS') {\r\n        this.http.get(this.url + '/dispute-loan-master/scheme/' + this.mem).subscribe((data) => {\r\n        });\r\n      }\r\n     \r\n    \r\n    }\r\n    else {\r\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(()=>{ this.clicked=false});\r\n    }\r\n  }\r\n\r\n  close(){\r\n    this.resetForm()\r\n    }\r\n  \r\n    resetForm() {\r\n      this.createForm()\r\n      this.showRepo = false;\r\n      this.clicked=false;\r\n    }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Term Loan Statement With Other Amount</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <div class=\"card\">\r\n                <form [formGroup]=\"ngForm\">\r\n                    <div class=\"card-block\">\r\n\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"Branch\">Branch <sub\r\n                                        class=\"required\">*</sub></label></div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngbranch\"\r\n                                            formControlName=\"BRANCH_CODE\" bindLabel=\"label\" placeholder=\"Branch\"\r\n                                            (change)=\"getBranch()\">\r\n                                            <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                                {{values.label}}</ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['BRANCH_CODE'].invalid && (ngForm.controls['BRANCH_CODE'].dirty || ngForm.controls['BRANCH_CODE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-12 col-md-1\"></div>\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"Scheme Code\">Scheme Code<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Scheme_code\" bindValue=\"value\" bindLabel=\"label\"\r\n                                            [(ngModel)]=\"schemeCode\" (change)=\"getIntro($event)\"  placeholder=\"Scheme Code\">\r\n                                            <ng-option *ngFor=\"let values of scheme\" [value]=\"values\"> {{values.id}}\r\n                                                {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Scheme_code'].invalid && (ngForm.controls['Scheme_code'].dirty || ngForm.controls['Scheme_code'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['Scheme_code'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"Starting Account\">Starting Account<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Starting_Account\" bindValue=\"value\"\r\n                                            bindLabel=\"label\" [(ngModel)]=\"startingAccount\" placeholder=\"Starting Account\">\r\n                                            <ng-option *ngFor=\"let values of startingacc\" [value]=\"values\">\r\n                                                {{values.label}} {{values.name}}</ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Starting_Account'].invalid && (ngForm.controls['Starting_Account'].dirty || ngForm.controls['Starting_Account'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['Starting_Account'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-1\"></div>\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"Ending Account\">Ending Account<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Ending_Account\" bindValue=\"value\" bindLabel=\"label\"\r\n                                            [(ngModel)]=\"EndingAccount\" (change)=\"loadAcno()\" placeholder=\"Ending Account\">\r\n                                            <ng-option *ngFor=\"let values of endingacc\" [value]=\"values\">\r\n                                                {{values.label}} {{values.name}}</ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Ending_Account'].invalid && (ngForm.controls['Ending_Account'].dirty || ngForm.controls['Ending_Account'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['Ending_Account'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"Starting Date\">Starting Date<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"Starting_Date\"\r\n                                            id=\"Starting_Date\" class=\"form-control\" [(ngModel)]=\"startingdate\"  [maxDate]=\"maxDate\" \r\n                                            formControlName=\"Starting_Date\"\r\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                            bsDatepicker>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Starting_Date'].invalid && (ngForm.controls['Starting_Date'].dirty || ngForm.controls['Starting_Date'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div\r\n                                        *ngIf=\"ngForm.controls['Starting_Date'].errors?. maxlength || ngForm.controls['Starting_Date'].errors?. minlength || ngForm.controls['Starting_Date'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-1\"></div>\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"Ending Date\">Ending Date<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"Ending_Date\" id=\"Ending_Date\"\r\n                                            class=\"form-control\" [(ngModel)]=\"endingdate\" formControlName=\"Ending_Date\"  [maxDate]=\"maxDate\"  [minDate]=\"startingdate\"\r\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                            bsDatepicker>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"ngForm.controls['Ending_Date'].invalid && (ngForm.controls['Ending_Date'].dirty || ngForm.controls['Ending_Date'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"ngForm.controls['Ending_Date'].errors?. maxlength || ngForm.controls['Ending_Date'].errors?. minlength || ngForm.controls['Ending_Date'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"checkbox checkbox-primary\">\r\n                                    <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                        <input type=\"checkbox\" class=\"border-checkbox\"\r\n                                            id=\"Print_Every_Account_on_New_Page\"\r\n                                            formControlName=\"Print_Every_Account_on_New_Page\">\r\n                                        <label class=\"border-checkbox-label\" for=\"Print_Every_Account_on_New_Page\">\r\n                                            Print Every Account On New Page</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"checkbox checkbox-primary\">\r\n                                    <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                        <input type=\"checkbox\" class=\"border-checkbox\" id=\"Print_Closed_Account\"\r\n                                            formControlName=\"Print_Closed_Account\">\r\n                                        <label class=\"border-checkbox-label\" for=\"Print_Closed_Account\"> Print Closed\r\n                                            Account ?</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"checkbox checkbox-primary\">\r\n                                    <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                        <input type=\"checkbox\" class=\"border-checkbox\" id=\"Print_Added_Penal_Interest\"\r\n                                            formControlName=\"Print_Added_Penal_Interest\">\r\n                                        <label class=\"border-checkbox-label\" for=\"Print_Added_Penal_Interest\">Print\r\n                                            Added Penal Interest..?</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"checkbox checkbox-primary\">\r\n                                    <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                        <input type=\"checkbox\" class=\"border-checkbox\" id=\"Print_Concise_Report\"\r\n                                            formControlName=\"Print_Concise_Report\">\r\n                                        <label class=\"border-checkbox-label\" for=\"Print_Concise_Report\">Print Concise\r\n                                            Report..?</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\"></div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-9\"></div>\r\n                            <div class=\"col-md-2\">\r\n                                <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\r\n                         (click)=\"View($event); clicked = true  \">View</button>\r\n    \r\n                            </div>\r\n                            <div class=\"col-md-1\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" (click)=\"close()\">Close</button>\r\n                            </div>\r\n                        </div>\r\n    \r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        <h5>Report Frame</h5>\r\n                                    </div>\r\n                                    <div *ngIf=\"showRepo\">\r\n                                        <app-iframe2 [url]='iframe2url'></app-iframe2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {SharedModule} from '../../../../shared/shared.module';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BnkLNamtStatementComponent } from './bnk-lnamt-statement.component';\r\nimport {BnkLNamtStatementRoutingModule} from './bnk-lnamt-statement-routing.module'\r\nimport { Iframe2Module } from '../iframe2/iframe2.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  \r\n    \r\n    NgSelectModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    BnkLNamtStatementRoutingModule,\r\n    Iframe2Module\r\n  ],\r\n\r\n  declarations: [BnkLNamtStatementComponent],\r\n  exports:[BnkLNamtStatementComponent],\r\n  providers:[{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },]\r\n})\r\nexport class BnkLNamtStatementModule { }"],"sourceRoot":"webpack:///"}