{"version":3,"sources":["./src/app/shared/elements/a1.service.ts","./src/app/shared/elements/branch.service.ts","./src/app/shared/elements/scheme1.service.ts","./src/app/theme/master/customer/account-opening/account-opening-routing.module.ts","./src/app/theme/master/customer/account-opening/account-opening.component.ts","./src/app/theme/master/customer/account-opening/account-opening.component.html","./src/app/theme/master/customer/account-opening/account-opening.module.ts","./src/app/theme/master/customer/account-opening/account-opening.service.ts","./src/app/theme/master/policy-settings/information/bank-master/bank-master.service.ts"],"names":[],"mappings":"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","file":"default~account-opening-account-opening-module~centralised-passing-centralisedPassing-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class A1Service {\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: '0', label: '1' },\n        { value: '1', label: '2' },\n        { value: '2', label: '3' }\n             \n    ];\n       \n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(A1Service.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(A1Service.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(A1Service.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class BranchService {\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: '0', label: 'branch1' },\n        { value: '1', label: 'branch2' },\n        { value: '2', label: 'branch1' }\n             \n    ];\n       \n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(BranchService.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(BranchService.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(BranchService.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class Scheme1Service {\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: '0', label: '111' },\n        { value: '1', label: '222' },\n        { value: '2', label: '333' },\n        { value: '3', label: 'NA' }\n             \n    ];\n       \n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(Scheme1Service.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(Scheme1Service.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(Scheme1Service.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AccountOpeningComponent} from './account-opening.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountOpeningComponent,\n    data: {\n      title: 'Investment Module',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountOpeningRoutingModule { }\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { BankMasterService } from '../../../../shared/dropdownService/bank-Master-dropdown.service';\nimport { OwnbranchMasterService } from '../../../../shared/dropdownService/own-branch-master-dropdown.service';\nimport { first } from 'rxjs/operators';\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service';\nimport { InvestmentService } from './account-opening.service';\nimport { BankService } from '../../policy-settings/information/bank-master/bank-master.service';\nimport { environment } from '../../../../../environments/environment';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs-compat';\nimport { HttpClient } from '@angular/common/http';\nimport * as moment from 'moment';\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface InvestmentMaster {\n  AC_ACNOTYPE: string\n  AC_TYPE: string\n  AC_NO: number\n  INVEST_BANK: string\n  INVEST_BRANCH: string\n  AC_NAME: string\n  AC_REF_RECEIPTNO: number\n  AC_OPDATE: Date\n  AC_ASON_DATE: Date\n  AC_EXPDT: Date\n  AC_MONTHS: number\n  AC_DAYS: number\n  AC_SCHMAMT: number\n  AC_INTRATE: number\n  AC_MATUAMT: number\n  AC_CLOSEDT: Date\n}\n@Component({\n  selector: 'app-account-opening',\n  templateUrl: './account-opening.component.html',\n  styleUrls: ['./account-opening.component.scss']\n})\n\nexport class AccountOpeningComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() childMessage: string;\n  @Output() public getUserData = new EventEmitter<string>();\n  //api \n  url = environment.base_url;\n  formSubmitted = false;\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  // Store data from backend\n  investmentMaster: InvestmentMaster[];\n  dtExportOptions: DataTables.Settings = {};\n  Data: any;\n  datemax: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  //variable to get ID to update\n  updateID: number = 0;\n  // Filter Variable\n  filterData = {};\n\n  //Scheme type variable\n  schemeType: string = 'IV'\n\n  //variables for  add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  newbtnShow: boolean = false;\n  id: string = '';\n  BankCode: any[];\n  BranchCode: any[];\n  scheme: any[];\n  bsValue\n  AC_TYPE: boolean = false\n  code: any = null\n  ngBank: any = null\n  ngBranch: any = null\n  DatatableHideShow: boolean = true;\n  rejectShow: boolean = false;\n  approveShow: boolean = false;\n  maxDate: Date\n  minDate: Date\n  constructor(private fb: FormBuilder,\n    private bankMasterService: BankMasterService,\n    private ownbranchMaster: OwnbranchMasterService,\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\n    private bankService: BankService,\n    private investmentService: InvestmentService,\n    private http: HttpClient,\n  ) {\n    this.maxDate = new Date();\n    this.maxDate.setDate(this.maxDate.getDate());\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate());\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        let data: any = localStorage.getItem('user');\n        let result = JSON.parse(data);\n        let branchCode = result.branch.id;\n\n        dataTableParameters['branchCode'] = branchCode;\n        dataTableParameters['filterData'] = this.filterData;\n        this.http\n          .post<DataTableResponse>(\n            this.url + '/investment',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.investmentMaster = resp.data;\n            console.log('this.investmentMaster', this.investmentMaster)\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columnDefs: [{\n        targets: '_all',\n        defaultContent: \"\"\n      }],\n      columns: [\n        {\n          title: 'Action',\n        },\n        {\n          title: 'Scheme',\n          data: 'AC_TYPE'\n        },\n        {\n          title: 'Account Number',\n          data: 'AC_NO'\n        },\n        {\n          title: 'Member Name',\n          data: 'AC_NAME'\n        },\n        {\n          title: 'Bank Code',\n          data: 'INVEST_BANK'\n        },\n        {\n          title: 'Branch Code',\n          data: 'INVEST_BRANCH'\n        },\n        {\n          title: 'Account Open Date',\n          data: 'AC_OPDATE'\n        },\n        {\n          title: 'As On Date',\n          data: 'AC_ASON_DATE'\n        },\n        {\n          title: 'Maturity Date',\n          data: 'AC_EXPDT'\n        },\n        {\n          title: 'Receipt Number',\n          data: 'AC_REF_RECEIPTNO'\n        },\n        {\n          title: 'Interest Rate',\n          data: 'AC_INTRATE'\n        },\n        {\n          title: 'Deposit Amount',\n          data: 'AC_SCHMAMT'\n        },\n\n        {\n          title: 'Maturity Amount',\n          data: 'AC_MATUAMT'\n        },\n       \n      ],\n      dom: 'Blrtip',\n    };\n    this.bankMasterService.getBankList().pipe(first()).subscribe(data => {\n      this.BankCode = data;\n    })\n    this.ownbranchMaster.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.BranchCode = data;\n    })\n    this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data => {\n      this.scheme = data;\n      this.code = this.scheme[0].value\n    })\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      AC_ACNOTYPE: ['IV'],\n      AC_TYPE: ['', [Validators.required]],\n      AC_NO: [''],\n      INVEST_BANK: ['', [Validators.required]],\n      INVEST_BRANCH: ['', [Validators.required]],\n      AC_NAME: [''],\n      AC_REF_RECEIPTNO: ['', [Validators.pattern, Validators.required]],\n      AC_OPDATE: ['', [Validators.required]],\n      AC_ASON_DATE: ['', [Validators.required]],\n      AC_EXPDT: ['', [Validators.required]],\n      AC_MONTHS: ['', [Validators.pattern, Validators.required]],\n      AC_DAYS: ['', [Validators.pattern, Validators.required]],\n      AC_SCHMAMT: ['', [Validators.pattern, Validators.required]],\n      AC_INTRATE: ['', [Validators.pattern, Validators.required]],\n      AC_MATUAMT: ['', [Validators.pattern]],\n      AC_CLOSEDT: ['']\n    });\n  }\n\n  getBranch(event) {\n    this.ngBranch = event.value\n  }\n  submit() {\n    const formVal = this.angForm.value;\n    //get bank code and branch code from session\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    let branchCode = result.branch.id;\n    let bankCode = Number(result.branch.syspara.BANK_CODE)\n    let schecode\n    this.scheme.forEach(async (element) => {\n      if (element.value == this.code) {\n        schecode = element.name\n      }\n    })\n    const dataToSend = {\n      'branchCode': branchCode,\n      'bankCode': bankCode,\n      'schemeCode': schecode,\n      'AC_ACNOTYPE': formVal.AC_ACNOTYPE,\n      'AC_TYPE': formVal.AC_TYPE,\n      'AC_NO': formVal.AC_NO,\n      'INVEST_BANK': formVal.INVEST_BANK,\n      'INVEST_BRANCH': this.ngBranch,\n      'AC_NAME': formVal.AC_NAME,\n      'AC_REF_RECEIPTNO': formVal.AC_REF_RECEIPTNO,\n      'AC_OPDATE': (formVal.AC_OPDATE == '' || formVal.AC_OPDATE == null || formVal.AC_OPDATE == 'Invalid date') ? '' : moment(formVal.AC_OPDATE).format('DD/MM/YYYY'),\n      'AC_ASON_DATE': (formVal.AC_ASON_DATE == '' || formVal.AC_ASON_DATE == null || formVal.AC_ASON_DATE == 'Invalid date') ? '' : moment(formVal.AC_ASON_DATE).format('DD/MM/YYYY'),\n      'AC_EXPDT': (formVal.AC_EXPDT == '' || formVal.AC_EXPDT == null || formVal.AC_EXPDT == 'Invalid date') ? '' : moment(formVal.AC_EXPDT).format('DD/MM/YYYY'),\n      'AC_MONTHS': formVal.AC_MONTHS,\n      'AC_DAYS': formVal.AC_DAYS,\n      'AC_SCHMAMT': formVal.AC_SCHMAMT,\n      'AC_INTRATE': formVal.AC_INTRATE,\n      'AC_MATUAMT': formVal.AC_MATUAMT,\n      'AC_CLOSEDT': (formVal.AC_CLOSEDT == '' || formVal.AC_CLOSEDT == null || formVal.AC_CLOSEDT == 'Invalid date') ? '' : moment(formVal.AC_CLOSEDT).format('DD/MM/YYYY'),\n      // 'AC_CLOSEDT': formVal.AC_CLOSEDT\n    }\n    this.investmentService.postData(dataToSend).subscribe(data => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      this.formSubmitted = false;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n\n\n    }, (error) => {\n      console.log(error)\n    })\n    this.ngBank = null\n    this.addNewData()\n    //To clear form\n    this.resetForm();\n  }\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.angForm.controls['AC_CLOSEDT'].disable()\n    this.resetForm();\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    this.angForm.controls['AC_CLOSEDT'].disable()\n    this.code = null\n    this.ngBank = null\n    this.ngBranch = null\n  }\n  getBankName(event) {\n    this.bankService.getFormData(event.value).subscribe(data => {\n      this.angForm.patchValue({\n        INVEST_BANK: event.value,\n        AC_NAME: data.BANK_NAME\n      })\n    })\n  }\n  updatecheckdata\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = true;\n    this.angForm.controls['AC_CLOSEDT'].enable()\n    this.investmentService.getFormData(id).subscribe(data => {\n      this.updatecheckdata = data\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'AC_ACNOTYPE': data.AC_ACNOTYPE,\n        'AC_TYPE': data.AC_TYPE,\n        'AC_NO': data.AC_NO,\n        'INVEST_BANK': Number(data.INVEST_BANK),\n        'INVEST_BRANCH': Number(data.INVEST_BRANCH),\n        'AC_NAME': data.AC_NAME,\n        'AC_REF_RECEIPTNO': data.AC_REF_RECEIPTNO,\n        'AC_OPDATE': data.AC_OPDATE,\n        'AC_ASON_DATE': data.AC_ASON_DATE,\n        'AC_EXPDT': data.AC_EXPDT,\n        'AC_MONTHS': data.AC_MONTHS,\n        'AC_DAYS': data.AC_DAYS,\n        'AC_SCHMAMT': data.AC_SCHMAMT,\n        'AC_INTRATE': data.AC_INTRATE,\n        'AC_MATUAMT': data.AC_MATUAMT,\n        'AC_CLOSEDT': data.AC_CLOSEDT\n      })\n      this.ngBank = Number(data.INVEST_BANK)\n      this.ngBranch = Number(data.INVEST_BRANCH)\n    })\n  }\n\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    let opdate\n    let AC_ASON_DATE\n    let AC_EXPDT\n    let AC_CLOSEDT\n    if (this.updatecheckdata.AC_OPDATE != data.AC_OPDATE) {\n      (data.AC_OPDATE == 'Invalid date' || data.AC_OPDATE == '' || data.AC_OPDATE == null) ? (opdate = '', data['AC_OPDATE'] = opdate) : (opdate = data.AC_OPDATE, data['AC_OPDATE'] = moment(opdate).format('DD/MM/YYYY'))\n    } else {\n      data['AC_OPDATE'] = data.AC_OPDATE\n    }\n\n    if (this.updatecheckdata.AC_ASON_DATE != data.AC_ASON_DATE) {\n      (data.AC_ASON_DATE == 'Invalid date' || data.AC_ASON_DATE == '' || data.AC_ASON_DATE == null) ? (AC_ASON_DATE = '', data['AC_ASON_DATE'] = AC_ASON_DATE) : (AC_ASON_DATE = data.AC_ASON_DATE, data['AC_ASON_DATE'] = moment(AC_ASON_DATE).format('DD/MM/YYYY'))\n    } else {\n      data['AC_ASON_DATE'] = data.AC_ASON_DATE\n    }\n\n    if (this.updatecheckdata.AC_EXPDT != data.AC_EXPDT) {\n      (data.AC_EXPDT == 'Invalid date' || data.AC_EXPDT == '' || data.AC_EXPDT == null) ? (AC_EXPDT = '', data['AC_EXPDT'] = AC_EXPDT) : (AC_EXPDT = data.AC_EXPDT, data['AC_EXPDT'] = moment(AC_EXPDT).format('DD/MM/YYYY'))\n    } else {\n      data['AC_EXPDT'] = data.AC_EXPDT\n    }\n    if (this.updatecheckdata.AC_CLOSEDT != data.AC_CLOSEDT) {\n      (data.AC_CLOSEDT == 'Invalid date' || data.AC_CLOSEDT == '' || data.AC_CLOSEDT == null) ? (AC_CLOSEDT = '', data['AC_CLOSEDT'] = AC_CLOSEDT) : (AC_CLOSEDT = data.AC_CLOSEDT, data['AC_CLOSEDT'] = moment(AC_CLOSEDT).format('DD/MM/YYYY'))\n    } else {\n      data['AC_CLOSEDT'] = data.AC_CLOSEDT\n    }\n\n    data['id'] = this.updateID;\n    this.investmentService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.ajax.reload()\n      });\n      this.showButton = true;\n      this.updateShow = false;\n      this.newbtnShow = false;\n\n      this.resetForm();\n    })\n  }\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      $('#mastertable tfoot tr').appendTo('#mastertable thead');\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n\n  //approve account\n  Approve() {\n    let user = JSON.parse(localStorage.getItem('user'));\n    let obj = {\n      id: this.updateID,\n      user: user.id\n    }\n    this.investmentService.approve(obj).subscribe(data => {\n      Swal.fire(\n        'Approved',\n        'Investment Account approved successfully',\n        'success'\n      );\n      var button = document.getElementById('triggerhide');\n      button.click();\n\n      this.getUserData.emit('welcome to stackoverflow!');\n    }, err => {\n      console.log('something is wrong');\n    })\n  }\n\n\n  //reject account\n  reject() {\n    let user = JSON.parse(localStorage.getItem('user'));\n    let obj = {\n      id: this.updateID,\n      user: user.id\n    }\n    this.investmentService.reject(obj).subscribe(data => {\n      Swal.fire(\n        'Rejected',\n        'Investment Account rejected successfully',\n        'success'\n      );\n\n      var button = document.getElementById('triggerhide');\n      button.click();\n    }, err => {\n      console.log('something is wrong');\n    })\n  }\n\n}\n","<!-- Other Bank's Deposit Master   -->\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Investment Account Opening</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select bindValue=\"value\" [(ngModel)]=\"code\" id=\"AC_TYPE\"\n                                        formControlName=\"AC_TYPE\" [disabled]=\"AC_TYPE\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Scheme\">\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"AC_TYPE\">Scheme <sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input style=\"text-align: right;\" type=\"text\" name=\"AC_NO\" class=\"form-control\" placeholder=\" \" id=\"AC_NO\"\n                                        formControlName=\"AC_NO\" disabled>\n                                    <label for=\"AC_NO\">Account Number</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select bindValue=\"value\" [(ngModel)]=\"ngBank\" id=\"INVEST_BANK\"\n                                        formControlName=\"INVEST_BANK\" title=\"Compulsory Selection\"\n                                        (change)=\"getBankName($event)\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                        required placeholder=\"Bank Code\">\n                                        <ng-option *ngFor=\"let values of BankCode\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"INVEST_BANK\">Bank Code <sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['INVEST_BANK'].invalid && (angForm.controls['INVEST_BANK'].dirty || angForm.controls['INVEST_BANK'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['INVEST_BANK'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select bindValue=\"value\" [(ngModel)]=\"ngBranch\" id=\"INVEST_BRANCH\"\n                                        formControlName=\"INVEST_BRANCH\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\n                                        (change)=\"getBranch($event)\" placeholder=\"Branch Code\">\n                                        <ng-option *ngFor=\"let values of BranchCode\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"INVEST_BRANCH\">Branch Code <sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['INVEST_BRANCH'].invalid && (angForm.controls['INVEST_BRANCH'].dirty || angForm.controls['INVEST_BRANCH'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['INVEST_BRANCH'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"AC_NAME\" class=\"form-control\" placeholder=\" \" id=\"AC_NAME\"\n                                        pattern=\"^[A-Za-z\\./ -]+$\" formControlName=\"AC_NAME\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" disabled>\n                                    <label for=\"AC_NAME\">Bank Name</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input style=\"text-align: right;\" type=\"text\" name=\"AC_REF_RECEIPTNO\" class=\"form-control\" placeholder=\" \"\n                                        id=\"AC_REF_RECEIPTNO\" required pattern=\"^[0-9]+$\" maxlength=\"10\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\n                                        title=\"Input allowed only 0-9\" formControlName=\"AC_REF_RECEIPTNO\">\n                                    <label for=\"AC_REF_RECEIPTNO\">Receipt Number <sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_REF_RECEIPTNO'].invalid && (angForm.controls['AC_REF_RECEIPTNO'].dirty || angForm.controls['AC_REF_RECEIPTNO'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['AC_REF_RECEIPTNO'].errors?.required || angForm.controls['AC_REF_RECEIPTNO'].errors?.pattern || angForm.controls['AC_REF_RECEIPTNO'].errors?.maxlength\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AC_OPDATE\" id=\"AC_OPDATE\"\n                                        class=\"form-control\" max=\"{{datemax | date:'yyyy-MM-dd'}}\" #date\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"AC_OPDATE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        [bsValue]=\"bsValue\" bsDatepicker>\n                                    <label for=\"AC_OPDATE\">Account Open Date<sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_OPDATE'].invalid && (angForm.controls['AC_OPDATE'].dirty || angForm.controls['AC_OPDATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_OPDATE'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AC_ASON_DATE\" id=\"AC_ASON_DATE\"\n                                        class=\"form-control\" max=\"{{datemax | date:'yyyy-MM-dd'}}\" #date\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"AC_ASON_DATE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        [bsValue]=\"bsValue\" bsDatepicker>\n                                    <label for=\"AC_ASON_DATE\">As On Date<sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_ASON_DATE'].invalid && (angForm.controls['AC_ASON_DATE'].dirty || angForm.controls['AC_ASON_DATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_ASON_DATE'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AC_EXPDT\" id=\"AC_EXPDT\"\n                                        class=\"form-control\" max=\"{{datemax | date:'yyyy-MM-dd'}}\" #date\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"maxDate\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"AC_EXPDT\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        [bsValue]=\"bsValue\" bsDatepicker>\n                                    <label for=\"AC_EXPDT\">Maturity Date<sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_EXPDT'].invalid && (angForm.controls['AC_EXPDT'].dirty || angForm.controls['AC_EXPDT'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_EXPDT'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <h6>Deposit Period:</h6>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input style=\"text-align: right;\" type=\"text\" name=\"AC_MONTHS\" class=\"form-control\" placeholder=\" \"\n                                        id=\"AC_MONTHS\" required pattern=\"^[0-9]+$\" title=\"Input allowed only 0-9\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\n                                        formControlName=\"AC_MONTHS\">\n                                    <label for=\"AC_MONTHS\">Months<sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_MONTHS'].invalid && (angForm.controls['AC_MONTHS'].dirty || angForm.controls['AC_MONTHS'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['AC_MONTHS'].errors?.pattern || angForm.controls['AC_MONTHS'].errors?.required\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input style=\"text-align: right;\" type=\"text\" name=\"AC_DAYS\" class=\"form-control\" placeholder=\" \" id=\"AC_DAYS\"\n                                        required pattern=\"^[0-9]+$\" title=\"Input allowed only 0-9\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\n                                        formControlName=\"AC_DAYS\">\n                                    <label for=\"AC_DAYS\">Days <sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_DAYS'].invalid && (angForm.controls['AC_DAYS'].dirty || angForm.controls['AC_DAYS'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['AC_DAYS'].errors?.pattern || angForm.controls['AC_DAYS'].errors?.required\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input  type=\"text\" name=\"AC_SCHMAMT\" class=\"form-control\" placeholder=\" \"\n                                        id=\"AC_SCHMAMT\" required=\"\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        style=\"text-align: right;\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\n                                        formControlName=\"AC_SCHMAMT\" [ngClass]=\"{'form-submitted': formSubmitted}\">\n                                    <label for=\"AC_SCHMAMT\">Deposit Amount<sub class=\"required\">*\n                                        </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_SCHMAMT'].invalid && (angForm.controls['AC_SCHMAMT'].dirty || angForm.controls['AC_SCHMAMT'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['AC_SCHMAMT'].errors?.pattern || angForm.controls['AC_SCHMAMT'].errors?.required\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input style=\"text-align: right;\" type=\"text\" name=\"AC_INTRATE\" class=\"form-control\" placeholder=\" \"\n                                        id=\"AC_INTRATE\" required title=\"Input allowed only . 0-9(after decimal 1 0r 2 digits) \"\n                                        pattern=\"\\d{1,20}(\\.\\d{1,2})?\"\n                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\"\n                                        formControlName=\"AC_INTRATE\">\n                                    <label for=\"AC_INTRATE\">Interest Rate <sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_INTRATE'].invalid && (angForm.controls['AC_INTRATE'].dirty || angForm.controls['AC_INTRATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['AC_INTRATE'].errors?.pattern || angForm.controls['AC_INTRATE'].errors?.required\">\n                                    This field is required and Input allowed only . 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"AC_MATUAMT\" class=\"form-control\" placeholder=\" \"\n                                        id=\"AC_MATUAMT\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        style=\"text-align: right;\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\n                                        formControlName=\"AC_MATUAMT\" [ngClass]=\"{'form-submitted': formSubmitted}\">\n                                    <label for=\"AC_MATUAMT\">Maturity Amount</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_MATUAMT'].invalid && (angForm.controls['AC_MATUAMT'].dirty || angForm.controls['AC_MATUAMT'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_MATUAMT'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AC_CLOSEDT\" id=\"AC_CLOSEDT\"\n                                    class=\"form-control\" max=\"{{datemax | date:'yyyy-MM-dd'}}\" \n                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"minDate\"\n                                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"AC_CLOSEDT\"\n                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                    [bsValue]=\"bsValue\" bsDatepicker disabled />\n                                    <label for=\"AC_CLOSEDT\">Account Closed Date </label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\" style=\"float: right;\">\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\"\n                                (click)=\"submit($event)\">\n                                Submit\n                            </button>\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"addNewData()\" *ngIf=\"newbtnShow\">\n                                Cancel\n                            </button>&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">\n                                Update</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"rejectShow\" (click)=\"reject()\">\n                                Reject</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"approveShow\" (click)=\"Approve()\">\n                                Approve</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"DatatableHideShow\">\n    <div class=\"col-12\">\n        <div class=\"card shadow\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table id=\"mastertable\" datatable [dtOptions]=\"dtExportButtonOptions\"\n                                [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"investmentMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of investmentMaster\">\n                                        <td>\n                                            <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\"\n                                                (click)=\"editClickHandler(data.id)\" placement=\"bottom\"\n                                                ngbTooltip=\"Edit\"></span>\n                                        </td>\n                                        <td\n                                            [ngClass]=\"data.AC_TYPE === '' || data.AC_TYPE== null? 'td_center' : 'td_right'\">\n                                            {{ data.AC_TYPE === \"\" || data.AC_TYPE== null? \"-\" : data.DPMaster.S_APPL }}\n                                        </td>\n                                        <td [ngClass]=\"data.AC_NO === '' ? 'td_center' : 'td_right'\">\n                                            {{ data.AC_NO === \"\" ? \"-\" : data.AC_NO }}\n                                        </td>\n                                        <td [ngClass]=\"data.AC_NAME === '' ? 'td_center' : 'td_left'\">\n                                            {{data.AC_NAME === ''? '-' : data.AC_NAME}}</td>\n                                        <td [ngClass]=\"data.INVEST_BANK === '' ? 'td_center' : 'td_right'\">\n                                            {{ data.INVEST_BANK === \"\" ? \"-\" : data.INVEST_BANK }}\n                                        </td>\n                                        <td [ngClass]=\"data.INVEST_BRANCH === '' ? 'td_center' : 'td_right'\">\n                                            {{ data.INVEST_BRANCH === \"\" ? \"-\" : data.INVEST_BRANCH }}\n                                        </td>\n                                        <td [ngClass]=\"data.AC_OPDATE === '' ? 'td_center' : 'td_center'\">\n                                            {{data.AC_OPDATE === ''? '-' : data.AC_OPDATE}}</td>\n                                        <td [ngClass]=\"data.AC_ASON_DATE === '' ? 'td_center' : 'td_center'\">\n                                            {{data.AC_ASON_DATE === ''? '-' : data.AC_ASON_DATE}}</td>\n                                        <td [ngClass]=\"data.AC_EXPDT === '' ? 'td_center' : 'td_center'\">\n                                            {{data.AC_EXPDT === ''? '-' : data.AC_EXPDT}}</td>\n                                        <td [ngClass]=\"data.AC_REF_RECEIPTNO === '' ? 'td_center' : 'td_right'\">\n                                            {{data.AC_REF_RECEIPTNO === ''? '-' : data.AC_REF_RECEIPTNO}}</td>\n                                        <td [ngClass]=\"data.AC_INTRATE === '' ? 'td_center' : 'td_right'\">\n                                            {{data.AC_INTRATE === ''? '-' : data.AC_INTRATE}}</td>\n                                        <td [ngClass]=\"data.AC_SCHMAMT === '' ? 'td_center' : 'td_right'\">\n                                            {{data.AC_SCHMAMT === ''? '-' : data.AC_SCHMAMT}}</td>\n                                        <td [ngClass]=\"data.AC_MATUAMT === '' ? 'td_center' : 'td_right'\">\n                                            {{data.AC_MATUAMT === ''? '-' : data.AC_MATUAMT}}</td>\n                                        <!-- <td [ngClass]=\"data.AC_CLOSEDT === '' ? 'td_center' : 'td_center'\">\n                                            {{data.AC_CLOSEDT === ''? '-' : data.AC_CLOSEDT}}</td> -->\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"investmentMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot #filters class=\"filters\">\n                                    <tr class=\"testing\">\n                                        <th></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_TYPE\"></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_NO\"></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_NAME\"></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"INVEST_BANK\"></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"INVEST_BRANCH\"> </th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_OPDATE\"></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_ASON_DATE\"></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_EXPDT\"></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_REF_RECEIPTNO\"></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_INTRATE\"></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_SCHMAMT\"></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_MATUAMT\"></th>\n                                        <!-- <th><input type=\"text\" class=\"form-control\" name=\"AC_CLOSEDT\"></th> -->\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AccountOpeningComponent } from './account-opening.component';\nimport { AccountOpeningRoutingModule } from './account-opening-routing.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\nimport { A1Service } from '../../../../shared/elements/a1.service';\nimport { BranchService } from '../../../../shared/elements/branch.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BankMasterService } from '../../../../shared/dropdownService/bank-Master-dropdown.service';\nimport { OwnbranchMasterService } from '../../../../shared/dropdownService/own-branch-master-dropdown.service';\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service';\nimport { BankService } from '../../policy-settings/information/bank-master/bank-master.service';\nimport { InvestmentService } from './account-opening.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgSelectModule } from '@ng-select/ng-select';\n@NgModule({\n  imports: [\n    CommonModule,\n    DataTablesModule,\n    AccountOpeningRoutingModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot()\n  ],\n  declarations: [AccountOpeningComponent],\n  exports: [AccountOpeningComponent],\n  providers: [Scheme1Service, A1Service, BranchService,\n    BankMasterService,\n    OwnbranchMasterService,\n    SchemeCodeDropdownService,\n    BankService,\n    InvestmentService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ]\n})\nexport class AccountOpeningModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport {environment}  from '../../../../../environments/environment'\n@Injectable()\nexport class InvestmentService {\n    // Variable for handleError\n    [x: string]: any;\n    // API \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    //Insertion Operation\n    postData(data: any): Observable<any> {\n        return this.http.post(this.url + '/investment/insert', data).pipe(map((res) => res),\n            catchError((error) => {\n                Swal.fire('Please Input Proper Data!');\n                return throwError(error);\n            })\n        )\n    }\n    // For append data\n    getFormData(id: any): Observable<any> {\n        return this.http.get(this.url + '/investment/' + id).pipe(catchError(this.handleError));\n    }\n    //Updation Operation\n    updateData(data): Observable<any> {\n        return this.http.put(this.url + '/investment/update', data);\n    }\n    //Deletion Operation\n    deleteData(id: any): Observable<any> {\n        return this.http.delete(this.url + '/investment/delete/' + id).pipe(catchError(this.handleError));\n    }  \n\n    //approve master\n    approve(data: any): Observable<any> {\n        return this.http.post(this.url + '/investment/approve', data).pipe(catchError(this.handleError));\n    }\n\n\n    //reject master\n    reject(data: any): Observable<any> {\n        return this.http.post(this.url + '/investment/reject', data).pipe(catchError(this.handleError));\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport {environment}  from '../../../../../../environments/environment'; \n\n@Injectable()\nexport class BankService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n url = environment.base_url;\n\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/bank-master/insert', data).pipe(map((res) => res),\n    catchError((error) => {\n      Swal.fire('Please Input Proper Data !');\n      return throwError(error);\n    })\n    )\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/bank-master/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/bank-master/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/bank-master/delete/' + id).pipe(catchError(this.handleError));\n  }\n}\n\n\n"],"sourceRoot":"webpack:///"}