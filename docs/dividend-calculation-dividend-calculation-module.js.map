{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/shared/elements/branch.service.ts","./src/app/shared/elements/scheme-code.service.ts","./src/app/theme/master/shares/dividend-calculation/dividend-calculation-routing.module.ts","./src/app/theme/master/shares/dividend-calculation/dividend-calculation.component.ts","./src/app/theme/master/shares/dividend-calculation/dividend-calculation.component.html","./src/app/theme/master/shares/dividend-calculation/dividend-calculation.module.ts","./src/app/theme/master/shares/dividend-calculation/dividend-calculation.service.ts"],"names":[],"mappings":"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","file":"dividend-calculation-dividend-calculation-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class SchemeCodeDropdownService {\n    schemeCodeObject = new Array();\n    schemeObject = new Array();\n    // // scheme-parameters\";\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n\n    public getSchemeCodeList(scheme) {\n        this.schemeCodeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF };\n                    this.schemeCodeObject.push(obj)\n                });\n                return this.schemeCodeObject;\n            }));\n    }\n\n\n    public getAllSchemeList() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n    public getAllSchemeList1() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\n                    this.schemeObject.push(obj)\n                });\n\n                return this.schemeObject;\n            }));\n\n    }\n\n    public getTermDepositSchemeRD() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\n\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n    public getTermDepositSchemePatD() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n    public getTermDepositeScheme() {\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n    public getTdReceiptScheme() {\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n    public getAllSchemeListINT() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class BranchService {\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: '0', label: 'branch1' },\n        { value: '1', label: 'branch2' },\n        { value: '2', label: 'branch1' }\n             \n    ];\n       \n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(BranchService.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(BranchService.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(BranchService.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class SchemeCodeService {\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: '40100', label: '40100' },\n        { value: '40200', label: '40200' },\n        { value: '40300', label: '40300' },\n        { value: '40400', label: '40400' },\n        \n    ];\n\n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(SchemeCodeService.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(SchemeCodeService.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(SchemeCodeService.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { DividendCalculationComponent } from './dividend-calculation.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DividendCalculationComponent,\n    data: {\n      title: 'Dividend Calculation',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DividendCalculationRoutingModule { }\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { IOption } from \"ng-select\";\nimport { Subscription } from \"rxjs/Subscription\";\nimport { SchemeCodeService } from \"../../../../shared/elements/scheme-code.service\";\nimport { SchemeCodeDropdownService } from \"../../../../shared/dropdownService/scheme-code-dropdown.service\";\n// import { MembernoService } from '../../../../shared/elements/memberno.service';\nimport { BranchService } from \"../../../../shared/elements/branch.service\";\nimport Swal from \"sweetalert2\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { SchemeAccountNoService } from \"src/app/shared/dropdownService/schemeAccountNo.service\";\nimport { first } from \"rxjs/operators\";\nimport { NgSelectConfig } from \"@ng-select/ng-select\";\nimport * as moment from \"moment\";\nimport { environment } from \"src/environments/environment\";\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\nimport { data } from \"jquery\";\nimport { Subject } from \"rxjs-compat\";\nimport { HttpClient } from \"@angular/common/http\";\n//date pipe\nimport { DatePipe } from \"@angular/common\";\nimport { DividendCalculationService } from \"./dividend-calculation.service\";\nimport { catchError, map } from \"rxjs/operators\";\nimport { throwError } from \"rxjs\";\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface DividendCalculation {\n  id: number;\n  AC_TYPE: string;\n  FROM_AC: string;\n  TO_AC: string;\n  DIV_FROMDATE: Date;\n  DIV_TODATE: Date;\n  WARRENT_DATE: Date;\n  Dividend: number;\n  Bonus: number;\n}\n\n@Component({\n  selector: \"app-dividend-calculation\",\n  templateUrl: \"./dividend-calculation.component.html\",\n  styleUrls: [\"./dividend-calculation.component.scss\"],\n})\nexport class DividendCalculationComponent implements OnInit {\n  //api\n  url = environment.base_url;\n  formSubmitted = false;\n  angForm: FormGroup;\n\n  dividendcalculation: DividendCalculation[];\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  dtExportButtonOptions: any = {};\n\n  // a: Array<IOption> = this.SchemeCodeService.getCharacters();\n  WarrantDate: Array<IOption> = this.SchemeCodeService.getCharacters();\n  BranchCode: Array<IOption> = this.BranchService.getCharacters();\n  // b: Array<IOption> = this.MembernoService.getCharacters();\n\n  selectedOption = \"3\";\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = \"3\";\n  timeLeft = 5;\n\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  // dropdown ngmodel names\n\n  //Scheme type variable\n  schemeType: string = \"SH\";\n  shareSchemeType;\n  scheme: any[];\n  ngscheme: any = null;\n  ngfromac: any = null;\n  ngtoac: any = null;\n\n  // date variables\n  divfromdate: any = null;\n  divtodate: any = null;\n  warrentdate: any = null;\n  maxDate: Date;\n  minDate: Date;\n  fromdate: Date;\n  todate: Date\n  bsValue = new Date();\n\n  private dataSub: Subscription = null;\n  fromAC;\n  ToAC;\n  getschemename: any;\n  filterData: any;\n  page: number;\n\n  INT_ROUND_OFF;\n  shareDividend;\n  divMethod;\n  isAddBonusInDividend;\n\n  constructor(\n    private fb: FormBuilder,\n    public SchemeCodeService: SchemeCodeService,\n    public BranchService: BranchService,\n    private http: HttpClient,\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\n    private schemeAccountNoService: SchemeAccountNoService,\n    private _service: DividendCalculationService,\n    // public MembernoService: MembernoService,\n    private datePipe: DatePipe\n  ) {\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate());\n    this.maxDate.setDate(this.maxDate.getDate());\n\n    let finYear;\n    var sysDate = new Date();\n    var year = sysDate.getFullYear();\n    var month = new Date().getMonth();\n    month > 2 ? (finYear = year) : (finYear = year - 1);\n    // finYear = finYear - 1;\n    var full = [];\n    var fullDate = `03/31/${finYear}`;\n    this.fromdate = new Date(fullDate)\n    this.fromdate.setDate(this.fromdate.getDate());\n    this.todate = new Date(fullDate)\n    this.todate.setDate(this.fromdate.getDate());\n    // this.fromdate = moment(this.divfromdate).subtract(1, \"year\").toDate();\n    // const todate = moment(this.divtodate).subtract(1, \"year\");\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: \"full_numbers\",\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n\n        dataTableParameters.columns.forEach((element) => {\n          if (element.search.value != \"\") {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters[\"filterData\"] = this.filterData;\n        this.http\n          .post<DataTableResponse>(\n            this.url + \"/dividend-calculation\",\n            dataTableParameters\n          )\n          .subscribe((resp) => {\n            this.dividendcalculation = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: [],\n            });\n          });\n      },\n\n      columns: [\n        {\n          title: \"Action\",\n        },\n        {\n          title: \"Scheme Code\",\n          data: \"AC_TYPE\",\n        },\n        {\n          title: \"Membership From\",\n          data: \"FROM_AC\",\n        },\n        {\n          title: \"Membership To\",\n          data: \"TO_AC\",\n        },\n        {\n          title: \"Div.Date From\",\n          data: \"DIV_FROMDATE\",\n        },\n        {\n          title: \"Div.Date To\",\n          data: \"DIV_TODATE\",\n        },\n        {\n          title: \"Warrent Date\",\n          data: \"WARRENT_DATE\",\n        },\n        {\n          title: \"Dividend %\",\n          data: \"Dividend\",\n        },\n        {\n          title: \"Bonus %\",\n          data: \"Bonus\",\n        },\n      ],\n      dom: \"Bfrtip\",\n    };\n\n    this.schemeCodeDropdownService\n      .getSchemeCodeList(this.schemeType)\n      .pipe(first())\n      .subscribe((data) => {\n        this.scheme = data;\n        // this.ngscheme = data[0].value;\n        // this.shareDividend = data[0].dividend;\n        // this.divMethod = data[0].divMethod;\n        // this.isAddBonusInDividend = data[0].isAddBonus;\n        // this.INT_ROUND_OFF = data[0].INT_ROUND_OFF;\n        // this.angForm.patchValue({\n        //   Dividend: this.shareDividend,\n        // });\n      });\n    this.getDivTOYear();\n    // this.getAccountList();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      AC_TYPE: [\"\", [Validators.required, Validators.pattern]],\n      FROM_AC: [\"\", [Validators.required, Validators.pattern]],\n      TO_AC: [\"\", [Validators.required, Validators.pattern]],\n      DIV_FROMDATE: [\"\", [Validators.required, Validators.pattern]],\n      DIV_TODATE: [\"\", [Validators.required, Validators.pattern]],\n      WARRENT_DATE: [\"\", [Validators.required, Validators.pattern]],\n      Dividend: [\"\", [Validators.required, Validators.pattern]],\n      Bonus: [\"\", [Validators.required, Validators.pattern]],\n    });\n  }\n\n  //get account no according scheme\n  getAccountList() {\n    this.ngfromac = null;\n    this.ngtoac = null;\n    let data1: any = localStorage.getItem(\"user\");\n    let result = JSON.parse(data1);\n    let branchCode = result.branch.id;\n    let trandate\n    if (this.formFromDate != this.divfromdate) {\n      trandate = moment(this.angForm.controls[\"DIV_FROMDATE\"].value).format('DD/MM/YYYY')\n    }\n    else {\n      trandate = this.formFromDate\n    }\n    var full = [];\n    var fullDate = trandate;\n    full = fullDate.split(\" \");\n    var date = full[0].split(/\\//);\n    var newDate = date[1] + \"/\" + date[0] + \"/\" + date[2];\n    var k = new Date(newDate);\n    var expiryDate = moment(k).format(\"DD.MM.YYYY\");\n    let obj = [this.ngscheme, branchCode, expiryDate];\n    this.http\n      .get(this.url + \"/dividend-calculation/check/\" + obj)\n      .subscribe((data) => {\n        this.ToAC = data;\n        this.fromAC = data;\n      });\n  }\n\n  getShareDividend(event) {\n    this.shareDividend = event.dividend;\n    this.divMethod = event.divMethod;\n    this.isAddBonusInDividend = event.isAddBonus;\n    this.INT_ROUND_OFF = event.INT_ROUND_OFF;\n    this.angForm.patchValue({\n      Dividend: event.dividend,\n    });\n  }\n\n  //checks percentage of interest rate\n  checkInt(event) {\n    if (Number(event) > 25) {\n      Swal.fire(\"Info\", \"Please Input Dividend Percentage upto 25\", \"info\");\n      this.angForm.patchValue({\n        Dividend: \"\",\n      });\n    }\n  }\n\n  //checks percentage of interest rate\n  checkBonus(event) {\n    if (Number(event) > 99) {\n      Swal.fire(\"Info\", \"Please Input Bonus Percentage upto 99\", \"info\");\n      this.angForm.patchValue({\n        Bonus: \"\",\n      });\n    }\n  }\n\n  //select content of field\n  selectAllContent($event) {\n    $event.target.select();\n  }\n\n  formFromDate\n  formEndDate\n  getDivTOYear() {\n    let finYear;\n    var sysDate = new Date();\n    var year = sysDate.getFullYear();\n    var month = new Date().getMonth();\n    month > 2 ? (finYear = year) : (finYear = year - 1);\n    finYear = finYear - 1;\n    var full = [];\n    var fullDate = `01/04/${finYear}`;\n    // let divYear=new Date(fullDate)\n    full = fullDate.split(\" \");\n    var date = full[0].split(/\\//);\n    var newDate = date[1] + \"/\" + date[0] + \"/\" + date[2];\n    var formatDate = new Date(newDate);\n    // starting and end date\n    let start = moment(formatDate);\n    let end = moment(start).add(12, \"M\");\n    var endDT = moment(end).subtract(1, \"days\").format(\"DD/MM/YYYY\");\n    let starting = moment(start).format(\"DD/MM/YYYY\");\n    this.formFromDate = starting\n    this.divfromdate = starting\n    this.formEndDate = endDT\n    this.divtodate = endDT\n    this.angForm.patchValue({\n      DIV_FROMDATE: starting,\n      DIV_TODATE: endDT,\n    });\n  }\n\n  send = {};\n  endYr;\n  startYr;\n  DIV_FROM_MONTH;\n  DIV_TO_MONTH;\n\n\n  checkDivYear() {\n    //Date range\n    let startDate\n    let endDate\n    let divdatef = this.angForm.controls[\"DIV_FROMDATE\"].value\n    let divdatet = this.angForm.controls[\"DIV_TODATE\"].value\n    if (this.formFromDate != this.divfromdate) {\n      startDate = moment(this.angForm.controls[\"DIV_FROMDATE\"].value).format('DD/MM/YYYY')\n    }\n    else {\n      startDate = this.formFromDate\n    }\n    if (this.formEndDate != this.divtodate) {\n      endDate = moment(this.angForm.controls[\"DIV_TODATE\"].value).format('DD/MM/YYYY')\n    }\n    else {\n      endDate = this.formEndDate\n    }\n    var full = [];\n    // startDate = moment(this.divfromdate).format(\"DD/MM/YYYY\");\n    // endDate = moment(this.divtodate).format(\"DD/MM/YYYY\");\n    var startDT = startDate;\n\n    full = startDT.split(\" \");\n    var sdate = full[0].split(/\\//);\n\n    this.startYr = sdate[2];\n    this.DIV_FROM_MONTH = sdate[1];\n\n    var full = [];\n    var endDT = endDate;\n    full = endDT.split(\" \");\n    var date = full[0].split(/\\//);\n\n    this.endYr = date[2];\n    this.DIV_TO_MONTH = date[1];\n\n    let obj = [this.startYr, this.endYr];\n    this.http\n      .get(this.url + \"/dividend-calculation/divYrcheck/\" + obj)\n      .subscribe((data) => {\n        if (data[\"historyCheck\"] == \"Already Posted\") {\n          this.send[\"Flag\"] = \"history\";\n          Swal.fire(\"Warning!\", \"Dividend Already Posted !\", \"warning\");\n        } else if (data[\"divCheck\"] == \"Already Processed\") {\n          Swal.fire({\n            text: \"Dividend Already Processed.Do You Want To Overwrite?\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#229954\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Yes, Overwrite it!\",\n          }).then((result) => {\n            if (result.isConfirmed) {\n              this.send[\"Flag\"] = \"Overwrite\";\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\n              this.send[\"Flag\"] = \"Insert\";\n            }\n          });\n        }\n      });\n  }\n\n  getAccNumbers() {\n    this.arrTable = [];\n    this.divArr = [];\n    var memFrom = this.angForm.controls[\"FROM_AC\"].value;\n    var memTo = this.angForm.controls[\"TO_AC\"].value;\n    if (\n      this.angForm.controls[\"FROM_AC\"].value <\n      this.angForm.controls[\"TO_AC\"].value &&\n      this.angForm.controls[\"TO_AC\"].value != \"\"\n    ) {\n      let mem = [memFrom, memTo, this.ngscheme];\n      this.http\n        .get(this.url + \"/dividend-calculation/accounts/\" + mem)\n        .subscribe((data) => {\n          this.arrTable = data;\n          this.arrTable.forEach((element) => {\n            var object = {\n              AC_NO: element.AC_NO,\n              AC_NAME: element.AC_NAME,\n              id: element.id,\n              AC_CLOSEDT: element.AC_CLOSEDT,\n              BANKACNO:\n                element.BANKACNO == undefined || element.BANKACNO == null\n                  ? \"\"\n                  : element.BANKACNO,\n              BRANCH_CODE: element.BRANCH_CODE,\n            };\n            this.divArr.push(object);\n          });\n        });\n    }\n  }\n\n  divArr = [];\n  arrTable;\n\n  submit() {\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n    const formVal = this.angForm.value;\n    let data: any = localStorage.getItem(\"user\");\n    let result = JSON.parse(data);\n    const dataToSend = {\n      DIV_FROMDATE: formVal.DIV_FROMDATE,\n      DIV_TODATE: formVal.DIV_TODATE,\n      USER: result.USER_NAME,\n      divMethod: this.divMethod,\n      Dividend: formVal.Dividend,\n      Bonus: formVal.Bonus,\n      WARRENT_DATE: formVal.WARRENT_DATE == \"\" || formVal.WARRENT_DATE == \"Invalid date\" ? \"\" : moment(formVal.WARRENT_DATE).format(\"DD/MM/YYYY\"),\n      DIV_FROM_YEAR: this.startYr,\n      DIV_TO_YEAR: this.endYr,\n      ACTYPE: this.ngscheme,\n      DIV_FROM_MONTH: this.DIV_FROM_MONTH,\n      DIV_TO_MONTH: this.DIV_TO_MONTH,\n      divArr: this.divArr,\n      send: this.send,\n      isAddBonus: this.isAddBonusInDividend,\n    };\n    if (this.send != 'history') {\n      this._service.postData(dataToSend).subscribe((data) => {\n        this.formSubmitted = false;\n        Swal.fire(\"Success!\", \"Data Updated Successfully !\", \"success\");\n      });\n      this.arrTable = [];\n      this.divArr = [];\n      this.resetForm();\n    }\n    else {\n      Swal.fire(\"Warning!\", \"Dividend Already Posted!\", \"warning\");\n    }\n  }\n\n  /**\n   * @editClickHandler function for edit button clicked\n   */\n\n  editClickHandler(info: any): void {\n    this.updateShow = true;\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    this.ngscheme = null;\n    this.ngfromac = null;\n    this.ngtoac = null;\n  }\n\n  /**\n   * @updateData function for update data\n   */\n  updateData() {\n    // this.showButton = true;\n    this.updateShow = false;\n    // this.form.reset();\n  }\n\n  /**\n  * @delClickHandler function for delete button \n    @Swal sweetalert2\n    @Swal.fire open a modal window to display message\n  */\n  //function for delete button clicked\n  delClickHandler(info: any): void {\n    // this.message.SchemeCode = info.SchemeCode;\n    // Swal.fire({\n    //   title: 'Are you sure?',\n    //   text: \"Do you want to delete Scheme Code.\" + this.message.SchemeCode + \"  data\",\n    //   icon: 'warning',\n    //   showCancelButton: true,\n    //   confirmButtonColor: '#229954',\n    //   cancelButtonColor: '#d33',\n    //   confirmButtonText: 'Yes, delete it!'\n    // }).then((result) => {\n    //   if (result.isConfirmed) {\n    //     Swal.fire(\n    //       'Deleted!',\n    //       'Your data has been deleted.',\n    //       'success'\n    //     )\n    //   } else if (\n    //     result.dismiss === Swal.DismissReason.cancel\n    //   ) {\n    //     Swal.fire(\n    //       'Cancelled',\n    //       'Your data is safe.',\n    //       'error'\n    //     )\n    //   }\n    // })\n  }\n}\n","<!-- Dividend Calculation -->\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Dividend Calculation</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Code<sub\n                                    class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"SchemeCode\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\"\n                                        (change)=\"getAccountList(); getShareDividend($event)\"\n                                        title=\"Compulsory Selection\" required placeholder=\"Scheme Code\">\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_AC\">Member From<sub\n                                    class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"FROM_AC\" bindValue=\"AC_NO\" [(ngModel)]=\"ngfromac\"\n                                        formControlName=\"FROM_AC\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\n                                        placeholder=\"From Account\">\n                                        <ng-option *ngFor=\"let values of fromAC\" [value]=\"values\">\n                                            {{values.AC_NO}} {{values.AC_NAME}}</ng-option>\n                                    </ng-select>\n\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['FROM_AC'].invalid && (angForm.controls['FROM_AC'].dirty || angForm.controls['FROM_AC'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['FROM_AC'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_AC\">Member To<sub\n                                    class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"TO_AC\" bindValue=\"AC_NO\" [(ngModel)]=\"ngtoac\" formControlName=\"TO_AC\"\n                                        bindLabel=\"label\" title=\"Compulsory Selection\" (change)=\"getAccNumbers()\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"To Account\">\n                                        <ng-option *ngFor=\"let values of ToAC\" [value]=\"values\">\n                                            {{values.AC_NO}} {{values.AC_NAME}}</ng-option>\n                                    </ng-select>\n\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['TO_AC'].invalid && (angForm.controls['TO_AC'].dirty || angForm.controls['TO_AC'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['TO_AC'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"DIV_FROMDATE\">Dividend Date From<sub\n                                    class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"DIV_FROMDATE\" id=\"DIV_FROMDATE\"\n                                        [bsValue]=\"bsValue\" [maxDate]=\"maxDate\" class=\"form-control\"\n                                        [(ngModel)]=\"divfromdate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                                        [maxDate]=\"fromdate\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                        formControlName=\"DIV_FROMDATE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        (bsValueChange)=\"checkDivYear()\" bsDatepicker>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['DIV_FROMDATE'].invalid && (angForm.controls['DIV_FROMDATE'].dirty || angForm.controls['DIV_FROMDATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['DIV_FROMDATE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"DIV_TODATE\">Dividend Date To<sub\n                                    class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"DIV_TODATE\" id=\"DIV_TODATE\"\n                                        class=\"form-control\" [(ngModel)]=\"divtodate\"\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"todate\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"DIV_TODATE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        (bsValueChange)=\"checkDivYear()\" bsDatepicker>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['DIV_TODATE'].invalid && (angForm.controls['DIV_TODATE'].dirty || angForm.controls['DIV_TODATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['DIV_TODATE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"WARRENT_DATE\">Warrent Date<sub\n                                    class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"WARRENT_DATE\" id=\"WARRENT_DATE\"\n                                        class=\"form-control\" [(ngModel)]=\"warrentdate\"\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"minDate\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"WARRENT_DATE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        bsDatepicker>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['WARRENT_DATE'].invalid && (angForm.controls['WARRENT_DATE'].dirty || angForm.controls['WARRENT_DATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['WARRENT_DATE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"Dividend\">Dividend %<sub\n                                    class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Dividend\" style=\"text-align: right;\" class=\"form-control\"\n                                        placeholder=\" \" id=\"Dividend\" required=\"\" value=\" \" pattern=\"\\d{1,5}(\\.\\d{2})?\"\n                                        #INT (focus)=\"selectAllContent($event)\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\"\n                                        title=\"Input allowed only 0-9\" formControlName=\"Dividend\"\n                                        (keyup)=\"checkInt(INT.value)\">\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Dividend'].invalid && (angForm.controls['Dividend'].dirty || angForm.controls['Dividend'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['Dividend'].errors?.required\">\n                                    This field is required and input allowed only . 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"Bonus\">Bonus %<sub class=\"required\">*</sub></label>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Bonus\" style=\"text-align: right;\" class=\"form-control\"\n                                        placeholder=\" \" id=\"Bonus\" value=\" \" pattern=\"\\d{1,5}(\\.\\d{2})?\"\n                                        title=\"Input allowed only 0-9\" #Bonus (focus)=\"selectAllContent($event)\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\"\n                                        formControlName=\"Bonus\" (keyup)=\"checkBonus(Bonus.value)\">\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Bonus'].invalid && (angForm.controls['Bonus'].dirty || angForm.controls['Bonus'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['Bonus'].errors?.required\">\n                                    This field is required and input allowed only . 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-sm\">\n                        <button class=\"btn btn-outline-primary btn-sm\" [disabled]=\"angForm.invalid\">Calculate</button>\n                        <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\"\n                            *ngIf=\"updateShow\">Update</button>\n                    </div>\n\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<!-- <div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card shadow\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\"\n                                [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover compact\">\n                                <tbody *ngIf=\"dividendcalculation?.length != 0\">\n                                    <tr *ngFor=\"let data of dividendcalculation\">\n                                        <td>\n                                            <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\"\n                                                (click)=\"editClickHandler(data.id)\" placement=\"bottom\"\n                                                ngbTooltip=\"Edit\"></span>\n                                            &nbsp;\n\n                                        </td>\n                                        <td>{{ data.AC_TYPE }}</td>\n                                        <td>{{ data.FROM_AC }}</td>\n                                        <td>{{ data.TO_AC }}</td>\n                                        <td>{{ data.DIV_FROMDATE }}</td>\n                                        <td>{{ data.DIV_TODATE }}</td>\n                                        <td>{{ data.WARRENT_DATE }}</td>\n                                        <td>{{ data.Dividend }}</td>\n                                        <td>{{ data.Bonus }}</td>\n\n\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"dividendcalculation?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot #filters class=\"filters\">\n                                    <tr class=\"testing\">\n                                        <th class=\"testing\"></th>\n\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_TYPE\" /></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"FROM_AC\" /></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"TO_AC\" /></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"DIV_FROMDATE\" /></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"DIV_TODATE\" /></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"WARRENT_DATE\" /></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"Dividend\" /></th>\n                                        <th><input type=\"text\" class=\"form-control\" name=\"Bonus\" /></th>\n\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div> -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTablesModule } from 'angular-datatables';\nimport { DividendCalculationRoutingModule } from './dividend-calculation-routing.module';\nimport { DividendCalculationComponent } from './dividend-calculation.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SchemeCodeService } from '../../../../shared/elements/scheme-code.service';\nimport { SchemeAccountNoService } from '../../../../shared/dropdownService/schemeAccountNo.service'\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service'\nimport { MembernoService } from '../../../../shared/elements/memberno.service';\nimport { BranchService } from '../../../../shared/elements/branch.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// import { SelectModule } from 'ng-select';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { DatePipe } from '@angular/common';\nimport { DividendCalculationService } from './dividend-calculation.service'\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DividendCalculationRoutingModule,\n    DataTablesModule,\n    NgbModule,\n    // SelectModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot()\n  ],\n  declarations: [DividendCalculationComponent],\n  providers: [SchemeCodeService, SchemeAccountNoService, SchemeCodeDropdownService, MembernoService, BranchService,\n    DatePipe, DividendCalculationService, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n\n  ]\n\n})\nexport class DividendCalculationModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment';\n\n@Injectable()\nexport class DividendCalculationService {\n    // Variable for handleError\n    [x: string]: any;\n    // API \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    //Insertion Operation\n    postData(data: any): Observable<any> {\n        return this.http.post(this.url + '/dividend-calculation/insert', data).pipe(map((res) => res),\n            catchError((error) => {\n                Swal.fire('Please Input Proper Data !');\n                return throwError(error);\n            })\n        )\n    }\n    // For append data\n    getFormData(id: any): Observable<any> {\n        return this.http.get(this.url + '/dividend-calculation/' + id).pipe(catchError(this.handleError));\n    }\n    //Updation Operation\n    updateData(data): Observable<any> {\n        return this.http.put(this.url + '/dividend-calculation/update', data);\n    }\n    //Deletion Operation\n    deleteData(id: any): Observable<any> {\n        return this.http.delete(this.url + '/dividend-calculation/delete/' + id).pipe(catchError(this.handleError));\n    }\n}"],"sourceRoot":"webpack:///"}