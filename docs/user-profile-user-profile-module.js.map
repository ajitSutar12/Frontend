{"version":3,"sources":["./src/app/theme/user/user-profile/user-profile-routing.module.ts","./src/app/theme/user/user-profile/user-profile.component.ts","./src/app/theme/user/user-profile/user-profile.component.html","./src/app/theme/user/user-profile/user-profile.module.ts","./src/app/theme/user/user.service.ts"],"names":[],"mappings":"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","file":"user-profile-user-profile-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {UserProfileComponent} from './user-profile.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserProfileComponent,\n    data: {\n      title: 'User Profile',\n      icon: 'icon-user',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit - user profile',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserProfileRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { environment } from '../../../../environments/environment';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n\nimport { NgPasswordValidatorOptions } from \"ng-password-validator\";\nimport { AuthService } from '../../auth/auth.service';\n\n\n\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: [\n    './user-profile.component.scss'\n  ],\n  animations: [\n    trigger('fadeInOutTranslate', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('400ms ease-in-out', style({ opacity: 1 }))\n      ]),\n      transition(':leave', [\n        style({ transform: 'translate(0)' }),\n        animate('400ms ease-in-out', style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class UserProfileComponent implements OnInit {\n  inputValue: string;\n  options: NgPasswordValidatorOptions = {\n    placement: \"bottom\",\n    \"animation-duration\": 500\n  };\n  editProfile = true;\n  editProfileIcon = 'icofont-edit';\n\n  editAbout = true;\n  editAboutIcon = 'icofont-edit';\n\n  public editor;\n  public editorContent: string;\n  selectedImagePreview: string = '';\n  showImage: boolean = false;\n  public editorConfig = {\n    placeholder: 'About Your Self'\n  };\n\n  public data: any;\n  public rowsOnPage = 10;\n  public filterQuery = '';\n  public sortBy = '';\n  public sortOrder = 'desc';\n  angForm: FormGroup;\n  angEditForm: FormGroup;\n  profitChartOption: any;\n  imgBase64: any;\n  profilePath: any;\n  id: any;\n  fullName: any;\n  Email: any;\n  toastr: any;\n\n  constructor(public httpClient: HttpClient, private _authService: AuthService, private fb: FormBuilder, private _userService: UserService, private router: Router) {\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    this.profilePath = environment.base_url + '/' + result.PROFILE_PATH;\n    this.id = result.id;\n  }\n\n  ngOnInit() {\n    this._userService.getUserDetails(this.id).subscribe(data => {\n      console.log(data);\n      let userObject = data;\n      this.fullName = data.F_NAME + ' ' + data.L_NAME;\n      this.Email = data.EMAIL;\n      this.angEditForm.patchValue({\n        firstName: userObject.F_NAME,\n        LastName: userObject.L_NAME,\n        email: userObject.EMAIL,\n        phone: userObject.MOB_NO,\n      })\n    })\n    this.angEditForm = this.fb.group({\n      firstName: [''],\n      // middleName: [''],\n      LastName: [''],\n      email: [''],\n      phone: [''],\n      currentPassword: [''],\n      newPassword: [''],\n      confirmPassword: [''],\n      Profile: [''],\n    });\n\n\n\n\n    setTimeout(() => {\n      this.editorContent = 'But I must explain to you how all this mistaken idea of denouncing pleasure and praising ';\n      this.editorContent += 'pain was born and I will give you a complete account of the system, and expound the actual ';\n      this.editorContent += 'teachings of the great explorer of the truth, the master-builder of human happiness. No one ';\n      this.editorContent += 'rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who ';\n      this.editorContent += 'do not know how to pursue pleasure rationally encounter consequences that are extremely ';\n      this.editorContent += 'painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, ';\n      this.editorContent += 'because it is pain, but because occasionally circumstances occur in which toil and pain can ';\n      this.editorContent += 'procure him some great pleasure. To take a trivial example, which of us ever undertakes ';\n      this.editorContent += 'laborious physical exercise, except to obtain some advantage from it? But who has any right ';\n      this.editorContent += 'to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, ';\n      this.editorContent += 'or one who avoids a pain that produces no resultant pleasure? On the other hand, we denounce ';\n      this.editorContent += 'with righteous indignation and dislike men who are so beguiled and demoralized by the charms ';\n      this.editorContent += 'of pleasure of the moment, so blinded by desire, that they cannot foresee the pain and ';\n      this.editorContent += 'trouble that are bound to ensue; and equal blame belongs to those who fail in their duty ';\n      this.editorContent += 'through weakness of will, which is the same as saying through shrinking from toil and pain. ';\n      this.editorContent += 'These cases are perfectly simple and easy to distinguish. In a free hour, when our power of ';\n      this.editorContent += 'choice is untrammelled and when nothing prevents our being able To Do what we like best, ';\n      this.editorContent += 'every pleasure is to be welcomed and every pain avoided. But in certain circumstances and ';\n      this.editorContent += 'owing to the claims of duty or the obligations of business it will frequently occur that ';\n      this.editorContent += 'pleasures have to be repudiated and annoyances accepted. The wise man therefore always holds';\n      this.editorContent += 'in these matters to this principle of selection: he rejects pleasures to secure other ';\n      this.editorContent += 'greater pleasures, or else he endures pains to avoid worse pain.';\n    }, 2800);\n\n    this.data = this.httpClient.get(`assets/data/data.json`);\n\n    setTimeout(() => {\n      this.profitChartOption = {\n        tooltip: {\n          trigger: 'item',\n          formatter: function (params) {\n            const date = new Date(params.value[0]);\n            let data = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' ';\n            data += date.getHours() + ':' + date.getMinutes();\n            return data + '<br/>' + params.value[1] + ', ' + params.value[2];\n          },\n          responsive: true\n        },\n        dataZoom: {\n          show: true,\n          start: 70\n        },\n        legend: {\n          data: ['Profit']\n        },\n        grid: {\n          y2: 80\n        },\n        xAxis: [{\n          type: 'time',\n          splitNumber: 10\n        }],\n        yAxis: [{\n          type: 'value'\n        }],\n        series: [{\n          name: 'Profit',\n          type: 'line',\n          showAllSymbol: true,\n          symbolSize: function (value) {\n            return Math.round(value[2] / 10) + 2;\n          },\n          data: (function () {\n            const d: any = [];\n            let len = 0;\n            const now = new Date();\n            while (len++ < 200) {\n              const random1: any = (Math.random() * 30).toFixed(2);\n              const random2: any = (Math.random() * 100).toFixed(2);\n              d.push([new Date(2014, 9, 1, 0, len * 10000), random1 - 0, random2 - 0]);\n            }\n            return d;\n          })()\n        }]\n      };\n    }, 1);\n  }\n  onInput(event: any): void {\n    this.inputValue = event.target.value;\n  }\n  isValid(event: boolean): void {\n    if (this.inputValue && this.inputValue.length) {\n      if (event) {\n        this.toastr.success(\"Password is Valid.\", \"Successful!\");\n      } else {\n        this.toastr.error(\"Password is invalid.\", \"Error!\");\n      }\n    }\n\n  }\n  toggleEditProfile() {\n    this.editProfileIcon = (this.editProfileIcon === 'icofont-close') ? 'icofont-edit' : 'icofont-close';\n    this.editProfile = !this.editProfile;\n  }\n\n  toggleEditAbout() {\n    this.editAboutIcon = (this.editAboutIcon === 'icofont-close') ? 'icofont-edit' : 'icofont-close';\n    this.editAbout = !this.editAbout;\n  }\n\n  onEditorBlured(quill) {\n    console.log('editor blur!', quill);\n  }\n\n  onEditorFocused(quill) {\n    console.log('editor focus!', quill);\n  }\n\n  onEditorCreated(quill) {\n    this.editor = quill;\n    console.log('quill is ready! this is current quill instance object', quill);\n  }\n\n  onContentChanged({ quill, html, text }) {\n    console.log('quill content is changed!', quill, html, text);\n  }\n\n  selectedImage(ele: any) {\n    let data;\n    if (ele.target.files && ele.target.files[0]) {\n      var reader = new FileReader();\n      reader.onload = (event: any) => {\n        this.showImage = true;\n        this.selectedImagePreview = event.target.result;\n        this.imgBase64 = reader.result;\n        console.log(data);\n        console.log(this.selectedImagePreview);\n      }\n      reader.readAsDataURL(ele.target.files[0]);\n    }\n  }\n\n  updateProfile() {\n\n    let updateObject = this.angEditForm.value;\n    let user = JSON.parse(localStorage.getItem('user'));\n\n    if (updateObject.newPassword != '' && updateObject.confirmPassword != '') {\n      if (updateObject.newPassword != updateObject.confirmPassword) {\n        Swal.fire('Error!', 'New password and Confirm password not matched', 'error');\n        throw Error(\"\");\n      }\n    }\n\n    updateObject['imgbase64'] = this.imgBase64;\n    updateObject['id'] = user.id;\n\n    this._userService.updateUser(updateObject).subscribe(data => {\n      debugger\n      Swal.fire('Success!', 'Profile update successfully please login again', 'success');\n      console.log(data)\n\n      let data1: any = localStorage.getItem('user');\n      let result = JSON.parse(data1);\n      console.log(result.USER_NAME, result.PASSWORD)\n\n\n\n      // let obj = {\n      //   \"username\": result.USER_NAME,\n      //   \"password\": 'Admin@21'\n      // }\n\n      // this._authService.login(obj).subscribe(data => {\n      //   debugger\n      //   // localStorage.setItem('token', data.access_token);\n      //   localStorage.setItem('user', JSON.stringify(data.user));\n      //   // if (data.user) {\n      //   //   this.router.navigate(['/dashboard']);\n      //   let data1: any = localStorage.getItem('user');\n      //   let result = JSON.parse(data1);\n      //   this.profilePath = environment.base_url + '/' + result.PROFILE_PATH;\n      //   // }\n      // })\n      this._userService.editlocal(data.id).subscribe(data => {\n        debugger\n        // localStorage.setItem('token', data.access_token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        // if (data.user) {\n        //   this.router.navigate(['/dashboard']);\n        let data1: any = localStorage.getItem('user');\n        let result = JSON.parse(data1);\n        this.profilePath = environment.base_url + '/' + result.PROFILE_PATH;\n        // }\n      })\n\n\n    }, err => {\n      Swal.fire('Error!', err.error.message, 'error');\n\n    })\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row gutters\">\n    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 col-12\">\n      <div class=\"card h-100\">\n        <div class=\"card-body\">\n          <div class=\"account-settings\" style=\"text-align: center;\">\n            <div class=\"user-profile\">\n              <div class=\"user-avatar\">\n                <div class=\"row\">\n                  <div class=\"col-sm\">\n                    <img [src]=\"profilePath\" alt=\"Maxwell Admin\" class=\"img\"\n                      onError=\"this.src='assets/images/user.png'\">\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-sm\">\n                  <h5 class=\"user-name\">{{fullName}}</h5>\n                  <h6 class=\"user-email\">{{Email}}</h6>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 col-12\">\n      <div class=\"card h-100\">\n        <div class=\"card-body\">\n          <form [formGroup]=\"angEditForm\" novalidate>\n            <div class=\"row gutters\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                <h6 class=\"mb-2 text-primary\">Personal Details</h6>\n              </div>\n              <!-- <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12\">\n                <div class=\"form-group\">\n                  <label for=\"firstName\">First Name</label>\n                  <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Enter first name\" formControlName=\"firstName\">\n                </div>\n              </div> -->\n              <!-- <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12\">\n                <div class=\"form-group\">\n                  <label for=\"lastName\">Middle Name</label>\n                  <input type=\"text\" class=\"form-control\" id=\"middleName\" placeholder=\"Enter middle name\" formControlName=\"middleName\">\n                </div>\n              </div> -->\n              <!-- <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12\">\n                <div class=\"form-group\">\n                  <label for=\"lastName\">Last Name</label>\n                  <input type=\"text\" class=\"form-control\" id=\"lastName\" placeholder=\"Enter last name\" formControlName=\"LastName\">\n                </div>\n              </div>\n              <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12\">\n                <div class=\"form-group\">\n                  <label for=\"eMail\">Email</label>\n                  <input type=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.com$\" class=\"form-control\" id=\"eMail\" placeholder=\"Enter email ID\" formControlName=\"email\">\n                  <div class=\"form-group form-primary form-static-label\"\n                      *ngIf=\"angEditForm.controls['email'].invalid && (angEditForm.controls['email'].dirty || angEditForm.controls['email'].touched)\"\n                      class=\"alert alert-danger\">\n                      <div\n                          *ngIf=\"angEditForm.controls['email'].errors?.pattern || angEditForm.controls['email'].errors?.maxlength || angEditForm.controls['email'].errors?.minlength\">\n                          Enter valid Email\n                      </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12\">\n                <div class=\"form-group\">\n                  <label for=\"phone\">Phone</label>\n                  <input type=\"text\"  pattern=\"[7-9 0]{1}[0-9]{9}\"  maxlength=\"11\" minlength=\"10\" class=\"form-control\" id=\"phone\" placeholder=\"Enter phone number\" formControlName=\"phone\">\n                  <div class=\"form-group form-primary form-static-label\"\n                      *ngIf=\"angEditForm.controls['phone'].invalid && (angEditForm.controls['phone'].dirty || angEditForm.controls['phone'].touched)\"\n                      class=\"alert alert-danger\">\n                      <div\n                          *ngIf=\"angEditForm.controls['phone'].errors?.pattern || angEditForm.controls['phone'].errors?.maxlength || angEditForm.controls['phone'].errors?.minlength\">\n                          Input allowed only 0-9 and It starts by either for 7 or 8 or 9,\n                      </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12\">\n                <div class=\"form-group\">\n                  <label for=\"imageProfile\">Profile</label>\n                  <input type=\"file\" class=\"form-control\" id=\"imageProfile\" (change)=\"selectedImage($event)\">\n                </div>\n              </div>\n              <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12\" *ngIf=\"showImage\">\n                  <label for=\"image\">Image</label>\n                  <img [src]=\"selectedImagePreview\" class=\"form-control\" style=\"width: 200px;height: 250px;\">\n              </div> -->\n            </div>\n            <div class=\"row\">\n              <div class=\"col-sm-2\">\n                <label for=\"F_NAME\">First Name<sub class=\"required\">* </sub></label>\n              </div>\n\n              <div class=\"col-md-4\">\n                <div class=\"form-group input-group\">\n                  <span class=\"border-lable-flt\">\n                    <input type=\"text\" name=\"F_NAME\" class=\"form-control\" placeholder=\" \" id=\"F_NAME\" required\n                      pattern=\"^[A-Za-z]+$\" maxlength=\"15\" title=\"Input allowed only A-Z\" formControlName=\"firstName\">\n                  </span>\n                </div>\n\n              </div>\n              <div class=\"col-sm-2\">\n                <label for=\"L_NAME\">Last Name<sub class=\"required\">* </sub></label>\n              </div>\n\n              <div class=\"col-md-4\">\n                <div class=\"form-group input-group\">\n                  <span class=\"border-lable-flt\">\n                    <input type=\"text\" name=\"L_NAME\" class=\"form-control\" placeholder=\" \" id=\"L_NAME\" required\n                      pattern=\"^[A-Za-z]+$\" maxlength=\"15\" #lastname title=\"Input allowed only A-Z\"\n                      formControlName=\"LastName\">\n                  </span>\n                </div>\n\n              </div>\n\n            </div>\n\n            <!-- <div class=\"row\">\n              <div class=\"col-sm\">\n                <div class=\"form-group input-group\">\n                  <span class=\"border-lable-flt\">\n                    <input type=\"text\" name=\"F_NAME\" class=\"form-control\" placeholder=\" \" id=\"F_NAME\" required\n                      pattern=\"^[A-Za-z]+$\" maxlength=\"15\" title=\"Input allowed only A-Z\" formControlName=\"firstName\">\n                    <label for=\"F_NAME\">First Name<sub class=\"required\">* </sub></label>\n                  </span>\n                </div>\n               \n              </div>\n              <div class=\"col-sm\">\n                <div class=\"form-group input-group\">\n                  <span class=\"border-lable-flt\">\n                    <input type=\"text\" name=\"L_NAME\" class=\"form-control\" placeholder=\" \" id=\"L_NAME\" required\n                      pattern=\"^[A-Za-z]+$\" maxlength=\"15\" #lastname title=\"Input allowed only A-Z\"\n                      formControlName=\"LastName\">\n                    <label for=\"L_NAME\">Last Name<sub class=\"required\">* </sub></label>\n\n                  </span>\n                </div>\n               \n              </div>\n              <div class=\"col-sm\">\n                <div class=\"form-group input-group\">\n                  <span class=\"border-lable-flt\">\n                    <input type=\"email\" name=\"AC_EMAILID\" class=\"form-control\" placeholder=\" \"\n                      pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.com$\" title=\"Enter valid Email\" id=\"AC_EMAILID\"\n                      formControlName=\"email\">\n                    <label for=\"AC_EMAILID\">Email</label>\n                  </span>\n                </div>\n              \n              </div>\n\n            </div> -->\n            <div class=\"row\">\n\n              <div class=\"col-sm-2\">\n                <label for=\"AC_EMAILID\">Email</label>\n              </div>\n\n              <div class=\"col-md-4\">\n                <div class=\"form-group input-group\">\n                  <span class=\"border-lable-flt\">\n                    <input type=\"email\" name=\"AC_EMAILID\" class=\"form-control\" placeholder=\" \"\n                      pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.com$\" title=\"Enter valid Email\" id=\"AC_EMAILID\"\n                      formControlName=\"email\">\n\n                  </span>\n                </div>\n\n              </div>\n\n              <div class=\"col-sm-2\">\n                <label for=\"AC_MOBILENO\">Mobile Number</label>\n              </div>\n\n              <div class=\"col-md-4\">\n                <div class=\"form-group input-group\">\n                  <span class=\"border-lable-flt\">\n                    <input type=\"text\" name=\"AC_MOBILENO\" class=\"form-control\" placeholder=\" \"\n                      pattern=\"[7-9 0]{1}[0-9]{9,10}\" title=\"Input allowed only  0-9\" id=\"AC_MOBILENO\" maxlength=\"11\"\n                      minlength=\"10\" formControlName=\"phone\">\n\n                  </span>\n                </div>\n\n              </div>\n\n              <!-- <div class=\"col-sm\">\n                  <div class=\"form-group input-group\">\n                      <span class=\"border-lable-flt\">\n                          <input type=\"file\" name=\"Profile\" class=\"form-control\" placeholder=\" \"\n                              id=\"Profile\" formControlName=\"Profile\" (change)=\"selectedImage($event)\">\n                          <label for=\"Profile\">Profile</label>\n                      </span>\n                  </div>\n                  <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12\" *ngIf=\"showImage\">\n                      <label for=\"image\">Image</label>\n                      <img [src]=\"selectedImagePreview\" class=\"form-control\"\n                          style=\"width: 200px;height: 250px;\">\n                  </div>\n\n              </div> -->\n            </div>\n            <div class=\"row\">\n              <div class=\"col-sm-2\">\n                <label for=\"Profile\">Profile</label>\n              </div>\n              <div class=\"col-md-4\">\n                <div class=\"input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" type=\"file\">\n                      <i class=\"fa fa-upload\" aria-hidden=\"true\"></i>\n                    </span>\n                  </div>\n                  <input type=\"file\" name=\"Profile\" class=\"form-control\" placeholder=\" \" id=\"Profile\"\n                  formControlName=\"Profile\" (change)=\"selectedImage($event)\">\n                </div>\n\n              </div>\n              <div class=\"col-sm-2\">\n                <label for=\"image\">Image</label>\n              </div>\n              <!-- <div class=\"col-md-4\"> -->\n              <div class=\"col-sm-2\" *ngIf=\"showImage\">\n                <img [src]=\"selectedImagePreview\" class=\"form-control\" style=\"width: 200px;height: 140px;\">\n              </div>\n              <!-- </div> -->\n\n            </div>\n            <!-- <div class=\"row\">\n              <div class=\"col-sm\">\n                <div class=\"form-group input-group\">\n                  <span class=\"border-lable-flt\">\n                    <input type=\"text\" name=\"AC_MOBILENO\" class=\"form-control\" placeholder=\" \"\n                      pattern=\"[7-9 0]{1}[0-9]{9,10}\" title=\"Input allowed only  0-9\" id=\"AC_MOBILENO\" maxlength=\"11\"\n                      minlength=\"10\" formControlName=\"phone\">\n                    <label for=\"AC_MOBILENO\">Mobile Number</label>\n                  </span>\n                </div>\n\n              </div>\n              <div class=\"col-sm\">\n                <div class=\"form-group input-group\">\n                  <span class=\"border-lable-flt\">\n                    <input type=\"file\" name=\"Profile\" class=\"form-control\" placeholder=\" \" id=\"Profile\"\n                      formControlName=\"Profile\" (change)=\"selectedImage($event)\">\n                    <label for=\"Profile\">Profile</label>\n                  </span>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12\" *ngIf=\"showImage\">\n                  <label for=\"image\">Image</label>\n                  <img [src]=\"selectedImagePreview\" class=\"form-control\" style=\"width: 200px;height: 250px;\">\n                </div>\n\n              </div>\n              <div class=\"col-sm\">\n                <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12\" *ngIf=\"showImage\">\n                  <label for=\"image\">Image</label>\n                  <img [src]=\"selectedImagePreview\" class=\"form-control\" style=\"width: 200px;height: 250px;\">\n                </div>\n              </div>\n            </div> -->\n\n\n\n            <div class=\"row gutters\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                <h6 class=\"mt-3 mb-2 text-primary\">Login Details</h6>\n              </div>\n\n            </div>\n            <div class=\"row\">\n              <div class=\"col-sm-3\">\n                <label for=\"currentPassword\">Current Password</label>\n              </div>\n              <div class=\"col-md-3\">\n                <div class=\"form-group input-group\">\n                  <span class=\"border-lable-flt\">\n                    <input type=\"password\" name=\"currentPassword\" class=\"form-control\" placeholder=\" \"\n                      id=\"currentPassword\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\n                      [NgPasswordValidator]=\"options\" (valid)=\"isValid($event)\" (keyup)=\"onInput($event)\"\n                      formControlName=\"currentPassword\">\n\n                  </span>\n                </div>\n\n              </div>\n              <div class=\"col-sm-3\">\n                <label for=\"Create_Password\"> New Password<sub class=\"required\">* </sub></label>\n              </div>\n              <div class=\"col-md-3\">\n                <div class=\"form-group input-group\">\n                  <span class=\"border-lable-flt\">\n                    <input type=\"password\" name=\"Create_Password\"\n                      pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\" minlength=\"4\"\n                      class=\"form-control\" [NgPasswordValidator]=\"options\" (valid)=\"isValid($event)\"\n                      (keyup)=\"onInput($event)\" placeholder=\" \" id=\"Create_Password\" formControlName=\"newPassword\"\n                      required>\n\n                  </span>\n                </div>\n\n              </div>\n\n            </div>\n            <div class=\"row\">\n              <div class=\"col-sm-3\">\n                <label for=\"confirmPassword\">Confirm Password</label>\n              </div>\n              <div class=\"col-md-3\">\n                <div class=\"form-group input-group\">\n                  <span class=\"border-lable-flt\">\n                    <input type=\"password\" name=\"confirmPassword\" class=\"form-control\" placeholder=\" \"\n                      id=\"confirmPassword\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\n                      [NgPasswordValidator]=\"options\" (valid)=\"isValid($event)\" (keyup)=\"onInput($event)\"\n                      formControlName=\"confirmPassword\">\n\n                  </span>\n                </div>\n\n              </div>\n              <div class=\"col-sm\">\n                <div class=\"text-right\">\n                  <span style=\"margin-right: 5px;\">\n                    <a [routerLink]=\"['/dashboard']\" class=\"btn btn-outline-primary btn-sm\">\n                      Cancel\n                    </a>\n                    <button type=\"button\" id=\"submit\" (click)=\"updateProfile()\" name=\"submit\"\n                      class=\"btn btn-outline-primary btn-sm\">Update</button>\n                  </span>\n                \n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { UserProfileComponent } from './user-profile.component';\nimport {UserProfileRoutingModule} from './user-profile-routing.module';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DataTablesModule} from 'angular-datatables';\nimport {TinymceModule} from 'angular2-tinymce';\nimport { NgPasswordValidatorModule } from 'ng-password-validator';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    UserProfileRoutingModule,\n    SharedModule,\n    TinymceModule,\n    DataTablesModule,\n    HttpClientModule,\n    NgPasswordValidatorModule\n  ],\n  declarations: [UserProfileComponent]\n})\nexport class UserProfileModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport {environment}  from '../../../environments/environment'\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  url = environment.base_url;\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  updateUser(data: any): Observable<any> {\n    return this.http.post(this.url + '/user-defination/update_user', data).pipe(map((res) => res),\n        catchError((error) => {\n            return throwError(error);\n        })\n    )\n  }\n\n  //get login user data\n  getUserDetails(id:number):Observable<any>{\n    return this.http.get(this.url + '/user-defination/'+id).pipe(map((res)=>res),\n    catchError((error)=>{\n      Swal.fire(error.error.message);\n            return throwError(error);\n    }))\n  }\n\n  //get login user data\n  editlocal(id:number):Observable<any>{\n    return this.http.get(this.url + '/user-defination/localData/'+id).pipe(map((res)=>res),\n    catchError((error)=>{\n      Swal.fire(error.error.message);\n            return throwError(error);\n    }))\n  }\n}\n\n\n"],"sourceRoot":"webpack:///"}