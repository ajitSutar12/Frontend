{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/theme/reports/final-reports/n-balance-sheet/n-balance-sheet-routing.module.ts","./src/app/theme/reports/final-reports/n-balance-sheet/n-balance-sheet.component.ts","./src/app/theme/reports/final-reports/n-balance-sheet/n-balance-sheet.component.html","./src/app/theme/reports/final-reports/n-balance-sheet/n-balance-sheet.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGN;AAG2B;;;AAIzD,MAAM,sBAAsB;IAM/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QALpC,0BAAqB,GAAG,IAAI,KAAK,EAAE,CAAC;QACpC,OAAO;QACP,yBAAyB;QACzB,QAAG,GAAG,qEAAW,CAAC,QAAQ,CAAC;IAEa,CAAC;IAElC,gBAAgB;QACnB,IAAI,CAAC,qBAAqB,GAAG,EAAE;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,oBAAoB,CAAC;aACrD,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC;gBAC9F,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC;YACxC,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,qBAAqB,CAAC;QACtC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;4FAlBQ,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB;6FAAtB,sBAAsB;cADlC,wDAAU;;;;;;;;;;;;;;ACTX;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACY;;;AACnE,MAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAG,iFAAsB;QAClC,IAAI,EAAE;YACJ,KAAK,EAAE,sBAAsB;YAC7B,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,0DAA0D;YACnE,MAAM,EAAE,IAAI;SACb;KACF,CAAC,CAAC;AAMI,MAAM,0BAA0B;;yGAA1B,0BAA0B;8KAA1B,0BAA0B,kBAH5B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,0BAA0B,uFAF3B,4DAAY;6FAEX,0BAA0B;cAJtC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACY;AACuC;AACpE;AACN;AAEF;;;;;;;;;;ICeS,gFACI;IAAA,uDAAgB;IAAA,4DAAY;;;IADe,4EAAgB;IAC3D,0DAAgB;IAAhB,0FAAgB;;;IAO5B,sEAEI;IAAA,mFACJ;IAAA,4DAAM;;;IANV,0EAGI;IAAA,0HAEI;IAER,4DAAM;;;IAHE,0DAA0G;IAA1G,mTAA0G;;;IAsB9G,sEACI;IAAA,oFACJ;IAAA,4DAAM;;;IALV,0EAGI;IAAA,0HACI;IAER,4DAAM;;;IAHG,0DAAgG;IAAhG,wOAAgG;;;IAqBrG,sEACI;IAAA,oFACJ;IAAA,4DAAM;;;IALV,0EAGI;IAAA,0HACI;IAER,4DAAM;;;IAHG,0DAA8F;IAA9F,oOAA8F;;;IAyBnG,sEACI;IAAA,6EAA6C;IACjD,4DAAM;;;IADW,0DAAiB;IAAjB,iFAAiB;;;ADrF3D,MAAM,sBAAsB;IAiBjC,YAAoB,EAAe,EACzB,uBAA+C,EAC/C,SAAuB;QAFb,OAAE,GAAF,EAAE,CAAa;QACzB,4BAAuB,GAAvB,uBAAuB,CAAwB;QAC/C,cAAS,GAAT,SAAS,CAAc;QAhBnC,WAAM,GAAQ,IAAI,CAAC;QACnB,aAAQ,GAAQ,IAAI;QAGpB,YAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAGrB,cAAS,GAAQ,GAAG,CAAC;QACrB,aAAQ,GAAY,KAAK,CAAC;QAC1B,YAAO,GAAS,KAAK,CAAC;QAQlB,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC9C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC;IAEJ,CAAC;IACD,UAAU;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACtC,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,KAAK;QACR,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACxD,IAAI,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;QAEjD,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YAEtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;YAC5B,IAAI,QAAQ,GAAG,mCAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC3D,IAAI,MAAM,GAAG,mCAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACvD,IAAI,SAAS,GAAG,GAAG,CAAC,WAAW,CAAC;YAEhC,IAAI,CAAC,SAAS,GAAG,0FAA0F,GAAG,QAAQ,GAAE,YAAY,GAAC,MAAM,GAAC,eAAe,GAAC,SAAS,GAAC,cAAc,GAAG,QAAQ,GAAG,GAAG,CAAC;YACtM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAEhF;aACI;YACH,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,kCAAkC,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,GAAE,EAAE,GAAE,IAAI,CAAC,OAAO,GAAC,KAAK,GAAC,CAAC,CAAC;SACtG;IAEH,CAAC;IACD,KAAK;QACH,IAAI,CAAC,SAAS,EAAE;IAClB,CAAC;IACD,iBAAiB;IACjB,SAAS;QACP,IAAI,CAAC,UAAU,EAAE;QACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;IACrB,CAAC;;4FAzEU,sBAAsB;sGAAtB,sBAAsB,oHAFvB,CAAC,wHAAsB,CAAC;QCZpC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,+EAAoB;QAAA,4DAAK;QAC7B,wEACI;QAAA,gFAAoB;QAAA,yEAAuB;QAAA,8DAAE;QAAA,4DAAM;QAAA,4EACvD;QAAA,4DAAK;QACT,4DAAM;QAEN,2EACI;QAAA,0EACI;QAAA,0EAEI;QAAA,0EAAuB;QAAA,4EAAoB;QAAA,mEAAO;QAAA,0EAAsB;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAAA,4DAAM;QAC7F,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFAGI;QAH0C,iMAAsB;QAGhE,iIACI;QACR,4DAAY;QAChB,4DAAO;QACX,4DAAM;QACN,qHAGI;QAKR,4DAAM;QAEN,2EAAuB;QAAA,6EAAwB;QAAA,4EAAgB;QAAA,0EAAsB;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QACpG,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,6EAMJ;QAL6B,6LAAsB,qHAGX,EAAE,sBAAsB,EAAE,uBAAwB,EAAE,IAHzC;QAD/C,4DAMJ;QAAA,4DAAO;QACX,4DAAM;QACN,qHAGI;QAIR,4DAAM;QAEN,0EAAuB;QAAA,6EAAsB;QAAA,uEAAW;QAAA,0EAAsB;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAAA,4DAAM;QACnG,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,6EAMJ;QAL6B,2LAAoB,qHAGT,EAAE,sBAAsB,EAAE,uBAAwB,EAAE,IAH3C;QAD7C,4DAMJ;QAAA,4DAAO;QACX,4DAAM;QACN,qHAGI;QAIR,4DAAM;QAEV,4DAAM;QAEN,qEAAuB;QACvB,0EACI;QAAA,sEAA4B;QAC5B,2EACI;QAAA,8EAC4C;QAAxC,8IAAS,gBAAY,uBAAY,IAAI,IAAE;QAAC,gEAAI;QAAA,4DAAS;QAC7D,4DAAM;QACN,0EACI;QAAA,8EAA8F;QAAlB,+IAAS,WAAO,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAChH,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACzB,4DAAM;QACN,qHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAlGY,2DAAqB;QAArB,kFAAqB;QAQ2C,2DAAsB;QAAtB,iFAAsB;QAGrD,0DAAmC;QAAnC,qFAAmC;QAMtD,0DAAqI;QAArI,2MAAqI;QAexG,0DAAsB;QAAtB,iFAAsB;QAQnD,0DAAkI;QAAlI,wMAAkI;QAarG,0DAAoB;QAApB,+EAAoB;QAQjD,0DAA4H;QAA5H,kMAA4H;QAclE,0DAAoB;QAApB,iFAAoB;QAazE,2DAAgB;QAAhB,8EAAgB;;6FDpFxC,sBAAsB;cANlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;gBAC/C,SAAS,EAAC,CAAC,wHAAsB,CAAC;aACnC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACiC;AACF;AACT;AACH;AACX;AACD;AACE;AACgB;;;AAgBjE,MAAM,mBAAmB;;kGAAnB,mBAAmB;gKAAnB,mBAAmB,kBAbrB;YACP,4DAAY;YACZ,0FAA0B;YAC1B,2EAAkB,CAAC,OAAO,EAAE;YAC5B,yEAAgB,CAAC,OAAO,EAAE;YAC1B,kEAAmB;YACnB,0DAAW;YACX,oEAAS;YACT,mEAAc;YACd,qEAAa;SACd;mIAGU,mBAAmB,mBAdf,iFAAsB,aAEnC,4DAAY;QACZ,0FAA0B,0JAG1B,kEAAmB;QACnB,0DAAW;QACX,oEAAS;QACT,mEAAc;QACd,qEAAa;6FAIJ,mBAAmB;cAf/B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,iFAAsB,CAAC;gBACtC,OAAO,EAAE;oBACP,4DAAY;oBACZ,0FAA0B;oBAC1B,2EAAkB,CAAC,OAAO,EAAE;oBAC5B,yEAAgB,CAAC,OAAO,EAAE;oBAC1B,kEAAmB;oBACnB,0DAAW;oBACX,oEAAS;oBACT,mEAAc;oBACd,qEAAa;iBACd;gBACD,OAAO,EAAC,CAAC,8DAAgB,EAAC,oEAAsB,CAAC;aAClD","file":"n-balance-sheet-n-balance-sheet-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {NBalanceSheetComponent} from './n-balance-sheet.component';\nconst routes: Routes = [{\n  path: '',\n  component:  NBalanceSheetComponent,\n  data: {\n    title: 'N from balance sheet',\n    icon: 'icon-home',\n    caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n    status: true\n  }\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NBalanceSheetRoutingModule { }\n","import { Component,Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { OwnbranchMasterService } from \"src/app/shared/dropdownService/own-branch-master-dropdown.service\";\nimport { first } from \"rxjs/operators\";\nimport * as moment from 'moment';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: 'app-n-balance-sheet',\n  templateUrl: './n-balance-sheet.component.html',\n  styleUrls: ['./n-balance-sheet.component.scss'],\n  providers:[OwnbranchMasterService]\n})\nexport class NBalanceSheetComponent implements OnInit {\n// Created Form Group\nangForm: FormGroup;\ntodate: any = null;\nfromdate: any = null\nmaxDate: Date;\nminDate: Date;\nbsValue = new Date();\n\n\niframeurl: any = ' ';\nshowRepo: boolean = false;\nclicked:boolean=false;\n  //Dropdown option variable\n  ngbranch\n  branchOption: any;\n\n  constructor(private fb: FormBuilder,\n    private _ownbranchmasterservice: OwnbranchMasterService,\n    private sanitizer: DomSanitizer,) { \n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branchOption = data;\n    })\n\n  }\n  createForm() {\n    this.angForm = this.fb.group({\n      BRANCH_CODE: [\"\", [Validators.required]],\n      START_DATE: [\"\", [Validators.required]],\n      END_DATE: [\"\", [Validators.required]],\n    })\n  }\n\n  view(event) {\n    event.preventDefault();\n\n    let userData = JSON.parse(localStorage.getItem('user'));\n    let bankName = userData.branch.syspara.BANK_NAME;\n\n    if (this.angForm.valid) {\n\n      this.showRepo = true;\n      let obj = this.angForm.value\n      let stardate = moment(obj.START_DATE).format('DD/MM/YYYY');\n      let endate = moment(obj.END_DATE).format('DD/MM/YYYY');\n      let branched1 = obj.BRANCH_CODE;\n\n      this.iframeurl = \"http://localhost/NewReport/phpjasperxml-master/examples/NformBalanceSheet.php?stardate='\" + stardate +\"'&endate='\"+endate+\"'&branched1='\"+branched1+\"'&bankName='\" + bankName + \"'\";\n      this.iframeurl = this.sanitizer.bypassSecurityTrustResourceUrl(this.iframeurl);\n\n    }\n    else {\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(()=>{ this.clicked=false});\n    }\n\n  }\n  close() {\n    this.resetForm()\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm()\n    this.showRepo = false;\n    this.clicked=false;\n  }\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>N'From Balance Sheet</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n\n            <form [formGroup]=\"angForm\" novalidate>\n                <div class=\"card-block\">\n                    <div class=\"row\">\n\n                        <div class=\"col-md-1\"> <label for=\"scheme\">Branch <sub class=\"required\">*</sub></label></div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngbranch\"\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        placeholder=\"Branch\" required>\n                                        <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\" angForm.controls['BRANCH_CODE'].invalid &&(angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required ||angForm.controls['BRANCH_CODE'].errors?.pattern\">\n                                    This is required field\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-2\"> <label for=\"START_DATE\">Last Report Date<sub class=\"required\">*</sub></label>\n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"START_DATE\" id=\"START_DATE\"\n                                        class=\"form-control\" [(ngModel)]=\"fromdate\" [bsValue]=\"bsValue\"\n                                        [maxDate]=\"maxDate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                                         formControlName=\"START_DATE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        bsDatepicker required>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['START_DATE'].invalid && (angForm.controls['START_DATE'].dirty || angForm.controls['START_DATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['START_DATE'].errors?.required ||angForm.controls['START_DATE'].invalid\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-1\"> <label for=\"END_DATE\">Report Date<sub class=\"required\">*</sub></label></div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"END_DATE\" id=\"END_DATE\"\n                                        class=\"form-control\" [(ngModel)]=\"todate\"\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"fromdate\"\n                                        [maxDate]=\"maxDate\" formControlName=\"END_DATE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        bsDatepicker required>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['END_DATE'].invalid && (angForm.controls['END_DATE'].dirty || angForm.controls['END_DATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['END_DATE'].errors?.required ||angForm.controls['START_DATE'].invalid\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div class=\"row\"></div>\n                    <div class=\"row\">\n                        <div class=\"col-md-9\"></div>\n                        <div class=\"col-md-2\">\n                            <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\n                                (click)=\"view($event); clicked = true \">View</button>      \n                        </div>\n                        <div class=\"col-md-1\">\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" value=\"submit\" (click)=\"close()\">Close</button>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"card\">\n                                <div class=\"card-header\">\n                                    <h5>Report Frame</h5>\n                                </div>\n                                <div *ngIf=\"showRepo\">\n                                    <app-iframe4 [url]='iframeurl'></app-iframe4>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NBalanceSheetRoutingModule } from './n-balance-sheet-routing.module';\nimport { NBalanceSheetComponent } from './n-balance-sheet.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {Iframe4Module} from '../iframe4/iframe4.module';\nimport {NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n@NgModule({\n  declarations: [NBalanceSheetComponent],\n  imports: [\n    CommonModule,\n    NBalanceSheetRoutingModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n    ReactiveFormsModule,\n    FormsModule,\n    NgbModule,\n    NgSelectModule,\n    Iframe4Module\n  ],\n  schemas:[NO_ERRORS_SCHEMA,CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class NBalanceSheetModule { }\n"],"sourceRoot":"webpack:///"}