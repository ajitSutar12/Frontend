{"version":3,"sources":["./src/app/shared/dropdownService/customer-id-master-dropdown.service.ts","./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/theme/reports/other-reports/bnk-gur-details-list/bnk-gur-details-list-routing.module.ts","./src/app/theme/reports/other-reports/bnk-gur-details-list/bnk-gur-details-list.component.ts","./src/app/theme/reports/other-reports/bnk-gur-details-list/bnk-gur-details-list.component.html","./src/app/theme/reports/other-reports/bnk-gur-details-list/bnk-gur-details-list.module.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"bnk-gur-details-list-bnk-gur-details-list-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable()\nexport class CustomerIDMasterDropdownService {\n    loadCharacters() {\n        throw new Error('Method not implemented.');\n    }\n\n    url = environment.base_url;\n    customerIDMasterObject = new Array();\n\n    constructor(private http: HttpClient) { }\n\n    public getCustomerIDMasterList() {\n        this.customerIDMasterObject = [];\n        return this.http.get<any>(this.url + '/customer-id')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    // let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME, value: element.id, name: element.AC_NO };\n                    this.customerIDMasterObject.push(obj)\n                });\n                return this.customerIDMasterObject;\n            }));\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { BnkGurDetailsListComponent } from './bnk-gur-details-list.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  BnkGurDetailsListComponent,\r\n    data: {\r\n      title: 'Guaranter Details',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class  BnkGurDetailsListRoutingModule { }","import {AfterViewInit,Component,OnDestroy,OnInit,ViewChild,Input,Output,EventEmitter,ElementRef,}from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\n// Creating and maintaining form fields with validation\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\n// Displaying Sweet Alert\r\nimport Swal from \"sweetalert2\";\r\n// Used to Call API\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Router } from \"@angular/router\";\r\nimport * as moment from 'moment';\r\nimport { environment } from \"src/environments/environment\";\r\nimport { DomSanitizer} from '@angular/platform-browser';\r\nimport { first } from \"rxjs/operators\";\r\nimport { OwnbranchMasterService } from \"src/app/shared/dropdownService/own-branch-master-dropdown.service\";\r\nimport { CustomerIDMasterDropdownService } from \"src/app/shared/dropdownService/customer-id-master-dropdown.service\";\r\nimport { SystemMasterParametersService } from \"src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\r\n\r\n@Component({\r\n  selector: 'app-bnk-gur-details-list',\r\n  templateUrl: './bnk-gur-details-list.component.html',\r\n  styleUrls: ['./bnk-gur-details-list.component.scss']\r\n})\r\nexport class BnkGurDetailsListComponent implements OnInit {\r\n  maxDate: Date;\r\n  minDate: Date;\r\n  formSubmitted = false;\r\n\r\n  showRepo: boolean = false;\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //api\r\n  url = environment.base_url;\r\n  //Dropdown option variable\r\n  ngbranch\r\n  branchOption: any;\r\n  id: any;\r\n  Cust_ID: any[] //customer id from idmaster\r\n  newcustid: any = null;\r\n  defaultDate: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    public router: Router,\r\n    private sanitizer: DomSanitizer,\r\n    // for dropdown\r\n    private systemParameter: SystemMasterParametersService,\r\n    private _ownbranchmasterservice: OwnbranchMasterService,\r\n    private customerID: CustomerIDMasterDropdownService,\r\n  ) {\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.getSystemParaDate();\r\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branchOption = data;\r\n    })\r\n    this.customerID.getCustomerIDMasterList().pipe(first()).subscribe((data) => {\r\n      this.Cust_ID = data;\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      BRANCH_CODE: [\"\", [Validators.pattern]],\r\n      AC_CUSTID:  [\"\", [Validators.pattern]],\r\n      PRINT_CUSTID: [\"\"],\r\n      OPENINGDATE: [\"\"],\r\n      \r\n    });\r\n  }\r\n   //set open date, appointed date and expiry date\r\n   getSystemParaDate() {\r\n    this.systemParameter.getFormData(1).subscribe(data => {\r\n      this.defaultDate = data.CURRENT_DATE\r\n    })\r\n  }\r\n  src: any;\r\n  view(event) {\r\n    debugger\r\n    \r\n    event.preventDefault();\r\n    this.formSubmitted = true;\r\n    // if(this.angForm.valid){\r\n\r\n    // this.showRepo = true;\r\n    let obj = this.angForm.value\r\n    let date = moment(obj.FROM_DATE).format('DD/MM/YYYY');\r\n    let scheme = obj.S_ACNOTYPE\r\n    const url = \"http://localhost/NewReport/report-code/Report/examples/GuaranterList.php\";\r\n    // const url = \"http://localhost/NewReport/report-code/Report/examples/Nomineelist.php?startDate='\" + date + \"'&scheme='\" + scheme + \"'&\";\r\n    console.log(url);\r\n    // this.src = this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n    window.open(url, '_blank');\r\n   \r\n  // }\r\n  // else {\r\n    // Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning');\r\n  // }\r\n  \r\n}\r\n  close(){\r\n\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Guaranter Details</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-1\"><label for=\"scheme\">Branch<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select bindValue=\"value\" bindLabel=\"label\" [(ngModel)]=\"ngbranch\"\r\n                                        [ngClass]=\"{ 'form-submitted': formSubmitted }\" formControlName=\"BRANCH_CODE\"\r\n                                        placeholder=\"Branch\" required>\r\n                                        <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-1\"> <label for=\"AC_CUSTID\">Customer ID<sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [(ngModel)]=\"newcustid\" bindLabel=\"label\" bindValue=\"value\"\r\n                                    formControlName=\"AC_CUSTID\" [ngClass]=\"{ 'form-submitted': formSubmitted }\"\r\n                                    placeholder=\"Customer Id\" required>\r\n                                    <ng-option *ngFor=\"let values of Cust_ID\" [value]=\"values\">\r\n                                        {{ values.label }}</ng-option>\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\" angForm.controls['AC_CUSTID'].invalid && (angForm.controls['AC_CUSTID'].dirty || angForm.controls['AC_CUSTID'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_CUSTID'].errors?.required\">\r\n                                    This is required field\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div class=\"col-md-1\"> <label for=\"FROM_DATE\">Date<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"OPENINGDATE\" id=\"OPENINGDATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"defaultDate\"\r\n                                        [bsConfig]=\"{dateInputFormat: 'DD/MM/YYYY'}\" [maxDate]=\"maxDate\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"OPENINGDATE\"\r\n                                        bsDatepicker required>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['OPENINGDATE'].invalid && (angForm.controls['OPENINGDATE'].dirty || angForm.controls['OPENINGDATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['OPENINGDATE'].errors?.pattern || angForm.controls['OPENINGDATE'].errors?.required || angForm.controls['OPENINGDATE'].errors?.maxlength\">\r\n                                    This is required Field .Input Date in format DD/MM/YYYY\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input type=\"checkbox\" class=\"border-checkbox\" id=\"PRINT_CUSTID\"\r\n                                        formControlName=\"PRINT_CUSTID\">\r\n                                    <label class=\"border-checkbox-label\" for=\"PRINT_CUSTID\">Print Closed Account?</label>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\"></div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-9\"></div>\r\n                        <div class=\"col-md-2\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" (click)=\"view($event)\">\r\n                                view\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"col-md-1\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" value=\"submit\"\r\n                                (click)=\"close()\">Close</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-block\" *ngIf=\"showRepo\">\r\n\r\n                        <iframe [src]=\"src\" frameborder=\"0\" style=\"width: 100%; height: 600px;\"></iframe>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {SharedModule} from '../../../../shared/shared.module';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { SystemMasterParametersService } from \"../../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BnkGurDetailsListComponent } from './bnk-gur-details-list.component';\r\nimport {BnkGurDetailsListRoutingModule} from './bnk-gur-details-list-routing.module';\r\nimport { OwnbranchMasterService } from \"src/app/shared/dropdownService/own-branch-master-dropdown.service\";\r\nimport { CustomerIDMasterDropdownService } from \"src/app/shared/dropdownService/customer-id-master-dropdown.service\";;\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    PerfectScrollbarModule,\r\n    NgSelectModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    BnkGurDetailsListRoutingModule\r\n  ],\r\n\r\n  declarations: [BnkGurDetailsListComponent],\r\n  exports:[BnkGurDetailsListComponent],\r\n  providers: [\r\n    {\r\n\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\r\n\r\n    },\r\n    SystemMasterParametersService,\r\n    OwnbranchMasterService,\r\n    CustomerIDMasterDropdownService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UserAuthInterceptor,\r\n      multi: true\r\n    },\r\n  ]\r\n})\r\nexport class BnkGurDetailsListModule { }","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n\n@Injectable()\nexport class SystemMasterParametersService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n  // url = \"http://localhost:4000/system-master-parameters\";\n  url = environment.base_url;\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\n      catchError((error) => {\n        let errorMessage = 'Please add valid length';\n        Swal.fire('Kindly Add Valid Length !');\n        return throwError(errorMessage);\n      })\n    )\n  }\n\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/system-master-parameters/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\n  }\n\n  getData(): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\n  }\n\n\n}\n\n\n"],"sourceRoot":"webpack:///"}