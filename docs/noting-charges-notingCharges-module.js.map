{"version":3,"sources":["./src/app/shared/dropdownService/ac-master-dropdown.service.ts","./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/theme/master/maintainance/noting-charges/noting-charges.component.ts","./src/app/theme/master/maintainance/noting-charges/noting-charges.component.html","./src/app/theme/master/maintainance/noting-charges/noting-charges.service.ts","./src/app/theme/master/maintainance/noting-charges/notingCharges-routing.module.ts","./src/app/theme/master/maintainance/noting-charges/notingCharges.module.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"noting-charges-notingCharges-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ACMasterDropdownService {\n\n    // // gl-account-master\"; \n    url = environment.base_url;\n    acMasterObject = new Array();\n\n    constructor(private http: HttpClient) { }\n\n    public getACMasterList() {\n        this.acMasterObject = [];\n        return this.http.get<any>(this.url + '/gl-account-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\n                    this.acMasterObject.push(obj)\n                });\n                return this.acMasterObject;\n            }));\n    }\n\n    public getACMasterList1() {\n        this.acMasterObject = [];\n        return this.http.get<any>(this.url + '/gl-account-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { AC_NAME: element.AC_NAME, id: element.id, AC_NO: element.AC_NO };\n                    this.acMasterObject.push(obj)\n                });\n                return this.acMasterObject;\n            }));\n    }\n\n    public getACMasterbranch(branchid) {\n        this.acMasterObject = [];\n        return this.http.get<any>(this.url + '/gl-account-master/branch/' + branchid)\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    // let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\n                    // let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id };\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id, name: element.AC_NO };\n                    this.acMasterObject.push(obj)\n                });\n                return this.acMasterObject;\n            }));\n    }\n\n\n\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Component, OnInit, ElementRef, ViewChild, OnDestroy, } from '@angular/core';\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from \"rxjs\";\nimport * as moment from 'moment';\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\nimport { first } from 'rxjs/operators';\nimport { OwnbranchMasterService } from '../../../../shared/dropdownService/own-branch-master-dropdown.service'\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { ACMasterDropdownService } from \"../../../../shared/dropdownService/ac-master-dropdown.service\";\nimport { NotingChargesService } from './noting-charges.service'\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface NotingCharges {\n  id: number;\n  TRAN_DATE: string;\n  TRAN_ACNOTYPE: string;\n  TRAN_ACTYPE: number;\n  TRAN_ACNO: number;\n  TRAN_DRCR: string;\n  AMOUNT_TYPE: string;\n  TRAN_AMOUNT: number;\n  OTHER1_AMOUNT: number;\n  OTHER2_AMOUNT: number;\n  OTHER3_AMOUNT: number;\n  OTHER4_AMOUNT: number;\n  OTHER5_AMOUNT: number;\n  OTHER6_AMOUNT: number;\n  OTHER7_AMOUNT: number;\n  OTHER8_AMOUNT: number;\n  OTHER9_AMOUNT: number;\n  OTHER10_AMOUNT: number;\n  TRAN_STATUS: string;\n  NARRATION: string;\n  GL_ENTRY: number;\n}\n\n@Component({\n  selector: 'app-noting-charges',\n  templateUrl: './noting-charges.component.html',\n  styleUrls: ['./noting-charges.component.scss']\n})\n\nexport class NotingChargesComponent implements OnInit, OnDestroy {\n  //api \n  url = environment.base_url;\n  formSubmitted = false;\n  angForm: FormGroup;\n\n  dtOptions: DataTables.Settings = {};\n  // dtTrigger: Subject<any> = new Subject<any>();\n\n  // dtExportButtonOptions: any = {};\n\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable for checkbox and radio button \n  isAddinprinciple: boolean = false;\n  isCreateglentry: boolean = false;\n  isDebit: boolean = false;\n  // isiscreateglentry: boolean = false;\n  // dropdown ngmodel variables\n  ngscheme: any = null\n  ngfromac: any = null\n  ngtoac: any = null\n  ngchargestype: any = null\n  ngtransferglacno: any = null\n\n  maxDate: Date;\n  minDate: Date;\n  notingdate: any = null\n\n  // Data table\n  notingcharges: NotingCharges[];\n  ngBranchCode: any = null\n\n  // For reloading angular datatable after CRUD operation\n  // @ViewChild(DataTableDirective, { static: false })\n  // dtElement: DataTableDirective;\n  dtTrigger: Subject<any> = new Subject();\n  page: number;\n  filterData = {};\n\n  scheme\n  fromAC\n  toAC\n  branch_code\n  arrTable\n  notingChargesArr\n  obj\n  getschemename\n  glAcno\n  chargesType\n  ngglacno: any = null\n  acMaster\n  showTable: boolean = false\n  mem\n  S_GLACNO\n  FIELD_GL\n  GL_CODE\n  FIELD_AMOUNT\n  DESCRIPTION\n  filterArray: any[];\n  gridData: any;\n\n  constructor(private fb: FormBuilder, private systemParameter: SystemMasterParametersService,\n    private ownbranchMasterService: OwnbranchMasterService,\n    private schemeAccountNoService: SchemeAccountNoService,\n    private acMasterDropdownService: ACMasterDropdownService,\n    private _service: NotingChargesService,\n    private http: HttpClient,) {\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    this.getSystemParaDate()\n    this.http.get(this.url + '/noting-charges/scheme').subscribe((data) => {\n      this.scheme = data\n    })\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branch_code = data;\n    })\n    this.acMasterDropdownService.getACMasterList().pipe(first()).subscribe((data) => {\n      this.acMaster = data;\n    });\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    if (result.RoleDefine[0].Role.id == 1) {\n      this.angForm.controls['BRANCH'].enable()\n    }\n    else {\n      this.angForm.controls['BRANCH'].disable()\n      this.ngBranchCode = result.branch.id\n    }\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      dom: 'ftip'\n    };\n  }\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      Scheme: ['', [Validators.required]],\n      FROM_AC: ['', [Validators.required]],\n      TO_AC: ['', [Validators.required]],\n      Date: ['', [Validators.required]],\n      AMOUNT_TYPE: ['', [Validators.required]],\n      transeferglaccno: ['',],\n      BRANCH: ['', [Validators.required]],\n      TRAN_DATE: [''],\n      TRAN_AMOUNT: ['', [Validators.pattern]],\n      addInPrinciple: [false],\n      TRAN_DRCR: ['', [Validators.required]],\n      GL_ENTRY: [false]\n\n    });\n  }\n  branchCode\n  branchid\n\n  getBranch(event) {\n    this.branchCode = event.name\n    this.branchid = event.value\n    this.ngscheme = null\n    this.ngfromac = null\n    this.ngtoac = null\n    this.arrTable = []\n    this.notingChargesArr = []\n  }\n\n  //get scheme value and type\n  schemechange(event) {\n    this.getschemename = event.S_ACNOTYPE\n    this.ngscheme = event.id\n    this.getSchemeAccount()\n  }\n\n  //get account no according scheme for introducer\n  getSchemeAccount() {\n    this.obj = [this.ngscheme, this.ngBranchCode]\n    this.ngfromac = null\n    this.ngtoac = null\n    this.ngchargestype = null\n    this.http.get(this.url + '/noting-charges/headType/' + this.getschemename).subscribe((data) => {\n      this.chargesType = data\n    })\n\n    switch (this.getschemename) {\n      case 'GL':\n        this.schemeAccountNoService.getGeneralLedgerList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data\n          this.toAC = data\n        })\n        break;\n\n      case 'GS':\n        this.schemeAccountNoService.getAnamatSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data\n          this.toAC = data\n        })\n        break;\n\n      case 'IV':\n        this.schemeAccountNoService.getInvestmentSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data\n          this.toAC = data\n        })\n        break;\n\n      case 'TD':\n        this.schemeAccountNoService.getTermDepositSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data\n          this.toAC = data\n        })\n        break;\n\n      case 'LN':\n        this.schemeAccountNoService.getTermLoanSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data\n          this.toAC = data\n        })\n        break;\n\n      case 'PG':\n        this.schemeAccountNoService.getPigmyAccountSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data\n          this.toAC = data\n        })\n        break;\n\n      case 'SB':\n        this.schemeAccountNoService.getSavingSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data\n          this.toAC = data\n        })\n        break;\n\n      case 'SH':\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data\n          this.toAC = data\n        })\n        break;\n    }\n  }\n\n  //get sys para current date\n  getSystemParaDate() {\n    this.systemParameter.getFormData(1).subscribe(data => {\n      this.angForm.patchValue({\n        'TRAN_DATE': data.CURRENT_DATE,\n      })\n    })\n  }\n  //load table based on from and to account number\n  getTable() {\n    this.arrTable = []\n    this.notingChargesArr = []\n    var memFrom = this.angForm.controls['FROM_AC'].value\n    var memTo = this.angForm.controls['TO_AC'].value\n    if (this.angForm.controls['FROM_AC'].value <= this.angForm.controls['TO_AC'].value && this.angForm.controls['TO_AC'].value != '') {\n      this.showTable = true\n      this.mem = [memFrom, memTo, this.ngscheme, this.ngBranchCode, this.getschemename]\n      this.dtTrigger.unsubscribe();\n      this.http.get(this.url + '/noting-charges/glacno/' + this.ngscheme).subscribe((data) => {\n        this.S_GLACNO = data\n      })\n      this.http.get(this.url + '/noting-charges/accounts/' + this.mem).subscribe((data) => {\n        this.arrTable = data;\n        this.gridData = data;\n        this.arrTable.forEach(element => {\n          var object = {\n            AC_NO: element.AC_NO,\n            AC_NAME: element.AC_NAME,\n            id: element.id,\n            BANKACNO: element.BANKACNO == undefined || element.BANKACNO == null ? '' : element.BANKACNO,\n            TRAN_AMOUNT: '',\n            NARRATION: ''\n          }\n          this.notingChargesArr.push(object)\n\n        });\n        this.dtTrigger.next();\n      });\n    }\n    else {\n      Swal.fire(\"To Account Number Must Be Greater Than From Account Number\");\n      this.angForm.patchValue({\n        TO_AC: ''\n      })\n      this.arrTable = []\n      this.notingChargesArr = []\n\n    }\n  }\n  //filter object\n  filterObject(ele, type) {\n    let matchArray = new Array()\n    this.notingChargesArr = [];\n    this.gridData.forEach(element => {\n      if (JSON.stringify(element.AC_NO).includes(ele.target.value)) {\n        this.notingChargesArr.push(element);\n      }\n      else if (JSON.stringify(element.AC_NAME).includes(ele.target.value.toUpperCase())) {\n        this.notingChargesArr.push(element);\n      }\n    });\n  }\n  //get charge amount to all account number\n  getCommanChargeAmount() {\n    this.notingChargesArr.forEach(item => item.TRAN_AMOUNT = this.angForm.controls['TRAN_AMOUNT'].value);\n  }\n  //get narration to all account number\n  getCommanNarration(event) {\n    this.FIELD_GL = event.FIELD_GL\n    this.GL_CODE = event.GL_CODE\n    this.FIELD_AMOUNT = event.FIELD_AMOUNT\n    this.DESCRIPTION = event.DESCRIPTION\n    this.notingChargesArr.forEach(item => item.NARRATION = event.DESCRIPTION);\n  }\n\n  //get charge amount to particular account number\n  getChargesAmount(id, AC_NO, BANKACNO, chargesAmt, Narration) {\n    if (chargesAmt != '' || chargesAmt != 0) {\n      if (this.notingChargesArr.length != 0) {\n        if (this.notingChargesArr.some(item => item.AC_NO === AC_NO)) {\n          this.notingChargesArr.forEach((element) => {\n            if (element.AC_NO == AC_NO) {\n              element['TRAN_AMOUNT'] = chargesAmt\n            }\n          })\n        }\n        else {\n          var object = {\n            AC_NO: AC_NO,\n            id: id,\n            BANKACNO: BANKACNO,\n            TRAN_AMOUNT: chargesAmt,\n            NARRATION: Narration\n          }\n          this.notingChargesArr.push(object)\n        }\n      }\n      else {\n        var object = {\n          AC_NO: AC_NO,\n          id: id,\n          BANKACNO: BANKACNO,\n          TRAN_AMOUNT: chargesAmt,\n          NARRATION: Narration\n        }\n        this.notingChargesArr.push(object)\n      }\n    }\n  }\n  //get narration to particular account number\n  getNarration(id, AC_NO, BANKACNO, Narration, chargesAmt) {\n    if (Narration != '') {\n      if (this.notingChargesArr.length != 0) {\n        if (this.notingChargesArr.some(item => item.AC_NO === AC_NO)) {\n          this.notingChargesArr.forEach((element) => {\n            if (element.AC_NO == AC_NO) {\n              element['NARRATION'] = Narration\n            }\n          })\n        }\n        else {\n          var object = {\n            AC_NO: AC_NO,\n            id: id,\n            BANKACNO: BANKACNO,\n            TRAN_AMOUNT: chargesAmt,\n            NARRATION: Narration\n          }\n          this.notingChargesArr.push(object)\n        }\n      }\n      else {\n        var object = {\n          AC_NO: AC_NO,\n          id: id,\n          BANKACNO: BANKACNO,\n          TRAN_AMOUNT: chargesAmt,\n          NARRATION: Narration\n        }\n        this.notingChargesArr.push(object)\n      }\n    }\n  }\n\n  //select content of field\n  selectAllContent($event) {\n    $event.target.select();\n  }\n\n  submit() {\n    let notingdate\n    this.formSubmitted = true;\n    if (this.notingChargesArr.length != 0) {\n      const formVal = this.angForm.value;\n      let data: any = localStorage.getItem('user');\n      let result = JSON.parse(data);\n      const dataToSend = {\n        TRAN_DATE: formVal.TRAN_DATE,\n        USER: result.USER_NAME,\n        TRAN_GLACNO: this.ngglacno,\n        notingChargesArr: this.notingChargesArr,\n        TRAN_AMOUNT: formVal.TRAN_AMOUNT,\n        TRAN_ACNOTYPE: this.getschemename,\n        TRAN_ACTYPE: this.ngscheme,\n        TRAN_DRCR: formVal.TRAN_DRCR,\n        GL_ENTRY: formVal.GL_ENTRY,\n        BRANCH_CODE: this.branchCode,\n        addInPrinciple: formVal.addInPrinciple,\n        AMOUNT_TYPE: this.ngchargestype,\n        BranchID: this.branchid,\n        S_GLACNO: this.S_GLACNO,\n        FIELD_GL: this.FIELD_GL,\n        GL_CODE: this.GL_CODE,\n        FIELD_AMOUNT: this.FIELD_AMOUNT,\n        DESCRIPTION: this.DESCRIPTION\n\n      };\n      this._service.postData(dataToSend).subscribe(data => {\n        this.formSubmitted = false;\n        if (data == '') {\n          dataToSend['DailyFlag'] = 'Insert'\n          this._service.dailyTableInsert(dataToSend).subscribe(data => {\n            Swal.fire('Success!', 'Data Added Successfully !', 'success');\n          })\n        }\n        else {\n          Swal.fire({\n            text: \"Today's Charges Posting Already Done.Do You Want To Overwrite?\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#229954\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Yes, Overwrite it!\",\n          }).then((result) => {\n            if (result.isConfirmed) {\n              dataToSend['DailyFlag'] = 'Overwrite'\n              this._service.dailyTableInsert(dataToSend).subscribe((data) => {\n                Swal.fire(\"Overwritten!\", \"success\");\n              }),\n                (error) => {\n                  console.log(error);\n                };\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\n              dataToSend['DailyFlag'] = 'Insert'\n              this._service.dailyTableInsert(dataToSend).subscribe(data => {\n              })\n            }\n          });\n        }\n      }, (error) => {\n        console.log(error)\n      })\n      //To clear form\n      this.resetForm();\n      this.notingChargesArr = []\n      this.arrTable = []\n    }\n  }\n\n  resetForm() {\n    this.createForm()\n    this.ngscheme = null\n    this.ngchargestype = null\n    this.ngBranchCode = null\n    this.ngfromac = null\n    this.ngtoac = null\n    this.ngglacno = null\n    this.notingChargesArr = []\n    this.arrTable = []\n    this.getSystemParaDate()\n  }\n  //function for edit button clicked\n  editClickHandler(info: any): void {\n    let notingdate\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  //function for delete button clicked\n  delClickHandler(info: any): void {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete scheme Code.  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n\n  updateData() {\n    let notingdate\n    this.showButton = true;\n    this.updateShow = false;\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Charges Noting</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"BRANCH\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\n                                        formControlName=\"BRANCH\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" (change)=\"getBranch($event)\"\n                                        placeholder=\"Branch\">\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"BRANCH\">Branch</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['BRANCH'].invalid && (angForm.controls['BRANCH'].dirty || angForm.controls['BRANCH'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['BRANCH'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"Scheme\" bindValue=\"id\" [(ngModel)]=\"ngscheme\"\n                                        formControlName=\"Scheme\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        (change)=\"schemechange($event)\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                        required placeholder=\"Scheme Code\">\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                            {{values.S_APPL}} {{values.S_NAME}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"Scheme\">Scheme Code<sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"FROM_AC\" bindValue=\"value\" [(ngModel)]=\"ngfromac\"\n                                        formControlName=\"FROM_AC\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"From A/C\">\n                                        <ng-option *ngFor=\"let values of fromAC\" [value]=\"values\">\n                                            {{values.label}} {{values.name}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"FROM_AC\">From Account Number<sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['FROM_AC'].invalid && (angForm.controls['FROM_AC'].dirty || angForm.controls['FROM_AC'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['FROM_AC'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"TO_AC\" bindValue=\"value\" [(ngModel)]=\"ngtoac\" formControlName=\"TO_AC\"\n                                        bindLabel=\"label\" title=\"Compulsory Selection\" (change)=\"getTable()\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"To A/C\">\n                                        <ng-option *ngFor=\"let values of toAC\" [value]=\"values\">\n                                            {{values.label}} {{values.name}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"TO_AC\">To Account Number<sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['TO_AC'].invalid && (angForm.controls['TO_AC'].dirty || angForm.controls['TO_AC'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['TO_AC'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"TRAN_DATE\" class=\"form-control\" formControlName=\"TRAN_DATE\"\n                                        disabled>\n                                    <label for=\"date\">Noting Date<sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"checkbox checkbox-primary\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\"\n                                        formControlName=\"addInPrinciple\">\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Add in Principle</label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"AMOUNT_TYPE\" bindValue=\"FIELD_AMOUNT\" [(ngModel)]=\"ngchargestype\"\n                                        formControlName=\"AMOUNT_TYPE\" bindLabel=\"DESCRIPTION\"\n                                        (change)=\"getCommanNarration($event)\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\n                                        placeholder=\"Charges Type\">\n                                        <ng-option *ngFor=\"let values of chargesType\" [value]=\"values\">\n                                            {{values.DESCRIPTION}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"AMOUNT_TYPE\">Charges Type<sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AMOUNT_TYPE'].invalid && (angForm.controls['AMOUNT_TYPE'].dirty || angForm.controls['AMOUNT_TYPE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AMOUNT_TYPE'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" formControlName=\"TRAN_DRCR\" name=\"TRAN_DRCR\" value=\"D\">\n                                        <i class=\"helper\"></i>Debit<span> </span>\n                                    </label>\n                                </div>\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" formControlName=\"TRAN_DRCR\" name=\"TRAN_DRCR\" value=\"C\">\n                                        <i class=\"helper\"></i>Credit<span> </span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"TRAN_AMOUNT\"\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" style=\"text-align: right;\"\n                                        (change)=\"getCommanChargeAmount()\" formControlName=\"TRAN_AMOUNT\">\n                                    <label for=\"TRAN_AMOUNT\">Charges Amount</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['TRAN_AMOUNT'].invalid && (angForm.controls['TRAN_AMOUNT'].dirty || angForm.controls['TRAN_AMOUNT'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['TRAN_AMOUNT'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"checkbox checkbox-primary\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox2\" value=\"checkbox\"\n                                        formControlName=\"GL_ENTRY\">\n                                    <label class=\"border-checkbox-label\" for=\"checkbox2\">Create GL Entry<span\n                                            class=\"required\"> </span></label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"S_GLACNO\" bindValue=\"value\" [(ngModel)]=\"ngglacno\"\n                                        formControlName=\"transeferglaccno\" bindLabel=\"label\"\n                                        title=\"Compulsory Selection\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                        required placeholder=\"Transfer G.L.A/c No\">\n                                        <ng-option *ngFor=\"let values of acMaster\" [value]=\"values\">{{values.label}}\n                                        </ng-option>\n                                    </ng-select>\n                                    <label for=\"transeferglaccno\">Transfer G.L. A/C No<sub class=\"required\"> *\n                                        </sub></label>\n                                </span>\n                            </div>\n\n                        </div>\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\"\n                                (click)=\"submit()\">Submit</button>\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <div *ngIf=\"showTable\">\n                                <div class=\"col-12\">\n                                    <div class=\"table-responsive\">\n                                        <table datatable [dtTrigger]=\"dtTrigger\"\n                                            class=\"table table-striped table-bordered table-hover compact\">\n                                            <thead>\n                                                <tr>\n                                                    <td class=\"td_right\">Account Number</td>\n                                                    <td>Account Name</td>\n                                                    <td class=\"td_center\">Charges Amount</td>\n                                                    <td class=\"td_right\">Narration</td>\n                                                </tr>\n                                                <tr>\n                                                    <td><input type=\"text\" class=\"form-control\"\n                                                            (keyup)=\"filterObject($event,'AC_NO')\"></td>\n                                                    <td><input type=\"text\" class=\"form-control\"\n                                                            style=\"text-transform:uppercase;\"\n                                                            (keyup)=\"filterObject($event,'AC_NAME')\"></td>\n                                                    <td></td>\n                                                    <td></td>\n                                                </tr>\n                                            </thead>\n                                            <tbody *ngIf=\"notingChargesArr?.length != 0\">\n                                                <tr *ngFor=\"let data of notingChargesArr;\n                                            let indexOfelement = index\">\n                                                    <td class=\"td_right\">{{data.AC_NO}}</td>\n                                                    <td>{{data.AC_NAME == '' || data.AC_NAME == null ? '-' :\n                                                        data.AC_NAME}}</td>\n                                                    <td class=\"td_right\">\n                                                        <input style=\"text-align: right;\" type=\"text\"\n                                                            class=\"form-control\" (focus)=\"selectAllContent($event)\"\n                                                            name=\"chargesAmt\" id=\"chargesAmt\" #chargesAmt\n                                                            value=\"{{data.TRAN_AMOUNT}}\" (keypress)=\" ($event.charCode>= 48 && $event.charCode <\n                                                            58)\"\n                                                            (focusout)=\"getChargesAmount(data.id,data.AC_NO,data.BANKACNO,chargesAmt.value,Narration.value)\">\n                                                    </td>\n                                                    <td class=\"td_right\">\n                                                        <input type=\"text\" class=\"form-control\" name=\"Narration\"\n                                                            id=\"Narration\" #Narration value=\"{{data.NARRATION}}\"\n                                                            (focusout)=\"getNarration(data.id,data.AC_NO,data.BANKACNO,Narration.value,chargesAmt.value)\">\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                            <tbody *ngIf=\"notingChargesArr?.length == 0\">\n                                                <tr>\n                                                    <td colspan=\"6\" class=\"no-data-available\"\n                                                        style=\"text-align: center;\">\n                                                        No data!\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '../../../../../environments/environment';\n@Injectable()\nexport class NotingChargesService {\n    [x: string]: any;\n    httpData: any;\n    // API \n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n\n    //submit data for form\n    postData(data1: any): Observable<any> {\n        return this.http.post(this.url + '/noting-charges/insert', data1).pipe(map((res) => res),\n            catchError((error) => {\n                let errorMessage = 'Please add valid length';\n                console.log(error)\n                // window.alert(errorMessage);\n                return throwError(errorMessage);\n            })\n        )\n    }\n\n    //submit data for form\n    dailyTableInsert(data1: any): Observable<any> {\n        return this.http.post(this.url + '/noting-charges/dailyInsert', data1).pipe(map((res) => res),\n            catchError((error) => {\n                let errorMessage = 'Please add valid length';\n                console.log(error)\n                // window.alert(errorMessage);\n                return throwError(errorMessage);\n            })\n        )\n    }\n\n    // For append data\n    getFormData(id: any): Observable<any> {\n        return this.http.get(this.url + '/term-loan-master/' + id).pipe(catchError(this.handleError));\n    }\n}\n\n\n\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { NotingChargesComponent} from './noting-charges.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotingChargesComponent,\n    data: {\n      title: 'Noting Charges',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes),NgSelectModule],\n  exports: [RouterModule]\n})\nexport class NotingChargesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotingChargesComponent } from './noting-charges.component';\nimport { NotingChargesRoutingModule } from './notingCharges-routing.module'\nimport { DataTablesModule } from 'angular-datatables';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { SystemMasterParametersService } from '../../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service'\nimport { OwnbranchMasterService } from '../../../../shared/dropdownService/own-branch-master-dropdown.service'\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { ACMasterDropdownService } from \"../../../../shared/dropdownService/ac-master-dropdown.service\";\nimport { NotingChargesService } from './noting-charges.service'\n@NgModule({\n  imports: [\n    CommonModule,\n    NotingChargesRoutingModule,\n    DataTablesModule,\n    // SelectModule,\n    NgSelectModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot()\n  ],\n  declarations: [NotingChargesComponent],\n  providers: [SystemMasterParametersService, OwnbranchMasterService, SchemeAccountNoService, ACMasterDropdownService, NotingChargesService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: UserAuthInterceptor,\n    multi: true\n  },]\n})\nexport class NotingChargesModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n\n@Injectable()\nexport class SystemMasterParametersService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n  // url = \"http://localhost:4000/system-master-parameters\";\n  url = environment.base_url;\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\n      catchError((error) => {\n        let errorMessage = 'Please add valid length';\n        Swal.fire('Kindly Add Valid Length !');\n        return throwError(errorMessage);\n      })\n    )\n  }\n\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/system-master-parameters/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\n  }\n\n  getData(): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\n  }\n\n\n}\n\n\n"],"sourceRoot":"webpack:///"}