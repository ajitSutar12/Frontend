{"version":3,"sources":["./src/app/theme/transaction/gold-silver-return-entry/gold-silver-return-entry-routing.module.ts","./src/app/theme/transaction/gold-silver-return-entry/gold-silver-return-entry.component.ts","./src/app/theme/transaction/gold-silver-return-entry/gold-silver-return-entry.component.html","./src/app/theme/transaction/gold-silver-return-entry/gold-silver-return-entry.module.ts","./src/app/theme/transaction/gold-silver-return-entry/gold-silver-return-entry.service.ts"],"names":[],"mappings":"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","file":"default~centralised-passing-centralisedPassing-module~gold-silver-return-entry-gold-silver-return-en~59e710c5.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport { GoldSilverReturnEntryComponent } from './gold-silver-return-entry.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component: GoldSilverReturnEntryComponent,\n    data: {\n      title: 'GoldSilverReturnEntry',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class  GoldSilverReturnEntryRoutingModule { }","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NgSelectConfig } from '@ng-select/ng-select';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { first } from 'rxjs/operators';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs-compat';\n\n\n\n\n@Component({\n  selector: 'app-gold-silver-return-entry',\n  templateUrl: './gold-silver-return-entry.component.html',\n  styleUrls: ['./gold-silver-return-entry.component.scss']\n})\nexport class GoldSilverReturnEntryComponent implements OnInit {\n  @Input() childMessage: string;\n  @ViewChild('triggerhide') triggerhide: ElementRef<HTMLElement>;\n\n  formSubmitted = false;\n  //api\n  url = environment.base_url;\n\n  // Formgroup variable\n  angForm: FormGroup;\n  showButton: boolean;\n  updateShow: boolean;\n\n\n  // dropdown variables\n  ngscheme:any=null\n  ngBranchCode:any=null\n  branch_code: any;\n  accountedit:any=null;\n  getschemename: any;\n  scheme: any[];\n  schemeACNo: any[];\n\n  // Date variables\n  ngreturndate:any=null;\n  maxDate: Date;\n  minDate: Date;\n  InterestArr=[];\n  \n\n\n  \n\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  DatatableHideShow: boolean;\n  rejectShow: boolean;\n  approveShow: boolean;\n\n  constructor(\n    private fb: FormBuilder,private http: HttpClient,\n    private config: NgSelectConfig,\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\n    private schemeAccountNoService: SchemeAccountNoService,\n    private ownbranchMasterService: OwnbranchMasterService,\n    ) {\n\n      if (this.childMessage != undefined) {\n\n        this.editClickHandler(this.childMessage);\n      }\n\n      this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate());\n    this.maxDate.setDate(this.maxDate.getDate())\n\n   }\n\n  ngOnInit(): void {\n\n    this.createForm();\n\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branch_code = data;\n    })\n\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\n      // var allscheme = data.filter(function (scheme) {\n      //   return (scheme.name == 'LN' || scheme.name == 'CC' || scheme.name == 'DS');\n      // });\n      this.scheme = data;\n    })\n    let data: any = localStorage.getItem('user');\n\n  }\n\n  \n  \n\n  createForm() {\n    this.angForm = this.fb.group({\n     BRANCH:['',[Validators.required]],\n     AC_TYPE:['',[Validators.required]],\n     AC_NO:['',[Validators.required]],\n     RETURN_DATE:['',[Validators.required]],\n     ARTICLE_NAME:[''],\n     ARTICLE_DETAILS:[''],\n\n    });\n  }\n\n  getBranch(event) {\n    this.getschemename = event.name\n    this.ngscheme = event.value\n    this.getAccountList()\n   \n  }\n\n  //get account no according scheme\n  getAccountList() {\n    this.accountedit = null\n    \n    \n    let obj = [this.ngscheme, this.ngBranchCode]\n    switch (this.getschemename) {\n      case 'DS':\n        this.schemeAccountNoService.getDisputeLoanSchemeList1(obj).pipe(first()).subscribe(data => {\n          this.schemeACNo=data\n        })\n        break;\n\n      case 'LN':\n        this.schemeAccountNoService.getTermLoanSchemeList1(obj).pipe(first()).subscribe(data => {\n          this.schemeACNo=data\n        })\n        break;\n\n      case 'CC':\n        this.schemeAccountNoService.getCashCreditSchemeList1(obj).pipe(first()).subscribe(data => {\n          this.schemeACNo=data\n        })\n        break;\n    }\n    \n  }\n\n   //update checkbox status in array\n   checkInterestFlag(acno, flag) {\n    // let isIntUpdate: boolean = false\n    // if (flag.target.checked) {\n    //   isIntUpdate = true\n    // }\n    // else {\n    //   isIntUpdate = false\n    // }\n    // if (this.InterestArr.length != 0) {\n    //   if (this.InterestArr.some(item => item.AC_NO === acno)) {\n    //     this.InterestArr.forEach((element) => {\n    //       if (element.AC_NO == acno) {\n    //         element['IS_POST_INT_AC'] = isIntUpdate\n    //       }\n    //     })\n    //   }\n    //   else {\n    //     var object = {\n    //       AC_NO: acno,\n          \n    //       IS_POST_INT_AC: isIntUpdate\n    //     }\n    //     this.InterestArr.push(object)\n    //   }\n    // }\n    // else {\n    //   var object = {\n    //     AC_NO: acno,\n       \n    //     IS_POST_INT_AC: isIntUpdate\n    //   }\n    //   this.InterestArr.push(object)\n    //   console.log(this.InterestArr)\n    // }\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  //function toggle update to add button\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n  }\n\n  //function for edit button clicked\n  editClickHandler(info: any): void {\n    \n  }\n\n  //function for delete button clicked\n  delClickHandler(info: any): void {\n  }\n    \n}\n  \n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Gold/Silver Return Entry</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH\">Branch<sub\n                            class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"BRANCH\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\n                                        formControlName=\"BRANCH\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" \n                                        placeholder=\"Branch\">\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['BRANCH'].invalid && (angForm.controls['BRANCH'].dirty || angForm.controls['BRANCH'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['BRANCH'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>   \n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"RETURN_DATE\">Return Date</label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\"\n                                name=\"RETURN_DATE\" id=\"subm_date\"\n                                class=\"form-control\" [(ngModel)]=\"ngreturndate\"\n                                [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                                [maxDate]=\"maxDate\"\n                                [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                formControlName=\"RETURN_DATE\"\n                                (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                bsDatepicker>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                              *ngIf=\"angForm.controls['RETURN_DATE'].invalid && (angForm.controls['RETURN_DATE'].dirty || angForm.controls['RETURN_DATE'].touched)\"\n                              class=\"alert alert-danger\">\n                              <div *ngIf=\"angForm.controls['RETURN_DATE'].errors?.required\">\n                                This field is required\n                              </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Code<sub\n                            class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\n                                        (change)=\"getBranch($event)\"\n                                        placeholder=\"Scheme Code\">\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                            \n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_NO\">Account Number<sub\n                            class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"AC_NO\" bindValue=\"value\" [(ngModel)]=\"accountedit\"\n                                        formControlName=\"AC_NO\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Account Number\">\n                                        <ng-option *ngFor=\"let values of schemeACNo\" [value]=\"values\">\n                                            {{values.label}} {{values.name}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_NO'].invalid && (angForm.controls['AC_NO'].dirty || angForm.controls['AC_NO'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                            \n                        </div>\n                        \n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <table class=\"table table-bordered table-hover compact\">\n                                <thead>\n                                    <td>Serial Number</td>\n                                    <td>Item Type</td>\n                                    <td>Bag / Receipt Number</td>\n                                    <td>Total Weight</td>\n                                    <td>Clear Weight</td>\n                                    <td style=\"text-align: right;\">Value</td>\n                                    <td>Submission Date</td>\n                                    <td>Margin</td>\n                                    <td class=\"td_center\">Is Post Interest?</td>\n\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>1</td>\n                                        <td>Gold</td>\n                                        <td style=\"text-align: right;\">320023</td>\n                                        <td style=\"text-align: right;\">11.00</td>\n                                        <td style=\"text-align: right;\">10.00</td>\n                                        <td style=\"text-align: right;\">42000.00</td>\n                                        <td>18-04-2017</td>\n                                        <td style=\"text-align: right;\">80.00</td>\n                                        <td class=\"td_center\">\n                                            <!-- <input type=\"checkbox\" class=\"border-checkbox\"\n                                                            id=\"IS_POST_INT_AC\" #IS_POST_INT_AC\n                                                            [value]=\"data.IS_POST_INT_AC===true ? true : null\"\n                                                            [attr.checked]=\"data.IS_POST_INT_AC===true ? true :null\"\n                                                            (change)=\"checkInterestFlag(data.AC_NO,$event)\"> -->\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>2</td>\n                                        <td>Silver</td>\n                                        <td style=\"text-align: right;\">3256023</td>\n                                        <td style=\"text-align: right;\">25.00</td>\n                                        <td style=\"text-align: right;\">24.00</td>\n                                        <td style=\"text-align: right;\">50000.00</td>\n                                        <td>18-04-2017</td>\n                                        <td style=\"text-align: right;\">100.00</td>\n                                        <td></td>\n                                    </tr>\n                                </tbody>\n                                \n                            </table>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2  \"><label\n                            for=\"ARTICLE_NAME\">Article Name</label></div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input class=\"form-control\" formControlName=\"ARTICLE_NAME\">\n                                    \n                                </span>\n                            </div>\n\n                        </div>\n                        \n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2  \"><label\n                            for=\"ARTICLE_DETAILS\">Article Details</label></div>\n                        <div class=\"col-md-5\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <textarea type=\"text\" name=\"ARTICLE_DETAILS\" class=\"form-control\" placeholder=\" \"\n                                        style=\"height: 40px;\" pattern=\"^[A-Za-z0-9\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" id=\"ARTICLE_DETAILS\"\n                                        maxlength=\"4000\" formControlName=\"ARTICLE_DETAILS\"></textarea>\n                                    \n                                </span>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {  GoldSilverReturnEntryComponent } from './gold-silver-return-entry.component';\nimport {  GoldSilverReturnEntryRoutingModule } from './gold-silver-return-entry-routing.module';\nimport {SharedModule} from '../../../shared/shared.module';\n// import {SelectModule} from 'ng-select';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {DataTablesModule} from 'angular-datatables';\nimport {FileUploadModule} from 'ng2-file-upload';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n//import { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../user-auth.interceptor';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport {GoldSilverReturnEntryService} from './gold-silver-return-entry.service'\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    GoldSilverReturnEntryRoutingModule,\n     DataTablesModule,\n     FileUploadModule,\n    //  SelectModule,\n    NgSelectModule,\n     SharedModule,\n     FormsModule, ReactiveFormsModule,\n     BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot()\n\n    \n  ],\n  providers:[SchemeCodeDropdownService,SchemeAccountNoService,OwnbranchMasterService,GoldSilverReturnEntryService,{\n    provide: HTTP_INTERCEPTORS,\n    useClass: UserAuthInterceptor,\n    multi: true\n  },],\n  declarations: [ GoldSilverReturnEntryComponent],\n  exports:[GoldSilverReturnEntryComponent],\n})\nexport class  GoldSilverReturnEntryModule { }","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from '../../../../environments/environment';\n\n\n\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GoldSilverReturnEntryService {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/gold-silver-return-entry/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/gold-silver-return-entry/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/gold-silver-return-entry/update\", data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/gold-silver-return-entry/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n}"],"sourceRoot":"webpack:///"}