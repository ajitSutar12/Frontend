{"version":3,"sources":["./src/app/shared/dropdownService/ac-master-dropdown.service.ts","./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/utility/process-acm/charges-posting/charges-posting.component.ts","./src/app/theme/utility/process-acm/charges-posting/charges-posting.component.html","./src/app/theme/utility/process-acm/dead-stock-depreciation/dead-stock-depreciation.component.ts","./src/app/theme/utility/process-acm/dead-stock-depreciation/dead-stock-depreciation.component.html","./src/app/theme/utility/process-acm/npamarking/npamarking.component.ts","./src/app/theme/utility/process-acm/npamarking/npamarking.component.html","./src/app/theme/utility/process-acm/npaprocess-locking/npaprocess-locking.component.ts","./src/app/theme/utility/process-acm/npaprocess-locking/npaprocess-locking.component.html","./src/app/theme/utility/process-acm/npaprocess/npaprocess.component.ts","./src/app/theme/utility/process-acm/npaprocess/npaprocess.component.html","./src/app/theme/utility/process-acm/overdraft-interest-posting/overdraft-interest-posting.component.ts","./src/app/theme/utility/process-acm/overdraft-interest-posting/overdraft-interest-posting.component.html","./src/app/theme/utility/process-acm/payrolldatatransfer/payrolldatatransfer.component.ts","./src/app/theme/utility/process-acm/payrolldatatransfer/payrolldatatransfer.component.html","./src/app/theme/utility/process-acm/payrollexportfileprocess/payrollexportfileprocess.component.ts","./src/app/theme/utility/process-acm/payrollexportfileprocess/payrollexportfileprocess.component.html","./src/app/theme/utility/process-acm/penal-interest-calculation/penal-interest-calculation.component.ts","./src/app/theme/utility/process-acm/penal-interest-calculation/penal-interest-calculation.component.html","./src/app/theme/utility/process-acm/process-acm-routing.module.ts","./src/app/theme/utility/process-acm/process-acm.component.ts","./src/app/theme/utility/process-acm/process-acm.component.html","./src/app/theme/utility/process-acm/process-acm.module.ts","./src/app/theme/utility/process-acm/transfer-to-glby-closing-ac/transfer-to-glby-closing-ac.component.ts","./src/app/theme/utility/process-acm/transfer-to-glby-closing-ac/transfer-to-glby-closing-ac.component.html"],"names":[],"mappings":"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","file":"process-acm-process-acm-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ACMasterDropdownService {\n\n    // // gl-account-master\"; \n    url = environment.base_url;\n    acMasterObject = new Array();\n\n    constructor(private http: HttpClient) { }\n\n    public getACMasterList() {\n        this.acMasterObject = [];\n        return this.http.get<any>(this.url + '/gl-account-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\n                    this.acMasterObject.push(obj)\n                });\n                return this.acMasterObject;\n            }));\n    }\n\n    public getACMasterList1() {\n        this.acMasterObject = [];\n        return this.http.get<any>(this.url + '/gl-account-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { AC_NAME: element.AC_NAME, id: element.id, AC_NO: element.AC_NO };\n                    this.acMasterObject.push(obj)\n                });\n                return this.acMasterObject;\n            }));\n    }\n\n    public getACMasterbranch(branchid) {\n        this.acMasterObject = [];\n        return this.http.get<any>(this.url + '/gl-account-master/branch/' + branchid)\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    // let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\n                    // let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id };\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id, name: element.AC_NO };\n                    this.acMasterObject.push(obj)\n                });\n                return this.acMasterObject;\n            }));\n    }\n\n\n\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class SchemeCodeDropdownService {\n    schemeCodeObject = new Array();\n    schemeObject = new Array();\n    // // scheme-parameters\";\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n\n    public getSchemeCodeList(scheme) {\n        this.schemeCodeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF };\n                    this.schemeCodeObject.push(obj)\n                });\n                return this.schemeCodeObject;\n            }));\n    }\n\n\n    public getAllSchemeList() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n    public getAllSchemeList1() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\n                    this.schemeObject.push(obj)\n                });\n\n                return this.schemeObject;\n            }));\n\n    }\n\n    public getTermDepositSchemeRD() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\n\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n    public getTermDepositSchemePatD() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n    public getTermDepositeScheme() {\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n    public getTdReceiptScheme() {\n        return this.http.get<any>(this.url + '/scheme-parameters/')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n    public getAllSchemeListINT() {\n        this.schemeObject = []\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\n                    this.schemeObject.push(obj)\n                });\n                return this.schemeObject;\n            }));\n    }\n\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgSelectConfig } from '@ng-select/ng-select';\nimport { first } from 'rxjs/operators';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { environment } from 'src/environments/environment';\nimport {ACMasterDropdownService} from '../../../../shared/dropdownService/ac-master-dropdown.service'\n\n@Component({\n  selector: 'app-charges-posting',\n  templateUrl: './charges-posting.component.html',\n  styleUrls: ['./charges-posting.component.scss']\n})\nexport class ChargesPostingComponent implements OnInit {\n  formSubmitted = false;\n  //api\n  url = environment.base_url;\n\n  // Formgroup variable\n  angForm: FormGroup;\n\n  // dropdown variables\n  allScheme: any[]\n  ngscheme:any=null\n  isServiceCharges: boolean=true\n  isMinimumBalanceCharges=false\n  isDormantCharges=false\n  isChargesEntry=false\n  GLACNooption: any[];\n  ngGlAC:any=null\n\n  // for date \n  maxDate: Date;\n  minDate: Date;\n\n  label:string='Service Charges'\n  constructor(\n    private fb: FormBuilder, private http: HttpClient,\n    private config: NgSelectConfig,\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\n    private ACMasterDropdownService: ACMasterDropdownService,\n  ) { \n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate());\n    this.maxDate.setDate(this.maxDate.getDate())\n  }\n\n  ngOnInit(): void {\n    this.createForm()\n\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\n      // var allscheme = data.filter(function (scheme) {\n      //   return (scheme.name == 'SB' || scheme.name == 'CA' || scheme.name == 'AG' || scheme.name == 'GS' || scheme.name == 'PG' || scheme.name == 'TD' || scheme.name == 'LN' || scheme.name == 'DS' || scheme.name == 'CC' || scheme.name == 'SH'||scheme.name == 'GL')\n      // });\n      this.allScheme = data;\n    })\n    this.ACMasterDropdownService.getACMasterList()\n      .pipe(first())\n      .subscribe((data) => {\n        this.GLACNooption = data;\n      });\n  }\n\n\n  createForm() {\n    this.angForm = this.fb.group({\n      AC_TYPE: ['', [Validators.required]],\n      FORM_TYPE:['Service Charges'],\n      CHARGES_AMT:['',[Validators.required,Validators.pattern]],\n      TRANFROM_DATE:['',[Validators.required]],\n      TRANTO_DATE:['',[Validators.required]],\n      BALCHARGES_AMT:['',[Validators.required,Validators.pattern]],\n      DORMANTFROM_DATE:['',[Validators.required]],\n      DORMANTTO_DATE:['',[Validators.required]],\n      DORMANTCHARGES_AMT:['',[Validators.required]],\n      BALANCE:[''],\n      BAL_AMT:['',[Validators.required],Validators.pattern],\n      ENTRY_CHARGES:['',[Validators.required],Validators.pattern],\n      MIN_CHARGES:['',[Validators.required],Validators.pattern],\n      TRAN_PERIOD:['',[Validators.required]],\n      TRANPERIOD_TO:['',[Validators.required]],\n      TYPE:[''],\n      GL_ACNO:['',[Validators.required]],\n      TOTAL_CHARGE:[''],\n      PARTICULAR:['Service Charges'],\n\n    });\n  }\n\n  isForm(value,data) {\n\n    this.label=data\n    // console.log(this.label)\n    this.angForm.patchValue({\n      'PARTICULAR':data\n      \n    })\n    if (value == 1) {\n      this.isServiceCharges = true;\n      this.isMinimumBalanceCharges=false;\n      this.isDormantCharges=false;\n      this.isChargesEntry=false\n      \n    }\n    else if (value == 2) {\n      this.isServiceCharges = false;\n      this.isMinimumBalanceCharges=true;\n      this.isDormantCharges=false;\n      this.isChargesEntry=false\n      \n      \n    }\n    else if (value == 3) {\n      this.isServiceCharges = false\n      this.isMinimumBalanceCharges=false;\n      this.isDormantCharges=true;\n      this.isChargesEntry=false\n      \n      \n    }\n    else if (value == 4) {\n      this.isServiceCharges = false;\n      this.isMinimumBalanceCharges=false;\n      this.isDormantCharges=false;\n      this.isChargesEntry=true\n      \n      \n    }\n    \n    \n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Charges Posting</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme<sub class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-4\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\n                                    formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                    \n                                    [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Scheme\">\n                                    <ng-option *ngFor=\"let values of allScheme\" [value]=\"values\">\n                                        {{values.id}} {{values.label}} </ng-option>\n                                </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" formControlName=\"FORM_TYPE\" #charges1 name=\"FORM_TYPE\" value=\"Service Charges\"\n                                            id=\"FORM_TYPE\" (change)=\"isForm(1,charges1.value)\" checked>\n                                        <i class=\"helper\"></i>Service Charges\n                                    </label>\n                                </div>\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" value=\"Minimum Balance Charges\" #charges2 formControlName=\"FORM_TYPE\" id=\"form2\"\n                                            name=\"FORM_TYPE\" (change)=\"isForm(2,charges2.value)\">\n                                        <i class=\"helper\"></i>Minimum Balance Charges\n                                    </label>\n                                </div>\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" value=\"Dormant Charges\" #charges3 formControlName=\"FORM_TYPE\" id=\"form3\"\n                                            name=\"FORM_TYPE\" (change)=\"isForm(3,charges3.value)\">\n                                        <i class=\"helper\"></i>Dormant Charges\n                                    </label>\n                                </div>\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" value=\"Charges Per Entry\" #charges4 formControlName=\"FORM_TYPE\" id=\"form4\"\n                                            name=\"FORM_TYPE\" (change)=\"isForm(4,charges4.value)\">\n                                        <i class=\"helper\"></i>Charges Per Entry\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"solid\">\n                                <h3><span>{{label}}</span></h3>\n                                <div class=\"row\" id=\"form1\"  *ngIf=\"isServiceCharges\">\n                                \n                                   \n                                    <div class=\"col-sm-12 col-md-2\"> <label for=\"CHARGES_AMT\">Charges Amount<sub\n                                        class=\"required\">*</sub></label></div>\n                                    <div class=\"col-sm-12 col-md-2\">\n                                        <div class=\"form-group input-group\">\n                                            <span class=\"border-lable-flt\">\n                                                <input style=\"text-align: right;\" type=\"text\" name=\"CHARGES_AMT\" class=\"form-control\"\n                                                    placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"CHARGES_AMT\" max=\"10\"\n                                                    title=\"Input allowed only  0-9\" #INT formControlName=\"CHARGES_AMT\"\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\">\n        \n                                            </span>\n                                        </div>\n                                        <div class=\"form-group form-primary form-static-label\"\n                                            *ngIf=\"angForm.controls['CHARGES_AMT'].invalid && (angForm.controls['CHARGES_AMT'].dirty || angForm.controls['CHARGES_AMT'].touched)\"\n                                            class=\"alert alert-danger\">\n                                            <div\n                                                *ngIf=\"angForm.controls['CHARGES_AMT'].errors?.pattern || angForm.controls['CHARGES_AMT'].errors?.required || angForm.controls['CHARGES_AMT'].errors?.maxlength\">\n                                                Input allowed only 0-9 .(after decimal 2 digits)\n                                            </div>\n                                        </div>\n                                    </div>\n                                \n                            </div>\n                            <div class=\"row\" id=\"form2\" *ngIf=\"isMinimumBalanceCharges\">\n                                <div class=\"col-sm-12\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TRANFROM_DATE\">Transaction Date From<sub\n                                            class=\"required\">*</sub></label></div>\n                                        <div class=\"col-sm-12 col-md-2\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TRANFROM_DATE\" id=\"TRANFROM_DATE\"\n                                                    class=\"form-control\" \n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TRANFROM_DATE\"\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                                    bsDatepicker>\n                \n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\"\n                                                *ngIf=\"angForm.controls['TRANFROM_DATE'].invalid && (angForm.controls['TRANFROM_DATE'].dirty || angForm.controls['TRANFROM_DATE'].touched)\"\n                                                class=\"alert alert-danger\">\n                                                <div *ngIf=\"angForm.controls['TRANFROM_DATE'].errors?.required\">\n                                                    This field is required.\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TRANTO_DATE\">Transaction Date To<sub\n                                            class=\"required\">*</sub></label></div>\n                                        <div class=\"col-sm-12 col-md-2\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TRANTO_DATE\" id=\"TRANTO_DATE\"\n                                                    class=\"form-control\" \n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TRANTO_DATE\"\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                                    bsDatepicker>\n                \n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\"\n                                                *ngIf=\"angForm.controls['TRANTO_DATE'].invalid && (angForm.controls['TRANTO_DATE'].dirty || angForm.controls['TRANTO_DATE'].touched)\"\n                                                class=\"alert alert-danger\">\n                                                <div *ngIf=\"angForm.controls['TRANTO_DATE'].errors?.required\">\n                                                    This field is required.\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BALCHARGES_AMT\">Charges Amount<sub\n                                            class=\"required\">*</sub></label></div>\n                                        <div class=\"col-sm-12 col-md-2\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input style=\"text-align: right;\" type=\"text\" name=\"BALCHARGES_AMT\" class=\"form-control\"\n                                                        placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"BALCHARGES_AMT\" max=\"10\"\n                                                        title=\"Input allowed only  0-9\" #INT formControlName=\"BALCHARGES_AMT\"\n                                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\">\n                \n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\"\n                                                *ngIf=\"angForm.controls['BALCHARGES_AMT'].invalid && (angForm.controls['BALCHARGES_AMT'].dirty || angForm.controls['BALCHARGES_AMT'].touched)\"\n                                                class=\"alert alert-danger\">\n                                                <div\n                                                    *ngIf=\"angForm.controls['BALCHARGES_AMT'].errors?.pattern || angForm.controls['BALCHARGES_AMT'].errors?.required || angForm.controls['BALCHARGES_AMT'].errors?.maxlength\">\n                                                    Input allowed only 0-9 .(after decimal 2 digits)\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                               \n                               \n                                \n                            </div>\n                            <div class=\"row\" id=\"form3\" *ngIf=\"isDormantCharges\">\n                                <div class=\"col-sm-12\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"DORMANTFROM_DATE\">Transaction Date From<sub\n                                            class=\"required\">*</sub></label></div>\n                                        <div class=\"col-sm-12 col-md-2\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"DORMANTFROM_DATE\" id=\"DORMANTFROM_DATE\"\n                                                    class=\"form-control\" \n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"DORMANTFROM_DATE\"\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                                    bsDatepicker>\n                \n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\"\n                                                *ngIf=\"angForm.controls['DORMANTFROM_DATE'].invalid && (angForm.controls['DORMANTFROM_DATE'].dirty || angForm.controls['DORMANTFROM_DATE'].touched)\"\n                                                class=\"alert alert-danger\">\n                                                <div *ngIf=\"angForm.controls['DORMANTFROM_DATE'].errors?.required\">\n                                                    This field is required.\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"DORMANTTO_DATE\">Transaction Date To<sub\n                                            class=\"required\">*</sub></label></div>\n                                        <div class=\"col-sm-12 col-md-2\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"DORMANTTO_DATE\" id=\"DORMANTTO_DATE\"\n                                                    class=\"form-control\" \n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"DORMANTTO_DATE\"\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                                    bsDatepicker>\n                \n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\"\n                                                *ngIf=\"angForm.controls['DORMANTTO_DATE'].invalid && (angForm.controls['DORMANTTO_DATE'].dirty || angForm.controls['DORMANTTO_DATE'].touched)\"\n                                                class=\"alert alert-danger\">\n                                                <div *ngIf=\"angForm.controls['DORMANTTO_DATE'].errors?.required\">\n                                                    This field is required.\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"DORMANTCHARGES_AMT\">Charges Amount<sub\n                                            class=\"required\">*</sub></label></div>\n                                        <div class=\"col-sm-12 col-md-2\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input style=\"text-align: right;\" type=\"text\" name=\"DORMANTCHARGES_AMT\" class=\"form-control\"\n                                                        placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"DORMANTCHARGES_AMT\" max=\"10\"\n                                                        title=\"Input allowed only  0-9\" #INT formControlName=\"DORMANTCHARGES_AMT\"\n                                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\">\n                \n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\"\n                                                *ngIf=\"angForm.controls['DORMANTCHARGES_AMT'].invalid && (angForm.controls['DORMANTCHARGES_AMT'].dirty || angForm.controls['DORMANTCHARGES_AMT'].touched)\"\n                                                class=\"alert alert-danger\">\n                                                <div\n                                                    *ngIf=\"angForm.controls['DORMANTCHARGES_AMT'].errors?.pattern || angForm.controls['DORMANTCHARGES_AMT'].errors?.required || angForm.controls['DORMANTCHARGES_AMT'].errors?.maxlength\">\n                                                    Input allowed only 0-9 .(after decimal 2 digits)\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm\">\n                                            <button class=\"btn btn-outline-primary btn-sm\"> Show Report</button>\n                                        </div>\n                                    </div>\n                                </div>\n        \n                            </div>\n                            <div class=\"row\" id=\"form4\" *ngIf=\"isChargesEntry\">\n                                <div class=\"col-sm-12\">\n                                    <h6>Transaction Type</h6>\n                                    <div class=\"row\">\n                                        <div class=\"col-sm\">\n                                            <div class=\"form-radio\">\n                                                <div class=\"radio radio-inline\">\n                                                    <label>\n                                                        <input type=\"radio\" formControlName=\"BALANCE\" name=\"BALANCE\" value=\"bal1\"\n                                                            id=\"BAL1\">\n                                                        <i class=\"helper\"></i>Minimum Balance\n                                                    </label>\n                                                </div>\n                                                <div class=\"radio radio-inline\">\n                                                    <label>\n                                                        <input type=\"radio\"  formControlName=\"BALANCE\"  name=\"BALANCE\" value=\"bal2\" \n                                                        id=\"BAL2\">\n                                                        <i class=\"helper\"></i>Maximum Balance \n                                                    </label>\n                                                </div>\n                                            </div>\n        \n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BAL_AMT\">Balance Amount<sub\n                                            class=\"required\">*</sub></label></div>\n                                        <div class=\"col-sm-12 col-md-2\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input style=\"text-align: right;\" type=\"text\" name=\"BAL_AMT\" class=\"form-control\"\n                                                        placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"BAL_AMT\" max=\"10\"\n                                                        title=\"Input allowed only  0-9\" #INT formControlName=\"BAL_AMT\"\n                                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\">\n                \n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\"\n                                                *ngIf=\"angForm.controls['BAL_AMT'].invalid && (angForm.controls['BAL_AMT'].dirty || angForm.controls['BAL_AMT'].touched)\"\n                                                class=\"alert alert-danger\">\n                                                <div\n                                                    *ngIf=\"angForm.controls['BAL_AMT'].errors?.pattern || angForm.controls['BAL_AMT'].errors?.required || angForm.controls['BAL_AMT'].errors?.maxlength\">\n                                                    Input allowed only 0-9 .(after decimal 2 digits)\n                                                </div>\n                                            </div>\n                                        </div>\n        \n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"ENTRY_CHARGES\">Per Entry Charges<sub\n                                            class=\"required\">*</sub></label></div>\n                                        <div class=\"col-sm-12 col-md-2\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input style=\"text-align: right;\" type=\"text\" name=\"ENTRY_CHARGES\" class=\"form-control\"\n                                                        placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"ENTRY_CHARGES\" max=\"10\"\n                                                        title=\"Input allowed only  0-9\" #INT formControlName=\"ENTRY_CHARGES\"\n                                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\">\n                \n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\"\n                                                *ngIf=\"angForm.controls['ENTRY_CHARGES'].invalid && (angForm.controls['ENTRY_CHARGES'].dirty || angForm.controls['ENTRY_CHARGES'].touched)\"\n                                                class=\"alert alert-danger\">\n                                                <div\n                                                    *ngIf=\"angForm.controls['ENTRY_CHARGES'].errors?.pattern || angForm.controls['ENTRY_CHARGES'].errors?.required || angForm.controls['ENTRY_CHARGES'].errors?.maxlength\">\n                                                    Input allowed only 0-9 .(after decimal 2 digits)\n                                                </div>\n                                            </div>\n                                        </div>\n                                        \n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"MIN_CHARGES\">Minimum Charges<sub\n                                            class=\"required\">*</sub></label></div>\n                                        <div class=\"col-sm-12 col-md-2\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input style=\"text-align: right;\" type=\"text\" name=\"MIN_CHARGES\" class=\"form-control\"\n                                                        placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"MIN_CHARGES\" max=\"10\"\n                                                        title=\"Input allowed only  0-9\" #INT formControlName=\"MIN_CHARGES\"\n                                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\">\n                \n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\"\n                                                *ngIf=\"angForm.controls['MIN_CHARGES'].invalid && (angForm.controls['MIN_CHARGES'].dirty || angForm.controls['MIN_CHARGES'].touched)\"\n                                                class=\"alert alert-danger\">\n                                                <div\n                                                    *ngIf=\"angForm.controls['MIN_CHARGES'].errors?.pattern || angForm.controls['MIN_CHARGES'].errors?.required || angForm.controls['MIN_CHARGES'].errors?.maxlength\">\n                                                    Input allowed only 0-9 .(after decimal 2 digits)\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TRAN_PERIOD\">Transaction Period<sub\n                                            class=\"required\">*</sub></label></div>\n                                        <div class=\"col-sm-12 col-md-2\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TRAN_PERIOD\" id=\"TRAN_PERIOD\"\n                                                    class=\"form-control\" \n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TRAN_PERIOD\"\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                                    bsDatepicker>\n                \n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\"\n                                                *ngIf=\"angForm.controls['TRAN_PERIOD'].invalid && (angForm.controls['TRAN_PERIOD'].dirty || angForm.controls['TRAN_PERIOD'].touched)\"\n                                                class=\"alert alert-danger\">\n                                                <div *ngIf=\"angForm.controls['TRAN_PERIOD'].errors?.required\">\n                                                    This field is required.\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TRANPERIOD_TO\">To<sub\n                                            class=\"required\">*</sub></label></div>\n                                        <div class=\"col-sm-12 col-md-2\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TRANPERIOD_TO\" id=\"TRANPERIOD_TO\"\n                                                    class=\"form-control\" \n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TRANPERIOD_TO\"\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                                    bsDatepicker>\n                \n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\"\n                                                *ngIf=\"angForm.controls['TRANPERIOD_TO'].invalid && (angForm.controls['TRANPERIOD_TO'].dirty || angForm.controls['TRANPERIOD_TO'].touched)\"\n                                                class=\"alert alert-danger\">\n                                                <div *ngIf=\"angForm.controls['TRANPERIOD_TO'].errors?.required\">\n                                                    This field is required.\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-12\">\n                                            <div class=\"row\">\n                                                <div class=\"col-sm\">\n                                                    \n                                                    <div class=\"form-radio\">\n                                                        <div class=\"radio radio-inline\">\n                                                            \n                                                            <label>\n                                                                <input type=\"radio\" formControlName=\"TYPE\" name=\"TYPE\" value=\"type1\"\n                                                                    id=\"TYPE1\">\n                                                                <i class=\"helper\"></i>Debit\n                                                            </label>\n                                                        </div>\n                                                        <div class=\"radio radio-inline\">\n                                                            <label>\n                                                                <input type=\"radio\"  formControlName=\"TYPE\"  name=\"TYPE\" value=\"type2\" \n                                                                id=\"TYPE2\">\n                                                                <i class=\"helper\"></i>Credit\n                                                            </label>\n                                                        </div>\n                                                        <div class=\"radio radio-inline\">\n                                                            <label>\n                                                                <input type=\"radio\"  formControlName=\"TYPE\"  name=\"TYPE\" value=\"type3\" \n                                                                id=\"TYPE3\">\n                                                                <i class=\"helper\"></i>All\n                                                            </label>\n                                                        </div>\n                                                    </div>\n                \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            </div>\n                            \n                        </div>\n                    </div>\n                   \n                    \n                    \n                    \n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-4\"> <label for=\"GL_ACNO\">Charges GL Account Number<sub class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-4\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"GL_ACNO\" bindValue=\"value\" [(ngModel)]=\"ngGlAC\"\n                                        formControlName=\"GL_ACNO\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" placeholder=\"\">\n                                        <ng-option *ngFor=\"let values of GLACNooption\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['GL_ACNO'].invalid && (angForm.controls['GL_ACNO'].dirty || angForm.controls['GL_ACNO'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['GL_ACNO'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"><label for=\"PARTICULAR\">Particulars</label></div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"PARTICULAR\" class=\"form-control\"\n                                        placeholder=\" \" id=\"PARTICULAR\" value=\"charges.value\"\n                                        (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) ||($event.charCode >= 48 && $event.charCode < 58) || ($event.charCode <= 32)\"\n                                        \n                                        title=\"Input allowed only  A-Z a-z 0-9 - / . (Space)\"\n                                        formControlName=\"PARTICULAR\">\n                                </span>\n                            </div>\n                            \n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"><label for=\"TOTAL_CHARGE\">Total Charges</label></div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" style=\"text-align: right;\" name=\"TOTAL_CHARGE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\n                                        class=\"form-control\" placeholder=\" \" id=\"TOTAL_CHARGE\" value=\"\"\n                                        maxlength=\"15\" \n                                        title=\"Input allowed only   0-9\" required\n                                        formControlName=\"TOTAL_CHARGE\" disabled>\n                                </span>\n                            </div>\n                        </div>\n                        \n                    </div>\n                    \n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { environment } from 'src/environments/environment';\nimport { NgSelectConfig } from '@ng-select/ng-select';\n\n@Component({\n  selector: 'app-dead-stock-depreciation',\n  templateUrl: './dead-stock-depreciation.component.html',\n  styleUrls: ['./dead-stock-depreciation.component.scss']\n})\nexport class DeadStockDepreciationComponent implements OnInit {\n\n  formSubmitted = false;\n  //api\n  url = environment.base_url;\n\n  // Formgroup variable\n  angForm: FormGroup;\n\n  // dropdown variaqbles\n  branch_code: any;\n  ngBranchCode:any=null\n\n  // date variables\n  maxDate: Date;\n  minDate: Date;\n  ngcalculationdate:any=null\n\n\n\n  constructor(\n    private fb: FormBuilder, private http: HttpClient,\n    private ownbranchMasterService: OwnbranchMasterService,\n    private config: NgSelectConfig,\n  ) { \n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n\n\n\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branch_code = data;\n      this.ngBranchCode = data[0].value\n\n    })\n  }\n\n  createForm(){\n\n    this.angForm = this.fb.group({\n      BRANCH_CODE: ['', [Validators.required]],\n      CAL_DATE: ['', [Validators.required]],\n\n    })\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Dead Stock Depreciation</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\n                            class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" \n                                        placeholder=\"Branch\">\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-3\"> <label for=\"CAL_DATE\">Calculation Date<sub\n                            class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"CAL_DATE\" id=\"CAL_DATE\"\n                                        class=\"form-control\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                                        [minDate]=\"minDate\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                        formControlName=\"CAL_DATE\" bsDatepicker required>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['CAL_DATE'].invalid && (angForm.controls['CAL_DATE'].dirty || angForm.controls['CAL_DATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['CAL_DATE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-outline-primary btn-sm\">Delete</button>\n                            <button class=\"btn btn-outline-primary btn-sm\">Process</button>\n                            <button class=\"btn btn-outline-primary btn-sm\">Report</button>\n                            \n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgSelectConfig } from '@ng-select/ng-select';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as moment from 'moment';\nimport { Subject } from 'rxjs-compat';\nimport { first } from 'rxjs/operators';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-npamarking',\n  templateUrl: './npamarking.component.html',\n  styleUrls: ['./npamarking.component.scss']\n})\nexport class NPAMarkingComponent implements OnInit {\n\n  formSubmitted = false;\n  //api\n  url = environment.base_url;\n\n  // Formgroup variable\n  angForm: FormGroup;\n\n   @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  // dtTrigger: Subject<any> = new Subject();\n  dtTrigger: Subject<any> = new Subject<any>();\n\n  // dropdown variaqbles\n  branch_code: any;\n  ngBranchCode:any=null\n  ngscheme:any=null\n  scheme:any\n\n  //for date\n  maxDate: Date;\n  minDate: Date;\n  bsValue = new Date();\n  warrentDate: any \n  ngwarrentDate: any = null\n  fromdate: any = null\n  todate: any = null\n\n  // Transaction type variable\n  ngnpaclass: any = null\n  npaClass = [\n    { id: 'S', label: 'Standard' },\n    { id: 'SS', label: 'Sub Standard' },\n    { id: 'D1', label: 'Doubtfull Assets 1' },\n    { id: 'D2', label: 'Doubtfull Assets 2' },\n    { id: 'D3', label: 'Doubtfull Assets 3' },\n    { id: 'L', label: 'Loss Assets' }\n  ]\n\n  constructor(\n    private fb: FormBuilder, private http: HttpClient,\n    private ownbranchMasterService: OwnbranchMasterService,\n    private config: NgSelectConfig,\n  ) { \n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate());\n    this.maxDate.setDate(this.maxDate.getDate())\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branch_code = data;\n      this.ngBranchCode = data[0].value\n\n    })\n\n    this.http.get(this.url + '/npa-marking').subscribe((data) => {\n      this.warrentDate = data\n    })\n\n\n    \n  }\n  createForm(){\n\n    this.angForm = this.fb.group({\n      BRANCH_CODE: ['', [Validators.required]],\n      AC_TYPE: ['', [Validators.required]],\n      WARRENT_DATE: ['', [Validators.required]],\n      FROM_DATE: ['', [Validators.required]],\n      TO_DATE: ['', [Validators.required]],\n      NPA_CLASS:['']\n     \n\n    })\n  }\n   // checking date \n   counter = 0;\n   checkDate(event){\n \n     this.counter = this.counter+1;\n     if(this.counter>2 && event.length!=0){\n       let value1\n     let value2\n     value1 = moment(this.fromdate).format('DD/MM/YYYY');\n     // console.log(value1)\n     value2 = moment(this.todate).format('DD/MM/YYYY');\n     // console.log(value2)\n     if(moment(value1).isSame(value2)){\n       Swal.fire(\"from date should not be same as to date\")\n       this.angForm.controls['TO_DATE'].reset()\n     }\n     }\n     \n   }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Npa Marking</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\n                            class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" \n                                        placeholder=\"\">\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Code<sub\n                            class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\n                                        placeholder=\"\">\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"WARRENT_DATE\">Div.Warrent Date<sub\n                            class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"WARRENT_DATE\" bindValue=\"WARRENT_DATE\" [(ngModel)]=\"ngwarrentDate\"\n                                        formControlName=\"WARRENT_DATE\" bindLabel=\"WARRENT_DATE\"\n                                        title=\"Compulsory Selection\" required placeholder=\"Warrent Date\">\n                                        <ng-option *ngFor=\"let values of warrentDate\" [value]=\"values\">\n                                            {{values.WARRENT_DATE}} ({{values.DIV_FROM_YEAR}}-{{values.DIV_TO_YEAR}})\n                                        </ng-option>\n                                    </ng-select>\n\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['WARRENT_DATE'].invalid && (angForm.controls['WARRENT_DATE'].dirty || angForm.controls['WARRENT_DATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['WARRENT_DATE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_DATE\">From Date</label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"FROM_DATE\" id=\"FROM_DATE\"\n                                        class=\"form-control\" [(ngModel)]=\"fromdate\" [bsValue]=\"bsValue\" \n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"FROM_DATE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        bsDatepicker>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['FROM_DATE'].invalid && (angForm.controls['FROM_DATE'].dirty || angForm.controls['FROM_DATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['FROM_DATE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_DATE\">To Date</label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TO_DATE\" id=\"TO_DATE\"\n                                        class=\"form-control\" [(ngModel)]=\"todate\"  (bsValueChange)=\"checkDate($event)\"\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"fromdate\"  [maxDate]=\"maxDate\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TO_DATE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        bsDatepicker>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['TO_DATE'].invalid && (angForm.controls['TO_DATE'].dirty || angForm.controls['TO_DATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['TO_DATE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\">Update</button>\n                            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\">Cancel</button>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <div class=\"col-12\">\n                                <div class=\"table-responsive\">\n                                    <table datatable>\n                                        <thead>\n                                            <td>Serial Number</td>\n                                            <td>Account Number</td>\n                                            <td>Account Name</td>\n                                            <td>NPA Class</td>\n                                            <td class=\"td_right\">NPA Provision</td>\n                                            <td>NPA Percentage</td>\n                                            <td class=\"td_right\">To Be Recovered</td>\n                                            \n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td></td>\n                                                <td></td>\n                                                <td></td>\n                                                <td>\n                                                    <ng-select id=\"NPA_CLASS\" [items]=\"npaClass\" name=\"type\"\n                                                    bindLabel=\"label\" formControlName=\"NPA_CLASS\"\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" \n                                                    [(ngModel)]=\"ngnpaclass\" placeholder=\"Transaction Type\" required>\n                                                    </ng-select>\n                                                </td>\n                                                <td>\n                                                    <input>\n                                                </td>\n                                                <td>\n                                                    <input>\n                                                </td>\n                                                <td>\n                                                    <input>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                        <!-- <tbody>\n                                            <tr>\n                                                <td class=\"no-data-available\" style=\"text-align: center;\">\n                                                    No data!\n                                                </td>\n                                            </tr>\n                                        </tbody> -->\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-npaprocess-locking',\n  templateUrl: './npaprocess-locking.component.html',\n  styleUrls: ['./npaprocess-locking.component.scss']\n})\nexport class NPAProcessLockingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>3. NPA Process Locking</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgSelectConfig } from '@ng-select/ng-select';\nimport { first } from 'rxjs/operators';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\n\n@Component({\n  selector: 'app-npaprocess',\n  templateUrl: './npaprocess.component.html',\n  styleUrls: ['./npaprocess.component.scss']\n})\nexport class NPAProcessComponent implements OnInit {\n  // variable for validation\n  formSubmitted = false;\n  // Created Form Group\n  angForm: FormGroup;\n\n  // dropdown variables\n  scheme\n  ngscheme: any = null\n  ngBranchCode: any = null\n  glaccount: any = null;\n  schemeACNo: any[];\n  branch_code: any[];\n  schemeedit: any;\n  ACMasterDropdown: any[];\n  fromAC\n  ngfromac:any =null\n  ngtoac: any = null\n  ToAC\n  NPAdate\n  // variables for button\n  showButton: boolean =true;\n  updateShow: boolean;\n  newbtnShow: boolean;\n\n    // Date variables\n    todate: any = null;\n    fromdate:any=null\n    maxDate: Date;\n    minDate: Date;\n  constructor(\n    private fb: FormBuilder,\n    private config: NgSelectConfig,\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\n    private schemeAccountNoService: SchemeAccountNoService,\n    private ownbranchMasterService: OwnbranchMasterService,\n  ) {\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n   }\n\n  ngOnInit(): void {\n    this.createForm()\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\n      var allscheme = data.filter(function (scheme) {\n        // return (scheme.name == 'LN' || scheme.name == 'CC' || scheme.name == 'DS');\n        return (scheme.name == 'LN' || scheme.name == 'CC');\n      });\n      this.scheme = allscheme;\n    })\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branch_code = data;\n      this.ngBranchCode = data[0].value\n    })\n\n  }\n  createForm() {\n    this.angForm = this.fb.group({\n      BRANCH_CODE: ['', [Validators.required]],\n      AC_TYPE: ['', [Validators.required]],\n      NPA_DATE: ['', [Validators.required]],\n      FROM_AC: [''],\n      TO_AC:[''],\n      RECOVER_AMT:[''],\n    });\n  }\n  schemechange(event) {\n    this.getschemename = event.name\n    this.ngscheme = event.value\n    this.getIntroducer()\n  }\n  obj: any\n  getschemename: any\n  //get account no according scheme for introducer\n  getIntroducer() {\n    this.obj = [this.ngscheme, this.ngBranchCode]\n    switch (this.getschemename) {\n   \n      case 'LN':\n        this.schemeAccountNoService.getTermLoanSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data;\n          this.ToAC = data\n        })\n        break;\n      case 'CC':\n        this.schemeAccountNoService.getCashCreditSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data;\n          this.ToAC = data\n        })\n        break\n    }\n  }\n  getACmastercode(){}\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>NPA Processing (M1)</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\n                                    class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" \n                                        placeholder=\"Branch\">\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme<sub\n                                    class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\n                                        (change)=\"schemechange($event)\"  (change)=\"getACmastercode()\" placeholder=\"Scheme\">\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"NPA_DATE\">NPA Provision Date</label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"NPA_DATE\" id=\"NPA_DATE\"\n                                        class=\"form-control\" [(ngModel)]=\"NPAdate\"\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\" \n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"NPA_DATE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        bsDatepicker>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['NPA_DATE'].invalid && (angForm.controls['NPA_DATE'].dirty || angForm.controls['NPA_DATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['NPA_DATE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_AC\">From Account Number</label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"FROM_AC\" bindValue=\"value\" [(ngModel)]=\"ngfromac\"\n                                        formControlName=\"FROM_AC\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"From A/C\">\n                                        <ng-option *ngFor=\"let values of fromAC\" [value]=\"values\">\n                                            {{values.label}} {{values.name}}</ng-option>\n                                    </ng-select>\n                                    \n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['FROM_AC'].invalid && (angForm.controls['FROM_AC'].dirty || angForm.controls['FROM_AC'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['FROM_AC'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_AC\">To Account Number</label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"TO_AC\" bindValue=\"value\" [(ngModel)]=\"ngtoac\" formControlName=\"TO_AC\"\n                                        bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"To A/C\">\n                                        <ng-option *ngFor=\"let values of ToAC\" [value]=\"values\">\n                                            {{values.label}} {{values.name}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['TO_AC'].invalid && (angForm.controls['TO_AC'].dirty || angForm.controls['TO_AC'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['TO_AC'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                    <div class=\"col-sm-12 col-md-4\">\n                            <div class=\"checkbox checkbox-primary\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input type=\"checkbox\" class=\"border-checkbox\" id=\"RECOVER_AMT\"\n                                        formControlName=\"RECOVER_AMT\">\n                                    <label class=\"border-checkbox-label\" for=\"RECOVER_AMT\">Is To Be Recover Amount Process \n                                        ?</label>\n                                </div>\n                            </div>\n                    </div>\n                    <div class=\"col-sm-12\">\n                        <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\">Posting</button>\n                    </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgSelectConfig } from '@ng-select/ng-select';\nimport { first } from 'rxjs/operators';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport {ACMasterDropdownService} from '../../../../shared/dropdownService/ac-master-dropdown.service'\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\n\n@Component({\n  selector: 'app-overdraft-interest-posting',\n  templateUrl: './overdraft-interest-posting.component.html',\n  styleUrls: ['./overdraft-interest-posting.component.scss']\n})\nexport class OverdraftInterestPostingComponent implements OnInit {\n\n  formSubmitted = false;\n  //api\n  url = environment.base_url;\n\n  // Formgroup variable\n  angForm: FormGroup;\n\n  // dropdown variaqbles\n  branch_code: any;\n  ngBranchCode:any=null\n  schemeedit:any=null\n  ngfromac:any=null\n  ngtoac:any=null\n  ngGlAC:any=null\n  scheme: any[];\n  fromAC:any[];\n  ToAC:any[];\n  GLACNooption: any[];\n  schemeACNo: any[];\n\n  // date variables\n  maxDate: Date;\n  minDate: Date;\n\n  constructor(\n    private fb: FormBuilder, private http: HttpClient,\n    private ownbranchMasterService: OwnbranchMasterService,\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\n    private schemeAccountNoService: SchemeAccountNoService,\n    private ACMasterDropdownService: ACMasterDropdownService,\n    private config: NgSelectConfig,\n  ) {\n      this.maxDate = new Date();\n      this.minDate = new Date();\n      this.minDate.setDate(this.minDate.getDate() - 1);\n      this.maxDate.setDate(this.maxDate.getDate())\n   }\n\n  ngOnInit(): void {\n\n    this.createForm();\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branch_code = data;\n      this.ngBranchCode = data[0].value\n\n    })\n    this.schemeCodeDropdownService.getAllSchemeList1().pipe(first()).subscribe(data => {\n      this.scheme = data;\n    })\n\n    this.ACMasterDropdownService.getACMasterList()\n      .pipe(first())\n      .subscribe((data) => {\n        this.GLACNooption = data;\n      });\n  }\n\n  createForm(){\n\n    this.angForm = this.fb.group({\n      BRANCH_CODE: ['', [Validators.required]],\n      AC_TYPE: ['', [Validators.required]],\n      FROM_AC: ['', [Validators.required]],\n      TO_AC:['',[Validators.required]],\n      CAL_DATE:['',[Validators.required]],\n      GL_ACNO:['',[Validators.required]],\n      PARTICULAR:[''],\n      TOTAL_CHARGE:[''],\n      AUTO_TRAN:[''],\n\n    })\n  }\n\n  getBranch() {\n    this.schemeedit = null\n    this.ngfromac = null\n    this.ngtoac = null\n    \n  }\n  schemechange(event) {\n\n    this.getschemename = event.name\n    this.schemeedit = event.value\n    this.getIntroducer()\n\n\n  }\n  obj: any\n  getschemename: any\n\n\n  //get account no according scheme for introducer\n\n  getIntroducer() {\n    this.obj = [this.schemeedit, this.ngBranchCode]\n    switch (this.getschemename) {\n      case 'SB':\n        this.schemeAccountNoService.getSavingSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data;\n          this.ToAC = data\n        })\n        break;\n        case 'SH':\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data;\n          this.ToAC = data\n        })\n        break;\n        case 'CA':\n        this.schemeAccountNoService.getCurrentAccountSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data;\n          this.ToAC = data\n        })\n        break;\n\n      case 'CC':\n\n        this.schemeAccountNoService.getCashCreditSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data;\n          this.ToAC = data\n\n        })\n        break;\n        case 'TD':\n        this.schemeAccountNoService.getTermDepositSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data;\n          this.ToAC = data\n        })\n        break;\n        case 'DS':\n        this.schemeAccountNoService.getDisputeLoanSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data;\n          this.ToAC = data\n        })\n        break;\n        case 'GS':\n        this.schemeAccountNoService.getAnamatSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data;\n          this.ToAC = data\n        })\n        break;\n        case 'PG':\n        this.schemeAccountNoService.getPigmyAccountSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data;\n          this.ToAC = data\n        })\n        break;\n\n      case 'LN':\n\n        this.schemeAccountNoService.getTermLoanSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data;\n          this.ToAC = data\n\n\n        })\n        break;\n        case 'AG':\n        this.schemeAccountNoService.getPigmyAgentSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data;\n          this.ToAC = data\n        })\n        break;\n        case 'IV':\n        this.schemeAccountNoService.getInvestmentSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.fromAC = data;\n          this.ToAC = data\n        })\n        break;\n        case 'GL':\n          this.schemeAccountNoService.getGeneralLedgerList1(this.obj).pipe(first()).subscribe(data => {\n            this.fromAC = data;\n          this.ToAC = data\n          })\n          break;\n    }\n  }\n\n  //decimal content show purpose wrote below function\n  decimalAllContent($event) {\n    let value = Number($event.target.value);\n    let data = value.toFixed(2);\n    $event.target.value = data;\n  }\n\n  select(){\n    if (this.angForm.controls['FROM_AC'].value < this.angForm.controls['TO_AC'].value) {\n      Swal.fire(\"To Account Number Must Be Greater Than From Account Number\");\n     \n     \n    }\n  }\n  \n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>OverDraft Interest Posting</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\n                            class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" (change)=\"getBranch()\"\n                                        placeholder=\"Branch\">\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Code<sub class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-4\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"schemeedit\"\n                                 formControlName=\"AC_TYPE\" bindLabel=\"label\" (change)=\"schemechange($event)\"\n                                title=\"Compulsory Selection\" required placeholder=\"Scheme Code\">\n                                <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                    {{values.label}}</ng-option>\n                            </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_AC\">From Account Number<sub class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-4\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"FROM_AC\" bindValue=\"value\" [(ngModel)]=\"ngfromac\" (change)=\"select()\"\n                                        formControlName=\"FROM_AC\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"From A/C\">\n                                        <ng-option *ngFor=\"let values of fromAC\" [value]=\"values\">\n                                            {{values.label}} {{values.name}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['FROM_AC'].invalid && (angForm.controls['FROM_AC'].dirty || angForm.controls['FROM_AC'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['FROM_AC'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_AC\">To Account Number<sub class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-4\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"TO_AC\" bindValue=\"value\" [(ngModel)]=\"ngtoac\" formControlName=\"TO_AC\"\n                                    bindLabel=\"label\" title=\"Compulsory Selection\" (change)=\"select()\"\n                                    [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"To A/C\">\n                                    <ng-option *ngFor=\"let values of ToAC\" [value]=\"values\">\n                                        {{values.label}} {{values.name}}</ng-option>\n                                </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['TO_AC'].invalid && (angForm.controls['TO_AC'].dirty || angForm.controls['TO_AC'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['TO_AC'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"CAL_DATE\">Calculation Upto Date<sub\n                            class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-4\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"CAL_DATE\" id=\"CAL_DATE\"\n                                        class=\"form-control\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\n                                        [maxDate]=\"maxDate\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                        formControlName=\"CAL_DATE\" bsDatepicker required>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['CAL_DATE'].invalid && (angForm.controls['CAL_DATE'].dirty || angForm.controls['CAL_DATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['CAL_DATE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"GL_ACNO\">GL Account Number<sub class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-4\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"GL_ACNO\" bindValue=\"value\" [(ngModel)]=\"ngGlAC\"\n                                        formControlName=\"GL_ACNO\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" placeholder=\"GL Account Number\">\n                                        <ng-option *ngFor=\"let values of GLACNooption\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['GL_ACNO'].invalid && (angForm.controls['GL_ACNO'].dirty || angForm.controls['GL_ACNO'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['GL_ACNO'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"><label for=\"TOTAL_CHARGE\">Total Charges</label></div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" style=\"text-align: right;\" name=\"TOTAL_CHARGE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\n                                        class=\"form-control\" placeholder=\" \" id=\"TOTAL_CHARGE\" value=\"\"\n                                        maxlength=\"15\" (focusout)=\"decimalAllContent($event)\"\n                                        title=\"Input allowed only   0-9\" required\n                                        formControlName=\"TOTAL_CHARGE\">\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2  \"><label for=\"PARTICULAR\">Particulars</label></div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"PARTICULAR\" class=\"form-control\"\n                                        placeholder=\" \" id=\"PARTICULAR\" \n                                        (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) ||($event.charCode >= 48 && $event.charCode < 58) || ($event.charCode <= 32)\"\n                                        \n                                        title=\"Input allowed only  A-Z a-z 0-9 - / . (Space)\"\n                                        formControlName=\"PARTICULAR\">\n                                </span>\n                            </div>\n                            \n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"checkbox checkbox-primary\">\n                                <div class=\"border-checkbox-group\n                                    border-checkbox-group-primary\">\n                                  <input class=\"border-checkbox\" type=\"checkbox\" id=\"AUTO_TRAN\"\n                                    formControlName=\"AUTO_TRAN\" />\n                                  <label class=\"border-checkbox-label\" for=\"AUTO_TRAN\">Auto Transactions Passing?</label>\n                                </div>\n                            </div>\n                            <button class=\"btn btn-outline-primary btn-sm\">Posting</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payrolldatatransfer',\n  templateUrl: './payrolldatatransfer.component.html',\n  styleUrls: ['./payrolldatatransfer.component.scss']\n})\nexport class PayrolldatatransferComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>9.Payroll Data Transfer</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payrollexportfileprocess',\n  templateUrl: './payrollexportfileprocess.component.html',\n  styleUrls: ['./payrollexportfileprocess.component.scss']\n})\nexport class PayrollexportfileprocessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>8.Payroll Export File Process</p>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgSelectConfig } from '@ng-select/ng-select';\nimport { first } from 'rxjs/operators';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-penal-interest-calculation',\n  templateUrl: './penal-interest-calculation.component.html',\n  styleUrls: ['./penal-interest-calculation.component.scss']\n})\nexport class PenalInterestCalculationComponent implements OnInit {\n  formSubmitted = false;\n  //api\n  url = environment.base_url;\n\n  // Formgroup variable\n  angForm: FormGroup;\n\n  // dropdown variaqbles\n  branch_code: any;\n  ngBranchCode:any=null\n  ngscheme:any=null\n  scheme: any[];\n\n  constructor(\n    private fb: FormBuilder, private http: HttpClient,\n    private ownbranchMasterService: OwnbranchMasterService,\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\n    \n    private config: NgSelectConfig,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.createForm();\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branch_code = data;\n      this.ngBranchCode = data[0].value\n\n    })\n    this.schemeCodeDropdownService.getAllSchemeList1().pipe(first()).subscribe(data => {\n      var allscheme = data.filter(function (scheme) {\n        return (scheme.name == 'CC' || scheme.name == 'SB'|| scheme.name == 'TD'|| scheme.name == 'LN'|| scheme.name == 'CA');\n      });\n      this.scheme = allscheme;\n    })\n   \n\n  }\n\n  createForm(){\n\n    this.angForm = this.fb.group({\n      BRANCH_CODE: ['', [Validators.required]],\n      AC_TYPE: ['', [Validators.required]],\n    })\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Penal Interest Calculation</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\n                            class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" \n                                        placeholder=\"Branch\">\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme<sub\n                            class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\n                                        placeholder=\"Scheme\">\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-outline-primary btn-sm\">Process</button>\n                        </div>\n                    </div>\n                </div>\n\n            </form>\n        </div>\n    </div>\n</div>","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { ProcessACMComponent } from './process-acm.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProcessACMComponent,\n    data: {\n      title: 'Process And Calculation Menu',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProcessACMRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-process-acm',\n  templateUrl: './process-acm.component.html',\n  styleUrls: ['./process-acm.component.scss']\n})\nexport class ProcessACMComponent implements OnInit {\n  NPAProcess = true;\n  NPAMarking = false;\n  NPAProcessLocking = false;\n  DeadStockDepreciation = false;\n  OverdraftInterestPosting = false;\n  PenalInterestCalculation = false;\n  TransferToGLbyClosingAC = false;\n  payrollexportfileprocess = false;\n  payrolldatatransfer = false;\n  ChargesPosting=false;\n\n\n  dtExportButtonOptions : any = {};\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/datatable-data.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\">Edit</button>' + ' ' + '<button class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n        title: 'Name',\n        data: 'name'\n      }, {\n        title: 'Position',\n        data: 'position'\n      }, {\n        title: 'Office',\n        data: 'office'\n      }, {\n        title: 'Age',\n        data: 'age'\n      }, {\n        title: 'Start Date',\n        data: 'date'\n      }, {\n        title: 'Salary',\n        data: 'salary'\n      }],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ]\n    };\n  }\n\n  OpenLink(val) {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n    // \n    if (val == 1) {\n      this.NPAProcess = true;\n      this.NPAMarking = false;\n      this.NPAProcessLocking = false;\n      this.DeadStockDepreciation = false;\n      this.OverdraftInterestPosting = false;\n      this.PenalInterestCalculation = false;\n      this.TransferToGLbyClosingAC = false;\n      this.payrollexportfileprocess = false;\n      this.payrolldatatransfer = false;\n      this.ChargesPosting=false;\n        \n      }\n    if (val == 2) {\n      this.NPAProcess = false;\n      this.NPAMarking = true;\n      this.NPAProcessLocking = false;\n      this.DeadStockDepreciation = false;\n      this.OverdraftInterestPosting = false;\n      this.PenalInterestCalculation = false;\n      this.TransferToGLbyClosingAC = false;\n      this.payrollexportfileprocess = false;\n      this.payrolldatatransfer = false;\n      this.ChargesPosting=false;\n    }\n    if (val == 3) {\n      this.NPAProcess = false;\n      this.NPAMarking = false;\n      this.NPAProcessLocking = true;\n      this.DeadStockDepreciation = false;\n      this.OverdraftInterestPosting = false;\n      this.PenalInterestCalculation = false;\n      this.TransferToGLbyClosingAC = false;\n      this.payrollexportfileprocess = false;\n      this.payrolldatatransfer = false;\n      this.ChargesPosting=false;\n\n    }\n    if (val == 4) {\n      this.NPAProcess = false;\n      this.NPAMarking = false;\n      this.NPAProcessLocking = false;\n      this.DeadStockDepreciation = true;\n      this.OverdraftInterestPosting = false;\n      this.PenalInterestCalculation = false;\n      this.TransferToGLbyClosingAC = false;\n      this.payrollexportfileprocess = false;\n      this.payrolldatatransfer = false;\n      this.ChargesPosting=false;\n    }\n    if (val == 5) {\n      this.NPAProcess = false;\n      this.NPAMarking = false;\n      this.NPAProcessLocking = false;\n      this.DeadStockDepreciation = false;\n      this.OverdraftInterestPosting = true;\n      this.PenalInterestCalculation = false;\n      this.TransferToGLbyClosingAC = false;\n      this.payrollexportfileprocess = false;\n      this.payrolldatatransfer = false;\n      this.ChargesPosting=false;\n\n    }\n    if (val == 6) {\n      this.NPAProcess = false;\n      this.NPAMarking = false;\n      this.NPAProcessLocking = false;\n      this.DeadStockDepreciation = false;\n      this.OverdraftInterestPosting = false;\n      this.PenalInterestCalculation = true;\n      this.TransferToGLbyClosingAC = false;\n      this.payrollexportfileprocess = false;\n      this.payrolldatatransfer = false;\n      this.ChargesPosting=false;\n    }\n    if (val == 7) {\n      this.NPAProcess = false;\n      this.NPAMarking = false;\n      this.NPAProcessLocking = false;\n      this.DeadStockDepreciation = false;\n      this.OverdraftInterestPosting = false;\n      this.PenalInterestCalculation = false;\n      this.TransferToGLbyClosingAC = true;\n      this.payrollexportfileprocess = false;\n      this.payrolldatatransfer = false;\n      this.ChargesPosting=false;\n\n    }\n    if (val == 8) {\n      this.NPAProcess = false;\n      this.NPAMarking = false;\n      this.NPAProcessLocking = false;\n      this.DeadStockDepreciation = false;\n      this.OverdraftInterestPosting = false;\n      this.PenalInterestCalculation = false;\n      this.TransferToGLbyClosingAC = false;\n      this.payrollexportfileprocess = true;\n      this.payrolldatatransfer = false;\n      this.ChargesPosting=false;\n      \n\n    }\n    if (val == 9) {\n      this.NPAProcess = false;\n      this.NPAMarking = false;\n      this.NPAProcessLocking = false;\n      this.DeadStockDepreciation = false;\n      this.OverdraftInterestPosting = false;\n      this.PenalInterestCalculation = false;\n      this.TransferToGLbyClosingAC = false;\n      this.payrollexportfileprocess = false;\n      this.payrolldatatransfer = true;\n      this.ChargesPosting=false;\n\n    }\n    if (val == 10) {\n      this.NPAProcess = false;\n      this.NPAMarking = false;\n      this.NPAProcessLocking = false;\n      this.DeadStockDepreciation = false;\n      this.OverdraftInterestPosting = false;\n      this.PenalInterestCalculation = false;\n      this.TransferToGLbyClosingAC = false;\n      this.payrollexportfileprocess = false;\n      this.payrolldatatransfer = false;\n      this.ChargesPosting=true;\n  \n    }\n  }\n}\n","\n<div class=\"row\">\n    <div class=\"col-sm-3\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Process Options</h5>\n            </div>\n            <div class=\"card-block\">\n                <div class=\"col-md-12\">\n                    <perfect-scrollbar style=\"max-width: 600px; max-height: 450px;\">\n\n                        <ul class=\"basic-list\">\n                            <li>\n                                <h6> <a (click)=\"OpenLink(1)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': NPAProcess}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">1. NPA Process</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(2)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': NPAMarking}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">2. NPA Marking</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(3)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': NPAProcessLocking}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">3. NPA Process Locking</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(4)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': DeadStockDepreciation}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">4. Dead Stock Depreciation</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(5)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': OverdraftInterestPosting}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">5.Overdraft Interest Posting (On Debit Bal. only)</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(6)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': PenalInterestCalculation}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">6. Penal Interest Calculation</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(7)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': TransferToGLbyClosingAC}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">7. Transfer To GL by Closing A/c</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(8)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': payrollexportfileprocess}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">8.Payroll Export File Process</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(9)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': payrolldatatransfer}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">9.Payroll Data Transfer</a></h6>\n                            </li> \n                            <li>\n                                <h6> <a (click)=\"OpenLink(10)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': ChargesPosting}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">10.Charges Posting</a></h6>\n                            </li> \n                      \n                           \n                        </ul>\n                    </perfect-scrollbar>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-sm-9\">\n        <div class=\"card-block\">\n            <div *ngIf=\"NPAProcess\">\n                <app-npaprocess></app-npaprocess>\n            </div>\n            <div *ngIf=\"NPAMarking\">\n                <app-npamarking></app-npamarking>\n            </div>\n            <div *ngIf=\"NPAProcessLocking\">\n                <app-npaprocess-locking></app-npaprocess-locking>\n            </div>\n            <div *ngIf=\"DeadStockDepreciation\">\n                <app-dead-stock-depreciation></app-dead-stock-depreciation>\n            </div>\n            <div *ngIf=\"OverdraftInterestPosting\">\n                <app-overdraft-interest-posting></app-overdraft-interest-posting>\n            </div>\n            <div *ngIf=\"PenalInterestCalculation\">\n                <app-penal-interest-calculation></app-penal-interest-calculation>\n            </div>\n            <div *ngIf=\"TransferToGLbyClosingAC \">\n                <app-transfer-to-glby-closing-ac></app-transfer-to-glby-closing-ac>\n            </div>\n            <div *ngIf=\"payrollexportfileprocess\">\n                <app-payrollexportfileprocess></app-payrollexportfileprocess>\n            </div>\n            <div *ngIf=\"payrolldatatransfer\">\n                <app-payrolldatatransfer></app-payrolldatatransfer>\n            </div>\n            <div *ngIf=\"ChargesPosting\">\n                <app-charges-posting></app-charges-posting>\n            </div>\n          \n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ProcessACMComponent } from './process-acm.component';\nimport { ProcessACMRoutingModule } from './process-acm-routing.module';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {DataTablesModule} from 'angular-datatables';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { NPAProcessComponent } from './npaprocess/npaprocess.component';\nimport { NPAMarkingComponent } from './npamarking/npamarking.component';\nimport { NPAProcessLockingComponent } from './npaprocess-locking/npaprocess-locking.component';\nimport { DeadStockDepreciationComponent } from './dead-stock-depreciation/dead-stock-depreciation.component';\nimport { OverdraftInterestPostingComponent } from './overdraft-interest-posting/overdraft-interest-posting.component';\nimport { PenalInterestCalculationComponent } from './penal-interest-calculation/penal-interest-calculation.component';\nimport { TransferToGLbyClosingACComponent } from './transfer-to-glby-closing-ac/transfer-to-glby-closing-ac.component';\nimport { PayrolldatatransferComponent } from './payrolldatatransfer/payrolldatatransfer.component';\nimport { PayrollexportfileprocessComponent } from './payrollexportfileprocess/payrollexportfileprocess.component';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { ACMasterDropdownService } from 'src/app/shared/dropdownService/ac-master-dropdown.service';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { ChargesPostingComponent } from './charges-posting/charges-posting.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ProcessACMRoutingModule,\n    SharedModule,\n    FormsModule,\n    NgSelectModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot()\n  ],\n  declarations: [\n    ProcessACMComponent,\n    NPAProcessComponent,\n    NPAMarkingComponent,\n    NPAProcessLockingComponent, \n    DeadStockDepreciationComponent, \n    OverdraftInterestPostingComponent, \n    PenalInterestCalculationComponent, \n    TransferToGLbyClosingACComponent,\n    PayrolldatatransferComponent, \n    PayrollexportfileprocessComponent, ChargesPostingComponent],\n  providers:[OwnbranchMasterService,SchemeCodeDropdownService,ACMasterDropdownService,SchemeAccountNoService,{\n    provide: HTTP_INTERCEPTORS,\n    useClass: UserAuthInterceptor,\n    multi: true\n  },]\n})\nexport class ProcessACMModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { NgSelectConfig } from '@ng-select/ng-select';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { ACMasterDropdownService } from 'src/app/shared/dropdownService/ac-master-dropdown.service';\nimport Swal from 'sweetalert2';\nimport * as moment from 'moment';\n@Component({\n  selector: 'app-transfer-to-glby-closing-ac',\n  templateUrl: './transfer-to-glby-closing-ac.component.html',\n  styleUrls: ['./transfer-to-glby-closing-ac.component.scss']\n})\nexport class TransferToGLbyClosingACComponent implements OnInit {\n\n  // variable for validation\n  formSubmitted = false;\n  // Created Form Group\n  angForm: FormGroup;\n\n  // dropdown variables\n  scheme\n  ngscheme: any = null\n  ngBranchCode: any = null\n  glaccount: any = null;\n  schemeACNo: any[];\n  branch_code: any[];\n  schemeedit: any;\n  ACMasterDropdown: any[];\n\n  totalCharges: any = null\n  // Date variables\n  todate: any = null;\n  fromdate:any=null\n  maxDate: any;\n  minDate: any;\n  bsValue = new Date();\n  // variables for button\n  showButton: boolean =true;\n  updateShow: boolean;\n  newbtnShow: boolean;\n  constructor(\n    private fb: FormBuilder,\n    private config: NgSelectConfig,\n    private ownbranchMasterService: OwnbranchMasterService,\n    private schemeAccountNoService: SchemeAccountNoService,\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\n    public ACMasterDropdownService: ACMasterDropdownService,\n  ) {\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n  }\n\n  ngOnInit(): void {\n    this.createForm()\n\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branch_code = data;\n      this.ngBranchCode = data[0].value\n    })\n    this.schemeCodeDropdownService.getAllSchemeList1().pipe(first()).subscribe(data => {\n      var allscheme = data.filter(function (scheme) {\n        return (scheme.name == 'GS' || scheme.name == 'SH');\n      });\n      this.scheme = allscheme;\n    })\n\n  }\n  getACmastercode(event){\n    console.log(event)\n   \n    this.ACMasterDropdownService.getACMasterList().pipe(first()).subscribe(data => {\n      this.ACMasterDropdown = data;\n    })\n  }\n  // Method to handle validation of form\n  createForm() {\n    this.angForm = this.fb.group({\n      BRANCH_CODE: ['', [Validators.required]],\n      AC_TYPE: ['', [Validators.required]],\n      FROM_DATE: ['', [Validators.required]],\n      TO_DATE: ['', [Validators.required]],\n      GL_AC: [''],\n      TOTAL_CHARGES:[''],\n      PARTICULAR:[''],\n      TRAN_PASSING:[''],\n    })\n  }\n  getBranch() {\n\n    this.getIntroducer()\n  }\n  schemechange(event) {\n    this.getschemename = event.name\n    this.schemeedit = event.value\n    this.getIntroducer()\n  }\n  obj: any\n  getschemename: any\n  //get account no according scheme for introducer\n  getIntroducer() {\n    this.obj = [this.schemeedit, this.ngBranchCode]\n    switch (this.getschemename) {\n   \n      case 'SH':\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.schemeACNo = data;\n        })\n        break;\n      case 'GS':\n        this.schemeAccountNoService.getAnamatSchemeList1(this.obj).pipe(first()).subscribe(data => {\n          this.schemeACNo = data;\n        })\n        break\n    }\n  }\n    \n  // checking date \n  counter = 0;\n  checkDate(event){\n\n    this.counter = this.counter+1;\n    if(this.counter>2 && event.length!=0){\n      let value1\n    let value2\n    value1 = moment(this.fromdate).format('DD/MM/YYYY');\n    // console.log(value1)\n    value2 = moment(this.todate).format('DD/MM/YYYY');\n    // console.log(value2)\n    if(moment(value1).isSame(value2)){\n      Swal.fire(\"from date should not be same as to date\")\n      this.angForm.controls['TO_DATE'].reset()\n    }\n    }\n    \n  } \n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Transfer To GL by Closing A/c</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\n                                    class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" \n                                        placeholder=\"Branch\">\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme<sub\n                                    class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\n                                        (change)=\"schemechange($event)\"  (change)=\"getACmastercode($event)\"placeholder=\"Scheme\">\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"GL_AC\">GL Account<sub class=\"required\">*</sub></label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select id=\"GL_AC\" bindValue=\"value\" [(ngModel)]=\"schemeedit\"\n                                (change)=\"schemechange($event)\" formControlName=\"GL_AC\" bindLabel=\"label\"\n                                title=\"Compulsory Selection\" required placeholder=\"GL Account Code\">\n                                <ng-option *ngFor=\"let values of ACMasterDropdown\" [value]=\"values\">\n                                    {{values.label}}</ng-option>\n                            </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['GL_AC'].invalid && (angForm.controls['GL_AC'].dirty || angForm.controls['GL_AC'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['GL_AC'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_DATE\">From Date</label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"FROM_DATE\" id=\"FROM_DATE\"\n                                        class=\"form-control\" [(ngModel)]=\"fromdate\" [bsValue]=\"bsValue\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" \n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"FROM_DATE\" [maxDate]=\"maxDate\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        bsDatepicker >\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['FROM_DATE'].invalid && (angForm.controls['FROM_DATE'].dirty || angForm.controls['FROM_DATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['FROM_DATE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_DATE\">To Date</label></div>\n                        <div class=\"col-sm-12 col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TO_DATE\" id=\"TO_DATE\"\n                                        class=\"form-control\" [(ngModel)]=\"todate\"  (bsValueChange)=\"checkDate($event)\"\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"  [minDate]=\"fromdate\"\n                                        [bsValue]=\"bsValue\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TO_DATE\"\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                        bsDatepicker>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['TO_DATE'].invalid && (angForm.controls['TO_DATE'].dirty || angForm.controls['TO_DATE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['TO_DATE'].errors?.required\">\n                                    This field is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-2  \"><label for=\"TOTAL_CHARGES\">Total Charges</label>\n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\"  style=\"text-align: right;\" name=\"TOTAL_CHARGES\" class=\"form-control\"\n                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\n                                        placeholder=\" \" id=\"TOTAL_CHARGES\" [(ngModel)]=\"totalCharges\"\n                                        title=\"Input allowed only  0-9 - / . (Space)\" required\n                                        formControlName=\"TOTAL_CHARGES\">\n                                </span>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div class=\"row\">\n                    <div class=\"col-sm-12 col-md-2  \"><label for=\"PARTICULAR\">Particulars</label>\n                    </div>\n                    <div class=\"col-md-5\">\n                        <div class=\"form-group input-group\">\n                            <span class=\"border-lable-flt\">\n                                <input type=\"text\" name=\"PARTICULAR\" class=\"form-control\"\n                                    placeholder=\" \" id=\"PARTICULAR\" \n                                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) ||($event.charCode >= 48 && $event.charCode < 58) || ($event.charCode <= 32)\"\n                                    style=\"text-transform: capitalize;font-size: 15px;\"\n                                    title=\"Input allowed only  A-Z a-z 0-9 - / . (Space)\"\n                                    formControlName=\"PARTICULAR\">\n                            </span>\n                        </div>\n                        <div class=\"form-group form-primary form-static-label\"\n                        *ngIf=\"angForm.controls['PARTICULAR'].invalid && (angForm.controls['GL_AC'].dirty || angForm.controls['GL_AC'].touched)\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"angForm.controls['PARTICULAR'].errors?.required\">\n                            This field is required.\n                        </div>\n                    </div>\n                    </div>\n                        <div class=\"col-sm-12 col-md-4\">\n                            <div class=\"checkbox checkbox-primary\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input type=\"checkbox\" class=\"border-checkbox\" id=\"TRAN_PASSING\"\n                                        formControlName=\"TRAN_PASSING\">\n                                    <label class=\"border-checkbox-label\" for=\"TRAN_PASSING\">Auto Transactions Passing\n                                        ?</label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12\">\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\">Posting</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}