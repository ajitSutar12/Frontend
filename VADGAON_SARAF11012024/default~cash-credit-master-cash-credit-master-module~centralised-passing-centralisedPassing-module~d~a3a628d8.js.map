{"version":3,"sources":["./src/app/shared/dropdownService/authority-master-dropdown.service.ts","./src/app/shared/dropdownService/customer-id-master-dropdown.service.ts","./src/app/shared/dropdownService/director-master-dropdown.service.ts","./src/app/shared/dropdownService/health-master-dropdown.service.ts","./src/app/shared/dropdownService/industry-master-dropdown.service.ts","./src/app/shared/dropdownService/installment-method.service.ts","./src/app/shared/dropdownService/interest-category-master-dropdown.service.ts","./src/app/shared/dropdownService/priority-sector-master-dropdown.service.ts","./src/app/shared/dropdownService/purpose-master-dropdown.service.ts","./src/app/shared/dropdownService/weaker-master-dropdown.service.ts"],"names":[],"mappings":"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","file":"default~cash-credit-master-cash-credit-master-module~centralised-passing-centralisedPassing-module~d~a3a628d8.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable()\nexport class AuthorityMasterDropdownService {\n\n    // // authority-master\";\n    url = environment.base_url;\n    authorityMasterObject = new Array();\n\n    constructor(private http: HttpClient) { }\n\n    public getAuthorityMasterList() {\n        this.authorityMasterObject = [];\n        return this.http.get<any>(this.url + '/authority-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id};\n                    this.authorityMasterObject.push(obj)\n                });\n                return this.authorityMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable()\nexport class CustomerIDMasterDropdownService {\n    loadCharacters() {\n        throw new Error('Method not implemented.');\n    }\n\n    url = environment.base_url;\n    customerIDMasterObject = new Array();\n\n    constructor(private http: HttpClient) { }\n\n    public getCustomerIDMasterList() {\n        this.customerIDMasterObject = [];\n        return this.http.get<any>(this.url + '/customer-id')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    // let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME, value: element.id, name: element.AC_NO };\n                    this.customerIDMasterObject.push(obj)\n                });\n                return this.customerIDMasterObject;\n            }));\n    }\n}","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class DirectorMasterDropdownService {\n\n    //  // director-master\";\n    url = environment.base_url;\n    directorMasterObject = new Array();\n    directorObject = new Array();\n\n    constructor(private http: HttpClient) { }\n\n    public getDirectorMasterList() {\n        this.directorMasterObject = []\n        return this.http.get<any>(this.url + '/director-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id, name:element.IS_CURRENT_BODY_MEMBER };\n                    this.directorMasterObject.push(obj)\n                });\n                return this.directorMasterObject;\n            }));\n    }\n\n    public getDirectorMastertrueList() {\n        this.directorObject = []\n        return this.http.get<any>(this.url + '/director-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                \n                    if(element.IS_CURRENT_BODY_MEMBER == true){\n                        let obj = { label: element.NAME, value: element.id};\n                        this.directorObject.push(obj)\n                    }\n                   \n                });\n                return this.directorObject;\n            }));\n\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class HealthMasterDropdownService {\n    healthMasterObject = new Array();\n    // url = 'http://localhost:4000/health-master';\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n    public getHealthMasterList() {\n        this.healthMasterObject = []\n        return this.http.get<any>(this.url + '/health-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id};\n                    this.healthMasterObject.push(obj)\n                });\n                return this.healthMasterObject;\n            }));\n    }\n\n\n}","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class IndustryMasterDropdownService {\n    industryMasterObject = new Array();\n    // url = 'http://localhost:4000/industry-master';\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n    public getIndustaryMasterList() {\n        this.industryMasterObject = []\n        return this.http.get<any>(this.url + '/industry-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id };\n                    this.industryMasterObject.push(obj)\n                });\n                return this.industryMasterObject;\n            }));\n    }\n\n\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class InstallmentMethodService {\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: '1', label: 'EMI' },\n        // { value: '2', label: 'Reducing' },\n        { value: '2', label: 'Plain' },\n        { value: '3', label: 'With Interest' }\n    ];\n    public static readonly PLAYER_TWO: Array<IOption> = [\n        { value: 'E', label: 'EMI' },\n        { value: 'R', label: 'Reducing' },\n        { value: 'I', label: 'Plain' },\n        { value: 'Null', label: 'With Interest' }\n    ];\n\n\n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(InstallmentMethodService.PLAYER_ONE);\n    }\n\n    getPLAYER_TWOCharacters(): Array<IOption> {\n        return this.cloneOptions(InstallmentMethodService.PLAYER_TWO);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(InstallmentMethodService.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(InstallmentMethodService.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class IntrestCategoryMasterDropdownService {\n    intrestCategoryMasterObject = new Array();\n    // url = 'http://localhost:4000/interest-category-master';\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n    public getIntrestCategoaryMasterList() {\n        this.intrestCategoryMasterObject = []\n        return this.http.get<any>(this.url + '/interest-category-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id, name:  element.CODE, scheme:element.ACNOTYPE };\n                    this.intrestCategoryMasterObject.push(obj)\n                });\n                return this.intrestCategoryMasterObject;\n            }));\n    }\n\n\n}","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class PrioritySectorMasterDropdownService {\n\n    // // priority-sector-master\";\n    url = environment.base_url;\n    prioritysectorMasterObject = new Array();\n\n    constructor(private http: HttpClient) { }\n\n    public getPrioritySectorMasterList() {\n        this.prioritysectorMasterObject = []\n        return this.http.get<any>(this.url + '/priority-sector-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id };\n                    this.prioritysectorMasterObject.push(obj)\n                });\n                return this.prioritysectorMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class PurposeMasterDropdownService {\n\n    // // purpose-master\";\n    url = environment.base_url;\n    purposeMasterObject = new Array();\n\n    constructor(private http: HttpClient) { }\n\n    public getPurposeMasterList() {\n        this.purposeMasterObject = []\n        return this.http.get<any>(this.url + '/purpose-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id };\n                    this.purposeMasterObject.push(obj)\n                });\n                return this.purposeMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable()\nexport class WeakerMasterDropdownService {\n    weakerMasterObject = new Array();\n    // url = 'http://localhost:4000/weaker-master';\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n    public getWeakerMasterList() {\n        this.weakerMasterObject = []\n        return this.http.get<any>(this.url + '/weaker-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id };\n                    this.weakerMasterObject.push(obj)\n                });\n                return this.weakerMasterObject;\n            }));\n    }\n\n\n}"],"sourceRoot":"webpack:///"}