{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/theme/master/customer/dead-stock-master/dead-stock-master.service.ts","./src/app/theme/reports/balance-book/bnk-sub-summary/bnk-sub-summary-routing.module.ts","./src/app/theme/reports/balance-book/bnk-sub-summary/bnk-sub-summary.component.ts","./src/app/theme/reports/balance-book/bnk-sub-summary/bnk-sub-summary.component.html","./src/app/theme/reports/balance-book/bnk-sub-summary/bnk-sub-summary.module.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"bnk-sub-summary-bnk-sub-summary-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n\n@Injectable()\nexport class DeadstockmasterService {\n    // Variable for handleError\n    [x: string]: any;\n\n    // API  \n    //url = \"http://localhost:4000/dead-stock-master\";\n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    //Insertion Operation\n    postData(data: any): Observable<any> {\n        return this.http.post(this.url + '/dead-stock-master/insert', data).pipe(map((res) => res),\n            catchError((error) => {\n                Swal.fire('Please Input Proper Data!');\n                return throwError(error);\n            })\n        )\n    }\n    // For append data\n    getFormData(id: any): Observable<any> {\n        return this.http.get(this.url + '/dead-stock-master/' + id).pipe(catchError(this.handleError));\n    }\n    //Updation Operation\n    updateData(data): Observable<any> {\n        return this.http.put(this.url + '/dead-stock-master/update', data);\n    }\n    //Deletion Operation\n    deleteData(id: any): Observable<any> {\n        return this.http.delete(this.url + '/dead-stock-master/delete/' + id).pipe(catchError(this.handleError));\n    }\n    castObject = []\n    obj = {}\n    public getDeadstockList() {\n        return this.http.get<any>(this.url + '/dead-stock-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.ITEM_NAME, value: element.id };\n                    this.castObject.push(obj)\n                });\n                return this.castObject;\n            }));\n    }\n\n    //approve master\n    approve(data: any): Observable<any> {\n        return this.http.post(this.url + '/dead-stock-master/approve', data).pipe(catchError(this.handleError));\n    }\n    //unapporve master\n    unapporve(data: any): Observable<any> {\n        return this.http.post(this.url + '/dead-stock-master/unapporve', data).pipe(catchError(this.handleError));\n    }\n\n\n    //reject master\n    reject(data: any): Observable<any> {\n        return this.http.post(this.url + '/dead-stock-master/reject', data).pipe(catchError(this.handleError));\n    }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BnkSubSummaryComponent } from './bnk-sub-summary.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component:  BnkSubSummaryComponent,\n    data: {\n      title: 'Subsidiary Summary',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BnkSubSummaryRoutingModule { }\n","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { OwnbranchMasterService } from \"src/app/shared/dropdownService/own-branch-master-dropdown.service\";\nimport{DeadstockmasterService} from 'src/app/theme/master/customer/dead-stock-master/dead-stock-master.service';\nimport { first } from 'rxjs/operators';\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\nimport { ReportFrameComponent } from \"../../report-frame/report-frame.component\";\nimport { environment } from \"src/environments/environment\";\nimport { DomSanitizer} from '@angular/platform-browser';\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: 'app-bnk-sub-summary',\n  templateUrl: './bnk-sub-summary.component.html',\n  styleUrls: ['./bnk-sub-summary.component.scss'],\n  providers: [ OwnbranchMasterService,DeadstockmasterService]\n\n})\nexport class BnkSubSummaryComponent implements OnInit {\n  iframeurl:any='';\n  clicked:boolean=false;\n  @ViewChild(ReportFrameComponent ) child: ReportFrameComponent ; \nformSubmitted = false;\nshowRepo: boolean = false;\nurl = environment.base_url;\nreport_url = environment.report_url;\nshowLoading:boolean = false;\n \n  ngForm:FormGroup;\n// for dropdown ng module\n\nngbranch: any = null;\n//dropdown\nbranchOption: any[];\n//date\ndates: any = null\nmaxDate: Date;\n  minDate: Date;\n  constructor(\n    private fb: FormBuilder,\n    private _ownbranchmasterservice: OwnbranchMasterService,\n    private systemParameter:SystemMasterParametersService,\n    private sanitizer: DomSanitizer,\n    \n  ) {\n    this.dates = moment().format('DD/MM/YYYY');\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate())\n   }\n\n\n\n  createForm() {\n    this.ngForm = this.fb.group({\n      BRANCH_CODE: ['', [Validators.required]],\n    \n      // Starting_Account: ['', [Validators.required]],\n      // Ending_Account: ['', [Validators.required]],\n      date: ['', [Validators.required]],\n  \n    });\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    if (result.RoleDefine[0].Role.id == 1) {\n      this.ngbranch = result.branch.id\n      this.ngForm.controls['BRANCH_CODE'].enable()\n    }\n    else {\n      this.ngForm.controls['BRANCH_CODE'].disable()\n      this.ngbranch = result.branch.id\n    }\n    }\n  ngOnInit(): void {\n    this.createForm()\n    //branch list\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branchOption = data;\n    });\n    \n    this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\n      this.dates = data.CURRENT_DATE;\n    })\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    if (result.RoleDefine[0].Role.id == 1) {\n      this.ngbranch = result.branch.id\n      this.ngForm.controls['BRANCH_CODE'].enable()\n    }\n    else {\n      this.ngForm.controls['BRANCH_CODE'].disable()\n      this.ngbranch = result.branch.id\n    }\n  \n  }\n  view(event) {\n  \n    this.showLoading = true;\n\n    event.preventDefault();\n    this.formSubmitted = true;\n\n    let userData = JSON.parse(localStorage.getItem('user'));\n    let bankName = userData.branch.syspara.BANK_NAME;\n    let branchName = userData.branch.NAME;\n\n    if(this.ngForm.valid){\n\n   this.showRepo = true;\n    let obj = this.ngForm.value\n    let Date = moment(obj.date).format('DD/MM/YYYY');\n    \n    let branch = obj.BRANCH_CODE;\n    //  let startingcode= obj.Starting_Account;\n    // let endingcode =obj.Ending_Account;\n    \n\n   this.iframeurl=this.report_url+ \"examples/DeadstockBalanceList.php?Date='\" + Date + \"'&branch=\"+branch +\"&bankName=\" + bankName + \" \";\n   this.iframeurl=this.sanitizer.bypassSecurityTrustResourceUrl(this.iframeurl);\n  }\n  else {\n    Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(()=>{ this.clicked=false});\n  }\n  \n  }\n  close(){\n    this.resetForm()\n    }\n    resetForm() {\n      // this.createForm()\n      // this.ngForm.controls.BRANCH_CODE.reset();\n      // this.ngForm.controls.Starting_Account.reset();\n      // this.ngForm.controls.Ending_Account.reset();\n      this.showRepo = false;\n      this.clicked=false;\n    }\n    onLoad(){\n    this.showLoading = false;\n\n    }\n}\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Subsidiary Summary</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <div class=\"card\">\r\n                <form [formGroup]=\"ngForm\">\r\n                    <div class=\"card-block\">\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"Branch\">Branch <sub\r\n                                class=\"required\">*</sub></label></div>\r\n                                <div class=\"col-sm-12 col-md-2\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngbranch\"\r\n                                                formControlName=\"BRANCH_CODE\" bindLabel=\"label\" placeholder=\"Branch\">\r\n                                                <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                                    {{values.label}}</ng-option>\r\n                                            </ng-select>\r\n                                        </span>\r\n                                    </div>\r\n    \r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"ngForm.controls['BRANCH_CODE'].invalid && (ngForm.controls['BRANCH_CODE'].dirty || ngForm.controls['BRANCH_CODE'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div *ngIf=\"ngForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>   \r\n                                <div class=\"col-sm-12 col-md-2\"> <label for=\" Date\">Date<sub\r\n                                    class=\"required\">*</sub></label>\r\n                                 </div>\r\n                                 <div class=\"col-sm-12 col-md-2\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"Date\" id=\"Date\"\r\n                                                [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                                class=\"form-control\" [(ngModel)]=\"dates\" formControlName=\"date\"\r\n                                                (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                bsDatepicker>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"ngForm.controls['date'].invalid && (ngForm.controls['date'].dirty || ngForm.controls['date'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div\r\n                                            *ngIf=\"ngForm.controls['date'].errors?. maxlength || ngForm.controls['date'].errors?. minlength || ngForm.controls['date'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                        <div class=\"row\"></div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-9\"></div>\r\n                            <div class=\"col-md-2\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\r\n                                (click)=\"view($event); clicked = true \">View</button>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-1\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" (click)=\"close()\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        <h5>Report Frame</h5>\r\n                                    </div>\r\n                                    <div *ngIf=\"showRepo\">\r\n                                        <app-iframe [url]='iframeurl' (load)=\"onLoad()\"></app-iframe>\r\n                                      \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BnkSubSummaryRoutingModule } from './bnk-sub-summary-routing.module';\nimport { BnkSubSummaryComponent } from './bnk-sub-summary.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { SystemMasterParametersService } from \"../../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport{IframeModule} from '../iframe/iframe.module'\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true\n};\n\n@NgModule({\n  declarations: [BnkSubSummaryComponent],\n  imports: [\n    CommonModule,\n    BnkSubSummaryRoutingModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgSelectModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n    IframeModule\n  ],\n  providers: [\n    {\n\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n\n    },\n    SystemMasterParametersService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ]\n})\nexport class BnkSubSummaryModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n\n@Injectable()\nexport class SystemMasterParametersService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n  // url = \"http://localhost:4000/system-master-parameters\";\n  url = environment.base_url;\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\n      catchError((error) => {\n        let errorMessage = 'Please add valid length';\n        Swal.fire('Kindly Add Valid Length !');\n        return throwError(errorMessage);\n      })\n    )\n  }\n\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/system-master-parameters/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\n  }\n\n  getData(): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\n  }\n\n\n}\n\n\n"],"sourceRoot":"webpack:///"}