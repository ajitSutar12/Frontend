{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/theme/reports/daily-reports/bnk-expect-int-instruct-credit/bnk-expect-int-instruct-credit-routing.module.ts","./src/app/theme/reports/daily-reports/bnk-expect-int-instruct-credit/bnk-expect-int-instruct-credit.component.ts","./src/app/theme/reports/daily-reports/bnk-expect-int-instruct-credit/bnk-expect-int-instruct-credit.component.html","./src/app/theme/reports/daily-reports/bnk-expect-int-instruct-credit/bnk-expect-int-instruct-credit.module.ts","./src/app/theme/reports/daily-reports/iframe1/iframe1-routing.module.ts","./src/app/theme/reports/daily-reports/iframe1/iframe1.module.ts","./src/app/theme/reports/daily-reports/iframe1/iframe1/iframe1.component.ts","./src/app/theme/reports/daily-reports/iframe1/iframe1/iframe1.component.html"],"names":[],"mappings":"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","file":"bnk-expect-int-instruct-credit-bnk-expect-int-instruct-credit-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { BnkExpectIntInstructCreditComponent } from './bnk-expect-int-instruct-credit.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  BnkExpectIntInstructCreditComponent,\r\n    data: {\r\n      title: 'Interest (Expeted Credit)',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class  BnkExpectIntInstructCreditRoutingModule { }","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild, Input, Output, EventEmitter, ElementRef, } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\n// Creating and maintaining form fields with validation\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\n// Displaying Sweet Alert\r\nimport Swal from \"sweetalert2\";\r\n// Used to Call API\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Router } from \"@angular/router\";\r\nimport * as moment from 'moment';\r\nimport { environment } from \"src/environments/environment\";\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n// dropdown\r\nimport { OwnbranchMasterService } from \"src/app/shared/dropdownService/own-branch-master-dropdown.service\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-bnk-expect-int-instruct-credit',\r\n  templateUrl: './bnk-expect-int-instruct-credit.component.html',\r\n  styleUrls: ['./bnk-expect-int-instruct-credit.component.scss']\r\n})\r\nexport class BnkExpectIntInstructCreditComponent implements OnInit {\r\n  iframe1url: any = '';\r\n  clicked:boolean=false;\r\n  // Date variables\r\n\r\n  date: any = null\r\n  maxDate: Date;\r\n  minDate: Date;\r\n  bsValue = new Date();\r\n  formSubmitted = false;\r\n\r\n  showRepo: boolean = false;\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //api\r\n  url = environment.base_url;\r\n  report_url = environment.report_url;\r\n  //Dropdown option variable\r\n  ngbranch\r\n  branchOption: any;\r\n\r\n  //for Status\r\n  selectedType\r\n  Types = [\r\n    { id: 1, name: \"S\", value: \"Success\" },\r\n    { id: 2, name: \"F\", value: \"Failure\" },\r\n  ];\r\n\r\n\r\n  //for frequency\r\n  selectedFrequency\r\n  SortingFrequency = [\r\n    { id: 1, name: \"Monthly\" },\r\n    { id: 2, name: \"Querterly\" },\r\n    { id: 3, name: \"Fixed Querterly\" },\r\n    { id: 4, name: \"Half Yearly\" },\r\n    { id: 5, name: \"None\" },\r\n  ];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    public router: Router,\r\n    private sanitizer: DomSanitizer,\r\n    // dropdown\r\n    private _ownbranchmasterservice: OwnbranchMasterService,\r\n    private systemParameter : SystemMasterParametersService,\r\n  ) {\r\n    this.date = moment().format('DD/MM/YYYY');\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branchOption = data;\r\n    });\r\n\r\n    this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\r\n      this.date = data.CURRENT_DATE;\r\n    });\r\n\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    if (result.RoleDefine[0].Role.id == 1) {\r\n      this.ngbranch = result.branch.id\r\n      this.angForm.controls['BRANCH_CODE'].enable()\r\n    }\r\n    else {\r\n      this.angForm.controls['BRANCH_CODE'].disable()\r\n      this.ngbranch = result.branch.id\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      BRANCH_CODE: [\"\", [Validators.required]],\r\n      STATUS: [\"\", [Validators.required]],\r\n      Date: [\"\", [Validators.required]],\r\n      FREQUENCY: [\"\", [Validators.required]],\r\n      NEWPAGE: [\"\"],\r\n    });\r\n  }\r\n  src: any;\r\n\r\n  view(event) {\r\n\r\n    event.preventDefault();\r\n    this.formSubmitted = true;\r\n\r\n    let userData = JSON.parse(localStorage.getItem('user'));\r\n    let bankName = userData.branch.syspara.BANK_NAME;\r\n    let branchName = userData.branch.NAME;\r\n\r\n    if (this.angForm.valid) {\r\n\r\n      // this.showRepo = true;\r\n      let obj = this.angForm.value\r\n      // let date = this.date;\r\n\r\n      let date:any;\r\n      if (this.date == obj.Date) {\r\n        date = moment(this.date,'DD/MM/YYYY').format('DD/MM/YYYY')\r\n      }else{ \r\n        date = moment(this.date,'DD/MM/YYYY').format('DD/MM/YYYY')\r\n      };\r\n\r\n      let status = obj.STATUS;\r\n      let branch = obj.BRANCH_CODE;\r\n      let frequency = obj.FREQUENCY;\r\n      let PrintClosedAccounts = obj.Print_Closed_Accounts;\r\n\r\n\r\n      this.iframe1url = this.report_url+ \"examples/InterestExecutionListCredit.php?date='\" + date + \"'&status='\" + status + \"'&branch='\" + branch + \"'&PrintClosedAccounts='\" + PrintClosedAccounts + \"'&frequency='\" + frequency + \"'&bankName='\" + bankName + \"' \";\r\n      this.iframe1url = this.sanitizer.bypassSecurityTrustResourceUrl(this.iframe1url);\r\n    }\r\n    else {\r\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(()=>{ this.clicked=false});\r\n    }\r\n\r\n  }\r\n\r\n  close() {\r\n    this.resetForm()\r\n  }\r\n\r\n  resetForm() {\r\n    // this.createForm()\r\n    this.angForm.controls.STATUS.reset();\r\n    this.angForm.controls.FREQUENCY.reset();\r\n    this.showRepo = false;\r\n    this.clicked=false;\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Interest Instructions Execution List (Expected Credit Scheme)</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"scheme\">Branch <sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngbranch\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" placeholder=\"Branch\" required>\r\n                                        <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\" angForm.controls['BRANCH_CODE'].invalid &&(angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required ||angForm.controls['BRANCH_CODE'].errors?.pattern\">\r\n                                    This is required field\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"><label for=\"STATUS\">Status<sub class=\"required\">* </sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedType\" formControlName=\"STATUS\" placeholder=\"Status\"\r\n                                        required>\r\n                                        <ng-option *ngFor=\"let type of Types\" [value]=\"type.name\">{{ type.value }}\r\n                                        </ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\" angForm.controls['STATUS'].invalid &&(angForm.controls['STATUS'].dirty || angForm.controls['STATUS'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['STATUS'].errors?.required ||angForm.controls['STATUS'].errors?.pattern\">\r\n                                    This is required field\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"><label for=\"FREQUENCY\">Frequency<sub class=\"required\">*\r\n                                </sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedFrequency\" formControlName=\"FREQUENCY\"\r\n                                        placeholder=\"Frequency\">\r\n                                        <ng-option *ngFor=\"let type of SortingFrequency\" [value]=\"type.name\">{{type.name\r\n                                            }}\r\n                                        </ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\" angForm.controls['FREQUENCY'].invalid &&(angForm.controls['FREQUENCY'].dirty || angForm.controls['FREQUENCY'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['FREQUENCY'].errors?.required ||angForm.controls['FREQUENCY'].errors?.pattern\">\r\n                                    This is required field\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"START_DATE\">Date<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"Date\" id=\"Date\"\r\n                                        class=\"form-control\" [(ngModel)]=\"date\" [bsValue]=\"bsValue\" [maxDate]=\"maxDate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"Date\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker required>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Date'].invalid && (angForm.controls['Date'].dirty || angForm.controls['Date'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['Date'].errors?.required ||angForm.controls['Date'].invalid\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md\">\r\n                            <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input type=\"checkbox\" class=\"border-checkbox\" id=\"NEWPAGE\"\r\n                                        formControlName=\"NEWPAGE\">\r\n                                    <label class=\"border-checkbox-label\" for=\"NEWPAGE\">Start Scheme on New Page\r\n                                        ?</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\"></div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-9\"></div>\r\n                        <div class=\"col-md-2\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\r\n                                (click)=\"view($event); clicked = true \">View</button>\r\n\r\n                        </div>\r\n                        <div class=\"col-md-1\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" value=\"submit\" (click)=\"close()\">Close</button>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\">\r\n                                    <h5>Report Frame</h5>\r\n                                </div>\r\n                                <div *ngIf=\"showRepo\">\r\n                                    <app-iframe [url] ='iframeurl'></app-iframe>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {SharedModule} from '../../../../shared/shared.module';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { SystemMasterParametersService } from \"../../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BnkExpectIntInstructCreditComponent } from './bnk-expect-int-instruct-credit.component';\r\nimport {BnkExpectIntInstructCreditRoutingModule} from './bnk-expect-int-instruct-credit-routing.module';\r\nimport { OwnbranchMasterService } from \"src/app/shared/dropdownService/own-branch-master-dropdown.service\";\r\nimport { Iframe1Module } from '../iframe1/iframe1.module';\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    PerfectScrollbarModule,\r\n    NgSelectModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    BnkExpectIntInstructCreditRoutingModule,\r\n    Iframe1Module\r\n  ],\r\n\r\n  declarations: [BnkExpectIntInstructCreditComponent],\r\n  exports:[BnkExpectIntInstructCreditComponent],\r\n  providers: [\r\n    {\r\n\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\r\n\r\n    },\r\n    SystemMasterParametersService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UserAuthInterceptor,\r\n      multi: true\r\n    },\r\n    OwnbranchMasterService\r\n  ]\r\n})\r\nexport class BnkExpectIntInstructCreditModule { }","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {Iframe1Component} from './iframe1/iframe1.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Iframe1Component,\n    data: {\n      title: 'Iframe4',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Iframe1RoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Iframe1RoutingModule } from './iframe1-routing.module';\nimport { Iframe1Component } from './iframe1/iframe1.component';\nimport {NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n\n@NgModule({\n  declarations: [Iframe1Component],\n  imports: [\n    CommonModule,\n    Iframe1RoutingModule\n  ],\n  exports :[Iframe1Component],\n  schemas:[NO_ERRORS_SCHEMA,CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class Iframe1Module { }\n","import { Component,Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { environment } from \"src/environments/environment\";\nimport { DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-iframe1',\n  templateUrl: './iframe1.component.html',\n  styleUrls: ['./iframe1.component.scss']\n})\nexport class Iframe1Component implements OnInit{\n  @Input() url: any;\n\n  routes: any;\n  id: any;\n  \n\n  maxDate: Date;\n  minDate: Date;\n  formSubmitted = false;\n  // ng model variable\n  ageCaldate: any = null\n\n  showRepo: boolean = false;\n  // Created Form Group\n  angForm: FormGroup;\n  //api\n  url1 = environment.base_url;\n  comp: any;\n  dom: any;\n  constructor( private fb: FormBuilder,\n    private http: HttpClient,\n    public router: Router,\n    private sanitizer: DomSanitizer) {\n      this.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.url);\n     }\n\n  ngOnInit(): void {\n  }\nsrc:any;\n  view(event){}\n  close($event) {\n    this.showRepo = true;\n    let obj = this.angForm.value\n    this.resetForm()\n    this.comp.pdf\n    this.comp.url\n    \n    // const url=\"http://localhost:4200/reports\";\n    // this.src = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n\n\n  }\n\n  //  close(){\n  //   this.resetForm()\n  // }\n\n  // Reset Function\n  resetForm() {\n    this.showRepo = false;\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <form  novalidate>\n                <div class=\"card-block\">\n                    <div class=\"embed-responsive embed-responsive-16by9\">\n                        <div class=\"loader\">\n                            <img src=\"assets/Loading.gif\">\n                        </div>\n                        <iframe [src]=\"url\"></iframe>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n"],"sourceRoot":"webpack:///"}