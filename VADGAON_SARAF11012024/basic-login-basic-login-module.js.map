{"version":3,"sources":["./src/app/theme/auth/login/basic-login/basic-login-routing.module.ts","./src/app/theme/auth/login/basic-login/basic-login.component.ts","./src/app/theme/auth/login/basic-login/basic-login.component.html","./src/app/theme/auth/login/basic-login/basic-login.module.ts"],"names":[],"mappings":"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","file":"basic-login-basic-login-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {BasicLoginComponent} from './basic-login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BasicLoginComponent,\n    data: {\n      title: 'Simple Login'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BasicLoginRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { AuthService } from '../../auth.service';\r\nimport * as moment from 'moment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../../environments/environment'\r\n\r\n\r\n@Component({\r\n  selector: 'app-basic-login',\r\n  templateUrl: './basic-login.component.html',\r\n  styleUrls: ['./basic-login.component.scss']\r\n})\r\nexport class BasicLoginComponent implements OnInit {\r\n\r\n  isInvalidNumber: boolean = false;\r\n  isInvalidPassword: boolean = false;\r\n  mobileno: string;\r\n  password: string;\r\n  passType: string = 'password';\r\n  resetPassword: boolean = false;\r\n  forgetPassword: boolean = true;\r\n  url = environment.base_url\r\n  bankname = null\r\n  currentDate\r\n  maxAttempts = 3\r\n  constructor(private router: Router, private http: HttpClient, private _authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\r\n\r\n    this.http.get(this.url + '/system-master-parameters/').subscribe((data: any) => {\r\n      this.bankname = data[0].BANK_NAME\r\n      this.currentDate = data[0].CURRENT_DATE\r\n    })\r\n  }\r\n  login() {\r\n    let dataObject = {\r\n      \"username\": this.mobileno,\r\n      \"password\": this.password\r\n    }\r\n    this._authService.login(dataObject).subscribe(data => {\r\n      let userid = data.user.id\r\n      if (data.user.LOG_STATUS == '1') {\r\n        Swal.fire({\r\n          title: '',\r\n          text: \"User is already logged in\",\r\n          icon: 'error',\r\n          confirmButtonColor: '#229954',\r\n          confirmButtonText: 'OK'\r\n        })\r\n      }\r\n      else if (moment(data.user.EXP_DATE, 'DD/MM/YYYY') >= moment(this.currentDate, 'DD/MM/YYYY')) {\r\n        localStorage.setItem('countoftabs', '1');\r\n        localStorage.setItem('token', data.access_token);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        localStorage.setItem('system_master', JSON.stringify(data.system_master))\r\n        // window.open('/CBS/dashboard/default', \"_blank\", \"toolbar=yes,scrollbars=yes,fullscreen=1,resizable=yes,top=00,left=1000,width=5000,height=1000\");\r\n        // window.open('/CBS/dashboard/default','','toolbar=0,titlebar=0,fullscreen=1,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width=800,height=600,left = 82,top = 54');\r\n        // window.open('/dashboard/default', \"_blank\", \"toolbar=yes,scrollbars=yes,fullscreen=1,resizable=yes,top=00,left=1000,width=5000,height=1000\");\r\n        let userData: any = localStorage.getItem('user');\r\n        let result = JSON.parse(userData);\r\n        let object = {\r\n          USERID: userid,\r\n          BRANCH_CODE: result.branchId\r\n        }\r\n        this._authService.findOutLogin(object).subscribe(login => {\r\n          if (login) {\r\n            this.router.navigate(['/dashboard/default']);\r\n          }\r\n          else {\r\n            this.router.navigate(['/user/profile']);\r\n          }\r\n          let expfromdate = moment(data.user.EXP_DATE, 'DD/MM/YYYY').subtract(10, 'days').format('DD/MM/YYYY')\r\n          let exptodate = moment(data.user.EXP_DATE, 'DD/MM/YYYY').subtract(1, 'days').format('DD/MM/YYYY')\r\n          if (moment(expfromdate, 'DD/MM/YYYY') <= moment(this.currentDate, 'DD/MM/YYYY') && moment(this.currentDate, 'DD/MM/YYYY') <= moment(exptodate, 'DD/MM/YYYY')) {\r\n            Swal.fire('Warning', `Your password will expire on ${data.user.EXP_DATE}. Please update your password before expire.`, 'warning')\r\n          }\r\n        })\r\n        this._authService.loginuserupdate(userid).subscribe(data => { })\r\n        this.http.get<any>('https://ipapi.co/json/').subscribe(\r\n          (response) => {\r\n            let obj = {\r\n              USERID: userid,\r\n              IPADDRESS: response.ip,\r\n              BRANCH_CODE: result.branchId\r\n            }\r\n            this._authService.LOGINHISTORY(obj).subscribe(data => { })\r\n          },\r\n          (error) => {\r\n            console.error(error);\r\n          }\r\n        );\r\n      } else if (moment(data.user.EXP_DATE, 'DD/MM/YYYY') < moment(this.currentDate, 'DD/MM/YYYY')) {\r\n        this.resetPassword = true;\r\n        this.forgetPassword = false;\r\n        Swal.fire('Oops!', 'Your password is expired please reset your password', 'error');\r\n      }\r\n      this.failedLoginAttempts[this.mobileno] = 0;\r\n    }, err => {\r\n\r\n      if (err.error.statusCode == 401) {\r\n        this.incrementFailedLoginAttempts(this.mobileno);\r\n        let loginAttempts = this.getFailedLoginAttempts(this.mobileno);\r\n        if (loginAttempts >= this.maxAttempts) {\r\n          this._authService.updateinactiveUser(dataObject).subscribe(data => { })\r\n          Swal.fire('OOPs', 'User blocked...Please contact to Admin', 'error')\r\n          this.failedLoginAttempts[this.mobileno] = 0;\r\n        }\r\n        else\r\n          Swal.fire({\r\n            title: '',\r\n            text: \"Your access denied\",\r\n            icon: 'error',\r\n            confirmButtonColor: '#229954',\r\n            confirmButtonText: 'OK'\r\n          })\r\n      } else if (err.error.statusCode == 400) {\r\n        Swal.fire({\r\n          title: '',\r\n          text: err.error.message,\r\n          icon: 'error',\r\n          confirmButtonColor: '#229954',\r\n          confirmButtonText: 'OK'\r\n        })\r\n      } else {\r\n        Swal.fire({\r\n          title: '',\r\n          text: \"Please Check Your Username And Password\",\r\n          icon: 'error',\r\n          confirmButtonColor: '#229954',\r\n          confirmButtonText: 'OK'\r\n        })\r\n      }\r\n\r\n    })\r\n  }\r\n  showHidePassword() {\r\n    if (this.passType == 'password') {\r\n      this.passType = 'text';\r\n    }\r\n    else {\r\n      this.passType = 'password';\r\n    }\r\n  }\r\n  private failedLoginAttempts: { [username: string]: number } = {};\r\n\r\n  incrementFailedLoginAttempts(username: string): void {\r\n    if (!this.failedLoginAttempts[username]) {\r\n      this.failedLoginAttempts[username] = 1;\r\n    } else {\r\n      this.failedLoginAttempts[username]++;\r\n    }\r\n  }\r\n\r\n  getFailedLoginAttempts(username: string): number {\r\n    return this.failedLoginAttempts[username] || 0;\r\n  }\r\n}\r\n","<section class=\"login-block\">\n    <!-- Container-fluid starts -->\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <form action=\"javascript:\">\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <div class=\"card mb-3\" style=\"max-width: 1200px;\">\n                                <div class=\"row no-gutt ers\">\n                                    <div class=\"col-md-12 inline-block\">\n                                        <span>\n                                            <img src=\"assets/BPK.jpg\" class=\"card-img\" alt=\"...\">\n                                            <h5 class=\"card-title bank-name\">{{bankname}}\n                                            </h5>\n                                            <!-- <h5 class=\"card-title bank-name\">SHRI BHAIRAVNATH SAHAKARI PAT-SANSTHA LTD.\n                                            </h5> -->\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\" style=\"margin-top: -15px;\">\n                        <div class=\"col-sm-8\">\n                            <div class=\"card\">\n                                <div class=\"card-body\" style=\"text-align: center;\">\n                                    <img src=\"assets/images/loginImg.png\" style=\"width:66%\" class=\"img-fluid\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"card\" style=\"padding-bottom: 5%;\">\n                                <div class=\"card-body\">\n                                    <div class=\"row m-b-20\">\n                                        <div class=\"col-md-12\">\n                                            <h5 class=\"text-center\">Sign In</h5>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-11\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input type=\"text\" name=\"mobileno\" class=\"form-control\"\n                                                        placeholder=\" \" id=\"mobileno\" required maxlength=\"10\"\n                                                        [(ngModel)]=\"mobileno\" title=\"Input allowed only A-Z\" autofocus>\n                                                    <label for=\"mobileno\">User Name<sub class=\"required\">*\n                                                        </sub></label>\n                                                </span>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-11\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input [type]=\"passType\" name=\"password\" class=\"form-control\"\n                                                        placeholder=\" \" id=\"password\" required\n                                                        pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,12}\" maxlength=\"12\"\n                                                        [(ngModel)]=\"password\" title=\"Input allowed only A-Z\">\n                                                    <div style=\"    display: block;\n                                                        margin-left: 95%;\n                                                        margin-top: -10%;\">\n                                                        <span toggle=\"#password-field\"\n                                                            style=\" margin: 12px 0px 0px -19px\"\n                                                            class=\"fa fa-fw fa-eye field-icon toggle-password\"\n                                                            (click)=\"showHidePassword()\"></span>\n                                                    </div>\n\n                                                    <label for=\"password\">Password<sub class=\"required\">* </sub></label>\n                                                </span>\n                                            </div>\n\n                                        </div>\n\n                                    </div>\n                                    <div class=\"row m-t-25 text-left\">\n                                        <div class=\"col-12\">\n                                            <!-- <div class=\"checkbox-fade fade-in-primary d-\">\n                                                <label>\n                                                    <span class=\"text-inverse\" *ngIf=\"resetPassword\">Reset Password</span>\n                                                 \n                                                </label>\n                                            </div> -->\n                                            <div class=\"forgot-phone text-right f-left\">\n                                                <a [routerLink]=\"['/auth/resetpassword']\" class=\"text-right f-w-600\">\n                                                    Reset Password?</a>\n                                            </div>\n                                            <div class=\"forgot-phone text-right f-right\" *ngIf=\"forgetPassword\">\n                                                <a [routerLink]=\"['/auth/forgot']\" class=\"text-right f-w-600\"> Forgot\n                                                    Password?</a>\n                                                <!-- <a [routerLink]=\"['/']\" class=\"text-right f-w-600\">Reset Password</a> -->\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"row m-t-30\">\n                                        <div class=\"col-md-12\">\n                                            <!-- <a [routerLink]=\"['/dashboard/default']\"><button type=\"button\" class=\"btn btn-primary btn-md btn-block waves-light text-center m-b-20\" mdbRippleRadius><b>Sign in</b></button></a> -->\n                                            <button\n                                                class=\"btn btn-primary btn-md btn-block waves-light text-center m-b-20\"\n                                                (click)=\"login()\" mdbRippleRadius>\n                                                <b style=\"color: white;\">Sign in</b>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- <hr />\n                                    <div class=\"row\">\n                                        <div class=\"col-md-8\">\n                                        </div>\n                                        <div class=\"col-md-4 text-right f-right\">\n                                            <img src=\"assets/images/comp.png\" alt=\"small-logo.png\">\n                                        </div>\n                                    </div> -->\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <div class=\"card mb-3\" style=\"max-width: 1200px;\">\n                                <div class=\"row no-gutters\">\n                                    <div class=\"col-md-12\" style=\"padding: 2.5%;\">\n                                        <img src=\"assets/images/comp.png\" class=\"com-logo\" alt=\"small-logo.png\">\n                                        <h5 style=\"text-align:center;margin-top: 5px;position: sticky;\">Compserv Systems\n                                        </h5>\n                                        <h5 style=\"float:right\" class=\"prod-logo\"><b><span\n                                                    style=\"color:black\">Pat</span>\n                                                <span style=\"color:#f7ba12\">seva</span></b></h5>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n                <!-- end of form -->\n            </div>\n            <!-- end of col-sm-12 -->\n        </div>\n        <!-- end of row -->\n    </div>\n    <!-- end of container-fluid -->\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BasicLoginComponent } from './basic-login.component';\nimport { BasicLoginRoutingModule } from './basic-login-routing.module';\nimport { SharedModule } from '../../../../shared/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from '../../auth.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n@NgModule({\n  imports: [\n    CommonModule,\n    BasicLoginRoutingModule,\n    SharedModule,\n    FormsModule\n  ],\n  declarations: [BasicLoginComponent],\n  providers: [AuthService,\n  ]\n})\nexport class BasicLoginModule { }\n"],"sourceRoot":"webpack:///"}