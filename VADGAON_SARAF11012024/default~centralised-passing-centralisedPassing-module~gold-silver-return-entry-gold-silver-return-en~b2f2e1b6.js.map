{"version":3,"sources":["./src/app/theme/transaction/gold-silver-return-entry/gold-silver-return-entry-routing.module.ts","./src/app/theme/transaction/gold-silver-return-entry/gold-silver-return-entry.component.ts","./src/app/theme/transaction/gold-silver-return-entry/gold-silver-return-entry.component.html","./src/app/theme/transaction/gold-silver-return-entry/gold-silver-return-entry.module.ts","./src/app/theme/transaction/gold-silver-return-entry/gold-silver-return-entry.service.ts"],"names":[],"mappings":"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","file":"default~centralised-passing-centralisedPassing-module~gold-silver-return-entry-gold-silver-return-en~b2f2e1b6.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport { GoldSilverReturnEntryComponent } from './gold-silver-return-entry.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component: GoldSilverReturnEntryComponent,\n    data: {\n      title: 'GoldSilverReturnEntry',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class  GoldSilverReturnEntryRoutingModule { }","import { Component, ElementRef, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs-compat';\r\nimport { SystemMasterParametersService } from '../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\nimport *  as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-gold-silver-return-entry',\r\n  templateUrl: './gold-silver-return-entry.component.html',\r\n  styleUrls: ['./gold-silver-return-entry.component.scss']\r\n})\r\nexport class GoldSilverReturnEntryComponent implements OnInit {\r\n  @Input() childMessage: string;\r\n  @ViewChild('triggerhide') triggerhide: ElementRef<HTMLElement>;\r\n  @Output() reloadTablePassing = new EventEmitter<string>();\r\n\r\n  formSubmitted = false;\r\n  //api\r\n  url = environment.base_url;\r\n\r\n  // Formgroup variable\r\n  angForm: FormGroup;\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  newbtnShow: boolean = false;\r\n  // dropdown variables\r\n  ngscheme: any = null\r\n  ngBranchCode: any = null\r\n  branch_code: any;\r\n  accountedit: any = null;\r\n  getschemename: any;\r\n  scheme: any[];\r\n  schemeACNo: any[];\r\n\r\n  // Date variables\r\n  ngreturndate: any = null;\r\n  maxDate: any;\r\n  minDate: Date;\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  DatatableHideShow: boolean;\r\n  rejectShow: boolean = false;\r\n  approveShow: boolean = false;\r\n  unapproveShow: boolean = false;\r\n  logDate\r\n\r\n  constructor(\r\n    private fb: FormBuilder, private http: HttpClient,\r\n    private config: NgSelectConfig,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private systemParameter: SystemMasterParametersService,\r\n  ) {\r\n    this.systemParameter.getFormData(1).subscribe(data => {\r\n      this.maxDate = moment(data.CURRENT_DATE, 'DD/MM/YYYY')\r\n      this.maxDate = this.maxDate._d\r\n      this.minDate = this.maxDate\r\n      this.ngreturndate = data.CURRENT_DATE\r\n      this.logDate = data.CURRENT_DATE\r\n    })\r\n    if (this.childMessage != undefined) {\r\n      this.editClickHandler(this.childMessage);\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n    })\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      var allscheme = data.filter(function (scheme) {\r\n        return (scheme.name == 'LN' && scheme.IS_DEPO_LOAN == '0' && scheme.IS_GOLD_LOAN == '1');\r\n      });\r\n      this.scheme = allscheme;\r\n    })\r\n    let data: any = localStorage.getItem('user');\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      BRANCH: ['', [Validators.required]],\r\n      AC_TYPE: ['', [Validators.required]],\r\n      AC_NO: ['', [Validators.required]],\r\n      RETURN_DATE: ['', [Validators.required]],\r\n      ARTICLE_NAME: [''],\r\n      ARTICLE_DETAILS: [''],\r\n    });\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    if (result.RoleDefine[0].Role.id == 1) {\r\n      this.angForm.controls['BRANCH'].enable()\r\n      this.ngBranchCode = result.branch.id\r\n    }\r\n    else {\r\n      this.angForm.controls['BRANCH'].disable()\r\n      this.ngBranchCode = result.branch.id\r\n    }\r\n  }\r\n\r\n  getBranch(event) {\r\n    this.getschemename = event.name\r\n    this.ngscheme = event.value\r\n    this.getAccountList()\r\n\r\n  }\r\n\r\n  //get account no according scheme\r\n  getAccountList() {\r\n    if (this.ngscheme != null && this.ngBranchCode != null) {\r\n      this.accountedit = null\r\n      this.tableData = []\r\n      let object = {\r\n        AC_TYPE: this.ngscheme,\r\n        BRANCH_CODE: this.ngBranchCode,\r\n        TYPE: 1,\r\n        RETURN_DATE: null\r\n      }\r\n      this.http.post(this.url + '/gold-silver-return-entry/getAccountList', object).subscribe((data: any) => {\r\n        this.schemeACNo = data\r\n      })\r\n    }\r\n  }\r\n  tableData = []\r\n  getGoldSilverData() {\r\n    let object = {\r\n      AC_NO: this.accountedit,\r\n      AC_TYPE: this.ngscheme,\r\n      BRANCH_CODE: this.ngBranchCode\r\n    }\r\n    this.http.post(this.url + '/gold-silver-return-entry/GoldSilverData', object).subscribe((data: any) => {\r\n      this.tableData = data\r\n      this.angForm.patchValue({\r\n        ARTICLE_NAME: data[0].ARTICLE_NAME,\r\n        ARTICLE_DETAILS: data[0].REMARK\r\n      })\r\n    })\r\n  }\r\n  //update checkbox status in array\r\n  checkReturnFlag(index, flag) {\r\n    let isIntUpdate: boolean = false\r\n    if (flag.target.checked) {\r\n      isIntUpdate = true\r\n    }\r\n    else {\r\n      isIntUpdate = false\r\n    }\r\n    if (this.tableData.length != 0) {\r\n      this.tableData[index]['IS_RETURN'] = isIntUpdate\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.angForm.valid);\r\n    if (this.angForm.valid) {\r\n      let data: any = localStorage.getItem('user');\r\n      let result = JSON.parse(data);\r\n      let object = {\r\n        RETURN_DATE: this.ngreturndate,\r\n        table: this.tableData,\r\n        USER_CODE: result.id\r\n      }\r\n      this.http.post(this.url + '/gold-silver-return-entry/insert', object).subscribe((data: any) => {\r\n        Swal.fire(\"Success!\", \"Data Updated Successfully !\", \"success\");\r\n        // this.createForm()\r\n        this.tableData = []\r\n        this.ngscheme = null\r\n        this.accountedit = null\r\n        this.angForm.patchValue({\r\n          ARTICLE_NAME: [''],\r\n          ARTICLE_DETAILS: [''],\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  //function toggle update to add button\r\n  updateData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n  }\r\n\r\n  //function for edit button clicked\r\n  editClickHandler(info) {\r\n    this.angForm.disable()\r\n    this.ngscheme = info.AC_TYPE\r\n    this.ngBranchCode = info.BRANCH_CODE\r\n    this.getAccountList()\r\n    this.accountedit = info.AC_NO\r\n    if (info.TRAN_STATUS == '0') {\r\n      this.approveShow = true\r\n      this.rejectShow = true\r\n      this.showButton = false\r\n      this.unapproveShow = false\r\n      let obj = {\r\n        AC_TYPE: this.ngscheme,\r\n        BRANCH_CODE: this.ngBranchCode,\r\n        TYPE: 0,\r\n        RETURN_DATE: info.RETURN_DATE\r\n      }\r\n      this.http.post(this.url + '/gold-silver-return-entry/getAccountList', obj).subscribe((data: any) => {\r\n        this.schemeACNo = data\r\n      })\r\n\r\n      let object = {\r\n        AC_NO: this.accountedit,\r\n        AC_TYPE: this.ngscheme,\r\n        BRANCH_CODE: this.ngBranchCode\r\n      }\r\n      this.http.post(this.url + '/gold-silver-return-entry/getPassGoldSilverData', object).subscribe((data: any) => {\r\n        this.tableData = data\r\n        this.angForm.patchValue({\r\n          ARTICLE_NAME: data[0].ARTICLE_NAME,\r\n          ARTICLE_DETAILS: data[0].REMARK\r\n        })\r\n      })\r\n    } else if (info.TRAN_STATUS != '0') {\r\n      this.unapproveShow = true\r\n      this.approveShow = false\r\n      this.rejectShow = false\r\n      this.showButton = false\r\n      let obj = {\r\n        AC_TYPE: this.ngscheme,\r\n        BRANCH_CODE: this.ngBranchCode,\r\n        TYPE: 0,\r\n        RETURN_DATE: info.RETURN_DATE\r\n      }\r\n      this.http.post(this.url + '/gold-silver-return-entry/getAccountList', obj).subscribe((data: any) => {\r\n        this.schemeACNo = data\r\n      })\r\n\r\n      let object = {\r\n        AC_NO: this.accountedit,\r\n        AC_TYPE: this.ngscheme,\r\n        BRANCH_CODE: this.ngBranchCode\r\n      }\r\n      this.http.post(this.url + '/gold-silver-return-entry/UnPassGoldSilverData', object).subscribe((data: any) => {\r\n        this.tableData = data\r\n        this.angForm.patchValue({\r\n          ARTICLE_NAME: data[0].ARTICLE_NAME,\r\n          ARTICLE_DETAILS: data[0].REMARK\r\n        })\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  //function for delete button clicked\r\n  delClickHandler(info: any): void {\r\n  }\r\n\r\n  reject() {\r\n    if (this.angForm.valid) {\r\n      let data: any = localStorage.getItem('user');\r\n      let result = JSON.parse(data);\r\n      let object = {\r\n        RETURN_DATE: this.ngreturndate,\r\n        table: this.tableData,\r\n        USER_CODE: result.id\r\n      }\r\n      this.http.post(this.url + '/gold-silver-return-entry/reject', object).subscribe((data: any) => {\r\n        this.angForm.enable()\r\n        Swal.fire(\"Success!\", \"Data Rejected Successfully !\", \"success\");\r\n        // this.createForm()\r\n        this.tableData = []\r\n        this.ngscheme = null\r\n        this.accountedit = null\r\n        this.angForm.patchValue({\r\n          ARTICLE_NAME: [''],\r\n          ARTICLE_DETAILS: [''],\r\n        })\r\n        var button = document.getElementById('triggerhide');\r\n        button.click();\r\n        this.reloadTablePassing.emit();\r\n      })\r\n    }\r\n  }\r\n  Approve() {\r\n    if (this.angForm.valid) {\r\n      let data: any = localStorage.getItem('user');\r\n      let result = JSON.parse(data);\r\n      let object = {\r\n        RETURN_DATE: this.ngreturndate,\r\n        table: this.tableData,\r\n        USER_CODE: result.id\r\n      }\r\n      this.http.post(this.url + '/gold-silver-return-entry/approve', object).subscribe((data: any) => {\r\n        this.angForm.enable()\r\n        Swal.fire(\"Success!\", \"Data Approved Successfully !\", \"success\");\r\n        // this.createForm()\r\n        this.tableData = []\r\n        this.ngscheme = null\r\n        this.accountedit = null\r\n        this.angForm.patchValue({\r\n          ARTICLE_NAME: [''],\r\n          ARTICLE_DETAILS: [''],\r\n        })\r\n        var button = document.getElementById('triggerhide');\r\n        button.click();\r\n        this.reloadTablePassing.emit();\r\n      })\r\n    }\r\n  }\r\n  unApprove() {\r\n    if (this.angForm.valid) {\r\n      let data: any = localStorage.getItem('user');\r\n      let result = JSON.parse(data);\r\n      let object = {\r\n        RETURN_DATE: this.ngreturndate,\r\n        table: this.tableData,\r\n        USER_CODE: result.id,\r\n        LOG_DATE: this.logDate\r\n      }\r\n      this.http.post(this.url + '/gold-silver-return-entry/unapprove', object).subscribe((data: any) => {\r\n        this.angForm.enable()\r\n        Swal.fire(\"Success!\", \"Data Unapproved Successfully !\", \"success\");\r\n        // this.createForm()\r\n        this.tableData = []\r\n        this.ngscheme = null\r\n        this.accountedit = null\r\n        this.angForm.patchValue({\r\n          ARTICLE_NAME: [''],\r\n          ARTICLE_DETAILS: [''],\r\n        })\r\n        var button = document.getElementById('triggerhide');\r\n        button.click();\r\n        this.reloadTablePassing.emit();\r\n      })\r\n    }\r\n  }\r\n  closeModal() {\r\n    var button = document.getElementById('triggerhide');\r\n    button.click();\r\n    this.reloadTablePassing.emit();\r\n  }\r\n}\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Gold/Silver Return Entry</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH\">Branch<sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\" #branchcode\r\n                                        formControlName=\"BRANCH\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        (change)=\"getAccountList()\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['BRANCH'].invalid && (angForm.controls['BRANCH'].dirty || angForm.controls['BRANCH'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"RETURN_DATE\">Return Date</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"RETURN_DATE\" id=\"subm_date\"\r\n                                        class=\"form-control\" [(ngModel)]=\"ngreturndate\" formControlName=\"RETURN_DATE\"\r\n                                        disabled>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['RETURN_DATE'].invalid && (angForm.controls['RETURN_DATE'].dirty || angForm.controls['RETURN_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['RETURN_DATE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Code<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\r\n                                        (change)=\"getBranch($event)\" placeholder=\"Scheme Code\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.id}} {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_NO\">Account Number<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_NO\" bindValue=\"BANKACNO\" [(ngModel)]=\"accountedit\"\r\n                                        formControlName=\"AC_NO\" bindLabel=\"AC_NAME\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\r\n                                        placeholder=\"Account Number\" (change)=\"getGoldSilverData()\">\r\n                                        <ng-option *ngFor=\"let values of schemeACNo\" [value]=\"values\">\r\n                                            {{values.AC_NO}} {{values.AC_NAME}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_NO'].invalid && (angForm.controls['AC_NO'].dirty || angForm.controls['AC_NO'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <table class=\"table table-bordered table-hover compact\">\r\n                                <thead>\r\n                                    <td>Serial Number</td>\r\n                                    <td>Item Type</td>\r\n                                    <td>Bag / Receipt Number</td>\r\n                                    <td>Total Weight</td>\r\n                                    <td>Clear Weight</td>\r\n                                    <td style=\"text-align: right;\">Value</td>\r\n                                    <td>Submission Date</td>\r\n                                    <td>Margin</td>\r\n                                    <td class=\"td_center\">Is Return</td>\r\n\r\n                                </thead>\r\n                                <tbody *ngIf=\"tableData.length != 0\">\r\n                                    <tr *ngFor=\"let data of tableData;\r\n                                let indexOfelement = index\">\r\n                                        <td>{{indexOfelement+1}}</td>\r\n                                        <td>{{data.ITEM_TYPE=='G'?'Gold':(data.ITEM_TYPE=='S'?'Silver':(data.ITEM_TYPE=='P'?'Platinum':'Diamond'))}}\r\n                                        </td>\r\n                                        <td style=\"text-align: right;\">{{data.BAG_RECEIPT_NO}}</td>\r\n                                        <td style=\"text-align: right;\">{{data.TOTAL_WEIGHT_GMS}}</td>\r\n                                        <td style=\"text-align: right;\">{{data.CLEAR_WEIGHT_GMS}}</td>\r\n                                        <td style=\"text-align: right;\">{{data.TOTAL_VALUE}}</td>\r\n                                        <td>{{data.SUBMISSION_DATE}}</td>\r\n                                        <td style=\"text-align: right;\">{{data.MARGIN}}</td>\r\n                                        <td class=\"td_center\">\r\n                                            <input type=\"checkbox\" class=\"border-checkbox\" id=\"IS_RETURN\" #IS_RETURN\r\n                                                [value]=\"data.RETURN_DATE===null ?  null: true\"\r\n                                                [attr.checked]=\"data.RETURN_DATE===null ? null :true\"\r\n                                                (change)=\"checkReturnFlag(indexOfelement,$event)\">\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"tableData?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"10\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2  \"><label for=\"ARTICLE_NAME\">Article Name</label></div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input class=\"form-control\" formControlName=\"ARTICLE_NAME\" disabled>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2  \"><label for=\"ARTICLE_DETAILS\">Article Details</label></div>\r\n                        <div class=\"col-md-5\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <textarea type=\"text\" name=\"ARTICLE_DETAILS\" class=\"form-control\" placeholder=\" \"\r\n                                        style=\"height: 40px;\" pattern=\"^[A-Za-z0-9\\./ -]+$\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" id=\"ARTICLE_DETAILS\"\r\n                                        maxlength=\"4000\" formControlName=\"ARTICLE_DETAILS\" disabled></textarea>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\" style=\"float: right;\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm btn-submit\" appTheme\r\n                                *ngIf=\"showButton\" [disabled]=\"angForm.invalid\" (click)=\"submit();branchcode.focus()\">\r\n                                Submit\r\n                            </button>\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"approveShow\" (click)=\"closeModal()\">\r\n                                Close</button>\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"addNewData()\" *ngIf=\"newbtnShow\">\r\n                                Cancel\r\n                            </button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <!-- <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">\r\n                                Update</button>&nbsp;&nbsp;&nbsp;&nbsp; -->\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"rejectShow\" (click)=\"reject()\">\r\n                                Reject</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"approveShow\" (click)=\"Approve()\">\r\n                                Approve</button>\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"unapproveShow\" (click)=\"unApprove()\">\r\n                                Unapprove</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GoldSilverReturnEntryComponent } from './gold-silver-return-entry.component';\nimport { GoldSilverReturnEntryRoutingModule } from './gold-silver-return-entry-routing.module';\nimport { SharedModule } from '../../../shared/shared.module';\n// import {SelectModule} from 'ng-select';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { DataTablesModule } from 'angular-datatables';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n//import { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from '../../../user-auth.interceptor';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { GoldSilverReturnEntryService } from './gold-silver-return-entry.service'\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { SystemMasterParametersService } from '../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\nimport { ThemeModule } from '../../theme.module'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    GoldSilverReturnEntryRoutingModule,\n    DataTablesModule,\n    FileUploadModule,\n    //  SelectModule,\n    NgSelectModule,\n    SharedModule,\n    FormsModule, ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n    ThemeModule\n  ],\n  providers: [SchemeCodeDropdownService, SchemeAccountNoService, OwnbranchMasterService, GoldSilverReturnEntryService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: UserAuthInterceptor,\n    multi: true\n  }, SystemMasterParametersService],\n  declarations: [GoldSilverReturnEntryComponent],\n  exports: [GoldSilverReturnEntryComponent],\n})\nexport class GoldSilverReturnEntryModule { }","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport \"rxjs/Rx\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, map } from \"rxjs/operators\";\nimport Swal from \"sweetalert2\";\nimport { environment } from '../../../../environments/environment';\n\n\n\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GoldSilverReturnEntryService {\n  // Variable for handleError\n  [x: string]: any;\n  // API\n  url = environment.base_url;\n\n\n  constructor(private http: HttpClient) { }\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + \"/gold-silver-return-entry/insert\", data).pipe(\n      map((res) => res),\n      catchError((error) => {\n        Swal.fire(\"Please Input Proper Data !\");\n        return throwError(error);\n      })\n    );\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http\n      .get(this.url + \"/gold-silver-return-entry/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + \"/gold-silver-return-entry/update\", data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http\n      .delete(this.url + \"/gold-silver-return-entry/delete/\" + id)\n      .pipe(catchError(this.handleError));\n  }\n}"],"sourceRoot":"webpack:///"}