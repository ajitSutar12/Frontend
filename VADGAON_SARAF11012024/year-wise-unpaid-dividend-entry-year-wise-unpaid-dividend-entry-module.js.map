{"version":3,"sources":["./src/app/shared/dropdownService/salary-division-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/shared/dropdownService/share-master-dropdown.service.ts","./src/app/shared/dropdownService/share-scheme-dropdown.Service.ts","./src/app/theme/master/customer/customer-id/customer-id.service.ts","./src/app/theme/master/customer/shares-master/shares-master.service.ts","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry-routing.module.ts","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry.component.ts","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry.component.html","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry.module.ts","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry.service.ts"],"names":[],"mappings":"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","file":"year-wise-unpaid-dividend-entry-year-wise-unpaid-dividend-entry-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class SalaryDMasterdropdownService {\n    salaryObject = new Array();\n    // // salary-division-master\";\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n    public getSalaryMasterList() {\n        this.salaryObject = []\n        return this.http.get<any>(this.url + '/salary-division-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id, name: element.CODE};\n                    this.salaryObject.push(obj)\n                });\n                return this.salaryObject;\n            }));\n    }\n    public getSalaryDMasterList(branch) {\n        this.salaryObject = []\n        return this.http.get<any>(this.url + '/salary-division-master/getBranch/' + branch)\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id, name: element.CODE};\n                    this.salaryObject.push(obj)\n                });\n                return this.salaryObject;\n            }));\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class ShareMasterDropdownService {\n    sharecodeObject = new Array();\n    [x: string]: any;\n    // url = \"http://localhost:4000/share-master\";\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n    public getGLAccountMasterList() {\n        this.sharecodeObject = []\n        return this.http.get<any>(this.url + '/share-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id, name: element.AC_NAME };\n                    this.sharecodeObject.push(obj)\n                });\n                return this.sharecodeObject;\n            }));\n    }\n    public getGLAccountMasterNameList() {\n        this.sharecodeObject = []\n        return this.http.get<any>(this.url + '/share-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.AC_NAME + ' ' + element.AC_NAME + ' ', value: `${element.AC_NAME}`, name: element.AC_NAME };\n                    this.sharecodeObject.push(obj)\n                });\n                return this.sharecodeObject;\n            }));\n    }\n    public getShareAccountMasterNameList() {\n        this.sharecodeObject = []\n        return this.http.get<any>(this.url + '/share-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.AC_NO, value: element.id, name: element.AC_NAME };\n                    this.sharecodeObject.push(obj)\n                });\n                return this.sharecodeObject;\n            }));\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class ShareSchemeDropdownService {\n    ShareSchemeObject = new Array();\n    // url = \"http://localhost:4000/shares-scheme\";\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n    public getShareschemelist() {\n        this.ShareSchemeObject = []\n        return this.http.get<any>(this.url + '/shares-scheme')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.S_APPL + ' ' + element.S_APPL + ' ', value: element.id };\n                    this.ShareSchemeObject.push(obj)\n                });\n                return this.ShareSchemeObject;\n            }));\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport {environment}  from '../../../../../environments/environment'\n@Injectable()\nexport class CustomerIdService {\n    // Variable for handleError\n    [x: string]: any;\n    // API \n    // // customer-id\";\n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    //Insertion Operation\n    postData(data: any): Observable<any> {\n        return this.http.post(this.url + '/customer-id/insert', data).pipe(map((res) => res),\n            catchError((error) => {\n                Swal.fire('Please Input Proper Data!');\n                return throwError(error);\n            })\n        )\n    }\n    // For append data\n    getFormData(id: any): Observable<any> {\n        return this.http.get(this.url + '/customer-id/' + id).pipe(catchError(this.handleError));\n    }\n\n    getData(): Observable<any> {\n        return this.http.get(this.url + '/customer-id/').pipe(catchError(this.handleError));\n    }\n    //Updation Operation\n    updateData(data): Observable<any> {\n        return this.http.put(this.url + '/customer-id/update', data);\n    }\n    //Deletion Operation\n    deleteData(id: any): Observable<any> {\n        return this.http.delete(this.url + '/customer-id/delete/' + id).pipe(catchError(this.handleError));\n    }  \n}\n\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n@Injectable()\nexport class ShareMasterService {\n    // Variable for handleError\n    [x: string]: any;\n    // API  \n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n\n    //Insertion Operation\n    postData(data: any): Observable<any> {\n        return this.http.post(this.url + '/share-master/insert', data).pipe(map((res) => res),\n            catchError((error) => {\n                Swal.fire('Please Input Proper Data!');\n                return throwError(error);\n            })\n        )\n    }\n    getData(obj): Observable<any> {\n        return this.http.get(this.url + '/share-master/alldata' + obj).pipe(catchError(this.handleError));\n    }\n    // For append data\n    getFormData(id: any): Observable<any> {\n        return this.http.get(this.url + '/share-master/' + id).pipe(catchError(this.handleError));\n    }\n    //Updation Operation\n    updateData(data): Observable<any> {\n        return this.http.put(this.url + '/share-master/update', data);\n    }\n\n    updateDataPyatrans(data): Observable<any> {\n        return this.http.put(this.url + '/share-master/payDivTrans', data);\n    }\n    //Deletion Operation\n    deleteData(id: any): Observable<any> {\n        return this.http.delete(this.url + '/share-master/delete/' + id).pipe(catchError(this.handleError));\n    }\n    //approve master\n    approve(data: any): Observable<any> {\n        return this.http.post(this.url + '/share-master/approve', data).pipe(catchError(this.handleError));\n    }\n    //unapporve master\n    unapporve(data: any): Observable<any> {\n        return this.http.post(this.url + '/share-master/unapporve', data).pipe(catchError(this.handleError));\n    }\n\n\n    //reject master\n    reject(data: any): Observable<any> {\n        return this.http.post(this.url + '/share-master/reject', data).pipe(catchError(this.handleError));\n    }\n\n}\n\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { YearWiseUnpaidDividendEntryComponent } from './year-wise-unpaid-dividend-entry.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: YearWiseUnpaidDividendEntryComponent,\r\n    data: {\r\n      title: 'Year Wise Unpaid Entry',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class YearWiseUnpaidDividendEntryRoutingModule { }\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild, } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\n// Creating and maintaining form fields with validation\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n// Displaying Sweet Alert\nimport Swal from \"sweetalert2\";\n// Angular Datatable Directive\nimport { DataTableDirective } from \"angular-datatables\";\n// Used to Call API\nimport { HttpClient } from \"@angular/common/http\";\nimport { first } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\n// Service File For Handling CRUD Operation\nimport { YearwiseunpaidService } from \"./year-wise-unpaid-dividend-entry.service\";\n// dynamic dropdown\nimport { SchemeCodeDropdownService } from \"../../../../shared/dropdownService/scheme-code-dropdown.service\";\nimport { SalaryDMasterdropdownService } from \"../../../../shared/dropdownService/salary-division-master-dropdown.service\";\nimport { SchemeAccountNoService } from '../../../../shared/dropdownService/schemeAccountNo.service'\nimport * as moment from 'moment';\nimport { NgSelectComponent } from \"@ng-select/ng-select\";\nimport { Console } from \"console\";\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number; \n}\n\n// for fetching values from shmaster\ninterface Shareyearwisedividend {\n  AC_NO: string;\n  AC_NAME: string;\n  DIVIDEND_AMOUNT: string;\n  MEMBER_CLOSE_DATE: string;\n}\n\n// For fetching values from backend\ninterface Yearwisedividend {\n  ID: number;\n  ACNOTYPE: string;\n  ACTYPE: string;\n  AC_SALARYDIVISION_CODE: number;\n  WARRENT_DATE: Date;\n  DIV_FROM_YEAR: number;\n  DIV_TO_YEAR: number;\n  AC_NO: number;\n  TOTAL_SHARES: number;\n  MEMBER_CLOSE_DATE: Date;\n  DIVIDEND_AMOUNT: number;\n  AC_NAME: string;\n}\n\n@Component({\n  selector: \"app-year-wise-unpaid-dividend-entry\",\n  templateUrl: \"./year-wise-unpaid-dividend-entry.component.html\",\n  styleUrls: [\"./year-wise-unpaid-dividend-entry.component.scss\"],\n})\n\nexport class YearWiseUnpaidDividendEntryComponent implements AfterViewInit, OnDestroy, OnInit {\n  //api\n  url = environment.base_url;\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n\n  // Created Form Group\n  angForm: FormGroup;\n  chosenYearDate:Date;\n  selectedyear:any;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  //datatable for values from shmaster\n  dtexportshareOption: DataTables.Settings = {};\n  Data: any;\n\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = \"start\";\n  active = 1;\n  activeKeep = 1;\n\n  // Variables for search\n  filterObject: { name: string; type: string }[];\n  filter: any;\n  filterForm: FormGroup;\n\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  newbtnShow: boolean = false;\n\n  //variable to get Id to update\n  updateID: number = 0;\n\n  //  filter variable\n  filterData = {};\n\n  // Store data from backend  \n  // multiShare: Yearwisedividend[];\n  yearwiseunpaid: Yearwisedividend[];\n  sharemember: Shareyearwisedividend[];\n\n  //Scheme type variable\n  schemeType: string = \"SH\";\n  formSubmitted: boolean = false;\n  // dropdown options\n  SchemeCodeObject: any[];//S_NAME from Schemedata\n  SalaryDMasterObject//AC_SALARYDIVISION_CODE FROM SHMASTER\n  ShareMasterObject: any[];//AC_NO From SHMASTER -member from\n  ShareMasterObjectB: any[];//AC_NO From SHMASTER -member to\n  shareNameObject: any[];\n  acType: any = null;\n  ngSalary: any = null;\n  ngAcnoFrom: any = null;\n  ngAcnoTo: any = null;\n\n  //todays date\n  date = new Date();\n  \n  // year: Date;\n  year = new Date().getFullYear();\n\n  showTable: boolean = false\n  multiShare: any = []\n  multiDividend = []\n  mem: any\n  totalAmt : Number = 0\n\n  constructor(\n    private http: HttpClient,\n    private YearwiseunpaidService: YearwiseunpaidService,\n    private fb: FormBuilder,\n    private SalaryDMasterdropdownService: SalaryDMasterdropdownService,\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\n    private schemeAccountNoService: SchemeAccountNoService,\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    this.shareDatatable()\n    this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType)\n      .pipe(first())\n      .subscribe((data) => {\n        this.SchemeCodeObject = data;\n      });\n\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    let branchCode = result.branch.id\n    if (result.RoleDefine[0].Role.id == 1) {\n      this.SalaryDMasterdropdownService.getSalaryDMasterList(branchCode).subscribe((data) => {\n        this.SalaryDMasterObject = data;\n      });\n    }\n    else {\n      this.SalaryDMasterdropdownService.getSalaryDMasterList(branchCode).subscribe((data) => {\n        this.SalaryDMasterObject = data;\n      });\n    }\n    // this.ShareMasterDropdownService.getShareAccountMasterNameList().subscribe((data) => {\n    //   this.ShareMasterObject = data;\n    //   this.ShareMasterObjectB = data;\n    // });\n \n   \n  }\n  // getCurrentYear():number{\n  //   const currentYear = new Date().getFullYear();\n  //   return currentYear;\n          \n        \n    \n  // }\n\n  //formcontrols with validation\n  createForm() {\n    this.angForm = this.fb.group({\n      ACNOTYPE: [\"SH\"],\n      ACTYPE: [\"\"],\n      AC_SALARYDIVISION_CODE: [\"\"],\n      WARRENT_DATE: [\"\"],\n      DIV_FROM_YEAR: [\"\"],\n      DIV_TO_YEAR: [\"\"],\n      AC_NO: [\"\"],\n      TOTAL_SHARES: [\"\",Validators.required],\n      MEMBER_CLOSE_DATE: [\"\"],\n      DIVIDEND_AMOUNT: [\"\"],\n      AC_NOFrom: [\"\"],\n      AC_NOTo: [\"\"],\n    });\n  }\n\n  //get account no according scheme\n  getShareAccounts(event) {\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    let branchCode = result.branch.id;\n    let obj = [this.acType, branchCode]\n    this.ngAcnoFrom = null\n    this.ngAcnoTo = null\n    switch (event.id) {\n      case 'SH':\n        this.schemeAccountNoService.getShareSchemeList1(obj).subscribe(data => {\n          this.ShareMasterObject = data;\n          this.ShareMasterObjectB = data;\n        })\n        break;\n    }\n  }\n\n  shareDatatable() {\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      // ajax: (dataTableParameters: any, callback) => {\n      //   dataTableParameters.minNumber = dataTableParameters.start + 1;\n      //   dataTableParameters.maxNumber =\n      //   dataTableParameters.start + dataTableParameters.length;\n      //   let datatableRequestParam: any;\n      //   this.page = dataTableParameters.start / dataTableParameters.length;\n\n      //   dataTableParameters['filterData'] = this.mem;\n      //   console.log('dataTableParameters', dataTableParameters)\n      //   // dataTableParameters['memberList'] = mem;\n      //   this.http.post<DataTableResponse>(\n      //     this.url + '/year-wise-unpaid-dividend-entry',\n      //     dataTableParameters\n      //   ).subscribe(resp => {\n      //     this.multiShare = resp.data;\n      //     callback({\n      //       recordsTotal: resp.recordsTotal,\n      //       recordsFiltered: resp.recordsTotal,\n      //       data: []\n      //     });\n      //   });\n      // },\n\n      // ajax: (dataTablesParameters: any, callback) => {\n      //   const params = {};\n      //   // this.objectToHttpParams(params , dataTablesParameters , '');\n      //   this.http\n      //     .get(\n      //       'http://myapi.com',\n      //       {\n      //         params: params,\n\n      //       }\n      //     ).subscribe(resp => {\n      //       let result = resp['data'];\n\n      //       callback({\n      //         recordsTotal: resp['length'],\n      //         recordsFiltered: resp['length'],\n      //         data: []\n      //       });\n      //     });\n      // },\n    };\n  }\n\n  //get dividend year to value based on dividend year from\n  getDivYearTo() {\n    // alert(\"hello\")\n    let divYrFrom = Number(this.angForm.controls['DIV_FROM_YEAR'].value)\n    if (this.angForm.controls['DIV_FROM_YEAR'].value < this.year) {\n      this.angForm.patchValue({\n        DIV_TO_YEAR: divYrFrom + 1\n      })\n    }\n    else {\n       Swal.fire('Invalid Year', 'Please enter a valid year.', 'error');\n\n      this.angForm.patchValue({\n        DIV_TO_YEAR: ''\n      })\n    }\n  }\n\n  //load table as per dividend from to range\n  getDividendTable() {\n    var memFrom = this.angForm.controls['AC_NOFrom'].value\n    var memTo = this.angForm.controls['AC_NOTo'].value\n    if (this.angForm.controls['AC_NOFrom'].value <= this.angForm.controls['AC_NOTo'].value) {\n      this.showTable = true\n      this.mem = [memFrom, memTo, this.acType]\n      // this.shareDatatable()\n      this.http.get(this.url + '/year-wise-unpaid-dividend-entry/' + this.mem).subscribe((data) => {\n        this.multiShare = data;\n        console.log(data);\n        \n        this.multiShare.forEach(element => {\n          if (element.shareDividend == null) {\n            element.shareDividend = 0\n          }\n        });\n      });\n    }\n    else {\n      Swal.fire(\"Select Different Member\", \"error\");\n      this.angForm.patchValue({\n        AC_NOTo: ''\n      })\n    }\n\n  }\n\n  //push close date in multiDividend array\n  getCloseDate(shareID, shareDivId, acno, date) {\n    debugger\n    if (date != '') {\n      if (this.multiDividend.length != 0) {\n        if (this.multiDividend.some(item => item.AC_NO === acno)) {\n          this.multiDividend.forEach((element) => {\n            if (element.AC_NO == acno) {\n              element['MEMBER_CLOSE_DATE'] = date\n              // element['MEMBER_CLOSE_DATE'] = (date == '' || date == 'Invalid date') ? date = '' : date = moment(date).format('DD/MM/YYYY')\n            }\n          })\n        } else {\n          var object = {\n            shareID: shareID,\n            id: shareDivId,\n            AC_NO: acno,\n            MEMBER_CLOSE_DATE: date,\n            // MEMBER_CLOSE_DATE: (date == '' || date == 'Invalid date') ? date = '' : date = moment(date).format('DD/MM/YYYY')\n          }\n          this.multiDividend.push(object)\n        }\n      }\n      else {\n        var object = {\n          shareID: shareID,\n          id: shareDivId,\n          AC_NO: acno,\n          MEMBER_CLOSE_DATE: date,\n          // MEMBER_CLOSE_DATE: (date == '' || date == 'Invalid date') ? date = '' : date = moment(date).format('DD/MM/YYYY'),\n        }\n        this.multiDividend.push(object)\n      }\n    }\n  }\n\n  //push amount in multiDividend array\n  getAmount(shareID, shareDivId, acno, amount) {\n    debugger\n    if (amount != '') {\n      if (this.multiDividend.length != 0) {\n        if (this.multiDividend.some(item => item.AC_NO === acno)) {\n          this.multiDividend.forEach((element) => {\n            if (element.AC_NO == acno) {\n              this.totalAmt = Number(this.totalAmt) + Number(amount) - Number(element['DIVIDEND_AMOUNT'])\n              this.angForm.patchValue({\n                TOTAL_SHARES: Number(this.totalAmt)\n                \n              })\n              element['DIVIDEND_AMOUNT'] = amount\n            }\n          })\n        }\n       \n        else {\n          var object = {\n            shareID: shareID,\n            id: shareDivId,\n            AC_NO: acno,\n            DIVIDEND_AMOUNT: amount,\n          }\n          this.multiDividend.push(object)\n          this.totalAmt = Number(this.totalAmt) + Number(amount)\n          this.angForm.patchValue({\n            TOTAL_SHARES: this.totalAmt\n          })\n        }\n      }\n      \n      else {\n        var object = {\n          shareID: shareID,\n          id: shareDivId,\n          AC_NO: acno,\n          DIVIDEND_AMOUNT: amount,\n        }\n        this.multiDividend.push(object)\n        this.totalAmt = Number(this.totalAmt) + Number(amount)\n        this.angForm.patchValue({\n          TOTAL_SHARES: this.totalAmt\n        })\n      }\n    }\n  }\n  // validateInput(event) {\n  //   const inputValue = event.target.value;\n  //   const currentYear = new Date().getFullYear();\n  //   const validInput = Math.min(Math.max(parseInt(inputValue), 0), currentYear);\n  //   event.target.value = validInput;\n  // }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    debugger\n    let warrentDate\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'ACNOTYPE': formVal.ACNOTYPE,\n      'ACTYPE': formVal.ACTYPE,\n      'AC_SALARYDIVISION_CODE': formVal.AC_SALARYDIVISION_CODE,\n      // 'WARRENT_DATE': formVal.WARRENT_DATE, \n      'WARRENT_DATE': (formVal.WARRENT_DATE == '' || formVal.WARRENT_DATE == 'Invalid date') ? warrentDate = '' : warrentDate = moment(formVal.WARRENT_DATE).format('DD/MM/YYYY'),\n      'DIV_FROM_YEAR': formVal.DIV_FROM_YEAR,\n      'DIV_TO_YEAR': formVal.DIV_TO_YEAR,\n      'TOTAL_SHARES': formVal.TOTAL_SHARES,\n      'ShareDividend': this.multiDividend,\n      \n    };\n    console.log(this.angForm)\n    console.log('TOTAL_SHARES')\n \n\n    this.YearwiseunpaidService.postData(dataToSend).subscribe(\n      (data) => {\n        Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n    //To clear form\n    this.resetForm();\n    this.totalAmt = 0\n    this.multiShare = []\n    this.multiDividend = []\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.newbtnShow = false;\n    this.YearwiseunpaidService.getFormData(id).subscribe((data) => {\n      this.updateID = data.id;\n      //get nominee to edit\n      this.angForm.setValue({\n        ACNOTYPE: data.ACNOTYPE,\n        ACTYPE: data.ACTYPE,\n        AC_SALARYDIVISION_CODE: data.AC_SALARYDIVISION_CODE,\n        WARRENT_DATE: data.WARRENT_DATE,\n        DIV_FROM_YEAR: data.DIV_FROM_YEAR,\n        DIV_TO_YEAR: data.DIV_TO_YEAR,\n        AC_NO: data.AC_NO,\n        TOTAL_SHARES: data.TOTAL_SHARES,\n        MEMBER_CLOSE_DATE: data.MEMBER_CLOSE_DATE,\n        DIVIDEND_AMOUNT: data.DIVIDEND_AMOUNT,\n        // 'AC_NAME':data.AC_NAME,\n      });\n    });\n  }\n\n  //Method for update data\n  updateData() {\n    let data = this.angForm.value;\n    data[\"id\"] = this.updateID;\n    data['FieldData'] = this.sharemember\n    this.YearwiseunpaidService.updateData(data).subscribe(() => {\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\n      this.showButton = true;\n      this.updateShow = false;\n      this.newbtnShow = false;\n      this.resetForm();\n    });\n  }\n\n  //reset function while update\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n    this.newbtnShow = false;\n    this.resetForm();\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to delete narration data.\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#229954\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.YearwiseunpaidService.deleteData(id).subscribe((data1) => {\n          this.yearwiseunpaid = data1;\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n        }),\n          (error) => {\n            console.log(error);\n          };\n        // to reload after delete of data\n        this.rerender();\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\n      }\n    });\n  }\n  // newFunction(event:any){\n  //   this.selectedyear = event.value\n \n    \n\n  // }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    // this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n    //   dtInstance.columns().every(function () {\n    //     const that = this;\n    //     $(\"input\", this.footer()).on(\"keyup change\", function () {\n    //       if (this[\"value\"] != \"\") {\n    //         that.search(this[\"value\"]).draw();\n    //       } else {\n    //         that.search(this[\"value\"]).draw();\n    //       }\n    //     });\n    //   });\n    // });\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n    this.acType = null;\n    this.ngSalary = null;\n    this.ngAcnoFrom = null;\n    this.ngAcnoTo = null;\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  };\n\n  onFocus(ele: NgSelectComponent) {  \n    ele.open()\n  }\n\n}\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h5>Year Wise Unpaid Dividend Opening Entry</h5>\r\n        <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n          Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n        </h6>\r\n      </div>\r\n      <form action=\"javascript:\" appSubmit [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n        <div class=\"card-block\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group form-primary form-static-label\">\r\n                <span class=\"border-lable-flt\">\r\n                  <ng-select appTheme bindValue=\"value\" [(ngModel)]=\"acType\" id=\"ACTYPE\" bindLabel=\"label\"\r\n                    formControlName=\"ACTYPE\" title=\"Compulsory Selection\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                    #ACTYPE (focus)=\"onFocus(ACTYPE)\" [selectOnTab]='true' [virtualScroll]=\"true\"\r\n                    required placeholder=\"Scheme\" (change)=\"getShareAccounts($event)\" autofocus>\r\n                    <ng-option *ngFor=\"let values of SchemeCodeObject\" [value]=\"values\">\r\n                      {{values.label}} </ng-option>\r\n                  </ng-select>\r\n                  <label for=\"ACTYPE\">Scheme <sub class=\"required\"> * </sub></label>\r\n                </span>\r\n              </div>\r\n              <!-- <div class=\"form-group form-primary form-static-label\">\r\n                <ng-select [ngClass]=\"'ng-select'\" [options]=\"SchemeCodeObject\" [multiple]=\"false\"\r\n                  placeholder=\"Scheme *\" required title=\"Compulsory Selection\" [(ngModel)]=\"acType\"\r\n                  (selected)=\"(acType)\" formControlName=\"ACTYPE\">\r\n                </ng-select>\r\n              </div> -->\r\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\r\n                  angForm.controls['ACTYPE'].invalid &&\r\n                  (angForm.controls['ACTYPE'].dirty ||\r\n                    angForm.controls['ACTYPE'].touched)\r\n                \" class=\"alert alert-danger\">\r\n                <div *ngIf=\"angForm.controls['ACTYPE'].errors?.required\">\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group form-primary form-static-label\">\r\n                <span class=\"border-lable-flt\">\r\n                  <ng-select appTheme bindValue=\"value\" [(ngModel)]=\"ngSalary\" id=\"AC_SALARYDIVISION_CODE\" bindLabel=\"label\"\r\n                    formControlName=\"AC_SALARYDIVISION_CODE\" title=\"Compulsory Selection\" [virtualScroll]=\"true\"\r\n                    #AC_SALARYDIVISION_CODE (focus)=\"onFocus(AC_SALARYDIVISION_CODE)\" [selectOnTab]='true'\r\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Salary Division\">\r\n                    <ng-option *ngFor=\"let values of SalaryDMasterObject\" [value]=\"values\">\r\n                      {{values.label}} </ng-option>\r\n                  </ng-select>\r\n                  <label for=\"AC_SALARYDIVISION_CODE\">Salary Division<sub class=\"required\"> * </sub></label>\r\n                </span>\r\n              </div>\r\n              <!-- <div class=\"form-group form-primary form-static-label\">\r\n                <ng-select [ngClass]=\"'ng-select'\" [options]=\"SalaryDMasterObject\" [multiple]=\"false\"\r\n                  placeholder=\"Salary Division\" formControlName=\"AC_SALARYDIVISION_CODE\">\r\n                </ng-select>\r\n              </div> -->\r\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"\r\n                  angForm.controls['AC_SALARYDIVISION_CODE'].invalid &&\r\n                  (angForm.controls['AC_SALARYDIVISION_CODE'].dirty ||\r\n                    angForm.controls['AC_SALARYDIVISION_CODE'].touched)\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"angForm.controls['AC_SALARYDIVISION_CODE'].errors?.required\">\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input appTheme appButton minlength=\"10\" maxlength=\"10\"\r\n                   type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"WARRENT_DATE\" id=\"WARRENT_DATE\" class=\"form-control\"\r\n                    required #date [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"#date [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                    #WARRENT_DATE=\"bsDatepicker\"  (keydown.Tab)=\"WARRENT_DATE.hide()\"\r\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"WARRENT_DATE\" minlength=\"10\"\r\n                    maxlength=\"10\" (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                    bsDatepicker>\r\n                  <label for=\"WARRENT_DATE\">Dividend Warrant Date<sub class=\"required\">*\r\n                    </sub></label>\r\n                </span>\r\n              </div>\r\n              <!-- <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"WARRENT_DATE\" required=\"\"\r\n                    max=\"{{ date | date: 'yyyy-MM-dd' }}\" formControlName=\"WARRENT_DATE\" value=\"\"\r\n                    onfocus=\"(this.type='date')\" />\r\n                  <label for=\"WARRENT_DATE\">Div.Warrant Date <sub class=\"required\">*</sub>\r\n                  </label>\r\n                </span>\r\n              </div> -->\r\n              <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['WARRENT_DATE'].invalid &&\r\n                  (angForm.controls['WARRENT_DATE'].dirty || angForm.controls['WARRENT_DATE'].touched)\"\r\n                class=\"alert alert-danger\">\r\n                <div *ngIf=\"angForm.controls['WARRENT_DATE'].errors?.required\">\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                  <input appTheme type=\"text\" name=\"DIV_FROM_YEAR\" class=\"form-control\" placeholder=\" \" id=\"DIV_FROM_YEAR\" [min]=\"year\" \r\n                    formControlName=\"DIV_FROM_YEAR\" pattern=\"^[0-9]+$\" minlength=\"4\" maxlength=\"4\"\r\n                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\" (focusout)=\"getDivYearTo()\" required >\r\n                  <label for=\"DIV_FROM_YEAR\">Dividend Year From <sub class=\"required\">*</sub></label>\r\n                </span>\r\n              </div>\r\n              <div class=\"form-group form-primary form-static-label\"\r\n                *ngIf=\"angForm.controls['DIV_FROM_YEAR'].invalid && (angForm.controls['DIV_FROM_YEAR'].dirty || angForm.controls['DIV_FROM_YEAR'].touched)\"\r\n                class=\"alert alert-danger\">\r\n                <div\r\n                  *ngIf=\"angForm.controls['DIV_FROM_YEAR'].errors?.pattern || angForm.controls['DIV_FROM_YEAR'].errors?.required || angForm.controls['DIV_FROM_YEAR'].errors?.minlength || angForm.controls['DIV_FROM_YEAR'].errors?.maxlength\">\r\n                  Input allowed only 0-9\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input appTheme type=\"text\" name=\"DIV_TO_YEAR\" class=\"form-control\" placeholder=\" \" id=\"DIV_TO_YEAR\"\r\n                    formControlName=\"DIV_TO_YEAR\" disabled>\r\n                  <label for=\"DIV_TO_YEAR\">Dividend Year To <sub class=\"required\">*</sub></label>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n              <div class=\"form-group form-primary form-static-label\">\r\n                <span class=\"border-lable-flt\">\r\n                  <ng-select appTheme id=\"AC_NOFrom\" bindValue=\"value\" [(ngModel)]=\"ngAcnoFrom\" bindLabel=\"AC_NO\"\r\n                    formControlName=\"AC_NOFrom\" title=\"Compulsory Selection\" [virtualScroll]=\"true\"\r\n                    #AC_NOFrom (focus)=\"onFocus(AC_NOFrom)\" [selectOnTab]='true'\r\n                    [ngClass]=\"{'form-submitted': formSubmitted}\" placeholder=\"Member From\">\r\n                    <ng-option *ngFor=\"let values of ShareMasterObject\" [value]=\"values\">\r\n                      {{values.label}} {{values.name}}</ng-option>\r\n                  </ng-select>\r\n                  <label for=\"AC_NOFrom\">Member From</label>\r\n                </span>\r\n              </div>\r\n              <!-- <div class=\"form-group form-primary form-static-label\">\r\n                <ng-select [ngClass]=\"'ng-select'\" [options]=\"ShareMasterObject\" [multiple]=\"false\"\r\n                  placeholder=\"Member From\" formControlName=\"AC_NOFrom\">\r\n                </ng-select>\r\n              </div> -->\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n              <div class=\"form-group form-primary form-static-label\">\r\n                <span class=\"border-lable-flt\">\r\n                  <ng-select appTheme id=\"AC_NOTo\" bindValue=\"value\" [(ngModel)]=\"ngAcnoTo\" bindLabel=\"AC_NO\"\r\n                    formControlName=\"AC_NOTo\" title=\"Compulsory Selection\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                    #AC_NOTo (focus)=\"onFocus(AC_NOTo)\" [selectOnTab]='true'  [virtualScroll]=\"true\"\r\n                    placeholder=\"Member To\" (change)=\"getDividendTable()\">\r\n                    <ng-option *ngFor=\"let values of ShareMasterObjectB\" [value]=\"values\">\r\n                      {{values.label}} {{values.name}}</ng-option>\r\n                  </ng-select>\r\n                  <label for=\"AC_NOTo\">Member To</label>\r\n                </span>\r\n              </div>\r\n              <!-- <div class=\"form-group form-primary form-static-label\">\r\n                <ng-select [ngClass]=\"'ng-select'\" [options]=\"ShareMasterObjectB\" [multiple]=\"false\"\r\n                  placeholder=\"Member To \" formControlName=\"AC_NOTo\" (ngModelChange)=\"getDividendTable()\">\r\n                </ng-select>\r\n              </div> -->\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input type=\"text\" name=\"TOTAL_SHARES\" class=\"form-control\" placeholder=\" \" id=\"TOTAL_SHARES\"\r\n                    formControlName=\"TOTAL_SHARES\" disabled>\r\n                  <label for=\"TOTAL_SHARES\">Total Amount</label>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\" style=\"float: right;\">\r\n              <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\" (click)=\"submit()\"\r\n                [disabled]=\"angForm.invalid\"  (keydown.Tab)=\"focus()\" appTheme> Submit </button>\r\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"addNewData()\" *ngIf=\"newbtnShow\">\r\n                Cancel </button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n              <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\"\r\n                [disabled]=\"angForm.invalid\"> Update</button>\r\n            </div>\r\n            <!-- <div class=\"col-sm-3\">\r\n              <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\"\r\n                [disabled]=\"angForm.invalid\">\r\n                Add\r\n              </button>&nbsp;\r\n              <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" [disabled]=\"angForm.invalid\"\r\n                *ngIf=\"updateShow\">\r\n                Update\r\n              </button>\r\n              <button class=\"btn btn-primary ripple light\" (click)=\"addNewData()\" *ngIf=\"newbtnShow\">\r\n                Cancel\r\n              </button>\r\n            </div> -->\r\n          </div>\r\n          <ng-container *ngIf=\"showTable\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <div class=\"table-responsive\">\r\n                  <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\r\n                    class=\"table table-striped table-bordered table-hover\">\r\n                    <thead>\r\n                      <td>Member No</td>\r\n                      <td>Member Name</td>\r\n                      <td>Dividend Amount</td>\r\n                      <td>Close Date</td>\r\n                    </thead>\r\n                    <tbody *ngIf=\"multiShare?.length != 0\">\r\n                      <!-- <tr>\r\n                        <th>Member No</th>\r\n                        <th>Member Name</th>\r\n                        <th>Dividend Amount</th>\r\n                        <th>Close Date</th>\r\n                      </tr> -->\r\n                      <tr *ngFor=\"let data of multiShare;\r\n                          let indexOfelement = index\">\r\n                        <td>{{ data.AC_NO }}</td>\r\n                        <td>{{ data.AC_NAME }}</td>\r\n                        <td>\r\n                          <input type=\"text\" name=\"DIVIDEND_AMOUNT\" id=\"DIVIDEND_AMOUNT\"\r\n                            value=\"{{ data.shareDividend.DIVIDEND_AMOUNT }}\" #divAmt\r\n                            (focusout)=\"getAmount(data.id,data.shareDividend.id,data.AC_NO,divAmt.value)\">\r\n\r\n                        </td>\r\n                        <td>\r\n                          <!-- <input type=\"text\" onfocus=\"(this.type='date')\" max=\"{{ date | date: 'yyyy-MM-dd' }}\"\r\n                            value=\"{{ data.shareDividend.MEMBER_CLOSE_DATE }}\" #closeDate\r\n                            (ngModelChange)=\"getCloseDate(data.id,data.shareDividend.id,data.AC_NO,closeDate.value)\"\r\n                            (focusout)=\"getCloseDate(data.id,data.shareDividend.id,data.AC_NO,closeDate.value)\"> -->\r\n\r\n                          <input type=\"text\" appButton minlength=\"10\" maxlength=\"10\"\r\n                           name=\"DIVIDEND_AMOUNT\" id=\"DIVIDEND_AMOUNT\" placeholder=\"dd/mm/yyyy\"\r\n                            class=\"form-control\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" bsDatepicker\r\n                            value=\"{{ data.shareDividend.MEMBER_CLOSE_DATE }}\" #closeDate\r\n                            (bsValueChange)=\"getCloseDate(data.id,data.shareDividend.id,data.AC_NO,closeDate.value)\"\r\n                            (focusout)=\"getAmount(data.id,data.shareDividend.id,data.AC_NO,divAmt.value)\">\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                    <tbody *ngIf=\"multiShare?.length == 0\">\r\n                      <tr>\r\n                        <td colspan=\"4\" class=\"no-data-available\">No data!</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTablesModule } from 'angular-datatables';\nimport { YearWiseUnpaidDividendEntryRoutingModule } from './year-wise-unpaid-dividend-entry-routing.module';\nimport { YearWiseUnpaidDividendEntryComponent } from './year-wise-unpaid-dividend-entry.component';\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\nimport { MembernoService } from '../../../../shared/elements/memberno.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// import { SelectModule } from 'ng-select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { YearwiseunpaidService } from './year-wise-unpaid-dividend-entry.service';\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service';\nimport { SalaryDMasterdropdownService } from '../../../../shared/dropdownService/salary-division-master-dropdown.service';\nimport { ShareMasterDropdownService } from '../../../../shared/dropdownService/share-master-dropdown.service';\nimport { ShareSchemeDropdownService } from '../../../../shared/dropdownService/share-scheme-dropdown.Service';\nimport { ShareMasterService } from '../../customer/shares-master/shares-master.service';\nimport { CustomerIdService } from '../../customer/customer-id/customer-id.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { SchemeAccountNoService } from '../../../../shared/dropdownService/schemeAccountNo.service'\nimport { ThemeModule } from 'src/app/theme/theme.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    YearWiseUnpaidDividendEntryRoutingModule,\n    DataTablesModule,\n    NgbModule,\n    // SelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n    ThemeModule\n  ],\n  declarations: [YearWiseUnpaidDividendEntryComponent],\n  providers: [YearwiseunpaidService,\n    SchemeCodeDropdownService,\n    SalaryDMasterdropdownService,\n    ShareMasterDropdownService,\n    ShareMasterService,\n    ShareSchemeDropdownService,\n    CustomerIdService,\n    SchemeAccountNoService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ]\n\n})\nexport class YearWiseUnpaidDividendEntryModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport {environment}  from '../../../../../environments/environment';\nimport {ShareMasterService} from '../../../master/customer/shares-master/shares-master.service'\n\n@Injectable()\nexport class YearwiseunpaidService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n  //url = \"http://localhost:4000/year-wise-unpaid-dividend-entry\";\n  url = environment.base_url;\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/year-wise-unpaid-dividend-entry/insert', data).pipe(map((res) => res),\n    catchError((error) => {\n      Swal.fire('Please Input Proper Data !');\n      return throwError(error);\n    })\n    )\n  }\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/year-wise-unpaid-dividend-entry/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/year-wise-unpaid-dividend-entry/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/year-wise-unpaid-dividend-entry/delete/' + id).pipe(catchError(this.handleError));\n  }\n}\n\n\n"],"sourceRoot":"webpack:///"}