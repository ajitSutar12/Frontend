{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/transaction/inward-register/inward-register-routing.module.ts","./src/app/theme/transaction/inward-register/inward-register.component.ts","./src/app/theme/transaction/inward-register/inward-register.component.html","./src/app/theme/transaction/inward-register/inward-register.module.ts"],"names":[],"mappings":"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","file":"inward-register-inward-register-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {InwardRegisterComponent} from './inward-register.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InwardRegisterComponent,\n    data: {\n      title: 'Inward Register',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InwardRegisterRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\n\n@Component({\n  selector: 'app-inward-register',\n  templateUrl: './inward-register.component.html',\n  styleUrls: ['./inward-register.component.scss']\n})\nexport class InwardRegisterComponent implements OnInit {\n  angForm : FormGroup;\n  maxDate: Date;\n  obj: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private ownbranchMasterService: OwnbranchMasterService,\n    private _schemeService: SchemeAccountNoService,\n    public schemeCodeDropdownService: SchemeCodeDropdownService,\n  ) \n  { \n    this.maxDate = new Date();\n    this.maxDate.setDate(this.maxDate.getDate());\n  }\n\n  //checkbox variable\n  isIsRestrictTransactionEntry: boolean = false;\n\n  //ngfor variables\n  branchCode\n  member_No\n  loan_Scheme\n\n  //ngmodel variables\n  selectedBranch1\n  selectedshMemNo\n  selectedLScheme\n  selectedBranch\n  nhelp\n\n  ngOnInit(): void {\n    this.createForm();\n\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branchCode = data;\n    })\n\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    let branchCode = result.branch.id;\n    let code = 1;\n    this.obj = [code,branchCode]\n\n    this._schemeService.getShareSchemeList1(this.obj).subscribe(data => {\n\n      this.member_No = data;\n\n    })\n    \n\n     // Scheme Code\n     this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\n\n      var filtered = data.filter(function (loan_Scheme) {\n        return (loan_Scheme.name == 'LN' || loan_Scheme.name == 'CC' || loan_Scheme.name == 'DS');\n      });\n      this.loan_Scheme = filtered;\n      //console.log(this.loan_Scheme);\n\n    })\n    \n  }\n\n  getbranch(event)\n    {\n      this.selectedBranch = event.label;\n      console.log(event);\n    }\n\n  createForm(){\n    this.angForm = this.fb.group({\n      inwardNo: ['',[Validators.required]],\n      branch: ['',[Validators.required]],\n      date: ['',[Validators.required]],\n      memno: ['',[Validators.required]],\n      dbranch: ['',[Validators.required]],\n      lscheme: ['',[Validators.required]],\n      nhNo: ['1',[Validators.required]],\n      otherif: ['',[Validators.required]],\n      NARRATION: [''],\n      checkActive: [false]\n    });\n  }\n\n}\n","<!-- <p>inward-register works!</p> -->\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Inward Register</h5>\r\n            </div>\r\n\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n                <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Branch<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedBranch1\" #scheme formControlName=\"branch\"\r\n                                        bindValue=\"value\" bindLabel=\"label\" (change)=\"getbranch($event)\">\r\n                                        <ng-option *ngFor=\"let item of branchCode\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['branch'].invalid && (angForm.controls['branch'].dirty || angForm.controls['branch'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['branch'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Inward Number\r\n                                <sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"INSTALLMENT_NO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"INSTALLMENT_NO\" maxlength=\"10\" formControlName=\"inwardNo\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        disabled>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['inwardNo'].invalid && (angForm.controls['inwardNo'].dirty || angForm.controls['inwardNo'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['inwardNo'].errors?.pattern || angForm.controls['inwardNo'].errors?.required || angForm.controls['inwardNo'].errors?.maxlength\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"Date\">Date<sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"Date\" id=\"Date\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" class=\"form-control\"\r\n                                        formControlName=\"date\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker [maxDate]=\"maxDate\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['date'].invalid && (angForm.controls['date'].dirty || angForm.controls['date'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['date'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Member Number<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedshMemNo\" #scheme formControlName=\"memno\"\r\n                                        bindValue=\"value\" bindLabel=\"label\">\r\n                                        <ng-option *ngFor=\"let item of member_No\" [value]=\"item\">\r\n                                            {{item.label}} {{item.name}} </ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['memno'].invalid && (angForm.controls['memno'].dirty || angForm.controls['memno'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['memno'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"card-body\" id=\"cb\">\r\n                    <h1><span>Inward Details</span></h1>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Branch\r\n                                <sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"INSTALLMENT_NO\" [(ngModel)]=\"selectedBranch\"\r\n                                        class=\"form-control\" placeholder=\" \" id=\"INSTALLMENT_NO\" maxlength=\"10\"\r\n                                        formControlName=\"dbranch\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['dbranch'].invalid && (angForm.controls['dbranch'].dirty || angForm.controls['dbranch'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['dbranch'].errors?.pattern || angForm.controls['dbranch'].errors?.required || angForm.controls['dbranch'].errors?.maxlength\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Loan Scheme<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedLScheme\" #scheme formControlName=\"lscheme\"\r\n                                        bindValue=\"value\" bindLabel=\"label\">\r\n                                        <ng-option *ngFor=\"let item of loan_Scheme\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['lscheme'].invalid && (angForm.controls['lscheme'].dirty || angForm.controls['lscheme'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['lscheme'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\"\r\n                                        [checked]=\"isIsRestrictTransactionEntry == true\" formControlName=\"checkActive\">\r\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Other\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"INSTALLMENT_NO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"INSTALLMENT_NO\" maxlength=\"10\" formControlName=\"otherif\"\r\n                                        [hidden]=\"!angForm.controls.checkActive.value\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['otherif'].invalid && (angForm.controls['otherif'].dirty || angForm.controls['otherif'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['otherif'].errors?.pattern || angForm.controls['otherif'].errors?.required || angForm.controls['otherif'].errors?.maxlength\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"card-body\" id=\"cb1\">\r\n                        <h1><span>Narration Help</span></h1>\r\n                        <div class=\"solid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-md-1\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" name=\"INSTALLMENT_NO\" class=\"form-control\"\r\n                                                placeholder=\" \" id=\"INSTALLMENT_NO\" maxlength=\"3\" formControlName=\"nhNo\"\r\n                                                (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\">\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"angForm.controls['nhNo'].invalid && (angForm.controls['nhNo'].dirty || angForm.controls['nhNo'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div\r\n                                            *ngIf=\"angForm.controls['nhNo'].errors?.pattern || angForm.controls['nhNo'].errors?.required || angForm.controls['nhNo'].errors?.maxlength\">\r\n                                            This field is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- <div class=\"col-sm-12 col-md-1\"><label for=\"AC_PARTICULAR\">Particulars</label>\r\n                                </div> -->\r\n                                <div class=\"col-md-5\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <textarea class=\"form-control\" formControlName=\"particulars\"\r\n                                                [(ngModel)]=\"nhelp\"></textarea>\r\n                                            <!-- <i class=\"fa fa-info-circle errspan\"></i> -->\r\n                                        </span>\r\n                                    </div>\r\n                                    <!-- <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"angForm.controls['particulars'].invalid && (angForm.controls['particulars'].dirty || angForm.controls['particulars'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div\r\n                                            *ngIf=\"angForm.controls['particulars'].errors?.pattern || angForm.controls['particulars'].errors?.required || angForm.controls['particulars'].errors?.maxlength\">\r\n                                            This field is required.\r\n                                        </div>\r\n                                    </div> -->\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-md-2\">\r\n                                    <button class=\"btn  btn-outline-primary btn-sm\">Add Narration</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\" id=\"btnrow\">\r\n                    <div class=\"col-12\">\r\n                        <button class=\"btn  btn-outline-primary btn-sm\">Close</button>\r\n\r\n                        <button class=\"btn  btn-outline-primary btn-sm\">Cancel</button>\r\n\r\n                        <button class=\"btn  btn-outline-primary btn-sm\">Update</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { InwardRegisterRoutingModule } from './inward-register-routing.module';\n\nimport {DataTablesModule} from 'angular-datatables';\nimport { InwardRegisterComponent } from './inward-register.component'\n\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    InwardRegisterRoutingModule,\n    NgbModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n  ],\n  declarations: [InwardRegisterComponent],\n  providers:[{\n    provide: HTTP_INTERCEPTORS,\n    useClass: UserAuthInterceptor,\n    multi: true\n  },\n  OwnbranchMasterService,\n  SchemeAccountNoService,\n  SchemeCodeDropdownService\n]\n  \n})\nexport class InwardRegisterModule { }\n"],"sourceRoot":"webpack:///"}