{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/theme/master/customer/dead-stock-master/dead-stock-master.service.ts","./src/app/theme/reports/registers/bnk-reg-dead-stock/bnk-reg-dead-stock-routing.module.ts","./src/app/theme/reports/registers/bnk-reg-dead-stock/bnk-reg-dead-stock.component.ts","./src/app/theme/reports/registers/bnk-reg-dead-stock/bnk-reg-dead-stock.component.html","./src/app/theme/reports/registers/bnk-reg-dead-stock/bnk-reg-dead-stock.module.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"bnk-reg-dead-stock-bnk-reg-dead-stock-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n\n@Injectable()\nexport class DeadstockmasterService {\n    // Variable for handleError\n    [x: string]: any;\n\n    // API  \n    //url = \"http://localhost:4000/dead-stock-master\";\n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    //Insertion Operation\n    postData(data: any): Observable<any> {\n        return this.http.post(this.url + '/dead-stock-master/insert', data).pipe(map((res) => res),\n            catchError((error) => {\n                Swal.fire('Please Input Proper Data!');\n                return throwError(error);\n            })\n        )\n    }\n    // For append data\n    getFormData(id: any): Observable<any> {\n        return this.http.get(this.url + '/dead-stock-master/' + id).pipe(catchError(this.handleError));\n    }\n    //Updation Operation\n    updateData(data): Observable<any> {\n        return this.http.put(this.url + '/dead-stock-master/update', data);\n    }\n    //Deletion Operation\n    deleteData(id: any): Observable<any> {\n        return this.http.delete(this.url + '/dead-stock-master/delete/' + id).pipe(catchError(this.handleError));\n    }\n    castObject = []\n    obj = {}\n    public getDeadstockList() {\n        return this.http.get<any>(this.url + '/dead-stock-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.ITEM_NAME, value: element.id };\n                    this.castObject.push(obj)\n                });\n                return this.castObject;\n            }));\n    }\n\n    //approve master\n    approve(data: any): Observable<any> {\n        return this.http.post(this.url + '/dead-stock-master/approve', data).pipe(catchError(this.handleError));\n    }\n    //unapporve master\n    unapporve(data: any): Observable<any> {\n        return this.http.post(this.url + '/dead-stock-master/unapporve', data).pipe(catchError(this.handleError));\n    }\n\n\n    //reject master\n    reject(data: any): Observable<any> {\n        return this.http.post(this.url + '/dead-stock-master/reject', data).pipe(catchError(this.handleError));\n    }\n\n}\n\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { BnkRegDeadStockComponent } from './bnk-reg-dead-stock.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  BnkRegDeadStockComponent,\r\n    data: {\r\n      title: 'Deadstock Register',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class  BnkRegDeadStockRoutingModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport Swal from 'sweetalert2';\r\nimport { DeadstockmasterService } from 'src/app/theme/master/customer/dead-stock-master/dead-stock-master.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-bnk-reg-dead-stock',\r\n  templateUrl: './bnk-reg-dead-stock.component.html',\r\n  styleUrls: ['./bnk-reg-dead-stock.component.scss'],\r\n  providers: [DeadstockmasterService]\r\n})\r\nexport class BnkRegDeadStockComponent implements OnInit {\r\n\r\n  iframe3url: any = '';\r\n  report_url = environment.report_url;\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  clicked: boolean = false;\r\n\r\n  //  variable for validation\r\n  formSubmitted = false;\r\n  showRepo: boolean = false;\r\n  //account\r\n  memFrom\r\n  memTo\r\n  branch\r\n  mem: any\r\n  // branch name \r\n  selectedBranch: number;\r\n  branch_codeList: any = null\r\n  branch_code: any[]//from ownbranchmaster\r\n  branchCode: any = null\r\n  ngBranchCode\r\n  ngscheme\r\n  allScheme: any[];\r\n  // Date variables\r\n  todate: any = null;\r\n  fromdate: any = null\r\n  maxDate: Date;\r\n  minDate: Date;\r\n  bsValue = new Date();\r\n  selectedCode: any;\r\n\r\n  //dropdown\r\n\r\n  startingacc: any[];\r\n  endingacc: any[];\r\n\r\n  //\r\n  startingAccount: any = null;\r\n  EndingAccount: any = null;\r\n\r\n  selectedType\r\n  Types = [\r\n    // { id: 1, name: \"All\" },\r\n    { id: 2, name: \"PUR\" },\r\n    { id: 3, name: \"SEL\" },\r\n    { id: 4, name: \"BRK\" },\r\n    { id: 5, name: \"Gain\" },\r\n    { id: 6, name: \"Loss\" },\r\n    { id: 7, name: \"Transfer\" },\r\n  ];\r\n\r\n  //api\r\n  url = environment.base_url;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private sanitizer: DomSanitizer,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private deadstockmasterService: DeadstockmasterService,\r\n    private systemParameter: SystemMasterParametersService,\r\n  ) {\r\n    this.todate = moment().format('DD/MM/YYYY');\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      BRANCH_CODE: ['', [Validators.required]],\r\n      Starting_Account: ['', [Validators.required]],\r\n      Ending_Account: ['', [Validators.required]],\r\n      START_DATE: ['', [Validators.required]],\r\n      END_DATE: ['', [Validators.required]],\r\n      GROUP_BY: ['', ],\r\n      PRINT_NEW_PAGE: [''],\r\n\r\n    })\r\n  }\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    if (result.RoleDefine[0].Role.id == 1) {\r\n      this.angForm.controls['BRANCH_CODE'].enable()\r\n      this.ngBranchCode = result.branch.id\r\n    }\r\n    else {\r\n      this.angForm.controls['BRANCH_CODE'].disable()\r\n      this.ngBranchCode = result.branch.id\r\n    }\r\n\r\n    this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\r\n      this.todate = data.CURRENT_DATE;\r\n    });\r\n\r\n    this.systemParameter.getFormData(1).subscribe(data => {\r\n      let year = moment(data.CURRENT_DATE, \"DD/MM/YYYY\").year()\r\n      // this.fromdate = `01/04/${year - 1}`      \r\n      this.todate = data.CURRENT_DATE\r\n\r\n      this.fromdate = moment(`01/04/${year - 1}`, 'DD/MM/YYYY')\r\n      this.fromdate = this.fromdate._d\r\n    })\r\n\r\n    //branch List\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n      // this.ngBranchCode = data[0].value\r\n    })\r\n    //dead stock \r\n    this.deadstockmasterService.getDeadstockList().pipe(first()).subscribe(data => {\r\n      this.startingacc = data;\r\n      this.endingacc = data;\r\n      console.log(data)\r\n    })\r\n\r\n  }\r\n  src: any;\r\n  view(event) {\r\n\r\n    event.preventDefault();\r\n    this.formSubmitted = true;\r\n\r\n    let userData = JSON.parse(localStorage.getItem('user'));\r\n    let bankName = userData.branch.syspara.BANK_NAME;\r\n    let branchName = userData.branch.NAME\r\n\r\n    if (this.angForm.valid) {\r\n      this.showRepo = true;\r\n      let obj = this.angForm.value\r\n      let startingdate = moment(obj.START_DATE).format('DD/MM/YYYY');\r\n      //  let endingdate = moment(obj.END_DATE).format('DD/MM/YYYY');\r\n\r\n      let endingdate: any;\r\n      if (this.todate == obj.END_DATE) {\r\n        endingdate = moment(this.todate, 'DD/MM/YYYY').format('DD/MM/YYYY')\r\n      } else {\r\n        endingdate = moment(this.todate, 'DD/MM/YYYY').format('DD/MM/YYYY')\r\n      };\r\n\r\n      let branch = obj.BRANCH_CODE;\r\n      let startingcode = obj.Starting_Account;\r\n      let endingcode = obj.Ending_Account;\r\n      let groupby = obj.GROUP_BY;\r\n\r\n      let checkbox = obj.PRINT_NEW_PAGE;\r\n\r\n\r\n      this.iframe3url = this.report_url + \"examples/DeadStockRegister.php?startingcode='\" + startingcode + \"'&endingcode='\" + endingcode + \"'&branchName='\" + branchName +\"'&branch='\" + this.ngBranchCode + \"'&startingdate='\" + startingdate + \"'&endingdate='\" + endingdate + \"'&groupby='\" + groupby + \"'&checkbox='\" + checkbox + \"'&bankName='\" + bankName + \"' \";\r\n      this.iframe3url = this.sanitizer.bypassSecurityTrustResourceUrl(this.iframe3url);\r\n    }\r\n    else {\r\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning');\r\n    }\r\n\r\n  }\r\n\r\n  getschemename\r\n  //load acno according start and end acno\r\n  loadAcno() {\r\n    this.memFrom = this.angForm.controls['Starting_Account'].value\r\n    this.memTo = this.angForm.controls['Ending_Account'].value\r\n    this.branch = this.angForm.controls['BRANCH_CODE'].value\r\n    // if (this.angForm.controls['Starting_Account'].value < this.angForm.controls['Ending_Account'].value) {\r\n      this.mem = [this.memFrom, this.memTo, this.branch]\r\n      if (this.getschemename) {\r\n        this.http.get(this.url + '/dead-stock-master' + this.mem).subscribe((data) => {\r\n        });\r\n      }\r\n    // }else {\r\n    //   Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(() => { this.clicked = false });\r\n    // }\r\n  }\r\n\r\n  close() {\r\n    this.resetForm()\r\n  }\r\n\r\n  resetForm() {\r\n    // this.createForm()\r\n    this.angForm.controls.Starting_Account.reset();\r\n    this.angForm.controls.Ending_Account.reset();\r\n    this.angForm.controls.GROUP_BY.reset();\r\n    this.showRepo = false;\r\n    this.clicked = false;\r\n  }\r\n\r\n}","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Deadstock Register</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <label for=\"BRANCH\">Branch</label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"Starting Code\">Starting Code<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select formControlName=\"Starting_Account\" bindValue=\"value\" bindLabel=\"label\"\r\n                                        [(ngModel)]=\"startingAccount\">\r\n                                        <ng-option *ngFor=\"let values of startingacc\" [value]=\"values\">\r\n                                            {{values.value}} {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Starting_Account'].invalid && (angForm.controls['Starting_Account'].dirty || angForm.controls['Starting_Account'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['Starting_Account'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"Member No.\">Ending Code<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select formControlName=\"Ending_Account\" bindValue=\"value\" bindLabel=\"label\"\r\n                                        [(ngModel)]=\"EndingAccount\" (change)=\"loadAcno()\">\r\n                                        <ng-option *ngFor=\"let values of endingacc\" [value]=\"values\">\r\n                                            {{values.value}} {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Ending_Account'].invalid && (angForm.controls['Ending_Account'].dirty || angForm.controls['Ending_Account'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['Ending_Account'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"START_DATE\">Starting Date<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"START_DATE\" id=\"START_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"fromdate\" [bsValue]=\"bsValue\"\r\n                                        [maxDate]=\"maxDate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                        formControlName=\"START_DATE\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['START_DATE'].invalid && (angForm.controls['START_DATE'].dirty || angForm.controls['START_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['START_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"END_DATE\">Ending Date<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"END_DATE\" id=\"END_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"todate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"fromdate\"\r\n                                        [maxDate]=\"maxDate\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                        formControlName=\"END_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['END_DATE'].invalid && (angForm.controls['END_DATE'].dirty || angForm.controls['END_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['END_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- <div class=\"col-sm-12 col-md-2\"> <label for=\"GROUP_BY\">Grouping By<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedType\" formControlName=\"GROUP_BY\"\r\n                                        placeholder=\"Group By\" required>\r\n                                        <ng-option *ngFor=\"let type of Types\" [value]=\"type.name\">{{ type.name }}\r\n                                        </ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\" angForm.controls['GROUP_BY'].invalid &&(angForm.controls['GROUP_BY'].dirty || angForm.controls['GROUP_BY'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['GROUP_BY'].errors?.required ||angForm.controls['GROUP_BY'].errors?.pattern\">\r\n                                    This is required field\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n\r\n                        <div class=\"col-md\">\r\n                            <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input type=\"checkbox\" class=\"border-checkbox\" id=\"PRINT_NEW_PAGE\"\r\n                                        formControlName=\"PRINT_NEW_PAGE\">\r\n                                    <label class=\"border-checkbox-label\" for=\"PRINT_NEW_PAGE\">Print Every Account On New\r\n                                        Page ?</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\"></div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-9\"></div>\r\n                        <div class=\"col-md-2\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\"\r\n                                (click)=\"view($event); clicked = true \">View</button>\r\n\r\n                        </div>\r\n                        <div class=\"col-md-1\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"close()\">Close</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\">\r\n                                    <h5>Report Frame</h5>\r\n                                </div>\r\n                                <div *ngIf=\"showRepo\">\r\n                                    <app-iframe3 [url]='iframe3url'></app-iframe3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {SharedModule} from '../../../../shared/shared.module';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { SystemMasterParametersService } from \"../../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BnkRegDeadStockComponent } from './bnk-reg-dead-stock.component';\r\nimport {BnkRegDeadStockRoutingModule} from './bnk-reg-dead-stock-routing.module';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { Iframe3Module } from '../iframe3/iframe3.module';\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    PerfectScrollbarModule,\r\n    NgSelectModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    BnkRegDeadStockRoutingModule,\r\n    Iframe3Module \r\n  ],\r\n\r\n  declarations: [BnkRegDeadStockComponent],\r\n  exports:[BnkRegDeadStockComponent],\r\n  providers: [\r\n    {\r\n\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\r\n\r\n    },\r\n    SystemMasterParametersService,\r\n    SchemeAccountNoService,\r\n    OwnbranchMasterService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UserAuthInterceptor,\r\n      multi: true\r\n    },\r\n  ]\r\n})\r\nexport class BnkRegDeadStockModule { }","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n\n@Injectable()\nexport class SystemMasterParametersService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n  // url = \"http://localhost:4000/system-master-parameters\";\n  url = environment.base_url;\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\n      catchError((error) => {\n        let errorMessage = 'Please add valid length';\n        Swal.fire('Kindly Add Valid Length !');\n        return throwError(errorMessage);\n      })\n    )\n  }\n\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/system-master-parameters/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\n  }\n\n  getData(): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\n  }\n\n\n}\n\n\n"],"sourceRoot":"webpack:///"}