{"version":3,"sources":["./src/app/theme/forms/ngx-wizard/address/address.component.ts","./src/app/theme/forms/ngx-wizard/address/address.component.html","./src/app/theme/forms/ngx-wizard/data/formData.model.ts","./src/app/theme/forms/ngx-wizard/data/formData.service.ts","./src/app/theme/forms/ngx-wizard/navbar/navbar.component.ts","./src/app/theme/forms/ngx-wizard/navbar/navbar.component.html","./src/app/theme/forms/ngx-wizard/ngx-wizard-routing.module.ts","./src/app/theme/forms/ngx-wizard/ngx-wizard.component.ts","./src/app/theme/forms/ngx-wizard/ngx-wizard.component.html","./src/app/theme/forms/ngx-wizard/ngx-wizard.module.ts","./src/app/theme/forms/ngx-wizard/personal/personal.component.ts","./src/app/theme/forms/ngx-wizard/personal/personal.component.html","./src/app/theme/forms/ngx-wizard/result/result.component.ts","./src/app/theme/forms/ngx-wizard/result/result.component.html","./src/app/theme/forms/ngx-wizard/work/work.component.ts","./src/app/theme/forms/ngx-wizard/work/work.component.html","./src/app/theme/forms/ngx-wizard/workflow/workflow.model.ts","./src/app/theme/forms/ngx-wizard/workflow/workflow.service.ts"],"names":[],"mappings":"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","file":"ngx-wizard-ngx-wizard-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Address } from '../data/formData.model';\nimport { FormDataService } from '../data/formData.service';\nimport { WorkflowService } from '../workflow/workflow.service';\nimport { STEPS } from '../workflow/workflow.model';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-mt-wizard-address',\n    templateUrl: './address.component.html',\n    styleUrls: ['./address.component.scss']\n})\n\nexport class AddressComponent implements OnInit {\n    title = 'Where do you live?';\n    address: Address;\n    form: any;\n\n    constructor(private router: Router,\n        private route: ActivatedRoute, private formDataService: FormDataService,\n        private workflowService: WorkflowService) {\n    }\n\n    ngOnInit() {\n        this.address = this.formDataService.getAddress();\n\n    }\n\n    save(form: any) {\n        if (!form.valid) {\n          return;\n        }\n\n        this.formDataService.setAddress(this.address);\n        const firstState = this.workflowService.getFirstInvalidStep(STEPS.work);\n        this.router.navigate(['result'], { relativeTo: this.route.parent, skipLocationChange: true });\n    }\n\n    cancel() {\n        this.router.navigate(['work'], { relativeTo: this.route.parent, skipLocationChange: true });\n    }\n\n}\n","<!-- Address Tab form Starts -->\n<form #addressForm=\"ngForm\" class=\"editForm\" novalidate>\n    <div class=\"tab-pane active\">\n        <h4 class=\"head text-center\">{{title}}</h4>\n        <br/>\n        <div class='row'>\n            <div class='col-sm-12'>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"street\">Street Address</label>\n                    <input class=\"form-control input-md\" #street=\"ngModel\" required id=\"street\" name=\"street\" type=\"text\"  [(ngModel)]=\"address.street\">\n                    <small class=\"form-text text-danger\" *ngIf=\"!street.valid && (street.dirty || street.touched)\">This field is required!</small>\n\n                </div>\n                <div class=\"row\">\n                    <div class='col-12 col-sm-4'>\n                        <div class=\"form-group\">\n                            <label class=\"form-control-label\" for=\"city\">City</label>\n                            <input class=\"form-control input-md\" #city=\"ngModel\" required id=\"city\" name=\"city\" type=\"text\"  [(ngModel)]=\"address.city\">\n                            <small class=\"form-text text-danger\" *ngIf=\"!city.valid && (city.dirty || city.touched)\">This field is required!</small>\n\n                        </div>\n                    </div>\n                    <div class='col-4 col-sm-offset-1 col-sm-3'>\n                        <div class=\"form-group\">\n                            <label class=\"form-control-label\" for=\"state\">State</label>\n                            <input class=\"form-control input-md\" #state=\"ngModel\" required id=\"state\" name=\"state\" type=\"text\"  [(ngModel)]=\"address.state\">\n                            <small class=\"form-text text-danger\" *ngIf=\"!state.valid && (state.dirty || state.touched)\">This field is required!</small>\n\n                        </div>\n                    </div>\n                    <div class='col-offset-1 col-7 col-sm-offset-1 col-sm-3'>\n                        <div class=\"form-group\">\n                            <label class=\"form-control-label\" for=\"zip\">Zip</label>\n                            <input class=\"form-control input-md\" #zip=\"ngModel\" required id=\"zip\" name=\"zip\" type=\"text\"  [(ngModel)]=\"address.zip\">\n                            <small class=\"form-text text-danger\" *ngIf=\"!zip.valid && (zip.dirty || zip.touched)\">This field is required!</small>\n\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"form-group text-center\">\n                    <button uiSref=\"work\" type=\"button\" class=\"btn btn-raised btn-secondary\" (click)=\"cancel()\"> <span style=\"margin-right:10px;\"><i class=\"feather icon-chevron-left\"></i></span> Previous</button>\n                    <button uiSref=\"result\" type=\"button\" class=\"btn btn-raised btn-info\" [disabled]=\"!addressForm.valid\" (click)=\"save(addressForm)\"> Next <span style=\"margin-left:10px;\"><i class=\"feather icon-chevron-right\"></i></span></button>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</form>\n<!-- Address Tab form Ends -->\n","\nexport class FormData {\n    firstName: string;\n    lastName: string;\n    email: string;\n    work: string;\n    street: string;\n    city: string;\n    state: string;\n    zip: string;\n\n    clear() {\n        this.firstName = '';\n        this.lastName = '';\n        this.email = '';\n        this.work = '';\n        this.street = '';\n        this.city = '';\n        this.state = '';\n        this.zip = '';\n    }\n}\n\nexport class Personal {\n    firstName: string;\n    lastName: string;\n    email: string;\n}\n\nexport class Address {\n    street: string;\n    city: string;\n    state: string;\n    zip: string;\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormData, Personal, Address } from './formData.model';\nimport { WorkflowService } from '../workflow/workflow.service';\nimport { STEPS } from '../workflow/workflow.model';\n\n@Injectable()\nexport class FormDataService {\n\n    private formData: FormData = new FormData();\n    private isPersonalFormValid = false;\n    private isWorkFormValid = false;\n    private isAddressFormValid = false;\n\n    constructor(private workflowService: WorkflowService) {\n    }\n\n    getPersonal(): Personal {\n        const personal: Personal = {\n          firstName: this.formData.firstName,\n          lastName: this.formData.lastName,\n          email: this.formData.email\n        };\n        return personal;\n    }\n\n    setPersonal(data: Personal) {\n        this.isPersonalFormValid = true;\n        this.formData.firstName = data.firstName;\n        this.formData.lastName = data.lastName;\n        this.formData.email = data.email;\n        this.workflowService.validateStep(STEPS.personal);\n    }\n\n    getWork(): string {\n        return this.formData.work;\n    }\n\n    setWork(data: string) {\n        this.isWorkFormValid = true;\n        this.formData.work = data;\n        this.workflowService.validateStep(STEPS.work);\n    }\n\n    getAddress(): Address {\n        const address: Address = {\n            street: this.formData.street,\n            city: this.formData.city,\n            state: this.formData.state,\n            zip: this.formData.zip\n        };\n        return address;\n    }\n\n    setAddress(data: Address) {\n        this.isAddressFormValid = true;\n        this.formData.street = data.street;\n        this.formData.city = data.city;\n        this.formData.state = data.state;\n        this.formData.zip = data.zip;\n        this.workflowService.validateStep(STEPS.address);\n    }\n\n    getFormData(): FormData {\n        return this.formData;\n    }\n\n    resetFormData(): FormData {\n        this.workflowService.resetSteps();\n        this.formData.clear();\n        this.isPersonalFormValid = this.isWorkFormValid = this.isAddressFormValid = false;\n        return this.formData;\n    }\n\n    isFormValid() {\n        return this.isPersonalFormValid && this.isWorkFormValid && this.isAddressFormValid;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport { Router, ActivatedRoute, Params, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-msw-navbar',\n    templateUrl: './navbar.component.html',\n    styleUrls: ['./navbar.component.scss']\n})\n\nexport class NavbarComponent implements OnInit {\n\n  page = 'Personal';\n    constructor(private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.router.events\n            .filter(event => event instanceof NavigationEnd)\n            .subscribe(event => {\n                let currentRoute = this.route.root;\n                while (currentRoute.children[0] !== undefined) {\n                    currentRoute = currentRoute.children[0];\n                }\n                this.page = currentRoute.snapshot.data['title'];\n            });\n    }\n}\n","<div class=\"board-inner\" id=\"status-buttons\">\n    <ul class=\"nav nav-tabs nav-fill\" id=\"myTab\">\n        <div class=\"liner\"></div>\n\n        <li class=\"active nav-item\">\n            <a [ngClass]=\"(page==='Personal')?'nav-link active':'nav-link'\" uiSrefActive=\"active\" uiSref=\"personal\" data-toggle=\"tab\"\n                title=\"personal\">\n                <span class=\"round-tabs one\">\n                  <h5><i class=\"feather icon-user-check\"></i> Personal</h5>\n                </span>\n            </a>\n        </li>\n        <li class=\"nav-item\">\n            <a [ngClass]=\"(page==='Work')?'nav-link active':'nav-link'\" uiSrefActive=\"active\" uiSref=\"work\" data-toggle=\"tab\" title=\"work\">\n                <span class=\"round-tabs two\">\n                  <h5><i class=\"feather icon-message-circle\"></i> Work</h5>\n                </span>\n            </a>\n        </li>\n        <li class=\"nav-item\">\n            <a [ngClass]=\"(page==='Address')?'nav-link active':'nav-link'\" uiSrefActive=\"active\" uiSref=\"address\" data-toggle=\"tab\" title=\"address\">\n                <span class=\"round-tabs three\">\n                  <h5><i class=\"feather icon-map\"></i> Address</h5>\n                </span>\n            </a>\n        </li>\n        <li class=\"nav-item\">\n            <a [ngClass]=\"(page==='Result')?'nav-link active':'nav-link'\" uiSrefActive=\"active\" uiSref=\"result\" data-toggle=\"tab\" title=\"completed\">\n                <span class=\"round-tabs four\">\n                  <h5><i class=\"feather icon-airplay\"></i> Finished</h5>\n                </span>\n            </a>\n        </li>\n    </ul>\n    <div class=\"clearfix\"></div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PersonalComponent } from './personal/personal.component';\nimport { WorkComponent } from './work/work.component';\nimport { AddressComponent } from './address/address.component';\nimport { ResultComponent } from './result/result.component';\nimport {NGXFormWizardComponent} from './ngx-wizard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n     component: NGXFormWizardComponent,\n    data: {\n      title: 'ngx-wizard'\n    },\n    children: [\n      {\n        path: 'wizard',\n        component: PersonalComponent,\n        data: {\n          title: 'Personal'\n        }\n      },\n      {\n        path: 'work',\n        component: WorkComponent,\n        data: {\n          title: 'Work'\n        }\n      },\n      {\n        path: 'address',\n        component: AddressComponent,\n        data: {\n          title: 'Address'\n        }\n      },\n      {\n        path: 'result',\n        component: ResultComponent,\n        data: {\n          title: 'Result'\n        }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NGXWizardRoutingModule { }\n\nexport const routedComponents = [NGXFormWizardComponent];\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-multi-step-wizard',\n    templateUrl: './ngx-wizard.component.html',\n    styleUrls: ['./ngx-wizard.component.scss']\n})\n\nexport class NGXFormWizardComponent implements OnInit {\n    constructor(private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.router.navigate(['/forms/ngx/wizard'], { skipLocationChange: true });\n    }\n\n}\n","<div class=\"page-body\">\n  <div class=\"row\">\n      <div class=\"col-sm-12\">\n        <section id=\"ngx\" class=\"ngx-form-wizard\">\n        <app-card [title]=\"'NGX Wizard'\">\n            <div class=\"board\">\n              <app-msw-navbar></app-msw-navbar>\n              <div class=\"tab-content\">\n                <router-outlet> </router-outlet>\n              </div>\n            </div>\n        </app-card>\n        </section>\n      </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { NGXFormWizardComponent } from './ngx-wizard.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\nimport { PersonalComponent } from './personal/personal.component';\nimport { WorkComponent } from './work/work.component';\nimport { AddressComponent } from './address/address.component';\nimport { ResultComponent } from './result/result.component';\n\nimport { FormDataService } from './data/formData.service';\nimport { WorkflowService } from './workflow/workflow.service';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {CommonModule} from '@angular/common';\nimport {NGXWizardRoutingModule} from './ngx-wizard-routing.module';\n\n\n@NgModule({\n    imports: [\n      CommonModule,\n      FormsModule,\n      NGXWizardRoutingModule,\n      SharedModule\n    ],\n    providers: [{ provide: FormDataService, useClass: FormDataService },\n    { provide: WorkflowService, useClass: WorkflowService }],\n    declarations: [NGXFormWizardComponent, NavbarComponent, PersonalComponent, WorkComponent, AddressComponent, ResultComponent],\n    bootstrap: [NGXFormWizardComponent]\n\n})\n\nexport class NGXFormWizardModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { Personal } from '../data/formData.model';\nimport { FormDataService } from '../data/formData.service';\nimport { WorkflowService } from '../workflow/workflow.service';\nimport { STEPS } from '../workflow/workflow.model';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-mt-wizard-personal',\n    templateUrl: './personal.component.html',\n    styleUrls: ['./personal.component.scss']\n})\n\nexport class PersonalComponent implements OnInit {\n    title = 'Please tell us about yourself.';\n    personal: Personal;\n    form: any;\n\n    constructor(private router: Router,\n        private route: ActivatedRoute, private formDataService: FormDataService,\n        private workflowService: WorkflowService) {\n    }\n\n    ngOnInit() {\n        this.personal = this.formDataService.getPersonal();\n    }\n\n    save(form: any) {\n        if (!form.valid) {\n          return;\n        }\n\n        this.formDataService.setPersonal(this.personal);\n\n        const firstState = this.workflowService.getFirstInvalidStep(STEPS.work);\n        if (firstState.length > 0) {}\n        this.router.navigateByUrl('/forms/ngx/work', { relativeTo: this.route.parent, skipLocationChange: true });\n    }\n}\n","<!-- Personal Tab Form Starts -->\n<form #personalForm=\"ngForm\" class=\"editForm\" novalidate>\n    <div class=\"tab-pane active\">\n        <h4 class=\"head text-center\">{{title}}</h4>\n        <br/>\n        <div class='row'>\n            <div class='col-12'>\n                <div class=\"row\">\n                    <div class='col-12 col-sm-6'>\n                        <div class=\"form-group\">\n                            <label class=\"form-control-label\" for=\"firstname\">First Name</label>\n                            <input class=\"form-control input-md\" #firstname=\"ngModel\" required id=\"firstname\" name=\"firstname\" type=\"text\"  [(ngModel)]=\"personal.firstName\">\n                            <small class=\"form-text text-danger\" *ngIf=\"!firstname.valid && (firstname.dirty || firstname.touched)\">This field is required!</small>\n                        </div>\n                    </div>\n                    <div class='col-12 col-sm-6'>\n                        <div class=\"form-group\">\n                            <label class=\"form-control-label\" for=\"lastname\">Last Name</label>\n                            <input class=\"form-control input-md\" #lastname=\"ngModel\" required id=\"lastname\" name=\"lastname\" type=\"text\"  [(ngModel)]=\"personal.lastName\">\n                            <small class=\"form-text text-danger\" *ngIf=\"!lastname.valid && (lastname.dirty || lastname.touched)\">This field is required!</small>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"email\">Email</label>\n                    <input class=\"form-control input-md\" #email=\"ngModel\" required email id=\"email\" name=\"email\" type=\"text\"  [(ngModel)]=\"personal.email\">\n                    <small class=\"form-text text-danger\" *ngIf=\"!email.valid && (email.dirty || email.touched)\">Please enter a valid email!</small>\n                </div>\n\n                <div class=\"form-group text-center\">\n                    <button type=\"button\" uiSref=\"work\" class=\"btn btn-success btn-raised\" [disabled]=\"!personalForm.valid\" (click)=\"save(personalForm)\"> Next <span style=\"margin-left:10px;\"><i class=\"feather icon-chevron-right\"></i></span></button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n<!-- Personal Tab Form Ends -->\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { FormData } from '../data/formData.model';\nimport { FormDataService } from '../data/formData.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component ({\n    selector: 'app-mt-wizard-result',\n    templateUrl: './result.component.html',\n    styleUrls: ['./result.component.scss']\n})\n\nexport class ResultComponent implements OnInit {\n    public title = 'Thank You!';\n    @Input() formData: FormData;\n    public isFormValid = false;\n\n    constructor(private router: Router, private route: ActivatedRoute, private formDataService: FormDataService) {\n    }\n\n    ngOnInit() {\n        this.formData = this.formDataService.getFormData();\n        this.isFormValid = this.formDataService.isFormValid();\n    }\n\n    submit() {\n        alert('Excellent Job!');\n        this.formData = this.formDataService.resetFormData();\n        this.isFormValid = false;\n        this.router.navigate(['wizard'], { relativeTo: this.route.parent, skipLocationChange: true });\n    }\n}\n","<!-- Result tab Form starts -->\n<div class=\"tab-pane active\">\n    <h3 class=\"head text-center\">{{title}}</h3>\n\n    <p class=\"narrow text-center\">\n        Here is a copy of the information you have entered:\n    </p>\n    <div class='row'>\n        <div class='col-offset-1 col-10 col-sm-offset-3 col-sm-8 col-md-offset-4 col-md-8'>\n            <div class=\"row\">\n                <div class='col-3 col-sm-2'>\n                    <div class=\"form-group\">\n                        <label class=\"form-control-label\">Name: </label>\n                    </div>\n                </div>\n                <div class='col-9 col-sm-10'>\n                    {{formData.firstName + ' ' + formData.lastName}}\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class='col-3 col-sm-2'>\n                    <div class=\"form-group\">\n                        <label class=\"form-control-label\">Email: </label>\n                    </div>\n                </div>\n                <div class='col-9 col-sm-10'>\n                    {{formData.email}}\n                </div>\n           </div>\n            <div class=\"row\">\n                <div class='col-3 col-sm-2'>\n                    <div class=\"form-group\">\n                        <label class=\"form-control-label\">Work: </label>\n                    </div>\n                </div>\n                <div class='col-9 col-sm-10'>\n                    {{formData.work}}\n                </div>\n           </div>\n           <div class=\"row\">\n                <div class='col-3 col-sm-2'>\n                    <div class=\"form-group\">\n                        <label class=\"form-control-label\">Address: </label>\n                    </div>\n                </div>\n                <div class='col-9 col-sm-10'>\n                    {{formData.street}}\n                    <br/>\n                    {{formData.city + ' ' + formData.state + ' ' + formData.zip}}\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"text-center\">\n        <button uiSref=\"personal\" class=\"btn btn-success btn-raised\" [disabled]=\"!isFormValid\" (click)=\"submit()\"> Submit <span style=\"margin-left:10px;\"><i class=\"feather icon-arrow-right\"></i></span></button>\n    </div>\n</div>\n<!-- Result tab Form ends -->\n","import { Component, OnInit } from '@angular/core';\n\nimport { FormDataService } from '../data/formData.service';\nimport { WorkflowService } from '../workflow/workflow.service';\nimport { STEPS } from '../workflow/workflow.model';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-mt-wizard-work',\n    templateUrl: './work.component.html',\n    styleUrls: ['./work.component.scss']\n})\n\nexport class WorkComponent implements OnInit {\n    title = 'What do you do?';\n    workType: string;\n    form: any;\n\n    constructor(private router: Router,\n        private route: ActivatedRoute, private formDataService: FormDataService,\n        private workflowService: WorkflowService) {\n    }\n\n    ngOnInit() {\n        this.workType = this.formDataService.getWork();\n\n    }\n\n    save(form: any) {\n        if (!form.valid) {\n          return;\n        }\n\n        this.formDataService.setWork(this.workType);\n        const firstState = this.workflowService.getFirstInvalidStep(STEPS.work);\n        this.router.navigate(['address'], { relativeTo: this.route.parent, skipLocationChange: true });\n    }\n\n    cancel() {\n        this.router.navigate(['wizard'], { relativeTo: this.route.parent, skipLocationChange: true });\n    }\n}\n","<!-- Work Tab Form Starts -->\n<form #workForm=\"ngForm\" class=\"editForm\" novalidate>\n    <div >\n        <div class=\"tab-pane active\">\n            <h4 class=\"head text-center\">{{title}}</h4>\n            <br/>\n            <div class='row'>\n                <div class='col-offset-4 col-10 col-sm-offset-5 col-sm-4'>\n                  <div class=\"form-group form-radio\">\n                    <div class=\"radio radiofill radio-success radio-inline\">\n                      <label>\n                        <input type=\"radio\" #work=\"ngModel\" required name=\"work\" checked=\"checked\" [(ngModel)]=\"workType\" value=\"Design\">\n                        <i class=\"helper\"></i>Design\n                      </label>\n                    </div>\n                    <div class=\"radio radiofill radio-info radio-inline\">\n                      <label>\n                        <input type=\"radio\" #work=\"ngModel\" required name=\"work\" checked=\"checked\" [(ngModel)]=\"workType\" value=\"Code\">\n                        <i class=\"helper\"></i>Code\n                      </label>\n                    </div>\n                    <div class=\"radio radiofill radio-warning radio-inline\">\n                      <label>\n                        <input type=\"radio\" #work=\"ngModel\" required name=\"work\" checked=\"checked\" [(ngModel)]=\"workType\" value=\"Deploy\">\n                        <i class=\"helper\"></i>Deploy\n                      </label>\n                    </div>\n                  </div>\n                </div>\n            </div>\n            <div class=\"form-group text-center space-20\">\n                <button uiSref=\"personal\" type=\"button\" class=\"btn btn-raised btn-secondary\" (click)=\"cancel()\"> <span style=\"margin-right:10px;\"><i class=\"feather icon-chevron-left\"></i></span> Previous</button>\n                <button uiSref=\"address\" type=\"button\" class=\"btn btn-raised btn-info\" [disabled]=\"!workForm.valid\" (click)=\"save(workForm)\"> Next <span style=\"margin-left:10px;\"><i class=\"feather icon-chevron-right\"></i></span></button>\n            </div>\n        </div>\n    </div>\n</form>\n<!-- Work Tab Form Ends -->\n","export const STEPS = {\n    personal: 'personal',\n    work: 'work',\n    address: 'address',\n    result: 'result'\n};\n","import { Injectable } from '@angular/core';\nimport { STEPS } from './workflow.model';\n\n@Injectable()\nexport class WorkflowService {\n    private workflow = [\n        { step: STEPS.personal, valid: false },\n        { step: STEPS.work, valid: false },\n        { step: STEPS.address, valid: false },\n        { step: STEPS.result, valid: false }\n    ];\n\n    validateStep(step: string) {\n        let found = false;\n        for (let i = 0; i < this.workflow.length && !found; i++) {\n            if (this.workflow[i].step === step) {\n                found = this.workflow[i].valid = true;\n            }\n        }\n    }\n\n    resetSteps() {\n        this.workflow.forEach(element => {\n            element.valid = false;\n        });\n    }\n\n    getFirstInvalidStep(step: string): string {\n        let found = false;\n        let valid = true;\n        let redirectToStep = '';\n        for (let i = 0; i < this.workflow.length && !found && valid; i++) {\n            const item = this.workflow[i];\n            if (item.step === step) {\n                found = true;\n                redirectToStep = '';\n            } else {\n                valid = item.valid;\n                redirectToStep = item.step;\n            }\n        }\n        return redirectToStep;\n    }\n}\n"],"sourceRoot":"webpack:///"}