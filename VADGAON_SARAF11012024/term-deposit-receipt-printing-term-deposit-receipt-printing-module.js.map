{"version":3,"sources":["./src/app/theme/master/customer/saving-master/saving-master.service.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5-routing.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.html","./src/app/theme/transaction/term-deposit-receipt-printing/term-deposit-receipt-printing-routing.module.ts","./src/app/theme/transaction/term-deposit-receipt-printing/term-deposit-receipt-printing.component.ts","./src/app/theme/transaction/term-deposit-receipt-printing/term-deposit-receipt-printing.component.html","./src/app/theme/transaction/term-deposit-receipt-printing/term-deposit-receipt-printing.module.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"term-deposit-receipt-printing-term-deposit-receipt-printing-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n@Injectable()\nexport class SavingMasterService {\n    // Variable for handleError\n    [x: string]: any;\n    // API \n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n\n    //Insertion Operation\n    postData(data: any): Observable<any> {\n        return this.http.post(this.url + '/saving-master/insert', data).pipe(map((res) => res),\n            catchError((error) => {\n                Swal.fire('Please Input Proper Data!');\n                return throwError(error);\n            })\n        )\n    }\n    // For append data\n    getFormData(id: any): Observable<any> {\n        return this.http.get(this.url + '/saving-master/' + id).pipe(catchError(this.handleError));\n    }\n    getData(obj): Observable<any> {\n        return this.http.get(this.url + '/saving-master/alldata' + obj).pipe(catchError(this.handleError));\n    }\n\n    getSchemeCodeList(scheme): Observable<any> {\n        return this.http.get(this.url + '/scheme-parameters/' + scheme).pipe(catchError(this.handleError));\n    }\n    getCustomerIDMasterList(): Observable<any> {\n        return this.http.get(this.url + '/customer-id').pipe(catchError(this.handleError));\n    }\n\n    getcategoryList(): Observable<any> {\n        return this.http.get(this.url + '/category-master').pipe(catchError(this.handleError));\n    }\n\n    getOperationMasterList(): Observable<any> {\n        return this.http.get(this.url + '/operation-master').pipe(catchError(this.handleError));\n    }\n    getMinimumBalanceMasterList(): Observable<any> {\n        return this.http.get(this.url + '/minimum-balance-master').pipe(catchError(this.handleError));\n    }\n    getIntrestCategoaryMasterList(): Observable<any> {\n        return this.http.get(this.url + '/interest-category-master').pipe(catchError(this.handleError));\n    }\n    getcityList(): Observable<any> {\n        return this.http.get(this.url + '/city-master').pipe(catchError(this.handleError));\n    }\n    getOwnbranchList(): Observable<any> {\n        return this.http.get(this.url + '/own-branch-master').pipe(catchError(this.handleError));\n    }\n    getAllSchemeList(): Observable<any> {\n        return this.http.get(this.url + '/scheme-parameters/').pipe(catchError(this.handleError));\n    }\n    getSavingSchemeList1(schemeid): Observable<any> {\n        return this.http.get(this.url + '/saving-master/scheme/' + schemeid).pipe(catchError(this.handleError));\n    }\n    getShareSchemeList1(schemeid): Observable<any> {\n        return this.http.get(this.url + '/share-master/scheme/' + schemeid).pipe(catchError(this.handleError));\n    }\n    getCurrentAccountSchemeList1(schemeid): Observable<any> {\n        return this.http.get(this.url + '/current-account-master/scheme/' + schemeid).pipe(catchError(this.handleError));\n    }\n    getTermLoanSchemeList1(schemeid): Observable<any> {\n        return this.http.get(this.url + '/term-loan-master/scheme/' + schemeid).pipe(catchError(this.handleError));\n    }\n    getTermDepositSchemeList1(schemeid): Observable<any> {\n        return this.http.get(this.url + '/term-deposits-master/scheme/' + schemeid).pipe(catchError(this.handleError));\n    }\n    getDisputeLoanSchemeList1(schemeid): Observable<any> {\n        return this.http.get(this.url + '/dispute-loan-master/scheme/' + schemeid).pipe(catchError(this.handleError));\n    }\n    getCashCreditSchemeList1(schemeid): Observable<any> {\n        return this.http.get(this.url + '/cash-credit-master/scheme/' + schemeid).pipe(catchError(this.handleError));\n    }\n    getAnamatSchemeList1(schemeid): Observable<any> {\n        return this.http.get(this.url + '/anamat-gsm/scheme/' + schemeid).pipe(catchError(this.handleError));\n    }\n    getPigmyAccountSchemeList1(schemeid): Observable<any> {\n        return this.http.get(this.url + '/pigmy-account-master/scheme/' + schemeid).pipe(catchError(this.handleError));\n    }\n    getPigmyAgentSchemeList1(schemeid): Observable<any> {\n        return this.http.get(this.url + '/pigmy-agent-master/scheme/' + schemeid).pipe(catchError(this.handleError));\n    }\n    getLokcerSchemeList1(schemeid): Observable<any> {\n        return this.http.get<any>(this.url + '/locker-master/scheme/' + schemeid).pipe(catchError(this.handleError));\n    }\n    getInvestmentSchemeList1(schemeid): Observable<any> {\n        return this.http.get(this.url + '/investment/scheme/' + schemeid).pipe(catchError(this.handleError));\n    }\n\n    //Updation Operation\n    updateData(data): Observable<any> {\n        return this.http.put(this.url + '/saving-master/update', data);\n    }\n    //Deletion Operation\n    deleteData(id: any): Observable<any> {\n        return this.http.delete(this.url + '/saving-master/delete/' + id).pipe(catchError(this.handleError));\n    }\n\n\n    //approve master\n    approve(data: any): Observable<any> {\n        return this.http.post(this.url + '/saving-master/approve', data).pipe(catchError(this.handleError));\n    }\n\n\n    //reject master\n    reject(data: any): Observable<any> {\n        return this.http.post(this.url + '/saving-master/reject', data).pipe(catchError(this.handleError));\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Iframe5Component } from './iframe5/iframe5.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component:Iframe5Component,\n    data: {\n      title: 'Iframe5',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Iframe5RoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Iframe5RoutingModule } from './iframe5-routing.module';\nimport { Iframe5Component } from './iframe5/iframe5.component';\n\n\n@NgModule({\n  declarations: [Iframe5Component],\n  imports: [\n    CommonModule,\n    Iframe5RoutingModule\n  ],\n  exports:[Iframe5Component]\n})\nexport class Iframe5Module { }\n","import { Component, OnInit,Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-iframe5',\n  templateUrl: './iframe5.component.html',\n  styleUrls: ['./iframe5.component.scss']\n})\nexport class Iframe5Component implements OnInit {\n  @Input() url: any;\n  \n\n  constructor(\n    private sanitizer: DomSanitizer) {\n    this.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.url);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <form  novalidate>\n                <div class=\"card-block\">\n                    <div class=\"embed-responsive embed-responsive-16by9\">\n                        <div class=\"loader\">\n                            <img src=\"assets/Loading.gif\">\n                        </div>\n                        <iframe [src]=\"url\"></iframe>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {TermDepositReceiptPrintingComponent} from './term-deposit-receipt-printing.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n  \r\n    path: '',\r\n    component: TermDepositReceiptPrintingComponent,\r\n    data: {\r\n      title: 'T-Depo Recp Print',\r\n      status: false\r\n    },\r\n    // children: [\r\n    //   {\r\n    //     path: 'depositReceiptPrint',\r\n    //     loadChildren: () => import('./deposit-receipt-print/deposit-receipt-print.module').then(m => m.DepositReceiptPrintModule)\r\n    //   },\r\n    // ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TermDepositReceiptPrintingRoutingModule { }","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { VoucherEntryService } from '../voucher-entry/voucher-entry.service';\r\nimport { SavingMasterService } from '../../master/customer/saving-master/saving-master.service';\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from 'src/environments/environment';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { SystemMasterParametersService } from '../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\n\r\nimport { ReportFrameComponent } from \"../../reports/report-frame/report-frame.component\";\r\n\r\n \r\n\r\n\r\n@Component({\r\n  selector: 'app-term-deposit-receipt-printing',\r\n  templateUrl: './term-deposit-receipt-printing.component.html',\r\n  styleUrls: ['./term-deposit-receipt-printing.component.scss']\r\n})\r\nexport class TermDepositReceiptPrintingComponent implements OnInit {\r\n  @ViewChild('triggerhide') triggerhide: ElementRef<HTMLElement>;\r\n\r\n  @ViewChild(ReportFrameComponent ) child: ReportFrameComponent ; \r\n\r\n    //for Formgroup\r\n    ngForm: FormGroup\r\n    \r\n    bsValue = new Date();\r\n\r\n    //ngModel\r\n    BranchCode\r\n    schemeCode\r\n    firstno\r\n    fromdate\r\n    todate\r\n    acnumber\r\n    lastno\r\n    scheme\r\n  isTdsForm: boolean;\r\n  branch_code: any;\r\n  obj: any;\r\n  introducerACNo: any;\r\n  selectedBranch: any;\r\n  narrationList: any;\r\n  getschemename: any\r\n  allScheme //account type for introducer\r\n  formSubmitted = false;\r\n  report_url = environment.report_url;\r\n showRepo: boolean = false;\r\n clicked:boolean=false;\r\n iframe5url: any = '';\r\n  Scheme \r\n  ngFnarration: any;\r\n\r\n  schemeACNo\r\n  transferSchemeDetails : any;\r\n  schemeType: string = 'TD'\r\n  city: any;\r\n  Ncity: any;\r\n  defaultDate: any;\r\n  ngbranch: any;\r\n  branchName: any;\r\n  getbankAcNo: any;\r\n\r\n  constructor(  \r\n    private fb: FormBuilder,\r\n    private _service: VoucherEntryService,\r\n\r\n     private ownbranchMasterService : OwnbranchMasterService,\r\n    private schemeCodeDropdownService : SchemeCodeDropdownService,\r\n    private schemeAccountNoService : SchemeAccountNoService,\r\n    private savingMasterService: SavingMasterService,\r\n    private _SchemeCodeDropdown: SchemeCodeDropdownService,\r\n    private sanitizer: DomSanitizer,    private systemParameter:SystemMasterParametersService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n\r\n    let user = JSON.parse(localStorage.getItem('user')); \r\n\r\n    //branchcode\r\n        this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n          this.branch_code = data;\r\n          this.BranchCode = user.branchId;\r\n        })\r\n\r\n// this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data => {\r\n//   this.scheme = data\r\n\r\n  \r\n//   this.schemeCode = data[0].value\r\n//   this.getIntroducer()\r\n\r\n// })\r\n\r\nthis.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n  this.Scheme = data;\r\n});\r\nthis._SchemeCodeDropdown.getAllSchemeList().pipe(first()).subscribe(data => {\r\n  var filtered = data.filter(function (scheme) {\r\n    return (scheme.name == 'TD'  );\r\n  });\r\n  this.allScheme = filtered;\r\n})\r\n  //Narration List\r\n  this._service.getNarrationMaster().subscribe(data => {\r\n    this.narrationList = data;\r\n  })\r\n\r\n    //display defalut date\r\n    this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\r\n      this.defaultDate = data.CURRENT_DATE;\r\n    })\r\n      let data: any = localStorage.getItem('user');\r\n      let result = JSON.parse(data);\r\n      if (result.RoleDefine[0].Role.id == 1) {\r\n        this.ngbranch = result.branch.id\r\n        this.ngForm.controls['BRANCH_CODE'].enable()\r\n        this.branchName = result.branch.NAME\r\n  \r\n      }\r\n      else {\r\n        this.ngForm.controls['BRANCH_CODE'].disable()\r\n        this.ngbranch = result.branch.id\r\n        this.branchName = result.branch.NAME\r\n  \r\n      }\r\n}\r\n\r\n\r\n\r\n  createForm()\r\n  {\r\n    this.ngForm = this.fb.group({\r\n\r\n      BRANCH_CODE: ['', [Validators.required]],\r\n      AC_TYPE: ['', [Validators.required]],\r\n      FIRST_NO: ['', [Validators.required]],\r\n      // LAST_NO: ['', [Validators.required]],\r\n      FROM_DATE : ['',],\r\n      TO_DATE: ['', ],\r\n      \r\n    });\r\n  }\r\n  \r\n  \r\n\r\n  getIntro(event) {\r\n    this.getschemename = event.name\r\n    \r\n    this.getIntroducer()\r\n    \r\n  }\r\n  getIntTranscus(event) { \r\n    this.getbankAcNo =  event.bankacno\r\n  }\r\n\r\n  //get account no according scheme for introducer\r\n  getIntroducer() { \r\n    this.obj = [this.schemeCode,this.BranchCode, ]\r\n    switch (this.getschemename) {\r\n      case 'TD':\r\n        this.savingMasterService.getTermDepositSchemeList1(this.obj).subscribe(data => {\r\n          this.introducerACNo = data;\r\n         \r\n        })\r\n        break;\r\n    \r\n    }\r\n  }\r\n  isReceivedTds($event) {\r\n\r\n    if ($event.target.checked) {\r\n      this.isTdsForm = true;\r\n     \r\n    } else {\r\n      this.isTdsForm = false;\r\n    }\r\n  }\r\n\r\n  getNarration(ele) {\r\n    this.ngFnarration = ele;\r\n    let el: HTMLElement = this.triggerhide.nativeElement;\r\n    el.click();\r\n  }\r\n  getIntTrans(event) {\r\n  this.firstno =  event.BANKACNO\r\n  }\r\n  getIntTrans1(event) {\r\n    this.lastno =  event.BANKACNO\r\n    }\r\n  view(event) {\r\n\r\n    event.preventDefault();\r\n    this.formSubmitted = true;\r\n  \r\n    let userData = JSON.parse(localStorage.getItem('user'));\r\n    let bankName = userData.branch.syspara.BANK_NAME;\r\n    let branchName = userData.branch.NAME;\r\n    \r\n    if(this.ngForm.valid){\r\n    let obj = this.ngForm.value\r\n    this.showRepo = true;\r\n  \r\n    if(this.defaultDate == userData.branch.syspara.CURRENT_DATE)\r\n    {\r\n      obj['FROM_DATE'] =userData.branch.syspara.CURRENT_DATE\r\n    }\r\n    else{\r\n    let date = moment(this.defaultDate).format('DD/MM/YYYY');\r\n    let tDate = moment(date, 'DD/MM/YYYY')\r\n    obj['FROM_DATE']=date \r\n  }\r\n    // let startDate = moment(obj.FROM_DATE).format('DD/MM/YYYY');\r\n    // var sdate = moment(obj.FROM_DATE).startOf('quarter').format('DD/MM/YYYY');\r\n  \r\n    let scheme = obj.AC_TYPE \r\n    let branch = obj.BRANCH_CODE\r\n\r\n    let firstno = this.firstno \r\n    let lastno = this.lastno \r\n\r\n      //     //for tdreceipt Number\r\n      // let obj1 = {\r\n      //   type: this.vtype,\r\n      //   branch: this.ngbranch,\r\n      //   tran_type: this.tranType,\r\n      //   date : sdate\r\n      \r\n  \r\n      // }\r\n      // this.http.post<any>(this.url + '/voucher/tranList', obj1).subscribe((data) => {\r\n      //   this.glDetails = data\r\n      //   console.log(this.glDetails)\r\n      // }) \r\n\r\n\r\n\r\n\r\n   this.iframe5url= this.report_url+\"examples/TDReceiptPrint.php/?&Date='\"+ obj.FROM_DATE +\"'&scheme='\"+ scheme +\"'&branchname='\"+ this.branchName +\"'&BRANCH_CODE='\"+ branch +\"'&Bankname='\"+ bankName +\"'&AC_ACNOTYPE='\"+ scheme +\"'&BANKACNO1='\"+ firstno +\"'&BANKACNO2='\"+ firstno +\"'\"\r\n   console.log(this.iframe5url);\r\n   this.iframe5url=this.sanitizer.bypassSecurityTrustResourceUrl(this.iframe5url);\r\n   \r\n   \r\n   \r\n  }\r\n  else {\r\n    Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(()=>{ this.clicked=false});\r\n  }\r\n  \r\n  } \r\n  close(){\r\n    this.resetForm()\r\n    }\r\n    \r\n    // Reset Function\r\n    resetForm() {\r\n    this.ngForm.controls.AC_TYPE.reset();\r\n    this.showRepo = false;\r\n    this.clicked=false;\r\n    }\r\n  getBranch(event) {\r\n    this.getIntroducer()\r\n    this.ngbranch = event.value\r\n    this.branchName = event.branchName \r\n  }\r\n\r\n     \r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Term Deposite Receipt Printing</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form [formGroup]=\"ngForm\">\r\n                <div class=\"card-block\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"solid\">\r\n                                <div class=\"row\">\r\n\r\n                                    <div class=\"col-sm-2 col-md-2\"> <label for=\"AC_BRANCH\">Branch Code<sub\r\n                                                class=\"required\">*</sub></label>\r\n                                    </div>\r\n                                    <div class=\"col-sm-2 col-md-3\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select bindValue=\"value\" bindLabel=\"label\" [(ngModel)]=\"BranchCode\"\r\n                                                (change)=\"getBranch($event)\" formControlName=\"BRANCH_CODE\" #branchcode autofocus>\r\n                                                    <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                                        {{values.label}}</ng-option> \r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['BRANCH_CODE'].invalid && (ngForm.controls['BRANCH_CODE'].dirty || ngForm.controls['BRANCH_CODE'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Scheme Code<sub\r\n                                                class=\"required\">*</sub></label>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\" autofocus>\r\n                                                <ng-select bindValue=\"value\" [(ngModel)]=\"schemeCode\" id=\"AC_TYPE\"\r\n                                                    bindLabel=\"label\" formControlName=\"AC_TYPE\" (change)=\"getIntro($event)\"\r\n                                                    title=\"Compulsory Selection\" required placeholder=\"Scheme\">\r\n                                                    <ng-option *ngFor=\"let values of allScheme\" [value]=\"values\">\r\n                                                        {{values.id}} {{values.label}} </ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['AC_TYPE'].invalid && (ngForm.controls['AC_TYPE'].dirty || ngForm.controls['AC_TYPE'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['AC_TYPE'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\"> \r\n                                    <div class=\"col-md-2\"> <label for=\"from no\">From A/c Number<sub\r\n                                                class=\"required\">*</sub></label>\r\n                                    </div>\r\n                                    <div class=\"col-md-3\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select id=\"cdropdown\" [(ngModel)]=\"firstno\"\r\n                                                    formControlName=\"FIRST_NO\"\r\n                                                    (focus)=\"getIntroducer()\" (change)=\"getIntTrans($event)\"\r\n                                                    placeholder=\" From A/c No\">\r\n                                                    <ng-option *ngFor=\"let values of introducerACNo\" [value]=\"values\"> \r\n                                                        {{ values.AC_NO }} {{ values.AC_NAME }}</ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['FIRST_NO'].invalid && (ngForm.controls['FIRST_NO'].dirty || ngForm.controls['FIRST_NO'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['FIRST_NO'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <!-- <div class=\"col-md-2\">\r\n                                        <label for=\"lastno\">To A/c Number<sub class=\"required\">* </sub></label>\r\n                                    </div> -->\r\n                                    <!-- <div class=\"col-md-3\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select id=\"tdropdown\" [(ngModel)]=\"lastno\" formControlName=\"LAST_NO\"\r\n                                                    (change)=\"getIntTrans1($event)\"\r\n                                                    (focus)=\"getIntroducer()\" placeholder=\" To A/c No\">\r\n                                                    <ng-option *ngFor=\"let values of introducerACNo\" [value]=\"values\">\r\n                                                        {{ values.AC_NO }} {{ values.AC_NAME }}</ng-option> \r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['LAST_NO'].invalid && (ngForm.controls['LAST_NO'].dirty || ngForm.controls['LAST_NO'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['LAST_NO'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> -->\r\n                                </div>\r\n                                <!-- <div class=\"row\">\r\n                                    <div class=\"col-sm-5\">\r\n                                        <div class=\"checkbox checkbox-primary\">\r\n                                            <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                                <input type=\"checkbox\" class=\"border-checkbox\" id=\"IRTDSDFY\"\r\n                                                    value=\"IRTDSDFY\" formControlName=\"TDSDOCUMNET\"\r\n                                                    (change)=\"isReceivedTds($event)\">\r\n\r\n                                                <label class=\"border-checkbox-label\" for=\"IRTDSDFY\">Bond Receipt</label>\r\n                                            </div> \r\n                                        </div>\r\n                                    </div>\r\n                                </div> -->\r\n\r\n                                <div class=\"row\" id=\"TDSFORM\" *ngIf=\"isTdsForm\">\r\n\r\n                                    <div class=\"col-md-1\">\r\n                                        <label for=\"from\">From<sub class=\"required\">*\r\n                                            </sub></label>\r\n                                    </div>\r\n                                    <div class=\"col-md-2\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <input style=\"text-align: right ;\" type=\"text\" placeholder=\"dd/mm/yyyy\"\r\n                                                    name=\"date\" id=\"date\" [(ngModel)]=\"fromdate\" appButton minlength=\"8\"\r\n                                                    maxlength=\"10\" formControlName=\"FROM_DATE\" class=\"form-control\"\r\n                                                    [maxDate]=\"maxDate\" bsDatepicker>\r\n\r\n\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['FROM_DATE'].invalid && (ngForm.controls['FROM_DATE'].dirty || ngForm.controls['FROM_DATE'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['FROM_DATE'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-1\">\r\n                                        <label for=\"to\">To<sub class=\"required\">*\r\n                                            </sub></label>\r\n                                    </div>\r\n                                    <div class=\"col-md-2\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <input style=\"text-align: right ;\" type=\"text\" placeholder=\"dd/mm/yyyy\"\r\n                                                    appButton minlength=\"10\" maxlength=\"10\" name=\"date\" id=\"date\"\r\n                                                    [(ngModel)]=\"todate\" formControlName=\"TO_DATE\" class=\"form-control\"\r\n                                                    [maxDate]=\"maxDate\" bsDatepicker>\r\n\r\n\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['TO_DATE'].invalid && (ngForm.controls['TO_DATE'].dirty || ngForm.controls['TO_DATE'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['TO_DATE'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n\r\n                                    <div class=\"col-sm\">\r\n                                        <button class=\"btn  btn-outline-primary btn-sm\" (click)=\"close()\">Close</button>\r\n\r\n                                        <button class=\"btn  btn-outline-primary btn-sm\"  (click)=\"view($event); clicked = true \">Print</button>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"card\">\r\n                                            <div class=\"card-header\">\r\n                                                <h5>Report Frame</h5>\r\n                                            </div>\r\n                                            <div *ngIf=\"showRepo\">\r\n                                                <app-iframe5 [url]='iframe5url'></app-iframe5>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"solid\">\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Scheme Code<sub\r\n                                                class=\"required\">*</sub></label>\r\n                                    </div>\r\n                                    <div class=\"col-sm-2\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\" autofocus>\r\n                                                <ng-select bindValue=\"value\" [(ngModel)]=\"schemeCode\" id=\"AC_TYPE\"\r\n                                                    bindLabel=\"label\" formControlName=\"AC_TYPE\"\r\n                                                    title=\"Compulsory Selection\" required placeholder=\"Scheme\">\r\n                                                    <ng-option *ngFor=\"let values of Scheme\" [value]=\"values\">\r\n                                                        {{values.label}} </ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['AC_TYPE'].invalid && (ngForm.controls['AC_TYPE'].dirty || ngForm.controls['AC_TYPE'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['AC_TYPE'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-2 col-md-2\"> <label for=\"AC_NO\">Account Number\r\n                                            <sub class=\"required\">*</sub></label>\r\n                                    </div>\r\n                                    <div class=\"col-sm-12 col-md-2\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select id=\"AC_NO\" bindValue=\"value\" [(ngModel)]=\"acnumber\"\r\n                                                    formControlName=\"AC_NO\" bindLabel=\"label\"\r\n                                                    title=\"Compulsory Selection\" placeholder=\"Account Number\">\r\n                                                    <ng-option *ngFor=\"let values of introducerACNo\" [value]=\"values\">\r\n                                                        {{values.label}} {{values.name}}</ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['AC_NO'].invalid && (ngForm.controls['AC_NO'].dirty || ngForm.controls['AC_NO'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['AC_NO'].errors?.required\">\r\n                                                This field is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-2\">\r\n                                        <label for=\"printno\">Print No.<sub class=\"required\">* </sub></label>\r\n                                    </div>\r\n                                    <div class=\"col-md-2\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <input style=\"text-align: right ;\" type=\"text\" name=\"label-name\"\r\n                                                    class=\"form-control\" placeholder=\" \"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                                    formControlName=\"PRINT_NO\" maxlength=\"4\" disabled>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['PRINT_NO'].invalid && (ngForm.controls['PRINT_NO'].dirty || ngForm.controls['PRINT_NO'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div\r\n                                                *ngIf=\"ngForm.controls['PRINT_NO'].errors?. maxlength || ngForm.controls['PRINT_NO'].errors?. minlength || ngForm.controls['PRINT_NO'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12 col-md-2  \"><label for=\"AC_PARTICULAR\">Reason</label>\r\n                                    </div>\r\n                                    <div class=\"col-md-5\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <div class=\"col-md-6\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <textarea class=\"form-control\" formControlName=\"Fnarration\"\r\n                                                        [(ngModel)]=\"ngFnarration\"></textarea>\r\n                                                    <i class=\"fa fa-info-circle errspan\"   (click)=\"modalLarge.show()\"></i>\r\n                                                   \r\n                                                   \r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"row\">\r\n\r\n                                    <div class=\"col-sm\">\r\n                                        <button class=\"btn  btn-outline-primary btn-sm\">Close</button>\r\n\r\n                                        <button class=\"btn  btn-outline-primary btn-sm\">Print</button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div> -->\r\n\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<app-modal-basic #modalLarge [dialogClass]=\"'modal-md'\">\r\n    <div class=\"app-modal-header\">\r\n        <h4 class=\"modal-title\">Narration Master</h4>\r\n        <button type=\"button\" class=\"close basic-close\" (click)=\"modalLarge.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"app-modal-body\">\r\n        <perfect-scrollbar style=\"overflow-y: auto;\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <th>Reasons</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let item of narrationList\" (click)=\"getNarration(item.NARRATION)\">\r\n                                {{item.NARRATION}}\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <button type=\"button\" style=\"display: none;\" class=\"btn btn-outline-primary btn-sm\" id=\"triggrhide\"\r\n                        #triggerhide (click)=\"modalLarge.hide()\">Close</button>\r\n                </div>\r\n            </div>\r\n        </perfect-scrollbar>\r\n    </div>\r\n</app-modal-basic>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TermDepositReceiptPrintingComponent } from './term-deposit-receipt-printing.component';\nimport { TermDepositReceiptPrintingRoutingModule } from './/term-deposit-receipt-printing-routing.module';\nimport {SharedModule} from '../../../shared/shared.module';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {ColorPickerModule} from 'ngx-color-picker';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {DataTablesModule} from 'angular-datatables';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { VoucherEntryService } from '../voucher-entry/voucher-entry.service';\nimport { SavingMasterService } from '../../master/customer/saving-master/saving-master.service';\nimport { SystemMasterParametersService } from '../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\nimport { PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { Iframe5Module } from '../../reports/pigmy-report/iframe5/iframe5.module';\n\n\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true\n};\n@NgModule({\n  imports: [\n    CommonModule,\n    TermDepositReceiptPrintingRoutingModule,\n    SharedModule,\n    NgbModule,\n    NgSelectModule,\n    ColorPickerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n    Iframe5Module,\n    \n    \n  ],\n  declarations: [TermDepositReceiptPrintingComponent],\n  exports:[TermDepositReceiptPrintingComponent],\n\n  providers:[  SchemeCodeDropdownService,SchemeAccountNoService,\n    OwnbranchMasterService,VoucherEntryService,SavingMasterService,\n    SystemMasterParametersService,\n    {\n\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n]\n})\nexport class TermDepositReceiptPrintingModule { }","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n\n@Injectable()\nexport class SystemMasterParametersService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n  // url = \"http://localhost:4000/system-master-parameters\";\n  url = environment.base_url;\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\n      catchError((error) => {\n        let errorMessage = 'Please add valid length';\n        Swal.fire('Kindly Add Valid Length !');\n        return throwError(errorMessage);\n      })\n    )\n  }\n\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/system-master-parameters/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\n  }\n\n  getData(): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\n  }\n\n\n}\n\n\n"],"sourceRoot":"webpack:///"}