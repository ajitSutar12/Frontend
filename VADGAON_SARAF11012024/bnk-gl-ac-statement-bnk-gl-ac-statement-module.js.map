{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/reports/statement/bnk-gl-ac-statement/bnk-gl-ac-statement-routing.module.ts","./src/app/theme/reports/statement/bnk-gl-ac-statement/bnk-gl-ac-statement.component.ts","./src/app/theme/reports/statement/bnk-gl-ac-statement/bnk-gl-ac-statement.component.html","./src/app/theme/reports/statement/bnk-gl-ac-statement/bnk-gl-ac-statement.module.ts"],"names":[],"mappings":"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","file":"bnk-gl-ac-statement-bnk-gl-ac-statement-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { BnkGlAcStatementComponent } from './bnk-gl-ac-statement.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  BnkGlAcStatementComponent,\r\n    data: {\r\n      title: 'GL account Statement',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class  BnkGlAcStatementRoutingModule { }","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from \"src/environments/environment\";\r\nimport { first } from 'rxjs/operators';\r\nimport { Subject } from \"rxjs\";\r\nimport * as moment from 'moment';\r\n// dropdown\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { Router } from '@angular/router';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { deepValueGetter } from '@swimlane/ngx-datatable';\r\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-bnk-gl-ac-statement',\r\n  templateUrl: './bnk-gl-ac-statement.component.html',\r\n  styleUrls: ['./bnk-gl-ac-statement.component.scss']\r\n})\r\nexport class BnkGlAcStatementComponent implements OnInit {\r\n\r\n  iframe2url: any = '';\r\n  clicked: boolean = false;\r\n  //api\r\n  url = environment.base_url;\r\n  report_url = environment.report_url;\r\n  formSubmitted = false;\r\n\r\n  httpData: any;\r\n  makeForm: any;\r\n\r\n  angForm: FormGroup;\r\n  //account\r\n  memFrom\r\n  memTo\r\n  branch\r\n  mem: any\r\n\r\n  showButton: boolean = true;\r\n  CloseShow: boolean = true;\r\n  showRepo: boolean = false;\r\n\r\n  //dropdown ngmodel variables\r\n\r\n  ngscheme: any = null\r\n  ngfromac: any = null\r\n  ngtoac: any = null\r\n  scheme\r\n  ngBranchCode: any = null\r\n  branch_code\r\n  ToAC\r\n  fromAC\r\n  obj: any;\r\n  // Date variables\r\n  todate: any = null;\r\n  fromdate: any = null\r\n  edate: any = null\r\n  maxDate: Date;\r\n  minDate: Date;\r\n\r\n  bsValue = new Date();\r\n  branchName: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    public router: Router,\r\n    private sanitizer: DomSanitizer,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private systemParameter: SystemMasterParametersService,\r\n  ) {\r\n    this.todate = moment().format('DD/MM/YYYY');\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n\r\n    // Scheme Code\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      var filtered = data.filter(function (scheme) {\r\n        return (scheme.name == 'GL');\r\n      });\r\n      this.scheme = filtered;\r\n\r\n    })\r\n\r\n    //branch\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n    });\r\n\r\n    this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\r\n      this.todate = data.CURRENT_DATE;\r\n    });\r\n\r\n    this.systemParameter.getFormData(1).subscribe(data => {\r\n      let year = moment(data.CURRENT_DATE, \"DD/MM/YYYY\").year()\r\n      // this.fromdate = `01/04/${year - 1}`      \r\n      this.todate = data.CURRENT_DATE\r\n\r\n      this.fromdate = moment(`01/04/${year - 1}`, 'DD/MM/YYYY')\r\n      this.fromdate = this.fromdate._d\r\n    })\r\n\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    if (result.RoleDefine[0].Role.id == 1) {\r\n      this.ngBranchCode = result.branch.id\r\n      this.angForm.controls['BRANCH'].enable()\r\n      this.branchName = result.branch.NAME\r\n\r\n    }\r\n    else {\r\n      this.angForm.controls['BRANCH'].disable()\r\n      this.ngBranchCode = result.branch.id\r\n      this.branchName = result.branch.NAME\r\n\r\n    }\r\n  }\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      AC_TYPE: ['', [Validators.required]],\r\n      FROM_AC: ['', [Validators.required]],\r\n      // TO_AC: ['', [Validators.required]],\r\n      BRANCH: ['', [Validators.required]],\r\n      START_DATE: ['', [Validators.required]],\r\n      END_DATE: ['', [Validators.required]],\r\n      Month_wise_Summary: ['', []],\r\n    });\r\n  }\r\n\r\n\r\n  //For Starting account and Ending Account dropdown\r\n  getschemename: any\r\n\r\n  getBranch(event) {\r\n    this.ngBranchCode = event.value\r\n    this.branchName = event.branchName\r\n\r\n  }\r\n  getBranch1(){\r\n    this.getIntroducer()\r\n\r\n  }\r\n  getIntro(event) {\r\n    this.getschemename = event.name\r\n    this.getIntroducer()\r\n  }\r\n\r\n\r\n  getIntroducer() {\r\n\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    let branchCode = result.branch.id;\r\n    this.obj = [this.ngscheme, branchCode]\r\n    switch (this.getschemename) {\r\n\r\n\r\n      case 'GL':\r\n        this.schemeAccountNoService.getGeneralLedgerListForClosing().subscribe(data => {\r\n          this.ToAC = data\r\n          this.fromAC = data\r\n        })\r\n        break;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  src: any;\r\n  View(event) {\r\n    \r\n    event.preventDefault();\r\n    this.formSubmitted = true;\r\n\r\n    let userData = JSON.parse(localStorage.getItem('user'));\r\n    let bankName = userData.branch.syspara.BANK_NAME;\r\n    // let branchName = userData.branch.NAME\r\n\r\n    if (this.angForm.valid) {\r\n\r\n      this.showRepo = true;\r\n\r\n      let obj = this.angForm.value\r\n      let startdate = moment(obj.START_DATE).format('DD/MM/YYYY');\r\n      // let enddate = moment(obj.END_DATE).format('DD/MM/YYYY');\r\n\r\n      let enddate: any;\r\n      if (this.todate == obj.END_DATE) {\r\n        enddate = moment(this.todate, 'DD/MM/YYYY').format('DD/MM/YYYY')\r\n      } else {\r\n        enddate = moment(this.todate, 'DD/MM/YYYY').format('DD/MM/YYYY')\r\n      };\r\n\r\n      var sdate = moment(obj.START_DATE).subtract(1, \"day\").format('DD/MM/YYYY');\r\n      let branch = obj.BRANCH;\r\n      let scheme = obj.AC_TYPE\r\n      let startingcode = obj.FROM_AC;\r\n      // let endingcode = obj.TO_AC;\r\n      let MonthwiseSummary = obj.Month_wise_Summary\r\n      let AC_NO = obj.FROM_AC;\r\n\r\n      this.iframe2url = this.report_url + \"examples/GLaccStatement.php?startdate='\" + startdate + \"'&enddate='\" + enddate + \"'&sdate='\" + sdate + \"'&branch=\" + this.ngBranchCode + \"&branchName=\" + this.branchName + \"&startingcode=\" + startingcode + \"&endingcode=\" + startingcode + \" &scheme=\" + scheme + \" &MonthwiseSummary='\" + MonthwiseSummary + \"&bankName=\" + bankName + \"&AC_NO='\" + AC_NO +  \"'\";\r\n      this.iframe2url = this.sanitizer.bypassSecurityTrustResourceUrl(this.iframe2url);\r\n    }\r\n    else {\r\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(() => { this.clicked = false });\r\n    }\r\n\r\n  }\r\n\r\n  //load acno according start and end acno\r\n  loadAcno() {\r\n    this.memFrom = this.angForm.controls['FROM_AC'].value\r\n    // this.memTo = this.angForm.controls['TO_AC'].value\r\n    this.branch = this.angForm.controls['BRANCH'].value\r\n    if (this.angForm.controls['FROM_AC'].value < this.angForm.controls['TO_AC'].value) {\r\n      this.mem = [this.memFrom, this.memTo, this.branch]\r\n\r\n      if (this.getschemename == 'GL') {\r\n        this.http.get(this.url + '/gl-account-master/scheme/' + this.mem).subscribe((data) => {\r\n        });\r\n      }\r\n\r\n\r\n    }\r\n    else {\r\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(() => { this.clicked = false });\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.resetForm()\r\n  }\r\n\r\n  resetForm() {\r\n    // this.createForm()\r\n    // this.angForm.controls.AC_TYPE.reset();\r\n    this.angForm.controls.FROM_AC.reset();\r\n    // this.angForm.controls.TO_AC.reset();\r\n    // this.angForm.controls.BRANCH.reset();\r\n    this.showRepo = false;\r\n    this.clicked = false;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>General Account Statement</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"BRANCH\">Branch<sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                        formControlName=\"BRANCH\" bindLabel=\"label\"\r\n                                        (change)=\"getBranch($event);getBranch1()\" placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['BRANCH'].invalid && (angForm.controls['BRANCH'].dirty || angForm.controls['BRANCH'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_TYPE\">Scheme<sub class=\"required\">*\r\n                                </sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        (change)=\"getIntro($event)\" placeholder=\"Scheme Code\" required>\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"><label for=\"Starting Account\">Account No.<sub class=\"required\">*\r\n                                </sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"FROM_AC\" bindValue=\"value\" [(ngModel)]=\"ngfromac\"\r\n                                        formControlName=\"FROM_AC\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        required placeholder=\"Starting Account\">\r\n                                        <ng-option *ngFor=\"let values of fromAC\" [value]=\"values\">\r\n                                            {{values.label}} {{values.name}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['FROM_AC'].invalid && (angForm.controls['FROM_AC'].dirty || angForm.controls['FROM_AC'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['FROM_AC'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"START_DATE\">Start Date<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"START_DATE\" id=\"START_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"fromdate\" [bsValue]=\"bsValue\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" appButton minlength=\"8\"\r\n                                        maxlength=\"10\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        formControlName=\"START_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['START_DATE'].invalid &&\r\n                             (angForm.controls['START_DATE'].dirty ||angForm.controls['START_DATE'].touched) \"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['START_DATE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"END_DATE\">End Date<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"END_DATE\" id=\"END_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"todate\" [bsValue]=\"bsValue\" appButton\r\n                                        minlength=\"10\" maxlength=\"10\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                        [maxDate]=\"maxDate\" [minDate]=\"fromdate\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"END_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['END_DATE'].invalid &&\r\n                             (angForm.controls['END_DATE'].dirty ||angForm.controls['END_DATE'].touched) \"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['END_DATE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n\r\n\r\n                        <!-- <div class=\"col-md-3\">\r\n                            <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input type=\"checkbox\" class=\"border-checkbox\" id=\"Month_wise_Summary\"\r\n                                        formControlName=\"Month_wise_Summary\">\r\n                                    <label class=\"border-checkbox-label\" for=\"Month_wise_Summary\">Month wise Summary</label>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\"></div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-9\"></div>\r\n                        <div class=\"col-md-2\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" value=\"submit\"\r\n                                [disabled]=\"clicked\" (click)=\"View($event); clicked = true  \">View</button>\r\n\r\n                        </div>\r\n                        <div class=\"col-md-1\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"close()\">Close</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\">\r\n                                    <h5>Report Frame</h5>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"showRepo\">\r\n\r\n                                    <app-iframe2 [url]='iframe2url'></app-iframe2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {SharedModule} from '../../../../shared/shared.module';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { SystemMasterParametersService } from \"../../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BnkGlAcStatementComponent } from './bnk-gl-ac-statement.component';\r\nimport {BnkGlAcStatementRoutingModule} from './bnk-gl-ac-statement-routing.module'\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { Iframe2Module } from '../iframe2/iframe2.module';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    PerfectScrollbarModule,\r\n    NgSelectModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    BnkGlAcStatementRoutingModule,\r\n    Iframe2Module\r\n  ],\r\n\r\n  declarations: [BnkGlAcStatementComponent],\r\n  exports:[BnkGlAcStatementComponent],\r\n  providers: [\r\n    SchemeCodeDropdownService, \r\n    SchemeAccountNoService,\r\n    OwnbranchMasterService,\r\n    {\r\n\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\r\n\r\n    },\r\n    SystemMasterParametersService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UserAuthInterceptor,\r\n      multi: true\r\n    },\r\n  ]\r\n})\r\nexport class BnkGlAcStatementModule { }"],"sourceRoot":"webpack:///"}