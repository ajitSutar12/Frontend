{"version":3,"sources":["./src/app/theme/reports/npa-reports/npa-analysis-report/npa-analysis-report-routing.module.ts","./src/app/theme/reports/npa-reports/npa-analysis-report/npa-analysis-report.component.ts","./src/app/theme/reports/npa-reports/npa-analysis-report/npa-analysis-report.component.html","./src/app/theme/reports/npa-reports/npa-analysis-report/npa-analysis-report.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5-routing.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.html"],"names":[],"mappings":"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","file":"npa-analysis-report-npa-analysis-report-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NpaAnalysisReportComponent }from './npa-analysis-report.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component:  NpaAnalysisReportComponent,\n    data: {\n      title: 'Transaction Amount Movement',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NpaAnalysisReportRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n// Displaying Sweet Alert\nimport Swal from \"sweetalert2\";\n// Used to Call API\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\n\nimport { Router } from \"@angular/router\";\nimport * as moment from 'moment'; \nimport { environment } from \"src/environments/environment\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { OwnbranchMasterService } from \"src/app/shared/dropdownService/own-branch-master-dropdown.service\";\nimport { SchemeCodeDropdownService } from \"src/app/shared/dropdownService/scheme-code-dropdown.service\";\nimport { SchemeAccountNoService } from \"src/app/shared/dropdownService/schemeAccountNo.service\";\nimport { first } from \"rxjs/operators\";\nimport { SchemeTypeDropdownService } from \"src/app/shared/dropdownService/scheme-type-dropdown.service\";\nimport { IOption } from \"ng-select\";\nimport { SystemMasterParametersService } from \"src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\nimport { ReportFrameComponent } from \"../../report-frame/report-frame.component\";\nimport { NgSelectComponent } from \"@ng-select/ng-select\";\n\n@Component({\n  selector: 'app-npa-analysis-report',\n  templateUrl: './npa-analysis-report.component.html',\n  styleUrls: ['./npa-analysis-report.component.scss']\n})\nexport class NpaAnalysisReportComponent implements OnInit {\n    iframe5url:any='';\n    @ViewChild(ReportFrameComponent ) child: ReportFrameComponent ; \n  formSubmitted = false;  \n  Accschemeno:any =new Array(                           );\n\n  \n  //fromgroup\n  ngForm:FormGroup\n   // for dropdown ng module\n   fromdate: any = null\n   ngbranch: any = null; \n   scode: any = null;\n   GL_CODE:any;\n   AGL_CODE:any;\n   //ngfor\n   scheme: any[];\n  branchOption: any[];\n  clicked:boolean=false;\n  showRepo: boolean = false;\n  showLoading:boolean = false;\n  transferSchemeDetails: any;\n  tScheme\n  \n   //date\n  todate: any = null\n  bsValue = new Date();\n  Anamat:any;\n  \n  maxDate: Date;\n    minDate: Date;\n    report_url = environment.report_url;\n    branchName: any;\n  Accnumber: any;\n  obj1: any[];\n  savingMasterService: any;\n  introducerGL_CODE: any;\n  ToAC: any[];\n  fromAC: any[];\n  \n    constructor(\n      private fb: FormBuilder,\n      private _ownbranchmasterservice: OwnbranchMasterService,\n      private systemParameter:SystemMasterParametersService,\n      public schemeCodeDropdownService: SchemeCodeDropdownService,\n      private sanitizer: DomSanitizer,\n      private schemeAccountNoService: SchemeAccountNoService,\n     \n    ) {\n      this.todate = moment().format('DD/MM/YYYY');\n      this.maxDate = new Date();\n      this.minDate = new Date();\n      this.minDate.setDate(this.minDate.getDate() - 1); \n      this.maxDate.setDate(this.maxDate.getDate())\n    }\n  \n    ngOnInit(): void {\n      this.createForm()\n     //branchlist\n     this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branchOption = data;\n      let data1: any = localStorage.getItem('user');\n      let result = JSON.parse(data1);\n      if (result.branchId == 1) {\n        this.branchOption.push({ value: '0', label: 'Consolidate' })\n      }    })\n  \n   // Scheme Code\n   this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\n      console.log(data);\n      \n    var filtered = data.filter(function (scheme) {\n      return ( scheme.name == 'LN' || scheme.name == 'CC' || scheme.name == 'DS' || scheme.name == 'GL');\n    });\n    this.scheme = filtered;\n   \n    // this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\n    //   this.todate = data.CURRENT_DATE;\n    // });\n  \n  })\n\n  this.systemParameter.getFormData(1).subscribe(data => {\n    let year = moment(data.CURRENT_DATE, \"DD/MM/YYYY\").year()\n    this.todate = data.CURRENT_DATE\n    \n    this.fromdate = moment(`01/04/${year - 1}`, \"DD/MM/YYYY\")\n    this.fromdate = this.fromdate._d\n  })\n    \n    let data: any = localStorage.getItem('user');\n      let result = JSON.parse(data);\n      if (result.RoleDefine[0].Role.id == 1) {\n        this.ngbranch = result.branch.id\n        this.ngForm.controls['BRANCH_CODE'].enable()\n        this.branchName = result.branch.NAME\n  \n      }\n      else {\n        this.ngForm.controls['BRANCH_CODE'].disable()\n        this.ngbranch = result.branch.id\n        this.branchName = result.branch.NAME\n  \n      }\n    }\n  \n    getTransferAccountList(event) {\n      this.transferSchemeDetails = event\n      this.tScheme = event.name\n      this.getIntroducer()\n    \n    }\n    getIntroducer() {\n\n      let data: any = localStorage.getItem('user');\n      let result = JSON.parse(data);\n      let branchCode = result.branch.id;\n      let code = 10;\n      this.obj1 = [code, branchCode]\n      switch (this.tScheme) {\n  \n  \n        case 'GL':\n          this.schemeAccountNoService.getGeneralLedgerList1(this.obj1).subscribe(data => {\n            this.ToAC = data\n            this.fromAC = data\n            console.log(data);\n            \n          })\n          break;\n          \n        case 'LN':\n          this.schemeAccountNoService.getGeneralLedgerList1(this.obj1).subscribe(data => {\n            this.ToAC = data\n            this.fromAC = data\n            console.log(data);\n            \n          })\n          break;\n          \n        case 'CC':\n          this.schemeAccountNoService.getGeneralLedgerList1(this.obj1).subscribe(data => {\n            this.ToAC = data\n            this.fromAC = data\n            console.log(data);\n            \n          })\n          break;\n          \n        case 'DS':\n          this.schemeAccountNoService.getGeneralLedgerList1(this.obj1).subscribe(data => {\n            this.ToAC = data\n            this.fromAC = data\n            console.log(data);\n            \n          })\n          break;\n  \n      }\n    }\n   \n    createForm() {\n      this.ngForm = this.fb.group({\n        BRANCH_CODE: ['', [Validators.required]],\n        Scheme_code: [\"\",[ Validators.required]],\n        END_DATE: ['', [Validators.required]],\n        GL_CODE: ['', [Validators.required]],\n        AGL_CODE: ['', [Validators.required]],\n       \n      });\n     \n    }\n    \n    view(event) {\n     \n  \n      event.preventDefault();\n      this.formSubmitted = true;\n  \n      let userData = JSON.parse(localStorage.getItem('user'));\n      let bankName = userData.branch.syspara.BANK_NAME;\n      let branchName = userData.branch.NAME;\n  \n  \n      if(this.ngForm.valid){\n  \n     this.showRepo = true;\n      let obj = this.ngForm.value\n  \n      let Date = moment(obj.date).format('DD/MM/YYYY');\n      let tDate = moment(Date, 'DD/MM/YYYY')\n        //for start date\n        if(this.fromdate == userData.branch.syspara.CURRENT_DATE)\n        {\n          obj['START_DATE'] =userData.branch.syspara.CURRENT_DATE\n        }\n        else{\n        let date = moment(this.fromdate).format('DD/MM/YYYY');\n        let toDate = moment(date, 'DD/MM/YYYY')\n        obj['START_DATE']=date \n      }\n     //for end date\n      if(this.todate == userData.branch.syspara.CURRENT_DATE)\n      {\n        obj['END_DATE'] =userData.branch.syspara.CURRENT_DATE\n      }\n      else{\n      let date = moment(this.todate).format('DD/MM/YYYY');\n      let tDate = moment(date, 'DD/MM/YYYY')\n      obj['END_DATE']=date \n     }\n  \n    let scheme = obj.Scheme_code\n    let VAR1 = obj.GL_CODE;\n    let VAR2 = obj.AGL_CODE;\n    let TDate = obj.END_DATE;\n    let SDate = moment(TDate, \"DD/MM/YYYY\").subtract(1, \"year\").format(\"DD/MM/YYYY\");\n\n  \n      let branch = obj.BRANCH_CODE;\n  \n      let schemeName = this.tScheme\n  \n      //  let startingcode= obj.Starting_Account;\n      // let endingcode =obj.Ending_Account;\n      // this.iframe5url=this.report_url+ \"examples/deposit.php/?&bankname='\"+ bankName +\"'&Branch='\"+ this.branchName +\"'&sdate='\"+ obj.START_DATE +\"'&edate='\"+ obj.END_DATE +\"'&AC_TYPE='\"+ scheme +\"'&GL_CODETYPE='\"+ schemeName +\"' &BRANCH_CODE='\"+branch+\"'\";\n\n      this.iframe5url=this.report_url+ \"examples/NPA_Analysis_Report1.php?BRANCH_CODE=\"+branch\n\n      +\"&FLAG=0&DATE1='\"+TDate+\"'&DATE2='\"+SDate+\"'&VAR1='\"+VAR1+\"'&VAR2='\"+VAR2+\"'&BRANCH_NAME='\"+this.branchName+\"'&BANK_NAME='\"+bankName+\"'\"\n    console.log(this.iframe5url); \n     this.iframe5url=this.sanitizer.bypassSecurityTrustResourceUrl(this.iframe5url); \n    }\n    else {\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(()=>{ this.clicked=false});\n    }\n    }\n    close(){\n      this.resetForm()\n  \n    }\n    onLoad(){\n      this.showLoading = false;\n  \n    }\n    resetForm() {\n    this.ngForm.controls.Scheme_code.reset();\n  \n      this.showRepo = false;\n      this.clicked=false;\n    }\n    onFocus(ele: NgSelectComponent) {\n      ele.open()\n    }\n    getBranch(event) {\n      this.ngbranch = event.value\n      this.branchName = event.branchName\n    }\n  }\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>NPA Analysis Report</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <div class=\"card\">\n                <form [formGroup]=\"ngForm\">\n                    <div class=\"card-block\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-1\"> <label for=\"Branch\">Branch <sub\n                                        class=\"required\">*</sub></label>\n                            </div>\n                            <div class=\"col-sm-12 col-md-2\">\n                                <div class=\"form-group form-primary form-static-label\">\n                                    <span class=\"border-lable-flt\">\n                                        <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngbranch\"\n                                            (change)=\"getBranch($event)\" formControlName=\"BRANCH_CODE\" bindLabel=\"label\"\n                                            placeholder=\"Branch\">\n                                            <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\n                                                {{values.label}}</ng-option>\n                                        </ng-select>\n                                    </span>\n                                </div>\n\n                                <div class=\"form-group form-primary form-static-label\"\n                                    *ngIf=\"ngForm.controls['BRANCH_CODE'].invalid && (ngForm.controls['BRANCH_CODE'].dirty || ngForm.controls['BRANCH_CODE'].touched)\"\n                                    class=\"alert alert-danger\">\n                                    <div *ngIf=\"ngForm.controls['BRANCH_CODE'].errors?.required\">\n                                        This field is required\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\" Date\">Scheme Code<sub\n                                        class=\"required\">*</sub></label>\n                            </div>\n                            <div class=\"col-sm-2 col-md-2\">\n                                <div class=\"form-group form-primary form-static-label\">\n                                    <span class=\"border-lable-flt\">\n                                        <ng-select formControlName=\"Scheme_code\" bindValue=\"value\" bindLabel=\"label\"\n                                            [(ngModel)]=\"scode\" (change)=\"getTransferAccountList($event)\">\n                                            <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                                {{values.id}} {{values.label}} </ng-option>\n                                        </ng-select>\n\n                                    </span>\n                                </div>\n                                <div class=\"form-group form-primary form-static-label\"\n                                    *ngIf=\"ngForm.controls['Scheme_code'].invalid && (ngForm.controls['Scheme_code'].dirty || ngForm.controls['Scheme_code'].touched)\"\n                                    class=\"alert alert-danger\">\n                                    <div *ngIf=\"ngForm.controls['Scheme_code'].errors?.required\">\n                                        This field is required\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12 col-md-1\"> <label for=\" Date\"> Date<sub\n                                        class=\"required\">*</sub></label>\n                            </div>\n                            <div class=\"col-sm-12 col-md-2\">\n                                <div class=\"form-group input-group\">\n                                    <span class=\"border-lable-flt\">\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"END_DATE\" id=\"END_DATE\"\n                                            [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" class=\"form-control\"\n                                            [(ngModel)]=\"todate\" formControlName=\"END_DATE\" appButton minlength=\"8\"\n                                            maxlength=\"10\"\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\n                                            bsDatepicker>\n                                    </span>\n                                </div>\n                                <div class=\"form-group form-primary form-static-label\"\n                                    *ngIf=\"ngForm.controls['END_DATE'].invalid && (ngForm.controls['END_DATE'].dirty || ngForm.controls['END_DATE'].touched)\"\n                                    class=\"alert alert-danger\">\n                                    <div\n                                        *ngIf=\"ngForm.controls['END_DATE'].errors?. maxlength || ngForm.controls['END_DATE'].errors?. minlength || ngForm.controls['END_DATE'].errors?.required\">\n                                        This field is required\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row mt-3\">\n                            <div class=\"col-md-2\"> <label for=\"START_DATE\">Overdue Interest Rate GL Code<sub\n                                        class=\"required\">*</sub></label>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"form-group input-group\">\n                                    <span class=\"border-lable-flt\">\n                                    <ng-select formControlName=\"GL_CODE\" bindValue=\"value\" bindLabel=\"label\"\n                                        [(ngModel)]=\"Accnumber\">\n                                        <ng-option *ngFor=\"let values of ToAC\" [value]=\"values\">\n                                           {{values.label}} {{values.name}}  </ng-option>\n                                    </ng-select>\n                                </span>\n                                </div>\n                                <div class=\"form-group form-primary form-static-label\"\n                                    *ngIf=\"ngForm.controls['GL_CODE'].invalid && (ngForm.controls['GL_CODE'].dirty || ngForm.controls['GL_CODE'].touched)\"\n                                    class=\"alert alert-danger\">\n                                    <div\n                                        *ngIf=\"ngForm.controls['GL_CODE'].errors?.required ||ngForm.controls['GL_CODE'].invalid\">\n                                        This field is required.\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\"> <label for=\"START_DATE\">Anamat GL Code<sub\n                                        class=\"required\">*</sub></label>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"form-group input-group\">\n                                    <span class=\"border-lable-flt\">\n                                    <ng-select formControlName=\"AGL_CODE\" bindValue=\"value\" bindLabel=\"label\"\n                                        [(ngModel)]=\"Anamat\">\n                                        <ng-option *ngFor=\"let values of fromAC\" [value]=\"values\">\n                                            {{values.label}} {{values.name}} </ng-option>\n                                    </ng-select>\n                                </span>\n                                </div>\n                                <div class=\"form-group form-primary form-static-label\"\n                                    *ngIf=\"ngForm.controls['AGL_CODE'].invalid && (ngForm.controls['AGL_CODE'].dirty || ngForm.controls['AGL_CODE'].touched)\"\n                                    class=\"alert alert-danger\">\n                                    <div\n                                        *ngIf=\"ngForm.controls['AGL_CODE'].errors?.required ||ngForm.controls['AGL_CODE'].invalid\">\n                                        This field is required.\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-9\"></div>\n                            <div class=\"col-md-2\">\n                                <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\n                                    (click)=\"view($event);\">View</button>\n\n                            </div>\n                            <div class=\"col-md-1\">\n                                <button class=\"btn btn-outline-primary btn-sm\" (click)=\"close()\">Close</button>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-12\">\n                                <div class=\"card\">\n                                    <div class=\"card-header\">\n                                        <h5>Report Frame</h5>\n                                    </div>\n                                    <div *ngIf=\"showRepo\">\n                                        <app-iframe5 [url]='iframe5url' (load)=\"onLoad()\"></app-iframe5>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NpaAnalysisReportRoutingModule } from './npa-analysis-report-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { TermDepositSchemeService } from 'src/app/theme/utility/scheme-parameters/term-deposit-scheme/term-deposit-scheme.service';\nimport { RepayModeService } from 'src/app/shared/dropdownService/repay-mode.service';\nimport { InstallmentMethodService } from 'src/app/shared/dropdownService/installment-method.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { Iframe5Module } from '../../pigmy-report/iframe5/iframe5.module';\nimport { NpaAnalysisReportComponent } from './npa-analysis-report.component';\n\n\n@NgModule({\n  declarations: [NpaAnalysisReportComponent],\n  imports: [\n    CommonModule,\n    NpaAnalysisReportRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n   \n    NgSelectModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n \n    Iframe5Module\n  ],\n   \n  exports:[],\n  providers: [OwnbranchMasterService, \n    SchemeCodeDropdownService, \n    SchemeAccountNoService,TermDepositSchemeService,SystemMasterParametersService, SchemeCodeDropdownService, OwnbranchMasterService,RepayModeService,InstallmentMethodService,\n    SystemMasterParametersService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },\n  ],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA,NO_ERRORS_SCHEMA]\n})\nexport class NpaAnalysisReportModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Iframe5Component } from './iframe5/iframe5.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component:Iframe5Component,\n    data: {\n      title: 'Iframe5',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Iframe5RoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Iframe5RoutingModule } from './iframe5-routing.module';\nimport { Iframe5Component } from './iframe5/iframe5.component';\n\n\n@NgModule({\n  declarations: [Iframe5Component],\n  imports: [\n    CommonModule,\n    Iframe5RoutingModule\n  ],\n  exports:[Iframe5Component]\n})\nexport class Iframe5Module { }\n","import { Component, OnInit,Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-iframe5',\n  templateUrl: './iframe5.component.html',\n  styleUrls: ['./iframe5.component.scss']\n})\nexport class Iframe5Component implements OnInit {\n  @Input() url: any;\n  \n\n  constructor(\n    private sanitizer: DomSanitizer) {\n    this.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.url);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <form  novalidate>\n                <div class=\"card-block\">\n                    <div class=\"embed-responsive embed-responsive-16by9\">\n                        <div class=\"loader\">\n                            <img src=\"assets/Loading.gif\">\n                        </div>\n                        <iframe [src]=\"url\"></iframe>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n"],"sourceRoot":"webpack:///"}