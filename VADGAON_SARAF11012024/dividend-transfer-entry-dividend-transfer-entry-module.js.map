{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/master/customer/shares-master/shares-master.service.ts","./src/app/theme/master/shares/dividend-transfer-entry/dividend-transfer-entry-routing.module.ts","./src/app/theme/master/shares/dividend-transfer-entry/dividend-transfer-entry.component.ts","./src/app/theme/master/shares/dividend-transfer-entry/dividend-transfer-entry.component.html","./src/app/theme/master/shares/dividend-transfer-entry/dividend-transfer-entry.module.ts"],"names":[],"mappings":"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","file":"dividend-transfer-entry-dividend-transfer-entry-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n@Injectable()\nexport class ShareMasterService {\n    // Variable for handleError\n    [x: string]: any;\n    // API  \n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n\n    //Insertion Operation\n    postData(data: any): Observable<any> {\n        return this.http.post(this.url + '/share-master/insert', data).pipe(map((res) => res),\n            catchError((error) => {\n                Swal.fire('Please Input Proper Data!');\n                return throwError(error);\n            })\n        )\n    }\n    getData(obj): Observable<any> {\n        return this.http.get(this.url + '/share-master/alldata' + obj).pipe(catchError(this.handleError));\n    }\n    // For append data\n    getFormData(id: any): Observable<any> {\n        return this.http.get(this.url + '/share-master/' + id).pipe(catchError(this.handleError));\n    }\n    //Updation Operation\n    updateData(data): Observable<any> {\n        return this.http.put(this.url + '/share-master/update', data);\n    }\n\n    updateDataPyatrans(data): Observable<any> {\n        return this.http.put(this.url + '/share-master/payDivTrans', data);\n    }\n    //Deletion Operation\n    deleteData(id: any): Observable<any> {\n        return this.http.delete(this.url + '/share-master/delete/' + id).pipe(catchError(this.handleError));\n    }\n    //approve master\n    approve(data: any): Observable<any> {\n        return this.http.post(this.url + '/share-master/approve', data).pipe(catchError(this.handleError));\n    }\n    //unapporve master\n    unapporve(data: any): Observable<any> {\n        return this.http.post(this.url + '/share-master/unapporve', data).pipe(catchError(this.handleError));\n    }\n\n\n    //reject master\n    reject(data: any): Observable<any> {\n        return this.http.post(this.url + '/share-master/reject', data).pipe(catchError(this.handleError));\n    }\n\n}\n\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { DividendTransferEntryComponent } from './dividend-transfer-entry.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DividendTransferEntryComponent,\n    data: {\n      title: 'Dividend Transfer Instruction',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DividendTransferEntryRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\nimport { MembernoService } from '../../../../shared/elements/memberno.service';\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NgSelectComponent, NgSelectConfig } from '@ng-select/ng-select';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { first } from 'rxjs/operators';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { ShareMasterService } from 'src/app/theme/master/customer/shares-master/shares-master.service';\n\n@Component({\n  selector: 'app-dividend-transfer-entry',\n  templateUrl: './dividend-transfer-entry.component.html',\n  styleUrls: ['./dividend-transfer-entry.component.scss']\n})\n\nexport class DividendTransferEntryComponent implements OnInit {\n  formSubmitted = false;\n  angForm: FormGroup;\n\n  dtExportButtonOptions: any = {};\n\n\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  schemeType: string = 'SH'\n  scheme: any[] //scheme code from schemast(S_ACNOTYPE)\n  memnoACNo: any[] //scheme code from schemast(S_ACNOTYPE)\n  branch_code: any[]//from ownbranchmaster\n  allScheme: any = null\n  ngBranchCode: any = null\n  ngDivACNO: any = null\n  ngDivACType: any = null\n  selectedValue: any = null\n  memValue: any = null\n  divTransferNO\n  bcode\n  schemeDT: any\n\n  obj: any\n  object: any\n  getschemename: any\n  getscheme\n\n  constructor(private fb: FormBuilder, private config: NgSelectConfig,\n    private _schemeAccountNoService: SchemeAccountNoService,\n    private _SchemeCodeDropdown: SchemeCodeDropdownService,\n    private _ownbranchMasterService: OwnbranchMasterService,\n    private _shareMasterService: ShareMasterService) {\n\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    this._SchemeCodeDropdown.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data => {\n      this.scheme = data;\n      // this.selectedValue = this.scheme[0].value\n    })\n    this._ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branch_code = data;\n    })\n    this._SchemeCodeDropdown.getAllSchemeList().pipe(first()).subscribe(data => {\n\n      var filtered = data.filter(function (scheme) {\n\n        return (scheme.name != 'AG' && scheme.name != 'PG');\n      });\n      this.allScheme = filtered;\n    })\n   \n    // console.log(this.scheme[0].value)\n    // this._schemeAccountNoService.getShareSchemeList2(this.scheme[0].value).subscribe(data => {\n    //   console.log('data', data)\n    //   this.memnoACNo = data;\n    // })\n  }\n\n\n  createForm() {\n    this.angForm = this.fb.group({\n      AC_TYPE: ['', [Validators.required]],\n      AC_NO: ['', [Validators.required]],\n      DIV_TRANSFER_BRANCH: [''],\n      DIV_TRANSFER_ACTYPE: [''],\n      DIV_TRANSFER_ACNO: ['']\n    });\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    if (result.RoleDefine[0].Role.id == 1) {\n      this.angForm.controls['DIV_TRANSFER_BRANCH'].enable()\n      this.ngBranchCode = result.branch.id\n      \n    }\n    else {\n      this.angForm.controls['DIV_TRANSFER_BRANCH'].disable()\n      this.angForm.patchValue({\n        'DIV_TRANSFER_BRANCH': result.branch.id\n      })\n      this.ngBranchCode = result.branch.id\n      \n    }\n  }\n\n  submit() {\n    // console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      // console.log(this.angForm.value);\n    }\n  }\n\n  getmemNo(event) {\n    // console.log(event.value)\n    this.schemeDT = event.value\n    this._schemeAccountNoService.getShareSchemeList2(event.value).subscribe(data => {\n      // console.log('data', data)\n      this.memnoACNo = data;\n    })\n  }\n\n  /**\n * @updateData function for update data \n */\n  updateDataPyatrans() {\n    this.showButton = true;\n    this.updateShow = false;\n\n    let data = this.angForm.value;\n    data['AC_TYPE'] = this.schemeDT\n    data['AC_NO'] = Number(this.updatememno)\n\n    this._shareMasterService.updateDataPyatrans(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n    });\n    this.schemeDT = null\n    this.updatememno = null\n    this.resetForm();\n    console.log(this.selectedValue)\n    console.log(this.memValue)\n    // this.selectedValue = null\n    // this.memValue = null\n    // this.form.reset();\n  }\n\n\n\n  getBranch(event) {\n    this.bcode = event.value\n    this.getDiviTransfer()\n  }\n\n  getDivTrans(event) {\n    this.getscheme = event.value\n    this.getschemename = event.name\n    this.getDiviTransfer()\n  }\n  //get account no according scheme for dividend transfer\n  getDiviTransfer() {\n\n    this.obj = [this.ngDivACType, this.ngBranchCode]\n    switch (this.getschemename) {\n\n      case 'SB':\n        this._schemeAccountNoService.getSavingSchemeList1(this.obj).subscribe(data => {\n          this.divTransferNO = data;\n        })\n        break;\n\n      case 'SH':\n        this._schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\n\n          this.divTransferNO = data;\n        })\n        break;\n\n      case 'CA':\n        this._schemeAccountNoService.getCurrentAccountSchemeList1(this.obj).subscribe(data => {\n          this.divTransferNO = data;\n        })\n        break;\n\n      case 'LN':\n        this._schemeAccountNoService.getTermLoanSchemeList1(this.obj).subscribe(data => {\n          this.divTransferNO = data;\n        })\n        break;\n\n      case 'TD':\n        this._schemeAccountNoService.getTermDepositSchemeList1(this.obj).subscribe(data => {\n\n          this.divTransferNO = data;\n\n        })\n        break;\n\n      case 'DS':\n        this._schemeAccountNoService.getDisputeLoanSchemeList1(this.obj).subscribe(data => {\n          this.divTransferNO = data;\n        })\n        break;\n\n      case 'CC':\n        this._schemeAccountNoService.getCashCreditSchemeList1(this.obj).subscribe(data => {\n          this.divTransferNO = data;\n        })\n        break;\n\n      case 'GS':\n        this._schemeAccountNoService.getAnamatSchemeList1(this.obj).subscribe(data => {\n          this.divTransferNO = data;\n        })\n        break;\n\n      case 'IV':\n        this._schemeAccountNoService.getInvestmentSchemeList1(this.obj).subscribe(data => {\n          this.divTransferNO = data;\n        })\n        break;\n    }\n  }\n\n  updatememno: any\n  getData(event) {\n    // console.log(event)\n    let info\n    this.updatememno = event.value\n    this.object = [this.schemeDT, event.value]\n    // console.log(this.object)\n    this._schemeAccountNoService.getShareSchemeListDT(this.object).subscribe(data => {\n      // debugger\n\n      // console.log(data)\n      info = data\n      // console.log(info.label)\n      // console.log(info.value)\n      // console.log(info.name)\n\n      if ((info[0].label != null && info[0].value != null && info[0].name != null) || (info[0].label != \"\" && info[0].value != \"\" && info[0].name != \"\")) {\n        this.ngBranchCode = info[0].label\n        this.ngDivACType = Number(info[0].value)\n\n        this.obj = [this.ngDivACType, this.ngBranchCode]\n\n        this.allScheme.forEach(async (element) => {\n          // debugger\n          if (element.value == this.ngDivACType) {\n            this.getschemename = element.name\n            console.log(this.getschemename)\n          }\n        })\n        console.log(this.getschemename)\n\n        switch (this.getschemename) {\n          case 'SB':\n            this._schemeAccountNoService.getSavingSchemeList1(this.obj).subscribe(data => {\n              this.divTransferNO = data;\n            })\n            break;\n\n          case 'SH':\n            this._schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\n              this.divTransferNO = data;\n            })\n            break;\n\n          case 'CA':\n            this._schemeAccountNoService.getCurrentAccountSchemeList1(this.obj).subscribe(data => {\n              this.divTransferNO = data;\n            })\n            break;\n\n          case 'LN':\n            this._schemeAccountNoService.getTermLoanSchemeList1(this.obj).subscribe(data => {\n              this.divTransferNO = data;\n            })\n            break;\n\n          case 'TD':\n            this._schemeAccountNoService.getTermDepositSchemeList1(this.obj).subscribe(data => {\n\n              this.divTransferNO = data;\n\n            })\n            break;\n\n          case 'DS':\n            this._schemeAccountNoService.getDisputeLoanSchemeList1(this.obj).subscribe(data => {\n              this.divTransferNO = data;\n            })\n            break;\n\n          case 'CC':\n            this._schemeAccountNoService.getCashCreditSchemeList1(this.obj).subscribe(data => {\n              this.divTransferNO = data;\n            })\n            break;\n\n          case 'GS':\n            this._schemeAccountNoService.getAnamatSchemeList1(this.obj).subscribe(data => {\n              this.divTransferNO = data;\n            })\n            break;\n\n          case 'IV':\n            this._schemeAccountNoService.getInvestmentSchemeList1(this.obj).subscribe(data => {\n              this.divTransferNO = data;\n            })\n            break;\n        }\n        this.ngDivACNO = Number(info[0].name)\n\n      } else {\n\n        this.ngBranchCode = null\n        this.ngDivACType = null\n        this.ngDivACNO = null\n        this.angForm.controls['DIV_TRANSFER_BRANCH'].reset()\n        this.angForm.controls['DIV_TRANSFER_ACTYPE'].reset()\n        this.angForm.controls['DIV_TRANSFER_ACNO'].reset()\n      }\n\n    })\n  }\n\n  resetForm() {\n    // this.ngBranchCode = null\n    this.ngDivACType = null\n    this.ngDivACNO = null\n    this.selectedValue = null\n    this.memValue = null\n    this.angForm.controls['AC_TYPE'].reset()\n    this.angForm.controls['AC_NO'].reset()\n    this.createForm();\n\n  }\n\n  onFocus(ele: NgSelectComponent) {  \n    ele.open()\n  }\n}\n\n\n\n","<!-- Dividend Transfer Entry -->\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Payable Dividend Transfer Instruction</h5>\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\n                </h6>\n            </div>\n            <form action=\"javascript:\" appSubmit [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\" autofocus>\n                                    <ng-select appTheme bindValue=\"value\" [(ngModel)]=\"selectedValue\" id=\"AC_TYPE\"\n                                        formControlName=\"AC_TYPE\" title=\"Compulsory Selection\" [virtualScroll]=\"true\"\n                                        (change)=\"getmemNo($event)\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                        #AC_TYPE (focus)=\"onFocus(AC_TYPE)\" [selectOnTab]='true'\n                                        required placeholder=\"Scheme\" autofocus>\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"AC_TYPE\">Scheme <sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                                  angForm.controls['AC_TYPE'].invalid &&\n                                  (angForm.controls['AC_TYPE'].dirty ||\n                                    angForm.controls['AC_TYPE'].touched)\n                                \" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\" autofocus>\n                                    <ng-select appTheme bindValue=\"value\" [(ngModel)]=\"memValue\" id=\"AC_NO\"\n                                        formControlName=\"AC_NO\" title=\"Compulsory Selection\"\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required [virtualScroll]=\"true\"\n                                        #AC_NO (focus)=\"onFocus(AC_NO)\" [selectOnTab]='true'\n                                        placeholder=\"Member Number\" (change)=\"getData($event)\">\n                                        <ng-option *ngFor=\"let values of memnoACNo\" [value]=\"values\">\n                                            {{values.label}} {{values.name}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"AC_NO\">Member Number <sub class=\"required\"> * </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"\n                              angForm.controls['AC_NO'].invalid &&\n                              (angForm.controls['AC_NO'].dirty ||\n                                angForm.controls['AC_NO'].touched)\n                            \" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select appTheme id=\"DIV_TRANSFER_BRANCH\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\n                                        formControlName=\"DIV_TRANSFER_BRANCH\" bindLabel=\"label\" [virtualScroll]=\"true\"\n                                        title=\"Compulsory Selection\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                        #DIV_TRANSFER_BRANCH (focus)=\"onFocus(DIV_TRANSFER_BRANCH)\" [selectOnTab]='true'\n                                        (change)=\"getBranch($event)\" placeholder=\"Branch\">\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\n                                            {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"DIV_TRANSFER_BRANCH\">Branch</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select appTheme id=\"DIV_TRANSFER_ACTYPE\" bindValue=\"value\" [(ngModel)]=\"ngDivACType\"\n                                        formControlName=\"DIV_TRANSFER_ACTYPE\" bindLabel=\"label\" [virtualScroll]=\"true\"\n                                        title=\"Compulsory Selection\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                        #DIV_TRANSFER_ACTYPE (focus)=\"onFocus(DIV_TRANSFER_ACTYPE)\" [selectOnTab]='true'\n                                        (change)=\"getDivTrans($event)\" placeholder=\"Account Type\">\n                                        <ng-option *ngFor=\"let values of allScheme\" [value]=\"values\">\n                                            {{values.id}} {{values.label}}</ng-option>\n                                    </ng-select>\n                                    <label for=\"DIV_TRANSFER_ACTYPE\">Account\n                                        Type</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-5\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select appTheme id=\"DIV_TRANSFER_ACNO\" bindValue=\"value\" [(ngModel)]=\"ngDivACNO\"\n                                        formControlName=\"DIV_TRANSFER_ACNO\" bindLabel=\"AC_NO\" [virtualScroll]=\"true\"\n                                        title=\"Compulsory Selection\" [ngClass]=\"{'form-submitted': formSubmitted}\"\n                                        #DIV_TRANSFER_ACNO (focus)=\"onFocus(DIV_TRANSFER_ACNO)\" [selectOnTab]='true'\n                                        (focus)=\"getDiviTransfer()\" placeholder=\"Account Number\">\n                                        <ng-option *ngFor=\"let values of divTransferNO\" [value]=\"values\">\n                                            {{values.label}} {{values.name}}\n                                        </ng-option>\n                                    </ng-select>\n                                    <label for=\"DIV_TRANSFER_ACNO\">Account\n                                        Number</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-outline-primary btn-sm btn-submit\"\n                                (click)=\"updateDataPyatrans()\" appTheme>Update</button>\n                        </div>\n                    </div>\n\n                    <!-- <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"Scheme\">\n                                </ng-select>\n                                <label>{{ message.Scheme}}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"DividendAmount\" class=\"form-control\" placeholder=\" \"\n                                        id=\"DividendAmount\" value=\"{{ message.DividendAmount }}\"\n                                        formControlName=\"DividendAmount\">\n                                    <label for=\"DividendAmount\">Dividend Amount</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                    placeholder=\"Member No *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"MemberNo\">\n                                </ng-select>\n                                <label>{{ message.MemberNo}}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['MemberNo'].invalid && (angForm.controls['MemberNo'].dirty || angForm.controls['MemberNo'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['MemberNo'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"OtherAmount\" class=\"form-control\" placeholder=\" \"\n                                        id=\"OtherAmount\" value=\"{{ message.OtherAmount }}\"\n                                        formControlName=\"OtherAmount\">\n                                    <label for=\"OtherAmount\">Other Amount</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                    placeholder=\"Transfer Scheme *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"TransferScheme\">\n                                </ng-select>\n                                <label>{{ message.TransferScheme}}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['TransferScheme'].invalid && (angForm.controls['TransferScheme'].dirty || angForm.controls['TransferScheme'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['TransferScheme'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"d\" [multiple]=\"false\"\n                                    placeholder=\"Transfer A/c No *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"TransferAcNo\">\n                                </ng-select>\n                                <label>{{ message.TransferAcNo }}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['TransferAcNo'].invalid && (angForm.controls['TransferAcNo'].dirty || angForm.controls['TransferAcNo'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['TransferAcNo'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div> -->\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<!-- <div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div> -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTablesModule } from 'angular-datatables';\nimport { DividendTransferEntryRoutingModule } from './dividend-transfer-entry-routing.module';\nimport { DividendTransferEntryComponent } from './dividend-transfer-entry.component';\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\nimport { MembernoService } from '../../../../shared/elements/memberno.service';\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { ShareMasterService } from 'src/app/theme/master/customer/shares-master/shares-master.service';\nimport { ThemeModule } from 'src/app/theme/theme.module';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DividendTransferEntryRoutingModule,\n    DataTablesModule,\n    NgbModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ThemeModule\n  ],\n  declarations: [DividendTransferEntryComponent],\n  providers: [SchemeCodeDropdownService, SchemeAccountNoService, OwnbranchMasterService,ShareMasterService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: UserAuthInterceptor,\n    multi: true\n  },]\n})\nexport class DividendTransferEntryModule { }\n"],"sourceRoot":"webpack:///"}