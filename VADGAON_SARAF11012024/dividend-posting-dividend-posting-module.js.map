{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/shared/elements/scheme-code.service.ts","./src/app/theme/master/shares/dividend-posting/dividend-posting-routing.module.ts","./src/app/theme/master/shares/dividend-posting/dividend-posting.component.ts","./src/app/theme/master/shares/dividend-posting/dividend-posting.component.html","./src/app/theme/master/shares/dividend-posting/dividend-posting.module.ts","./src/app/theme/master/shares/dividend-posting/dividend-posting.service.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"dividend-posting-dividend-posting-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class SchemeCodeService {\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: '40100', label: '40100' },\n        { value: '40200', label: '40200' },\n        { value: '40300', label: '40300' },\n        { value: '40400', label: '40400' },\n        \n    ];\n\n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(SchemeCodeService.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(SchemeCodeService.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(SchemeCodeService.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { DividendPostingComponent } from './dividend-posting.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DividendPostingComponent,\n    data: {\n      title: 'Dividend Posting',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DividendPostingRoutingModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SchemeCodeService } from '../../../../shared/elements/scheme-code.service';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { first } from 'rxjs/operators';\nimport { NgSelectComponent, NgSelectConfig } from '@ng-select/ng-select';\nimport { environment } from 'src/environments/environment';\nimport { Subject } from 'rxjs-compat';\nimport { DataTableDirective } from 'angular-datatables';\nimport { HttpClient } from '@angular/common/http';\nimport { DividendPostingService } from './dividend-posting.service'\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\nimport { date } from 'ngx-custom-validators/src/app/date/validator';\nimport * as moment from 'moment';\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface DividendPosting {\n  id: number;\n\n  AC_TYPE: number;\n  WARRENT_DATE: Date\n\n}\n@Component({\n  selector: 'app-dividend-posting',\n  templateUrl: './dividend-posting.component.html',\n  styleUrls: ['./dividend-posting.component.scss']\n})\n\nexport class DividendPostingComponent implements OnInit {\n\n  //api\n  url = environment.base_url;\n  formSubmitted = false;\n  angForm: FormGroup;\n\n  httpData: any;\n  dtExportButtonOptions: any = {};\n  makeForm: any;\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\n\n\n\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  page: number;\n  filterData = {};\n\n\n\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  dividendposting: DividendPosting[]\n  //for date\n  maxDate: Date;\n  minDate: Date;\n  warrentdate: any = null\n\n  // dropdown variables\n  ngscheme: any = null\n  scheme;\n  //Scheme type variable\n  schemeType: string = 'SH'\n  warrentDate\n  ngwarrentDate: any\n\n  private dataSub: Subscription = null;\n\n  constructor(private fb: FormBuilder,\n    private http: HttpClient,\n    private config: NgSelectConfig,\n    private systemParameter: SystemMasterParametersService,\n    private _service: DividendPostingService,\n    private schemeCodeDropdownService: SchemeCodeDropdownService, public SchemeCodeService: SchemeCodeService) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    this.dtExportButtonOptions = {\n      pagingType: \"full_numbers\",\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n\n        dataTableParameters.columns.forEach((element) => {\n          if (element.search.value != \"\") {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters[\"filterData\"] = this.filterData;\n        this.http\n          .post<DataTableResponse>(\n            this.url + \"/fire-policy\",\n            dataTableParameters\n          )\n          .subscribe((resp) => {\n            this.dividendposting = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: [],\n            });\n          });\n      },\n      // ajax: 'fake-data/dividend-posting.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\"id=\"editbtn\">Edit</button>' + ' ' + '<button  id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Scheme Code',\n          data: 'AC_TYPE'\n        },\n        {\n          title: 'Warrant Date',\n          data: 'WARRENT_DATE'\n        },],\n      dom: \"Blrtip\",\n\n    };\n\n\n    // this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\n    //   var allscheme = data.filter(function (scheme) {\n    //     return (scheme.name == 'SB' || scheme.name == 'TD' || scheme.name == 'IV' || scheme.name == 'GS' || scheme.name == 'AG' || scheme.name == 'PG' || scheme.name == 'CC' || scheme.name == 'SH')\n    //   });\n    //   this.scheme = allscheme;\n    // })\n    this.createForm()\n    this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data => {\n      console.log(data);\n      this.scheme = data\n      this.ngscheme = data[0].value\n      this.changes()\n    })\n    // this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\n    //   this.ngwarrentDate = data.CURRENT_DATE;\n    // });\n  }\n\n  getintro() {\n\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      AC_TYPE: ['', [Validators.required]],\n      WARRENT_DATE: ['', [Validators.required]]\n    });\n  }\n  selectedWarrentDate\n  selectedDivFromYear\n  selectedDivToYear\n\n  getWarrentDetails(event) {\n    this.selectedWarrentDate = event.WARRENT_DATE\n    this.selectedDivFromYear = event.DIV_FROM_YEAR\n    this.selectedDivToYear = event.DIV_TO_YEAR\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      const dataToSend = {\n        WARRENT_DATE: this.selectedWarrentDate,\n        DIV_FROM_YEAR: this.selectedDivFromYear,\n        DIV_TO_YEAR: this.selectedDivToYear\n      }\n      console.log(dataToSend);\n\n\n      Swal.fire({\n        title: 'Are you sure?',\n        text: \"Do you want to process data\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#229954',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, Process it!'\n      }).then((result) => {\n        if (result.isConfirmed) {\n          this._service.postData(dataToSend).subscribe((data) => {\n            Swal.fire('Success!', \"Processed!\", \"success\");\n          }),\n            (error) => {\n              console.log(error);\n            };\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          Swal.fire('Info!', \"Processing Cancelled!\", \"info\");\n          this.createForm()\n          this.ngscheme = null\n          this.ngwarrentDate = null\n\n        }\n      });\n      this.resetForm()\n    }\n  }\n  /**\n  * @editClickHandler function for edit button clicked\n  */\n\n  editClickHandler(info: any): void {\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  /**\n  * @updateData function for update data \n  */\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n    // this.form.reset();\n  }\n\n  // reset form\n  resetForm() {\n    this.createForm();\n    this.ngscheme = null\n    this.ngwarrentDate = null\n  }\n\n  addNewData() {\n    this.showButton = true;\n    this.updateShow = false;\n\n    this.resetForm();\n  }\n\n  /**\n  * @delClickHandler function for delete button \n    @Swal sweetalert2\n    @Swal.fire open a modal window to display message\n  */\n  delClickHandler(info: any): void {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Scheme Code. data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  onFocus(ele: NgSelectComponent) {\n    ele.open()\n  }\n  changes() {\n    this.ngwarrentDate = null;\n    this.http.get(this.url + '/dividend-calculation/list' + this.ngscheme).subscribe((data) => {\n      this.warrentDate = data\n    })\n  }\n\n}\n","<!-- Dividend Posting -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Dividend Posting</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" appSubmit [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\"\r\n                #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Code<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select appTheme id=\"SchemeCode\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        #AC_TYPE (focus)=\"onFocus(AC_TYPE)\" [selectOnTab]='true' [virtualScroll]=\"true\"\r\n                                        required placeholder=\"Scheme Code\" (change)=\"changes()\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\"> <label for=\"WARRENT_DATE\">Dividend Warrent Date<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select appTheme appButton minlength=\"10\" maxlength=\"10\" id=\"WARRENT_DATE\"\r\n                                        bindValue=\"WARRENT_DATE\" [(ngModel)]=\"ngwarrentDate\"\r\n                                        formControlName=\"WARRENT_DATE\" bindLabel=\"WARRENT_DATE\"\r\n                                        title=\"Compulsory Selection\" #WARRENT_DATE (focus)=\"onFocus(WARRENT_DATE)\"\r\n                                        [selectOnTab]='true' [virtualScroll]=\"true\" required placeholder=\"Warrent Date\"\r\n                                        (change)=\"getWarrentDetails($event)\">\r\n                                        <ng-option *ngFor=\"let values of warrentDate\" [value]=\"values\">\r\n                                            <span> {{values.WARRENT_DATE}}</span><span class=\"boarder\">\r\n                                                ({{values.DIV_FROM_YEAR}}-{{values.DIV_TO_YEAR}} </span>)\r\n                                        </ng-option>\r\n                                    </ng-select> <!-- <ng-select appTheme appButton minlength=\"10\" maxlength=\"10\"\r\n                                         id=\"WARRENT_DATE\" bindValue=\"WARRENT_DATE\" [(ngModel)]=\"ngwarrentDate\"\r\n                                        formControlName=\"WARRENT_DATE\" bindLabel=\"WARRENT_DATE\" title=\"Compulsory Selection\"\r\n                                        #WARRENT_DATE (focus)=\"onFocus(WARRENT_DATE)\" [selectOnTab]='true' [virtualScroll]=\"true\"\r\n                                        required placeholder=\"Warrent Date\" (change)=\"getWarrentDetails($event)\">\r\n                                        <ng-option *ngFor=\"let values of warrentDate\" [value]=\"values\">\r\n                                            {{values.WARRENT_DATE}} ({{values.DIV_FROM_YEAR}}-{{values.DIV_TO_YEAR}})\r\n                                        </ng-option>\r\n                                    </ng-select> -->\r\n                                    <!-- <input appTheme appButton minlength=\"10\" maxlength=\"10\" type=\"text\"\r\n                                        placeholder=\"dd/mm/yyyy\" name=\"WARRENT_DATE\" id=\"WARRENT_DATE\"\r\n                                        class=\"form-control\" required #date class=\"form-control\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" #date\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" #WARRENT_DATE=\"bsDatepicker\"\r\n                                        (keydown.Tab)=\"WARRENT_DATE.hide()\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"WARRENT_DATE\"\r\n                                        minlength=\"10\" maxlength=\"10\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker> -->\r\n\r\n                                    <!-- <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"WARRENT_DATE\" id=\"WARRENT_DATE\"\r\n                                                class=\"form-control\" [(ngModel)]=\"ngwarrentDate\"\r\n                                                [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" formControlName=\"WARRENT_DATE\" (change)=\"getWarrentDetails($event)\"\r\n                                                [maxDate]=\"maxDate\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                                (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                bsDatepicker> -->\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['WARRENT_DATE'].invalid && (angForm.controls['WARRENT_DATE'].dirty || angForm.controls['WARRENT_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['WARRENT_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-1\">\r\n                            <button class=\"btn btn-outline-primary btn-sm btn-submit\" (click)=\"submit()\"\r\n                                *ngIf=\"showButton\" [disabled]=\"angForm.invalid\" (keydown.Tab)=\"focus()\"\r\n                                appTheme>Post</button>\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover compact\">\r\n                                <tbody *ngIf=\"dividendposting?.length != 0\">\r\n                                    <tr *ngFor=\"let data of dividendposting\">\r\n                                        <td>\r\n                                            <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\"\r\n                                                (click)=\"editClickHandler(data.id)\" placement=\"bottom\"\r\n                                                ngbTooltip=\"Edit\"></span>\r\n                                            &nbsp;\r\n                                        </td>\r\n                                        <td>{{ data.AC_TYPE }}</td>\r\n                                        <td class=\"td_center\">{{ data.WARRENT_DATE }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"dividendposting?.length == 0\">\r\n                                    <tr>\r\n                                      <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                  </tbody>\r\n                                  <tfoot #filters class=\"filters\">\r\n                                    <tr class=\"testing\">\r\n                                        <th class=\"testing\"></th>                                        \r\n                                        <th>\r\n                                            <input type=\"text\" class=\"form-control\" name=\"AC_TYPE\" />\r\n                                          </th>\r\n                                          <th>\r\n                                            <input type=\"text\" class=\"form-control\" name=\"WARRENT_DATE\" />\r\n                                          </th>\r\n                                    </tr>\r\n                                  </tfoot>                            \r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>  -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DividendPostingRoutingModule } from './dividend-posting-routing.module';\nimport { DividendPostingComponent } from './dividend-posting.component';\nimport { DataTablesModule } from 'angular-datatables';\nimport { SchemeCodeService } from '../../../../shared/elements/scheme-code.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// import { SelectModule } from 'ng-select';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service'\nimport { DividendPostingService } from './dividend-posting.service'\nimport { ThemeModule } from 'src/app/theme/theme.module';\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\n@NgModule({\n  imports: [\n    CommonModule,\n    DividendPostingRoutingModule,\n    DataTablesModule,\n    NgbModule,\n    // SelectModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n    ThemeModule\n  ],\n  declarations: [DividendPostingComponent],\n     \n     providers: [SchemeCodeService,SystemMasterParametersService, SchemeCodeDropdownService, DividendPostingService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: UserAuthInterceptor,\n    multi: true\n  },]\n\n})\nexport class DividendPostingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment';\n\n@Injectable()\nexport class DividendPostingService {\n    // Variable for handleError\n    [x: string]: any;\n    // API \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    //Insertion Operation\n    postData(data: any): Observable<any> {\n        return this.http.post(this.url + '/dividend-calculation/divPosting', data).pipe(map((res) => res),\n            catchError((error) => {\n                Swal.fire('Please Input Proper Data !');\n                return throwError(error);\n            })\n        )\n    }\n    // For append data\n    getFormData(id: any): Observable<any> {\n        return this.http.get(this.url + '/dividend-calculation/' + id).pipe(catchError(this.handleError));\n    }\n    //Updation Operation\n    updateData(data): Observable<any> {\n        return this.http.put(this.url + '/dividend-calculation/update', data);\n    }\n    //Deletion Operation\n    deleteData(id: any): Observable<any> {\n        return this.http.delete(this.url + '/dividend-calculation/delete/' + id).pipe(catchError(this.handleError));\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n\n@Injectable()\nexport class SystemMasterParametersService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n  // url = \"http://localhost:4000/system-master-parameters\";\n  url = environment.base_url;\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\n      catchError((error) => {\n        let errorMessage = 'Please add valid length';\n        Swal.fire('Kindly Add Valid Length !');\n        return throwError(errorMessage);\n      })\n    )\n  }\n\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/system-master-parameters/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\n  }\n\n  getData(): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\n  }\n\n\n}\n\n\n"],"sourceRoot":"webpack:///"}