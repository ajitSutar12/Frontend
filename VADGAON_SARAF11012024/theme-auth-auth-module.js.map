{"version":3,"sources":["./src/app/theme/auth/auth-routing.module.ts","./src/app/theme/auth/auth.interceptor.service.ts","./src/app/theme/auth/auth.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAuC;AACc;;;AACrD,4CAA4C;AAE5C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;YACJ,KAAK,EAAE,gBAAgB;YACvB,MAAM,EAAE,KAAK;SACd;QACD,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,OAAO;gBACb,YAAY,EAAE,GAAG,EAAE,CAAC,+LAA8B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;aAC5E;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,YAAY,EAAE,GAAG,EAAE,CAAC,uPAA4C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC;aACjG;YACD;gBACE,IAAI,EAAE,eAAe;gBACrB,YAAY,EAAE,GAAG,EAAE,CAAC,+PAA8C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC;aACpG;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,YAAY,EAAE,GAAG,EAAE,CAAC,uMAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;aAC/E;YAED;gBACE,IAAI,EAAE,aAAa;gBACnB,YAAY,EAAE,GAAG,EAAE,CAAC,+OAA0C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC;aAC7F;SACF;KACF;CACF,CAAC;AAMK,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;6FAEX,iBAAiB;cAJ7B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAC+D;AAEzD;;;AAQ1C,MAAM,uBAAuB;IAIhC,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAHxD,gBAAW,GAAG,IAAI,CAAC;IAGyC,CAAC;IAE7D,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAClD,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YACrD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM,KAAK,GAAW,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAEpD,IAAI,KAAK,EAAE;oBACP,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;iBACjG;gBAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;oBACtC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,EAAE,CAAC,CAAC;iBACjG;gBAED,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,EAAE,CAAC,CAAC;gBAExF,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC5B,0DAAG,CAAC,CAAC,KAAqB,EAAE,EAAE;oBAC1B,IAAI,KAAK,YAAY,iEAAY,EAAE;wBAC/B,qCAAqC;qBACxC;oBACD,OAAO,KAAK,CAAC;gBACjB,CAAC,CAAC,CAAC,CAAC;aACX;iBACI;gBACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,KAAK,CAAC,gCAAgC,CAAC;gBACvC,OAAM;aACT;QAEL,CAAC,CAAC;QACF,OAAM;IACV,CAAC;;8FAvCQ,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFpB,MAAM;6FAET,uBAAuB;cAHnC,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACS;AACA;AACxD,uEAAuE;AAC9B;AACkC;AACN;;AAoB9D,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,mBAXV;QACT;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,iFAAuB;YACjC,KAAK,EAAE,IAAI;SACZ;QACD,mDAAmD;QACnD,oBAAoB;QACpB,qDAAS;KACV,YAfQ;YACP,4DAAY;YACZ,sEAAiB;YACjB,kEAAY;SACb;mIAaU,UAAU,cAhBnB,4DAAY;QACZ,sEAAiB;QACjB,kEAAY;6FAcH,UAAU;cAlBtB,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,sEAAiB;oBACjB,kEAAY;iBACb;gBACD,YAAY,EAAE,EAAE;gBAChB,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,iFAAuB;wBACjC,KAAK,EAAE,IAAI;qBACZ;oBACD,mDAAmD;oBACnD,oBAAoB;oBACpB,qDAAS;iBACV;aACF","file":"theme-auth-auth-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// import { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Authentication',\n      status: false\n    },\n    children: [\n      {\n        path: 'login',\n        loadChildren: () => import('./login/login.module').then(m => m.LoginModule),\n      },\n      {\n        path: 'registration',\n        loadChildren: () => import('./registration/registration.module').then(m => m.RegistrationModule)\n      },\n      {\n        path: 'resetpassword',\n        loadChildren: () => import('./resetpassword/resetpassword.module').then(m => m.ResetpasswordModule)\n      },\n      {\n        path: 'forgot',\n        loadChildren: () => import('./forgot/forgot.module').then(m => m.ForgotModule)\n      },\n\n      {\n        path: 'lock-screen',\n        loadChildren: () => import('./lock-screen/lock-screen.module').then(m => m.LockScreenModule)\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpResponse, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ConnectionService } from 'ng-connection-service';\n\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthInterceptorServices implements HttpInterceptor {\n    isConnected = true;\n    noInternetConnection: boolean;\n\n    constructor(private connectionService: ConnectionService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        this.connectionService.monitor().subscribe(isConnected => {\n            this.isConnected = isConnected;\n            if (this.isConnected) {\n                this.noInternetConnection = false;\n                const token: string = localStorage.getItem('token');\n\n                if (token) {\n                    request = request.clone({ headers: request.headers.set('Authorization', 'Bearer ' + token) });\n                }\n\n                if (!request.headers.has('Content-Type')) {\n                    request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\n                }\n\n                request = request.clone({ headers: request.headers.set('Accept', 'application/json') });\n\n                return next.handle(request).pipe(\n                    map((event: HttpEvent<any>) => {\n                        if (event instanceof HttpResponse) {\n                            // console.log('event--->>>', event);\n                        }\n                        return event;\n                    }));\n            }\n            else {\n                this.noInternetConnection = true;\n                alert('please check internet conntion')\n                return\n            }\n        \n        })\n        return\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AuthRoutingModule} from './auth-routing.module';\nimport {SharedModule} from '../../shared/shared.module';\n// import { JwtHelperService, JWT_OPTIONS  } from '@auth0/angular-jwt';\nimport { AuthGuard } from './auth.guard';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptorServices } from './auth.interceptor.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule\n  ],\n  declarations: [],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorServices,\n      multi: true\n    },\n    // { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\n    // JwtHelperService,\n    AuthGuard\n  ] \n})\nexport class AuthModule { }\n"],"sourceRoot":"webpack:///"}