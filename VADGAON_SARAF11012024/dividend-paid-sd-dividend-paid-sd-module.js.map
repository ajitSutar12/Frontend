{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/salary-division-master-dropdown.service.ts","./src/app/theme/transaction/dividend-pay/dividend-paid-sd/dividend-paid-sd-routing.module.ts","./src/app/theme/transaction/dividend-pay/dividend-paid-sd/dividend-paid-sd.component.ts","./src/app/theme/transaction/dividend-pay/dividend-paid-sd/dividend-paid-sd.component.html","./src/app/theme/transaction/dividend-pay/dividend-paid-sd/dividend-paid-sd.module.ts"],"names":[],"mappings":"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","file":"dividend-paid-sd-dividend-paid-sd-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class SalaryDMasterdropdownService {\n    salaryObject = new Array();\n    // // salary-division-master\";\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n    public getSalaryMasterList() {\n        this.salaryObject = []\n        return this.http.get<any>(this.url + '/salary-division-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id, name: element.CODE};\n                    this.salaryObject.push(obj)\n                });\n                return this.salaryObject;\n            }));\n    }\n    public getSalaryDMasterList(branch) {\n        this.salaryObject = []\n        return this.http.get<any>(this.url + '/salary-division-master/getBranch/' + branch)\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id, name: element.CODE};\n                    this.salaryObject.push(obj)\n                });\n                return this.salaryObject;\n            }));\n    }\n}\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport { DividendPaidSDComponent } from './dividend-paid-sd.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DividendPaidSDComponent,\r\n    data: {\r\n      title: 'Dividend Paid SD',\r\n     \r\n      status: false\r\n    },\r\n   \r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DividendPaidSDRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { SalaryDMasterdropdownService } from 'src/app/shared/dropdownService/salary-division-master-dropdown.service';\n\n@Component({\n  selector: 'app-dividend-paid-sd',\n  templateUrl: './dividend-paid-sd.component.html',\n  styleUrls: ['./dividend-paid-sd.component.scss']\n})\nexport class DividendPaidSDComponent implements OnInit {\n  angForm : FormGroup;\n  constructor(\n    private fb: FormBuilder,\n    private ownbranchMasterService: OwnbranchMasterService,\n    private salaryDMasterdropdownService: SalaryDMasterdropdownService,\n\n  ) { }\n\n  //ngfor variables\n  branchCode\n  s_Div\n\n  //ngmodel variables\n  selectedbranch\n  selectedSDiv\n  particulars\n\n  ngOnInit(): void {\n    this.createForm();\n\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branchCode = data;\n    })\n\n    this.salaryDMasterdropdownService.getSalaryMasterList().pipe(first()).subscribe(data => {\n      this.s_Div = data;\n    })\n    \n  }\n\n\n  createForm(){\n    this.angForm = this.fb.group({\n      traNo: ['',[Validators.required]],\n      T_TYPE: ['CS'],\n      branch: ['',[Validators.required]],\n      date: ['',[Validators.required]],\n      sdiv: ['',[Validators.required]],\n      particulars: ['',[Validators.required]],\n    });\n  }\n}\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Batch Transfer Voucher -Companywise Passing </h5>\r\n            </div>\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Transaction No.\r\n                                <sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"INSTALLMENT_NO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"INSTALLMENT_NO\" maxlength=\"20\" formControlName=\"traNo\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['traNo'].invalid && (angForm.controls['traNo'].dirty || angForm.controls['traNo'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['traNo'].errors?.pattern || angForm.controls['traNo'].errors?.required || angForm.controls['traNo'].errors?.maxlength\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label class=\"inputRadio\">\r\n                                        <input type=\"radio\" name=\"T_TYPE\" value=\"CS\" formControlName=\"T_TYPE\">\r\n                                        <i class=\"helper\"></i>Cash </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label class=\"inputRadio\">\r\n                                        <input type=\"radio\" name=\"T_TYPE\" value=\"TR\" formControlName=\"T_TYPE\">\r\n                                        <i class=\"helper\"></i>Transfer </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Branch<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedbranch\" #scheme formControlName=\"branch\"\r\n                                        bindValue=\"value\" bindLabel=\"label\">\r\n                                        <ng-option *ngFor=\"let item of branchCode\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['branch'].invalid && (angForm.controls['branch'].dirty || angForm.controls['branch'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['branch'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"Date\">Date<sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"Date\" id=\"Date\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" class=\"form-control\"\r\n                                        formControlName=\"date\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['date'].invalid && (angForm.controls['date'].dirty || angForm.controls['date'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['date'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Salary Division<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedSDiv\" #scheme formControlName=\"sdiv\"\r\n                                        bindValue=\"value\" bindLabel=\"label\">\r\n                                        <ng-option *ngFor=\"let item of s_Div\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['sdiv'].invalid && (angForm.controls['sdiv'].dirty || angForm.controls['sdiv'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['sdiv'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"><label for=\"AC_PARTICULAR\">Particulars</label>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <textarea class=\"form-control\" formControlName=\"particulars\"\r\n                                        [(ngModel)]=\"particulars\"></textarea>\r\n                                    <i class=\"fa fa-info-circle errspan\"></i>\r\n                                </span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <button class=\"btn  btn-outline-primary btn-sm\">Close</button>\r\n\r\n                            <button class=\"btn  btn-outline-primary btn-sm\">Cancel</button>\r\n\r\n                            <button class=\"btn  btn-outline-primary btn-sm\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\n\n\nimport { DividendPaidSDRoutingModule } from './dividend-paid-sd-routing.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\n\nimport { DividendPaidSDComponent } from './dividend-paid-sd.component';\nimport {DataTablesModule} from 'angular-datatables';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { SalaryDMasterdropdownService } from 'src/app/shared/dropdownService/salary-division-master-dropdown.service';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DividendPaidSDRoutingModule,\n    NgbModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n  ],\n  declarations: [DividendPaidSDComponent],\n  providers:[{\n    provide: HTTP_INTERCEPTORS,\n    useClass: UserAuthInterceptor,\n    multi: true\n  },\n  OwnbranchMasterService,\n  SalaryDMasterdropdownService,\n]\n})\nexport class DividendPaidSDModule { }"],"sourceRoot":"webpack:///"}