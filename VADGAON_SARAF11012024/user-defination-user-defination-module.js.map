{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/user-defination-dropdown.service.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts","./src/app/theme/utility/user-defination/user-defination-routing.module.ts","./src/app/theme/utility/user-defination/user-defination.component.ts","./src/app/theme/utility/user-defination/user-defination.component.html","./src/app/theme/utility/user-defination/user-defination.module.ts"],"names":[],"mappings":"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","file":"user-defination-user-defination-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\n\n\n@Injectable()\nexport class UserdefinationServiceD{\n    public static readonly PLAYER_ONE: Array<IOption> = [\n        { value: '0', label: 'Super Administrator' },\n        { value: '1', label: 'Administrator' },\n        { value: '2', label: 'Sub Administrator' },\n        { value: '3', label: 'Manager' },\n        { value: '4', label: 'Sub Manager' },\n        { value: '5', label: 'Clerk' },\n        { value: '6', label: 'Cashier' },\n        { value: '7', label: 'Guest' }\n    ];\n\n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(UserdefinationServiceD.PLAYER_ONE);\n    }\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(UserdefinationServiceD.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(UserdefinationServiceD.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n\n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n\n@Injectable()\nexport class SystemMasterParametersService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n  // url = \"http://localhost:4000/system-master-parameters\";\n  url = environment.base_url;\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\n      catchError((error) => {\n        let errorMessage = 'Please add valid length';\n        Swal.fire('Kindly Add Valid Length !');\n        return throwError(errorMessage);\n      })\n    )\n  }\n\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/system-master-parameters/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\n  }\n\n  getData(): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\n  }\n\n\n}\n\n\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { UserDefinationComponent } from './user-defination.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserDefinationComponent,\n    data: {\n      title: 'User Defination',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserDefinationRoutingModule { }\n","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport { UserDefinationService } from './user-defination.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n// static dropdown\r\nimport { UserdefinationServiceD } from '../../../shared/dropdownService/user-defination-dropdown.service';\r\nimport { OwnbranchMasterService } from '../../../shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { first } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { NgSelectComponent } from '@ng-select/ng-select';\r\nimport { data, event } from 'jquery';\r\nimport { id } from '@swimlane/ngx-datatable';\r\nimport * as moment from 'moment';\r\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\n\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface userdefination {\r\n  //id:number\r\n  F_NAME: string;\r\n  L_NAME: String;\r\n  DOB: string;\r\n  MOB_NO: number;\r\n  EMAIL: string;\r\n  ROLE: string;\r\n  USER_NAME: string;\r\n  PASSWORD: string;\r\n\r\n\r\n\r\n  STATUS: boolean;\r\n  // USER_CREATED_AT:string;\r\n\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-user-defination',\r\n  templateUrl: './user-defination.component.html',\r\n  styleUrls: ['./user-defination.component.scss']\r\n})\r\nexport class UserDefinationComponent implements OnInit {\r\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\r\n\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  userdef: userdefination[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  angEditForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  date:any\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  updateID: number = 0;\r\n  username=''\r\n  editData\r\n  url = environment.base_url;\r\n  companyCode: any;\r\n  schemeCode: any;\r\n\r\n  //for search functionality\r\n  filterData = {};\r\n  //Title\r\n  // ROLE: Array<IOption> = this.userdefinationservice.getRoleList();\r\n  // ROLE: IOption[];\r\n  ROLEX: any;\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  selectedRole :Array<string> = ['1'];F_NAME: any;\r\n  L_NAME: any;\r\n  branchId:any;\r\n  timeLeft = 5;\r\n  barnchData: any;\r\n  userId: any;\r\n  // ROLE:any;\r\n  // din:Array<IOption>;\r\n\r\n  showAdd: boolean = true;\r\n  showEdit: boolean = false;\r\n\r\n  private dataSub: Subscription = null;\r\n  selectedRoleName: string;\r\n\r\n  maxDate\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private userdefinationservice: UserDefinationService,\r\n    private UserdefinationServiceD: UserdefinationServiceD,\r\n    private _branchMasterServices: OwnbranchMasterService\r\n    , private systemParameter: SystemMasterParametersService,\r\n\r\n  ) {\r\n    this.systemParameter.getFormData(1).subscribe(data => {\r\n      this.maxDate = moment(data.CURRENT_DATE, 'DD/MM/YYYY')\r\n      this.maxDate = this.maxDate._d    \r\n    })\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.userdefinationservice.getRoleList().subscribe(data => {\r\n      this.ROLEX = data;\r\n    \r\n    });\r\n    this._branchMasterServices.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.barnchData = data;\r\n      \r\n    })\r\n    this.createForm();\r\n\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n    \r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      searching:true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber = dataTableParameters.start +dataTableParameters.length;\r\n\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n        dataTableParameters.columns.forEach(element => {\r\n          if (element.search.value != '') {\r\n\r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          } else {\r\n\r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if (this.filterData.hasOwnProperty(element.data)) {\r\n              let value = this.filterData[getColumnName];\r\n              if (columnValue != undefined || value != undefined) {\r\n                delete this.filterData[element.data];\r\n              }\r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            this.url + '/user-defination',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.userdef = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      \r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'First Name',\r\n          data: 'F_NAME',\r\n        },\r\n        {\r\n          title: 'Last Name',\r\n          data: 'L_NAME',\r\n        },\r\n        {\r\n          title: 'DOB',\r\n          data: 'DOB',\r\n        },\r\n        {\r\n          title: 'Mobile',\r\n          data: 'MOB_NO',\r\n        },\r\n        {\r\n          title: 'Email',\r\n          data: 'EMAIL',\r\n        },\r\n\r\n        {\r\n          title: 'Role',\r\n          data: 'ROLE',\r\n        },\r\n\r\n        {\r\n          title: 'User Name',\r\n          data: 'USER_NAME',\r\n        },\r\n        // {\r\n        //   title: 'Password',\r\n        //   data: 'PASSWORD',\r\n        // },\r\n        {\r\n          title: 'Status',\r\n          data: 'STATUS',\r\n        },\r\n        // {\r\n        //   title: 'User Created-at',\r\n        //   data: 'USER_CREATED_AT',\r\n        // }\r\n\r\n      ],\r\n      dom: 'Blrtip',\r\n    };\r\n \r\n    // this.dataSub = this.UserdefinationServiceD.loadCharacters().subscribe((options) => {\r\n    //   this.characters = options;\r\n    //   console.log(this.characters);\r\n      \r\n    // });\r\n    // this.userdefinationservice.getuserdefinationList().pipe(first()).subscribe(data => {\r\n    //   this.userdef = data;\r\n    //     console.log(this.userdef);\r\n      \r\n    //    })\r\n  }\r\n  createForm() {\r\n\r\n    this.angEditForm = this.fb.group({\r\n      FULL_NAME: [''],\r\n      Edit_branchId: ['', [Validators.required]],\r\n      EDIT_ROLE: ['', [Validators.required]],\r\n      STATUS1: ['',[Validators.required]]\r\n    });\r\n    this.angForm = this.fb.group({\r\n      F_NAME: ['', [Validators.required, Validators.pattern]],\r\n      L_NAME: ['', [Validators.pattern]],\r\n      DOB: [''],\r\n      MOB_NO: ['', [Validators.required, Validators.pattern]],\r\n      EMAIL: ['', [Validators.required, Validators.pattern]],\r\n      ROLE: ['', [Validators.required]],\r\n      USER_NAME: ['', [Validators.required, Validators.pattern]],\r\n      // PASSWORD: ['', [Validators.required, Validators.pattern]],\r\n      STATUS: new FormControl('active'),\r\n      LOG_STATUS: new FormControl('inactive'),\r\n      branchId: ['', [Validators.required]]\r\n      // USER_CREATED_AT: ['', [ Validators.pattern]],\r\n    });\r\n  }\r\n  onFocus(ele: NgSelectComponent) {\r\n    ele.open()\r\n  }\r\n \r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    debugger\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'F_NAME': formVal.F_NAME,\r\n      'L_NAME': formVal.L_NAME,\r\n      'DOB': moment(formVal.DOB).format('DD/MM/YYYY'),\r\n      'MOB_NO': formVal.MOB_NO,\r\n      'EMAIL': formVal.EMAIL,\r\n      'roleId': formVal.ROLE,\r\n      'USER_NAME': formVal.USER_NAME,\r\n      'PASSWORD': 'Admin@21',\r\n      'STATUS': formVal.STATUS,\r\n      LOG_STATUS:0,\r\n      'branchId': formVal.branchId\r\n     \r\n      // 'USER_CREATED_AT': formVal.USER_CREATED_AT,\r\n    }\r\n    console.log(dataToSend);\r\n    \r\n\r\n    this.userdefinationservice.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n      this.createForm()\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n    //To clear form\r\n    this.angForm.reset();\r\n  }\r\n  // newFunction(event:any){\r\n  //  this.selectedRoleName = event.value;    \r\n  //  console.log(this.selectedRoleName);\r\n   \r\n  //  }\r\n    // dater(event:any){\r\n    //   this.date = event.value\r\n    //   console.log(this.date);    \r\n    // }\r\n\r\n\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n   this.showButton=false\r\n    this.showAdd = true;\r\n    this.updateShow = true;\r\n    // this.showEdit = true;    \r\n    this.userdefinationservice.getFormData(id).subscribe(data=>{\r\n      this.editData=data\r\n      this.updateID = data.id;\r\n      this.username=data.USER_NAME\r\n      this.angForm.patchValue({\r\n        'F_NAME': data.F_NAME,\r\n        'L_NAME': data.L_NAME,\r\n        'DOB': data.DOB,\r\n        'MOB_NO': data.MOB_NO,\r\n        'EMAIL': data.EMAIL,\r\n        'roleId': data.RoleDefine[0].RoleId,\r\n        'ROLE': data.RoleDefine[0].RoleId,\r\n        'branchId':data.branchId,\r\n        'USER_NAME': data.USER_NAME,\r\n        'STATUS': data.STATUS,\r\n         LOG_STATUS:data.LOG_STATUS==0 ? 'inactive' :'active'\r\n          })\r\n          this.angForm.controls['USER_NAME'].disable()\r\n    })\r\n  }\r\n\r\n  \r\n  \r\n\r\n  //Method for update data \r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    data['roleId'] = this.angForm.controls['ROLE'].value;\r\n    data['USER_NAME']=this.username\r\n    data['LOG_STATUS']=data.LOG_STATUS=='inactive' ? '0' : '1'\r\n    data['DOB']= this.editData.DOB==data.DOB ? data.DOB: moment(data.DOB).format('DD/MM/YYYY')\r\n    this.userdefinationservice.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n      this.createForm()\r\n      this.angForm.controls['USER_NAME'].enable()\r\n      this.angForm.reset();\r\n    })\r\n  }\r\n\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete narration data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.userdefinationservice.deleteData(id).subscribe(data1 => {\r\n          this.userdef = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n          console.log(error)\r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // debugger\r\n    this.myInputField.nativeElement.focus();\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          } else {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n    saveEdit(){\r\n    let data = this.angEditForm.value;\r\n    data['id'] = this.userId;\r\n    this.userdefinationservice.updateRoleBranch(data).subscribe(data=>{\r\n      Swal.fire('Success!', 'Role and Branch Update Successfully !', 'success');\r\n      this.rerender();\r\n    },err=>{\r\n      Swal.fire(err.error.error, err.error.message, 'error');\r\n    })\r\n  }\r\n\r\n  closeEditForm(){\r\n    this.showAdd = true;\r\n    this.showEdit = false;\r\n  }\r\n\r\n \r\n  checkUserName(){\r\n    \r\n    let obj={\r\n      USER_NAME:this.angForm.controls['USER_NAME'].value\r\n    }\r\n    this.userdefinationservice.checkUserName(obj).subscribe(data=>{\r\n      if(data){\r\n        Swal.fire('Warning!', 'Username is already exist!', 'warning');    \r\n        this.angForm.patchValue({\r\n          USER_NAME:''\r\n        })\r\n      }       \r\n    },err=>{\r\n      Swal.fire(err.error.error, err.error.message, 'error');\r\n    })\r\n  }\r\n  resetForm(){\r\n    this.angForm.controls['USER_NAME'].enable()\r\n    this.createForm()\r\n    this.branchId=null\r\n    this.selectedRoleName=null\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n  }\r\n  \r\n}\r\n\r\n\r\n//   // For reloading angular datatable after CRUD operation\r\n  //   @ViewChild(DataTableDirective, { static: false })\r\n  //   dtElement: DataTableDirective;\r\n  //   dtOptions: DataTables.Settings = {};\r\n  //   dtTrigger: Subject<any> = new Subject();\r\n  //   // Store data from backend\r\n  //   userdefination: userdefination[];\r\n  //   // Created Form Group\r\n  //   angForm: FormGroup;\r\n  //   //Datatable variable\r\n  //   dtExportButtonOptions: DataTables.Settings = {};\r\n  //   Data: any;\r\n  //   //variables for pagination\r\n  //   page: number = 1;\r\n  //   passenger: any;\r\n  //   itemsPerPage = 10;\r\n  //   totalItems: any;\r\n  //   currentJustify = 'start';\r\n  //   active = 1;\r\n  //   activeKeep = 1;\r\n  //   // Variables for search \r\n  //   filterObject: { name: string; type: string; }[];\r\n  //   filter: any;\r\n  //   filterForm: FormGroup;\r\n  //   // Variables for hide/show add and update button\r\n  //   showButton: boolean = true;\r\n  //   updateShow: boolean = false;\r\n  //   //variable to get Id to update\r\n  //   updateID: number = 0;\r\n\r\n  //   //option for dropdown\r\n  // //userdef: any;\r\n\r\n  //   //Title select variables\r\n\r\n\r\n  //   private dataSub: Subscription = null\r\n  //   userdef: Array<IOption> = this.UserdefinationServiceD.getCharacters();\r\n  //   selectedOption1 = '3';\r\n  //   isDisabled1 = true;\r\n  //   characters1: Array<IOption>;\r\n  //   selectedCharacter1 = '3';\r\n  //   timeLeft1 = 5;\r\n","<div class=\"row\" *ngIf=\"showAdd\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>User Defination </h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"F_NAME\" maxlength=\"2000\" class=\"form-control\" #autofocus\r\n                                        placeholder=\" \" id=\"label-name\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"F_NAME\">\r\n                                    <label for=\"label-name\">First Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['F_NAME'].invalid && (angForm.controls['F_NAME'].dirty || angForm.controls['F_NAME'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['F_NAME'].errors?.pattern || angForm.controls['F_NAME'].errors?.required || angForm.controls['F_NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"L_NAME\" maxlength=\"2000\" class=\"form-control\"\r\n                                        placeholder=\" \" id=\"label-name\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"L_NAME\">\r\n                                    <label for=\"label-name\">Last Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['L_NAME'].invalid && (angForm.controls['L_NAME'].dirty || angForm.controls['L_NAME'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['L_NAME'].errors?.pattern || angForm.controls['L_NAME'].errors?.required || angForm.controls['L_NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"DOB\" class=\"form-control\" id=\"DOB\"\r\n                                        [(ngModel)]=\"dater\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                        [maxDate]=\"maxDate\" maxlength=\"10\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        #DOB=\"bsDatepicker\" [bsValue]=\"bsValue\" bsDatepicker required #DOB\r\n                                        formControlName=\"DOB\">\r\n\r\n                                    <label for=\"DOB\">Birth Date</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['DOB'].invalid && (angForm.controls['DOB'].dirty || angForm.controls['DOB'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['DOB'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"MOB_NO\" class=\"form-control\" placeholder=\" \"\r\n                                        pattern=\"[7-9 0]{1}[0-9]{9,10}\" title=\"Input allowed only  0-9\" id=\"MOB_NO\"\r\n                                        formControlName=\"MOB_NO\" maxlength=\"10\" minlength=\"10\">\r\n                                    <label for=\"MOB_NO\">Mobile<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['MOB_NO'].invalid && (angForm.controls['MOB_NO'].dirty || angForm.controls['MOB_NO'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['MOB_NO'].errors?.pattern || angForm.controls['MOB_NO'].errors?.required || angForm.controls['MOB_NO'].errors?.pattern || angForm.controls['MOB_NO'].errors?.minlength  || angForm.controls['MOB_NO'].errors?.maxlength\">\r\n                                    Input allowed only 0-9 and It starts by either for 7 or 8 or 9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"EMAIL\" class=\"form-control\" placeholder=\" \"\r\n                                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" title=\"Enter valid Email\"\r\n                                        id=\"EMAIL\" formControlName=\"EMAIL\">\r\n                                    <label for=\"EMAIL\">Email<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['EMAIL'].invalid && (angForm.controls['EMAIL'].dirty || angForm.controls['EMAIL'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <!-- *ngIf=\"angForm.controls['EMAIL'].errors?.pattern\" -->\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['EMAIL'].errors?.pattern || angForm.controls['EMAIL'].errors?.required || angForm.controls['EMAIL'].errors?.pattern\">\r\n                                    Enter valid Email\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <!-- <ng-select (focus)=\"hasFocus = true\" [ngClass]=\"'ng-select'\" [options]=\"ROLE\"\r\n                                     [multiple]=\"true\" placeholder=\"Role\" formControlName=\"ROLE\">\r\n                                </ng-select> -->\r\n                                <!-- <ng-select placeholder=\"role\" formControlName=\"ROLE\"        bindValue=\"value\" bindLable=\"label\">\r\n                                    <ng-option *ngFor=\"let role of ROLE\"\r\n                                        [value]=\"role\">{{role.id}}{{role.label}}</ng-option>\r\n                                </ng-select> -->\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select bindValue=\"value\" bindLabel=\"label\" [(ngModel)]=\"selectedRoleName\"\r\n                                        (change)=\"newFunction($event)\" formControlName=\"ROLE\" placeholder=\"Role\"\r\n                                        [selectOnTab]='true'>\r\n                                        <ng-option *ngFor=\"let values of ROLEX\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['ROLE'].invalid && (angForm.controls['ROLE'].dirty || angForm.controls['ROLE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['ROLE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"USER_NAME\" maxlength=\"10\" class=\"form-control\"\r\n                                        placeholder=\" \" id=\"label-name\" required=\"\" pattern=\"^[A-Za-z0-9\\./ -]+$\"\r\n                                        title=\"Input allowed only  A-Z a-z 0-9  - / . (Space)\"\r\n                                        formControlName=\"USER_NAME\" (focusout)=\"checkUserName()\">\r\n                                    <label for=\"USER_NAME\">User Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['USER_NAME'].invalid && (angForm.controls['USER_NAME'].dirty || angForm.controls['USER_NAME'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['USER_NAME'].errors?.pattern || angForm.controls['USER_NAME'].errors?.required || angForm.controls['USER_NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z 0-9 - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select bindValue=\"value\" bindLabel=\"label\" [(ngModel)]=\"branchId\" id=\"Branch\"\r\n                                        formControlName=\"branchId\" placeholder=\"Branch\" [selectOnTab]='true' #brnch\r\n                                        (focus)=\"onFocus(brnch)\">\r\n                                        <ng-option *ngFor=\"let values of barnchData\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['branchId'].invalid && (angForm.controls['branchId'].dirty || angForm.controls['branchId'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['branchId'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- <div class=\"col-md-4\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"PASSWORD\" class=\"form-control\" placeholder=\" \" maxlength=\"12\" minlength=\"8\"\r\n                                         title=\"Enter password of minlength  and 8 maxlength 12 \"\r\n                                        id=\"PASSWORD\" formControlName=\"PASSWORD\">\r\n                                    <label for=\"PASSWORD\">Password</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['PASSWORD'].invalid && (angForm.controls['PASSWORD'].dirty || angForm.controls['PASSWORD'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['PASSWORD'].errors?.pattern\">\r\n                                    Enter valid password\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                        <div class=\"col-md-1\">\r\n                            <label for=\"status\"> Status</label>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label class=\"inputRadio\">\r\n                                        <input type=\"radio\" name=\"STATUS\" checked=\"checked\" value=\"active\"\r\n                                            formControlName=\"STATUS\">\r\n                                        <i class=\"helper\"></i>Active\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label class=\"inputRadio\">\r\n                                        <input type=\"radio\" name=\"STATUS\" checked=\"checked\" value=\"inactive\"\r\n                                            formControlName=\"STATUS\">\r\n                                        <i class=\"helper\"></i>Inactive\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\">\r\n                            <label for=\"LOG_STATUS\">Login Status</label>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label class=\"inputRadio\">\r\n                                        <input type=\"radio\" name=\"LOG_STATUS\" checked=\"checked\" value=\"active\"\r\n                                            formControlName=\"LOG_STATUS\">\r\n                                        <i class=\"helper\"></i>Active\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label class=\"inputRadio\">\r\n                                        <input type=\"radio\" name=\"LOG_STATUS\" checked=\"checked\" value=\"inactive\"\r\n                                            formControlName=\"LOG_STATUS\">\r\n                                        <i class=\"helper\"></i>Inactive\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\"\r\n                                (click)=\"resetForm()\">Cancel</button>&nbsp;&nbsp;&nbsp;\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\" (click)=\"submit()\"\r\n                                [disabled]=\"angForm.invalid\">Add</button>&nbsp;&nbsp;&nbsp;\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button>&nbsp;&nbsp;&nbsp;\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- <div class=\"row\" *ngIf=\"showEdit\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Edit Role and Branch</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"angForm\" novalidate>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"F_NAME\" maxlength=\"2000\" class=\"form-control\"\r\n                                        placeholder=\" \" id=\"label-name\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"FULL_NAME\">\r\n                                    <label for=\"label-name\">Full Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"col-md\">\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    style=\"width: 108%;margin-left: -4%;\">\r\n                                    <ng-select (focus)=\"hasFocus = true\" [ngClass]=\"'ng-select'\" [options]=\"barnchData\"\r\n                                        [multiple]=\"false\" placeholder=\"Branch\" formControlName=\"Edit_branchId\">\r\n                                    </ng-select>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"angForm.controls['branchId'].invalid && (angForm.controls['branchId'].dirty || angForm.controls['branchId'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"angForm.controls['branchId'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select (focus)=\"hasFocus = true\" [ngClass]=\"'ng-select'\" [(ngModel)]=\"selectedRole\"\r\n                                    [options]=\"ROLE\" [multiple]=\"true\" placeholder=\"Role\" formControlName=\"EDIT_ROLE\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <label>Existing Role : {{selectedRoleName}}</label>\r\n\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['ROLE'].invalid && (angForm.controls['ROLE'].dirty || angForm.controls['ROLE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['ROLE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-1\">\r\n                            <label for=\"status\"> Status</label>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"STATUS1\" checked=\"checked\" value=\"active\"\r\n                                            formControlName=\"STATUS1\">\r\n                                        <i class=\"helper\"></i>Active\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"STATUS1\" checked=\"checked\" value=\"inactive\"\r\n                                            formControlName=\"STATUS1\">\r\n                                        <i class=\"helper\"></i>Inactive\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <button class=\"btn btn-primary\" (click)=\"saveEdit()\" [disabled]=\"!angEditForm.valid\">Save</button>\r\n                <span style=\"margin-left: 5px;\"><button class=\"btn btn-primary\"\r\n                        (click)=\"closeEditForm()\">Cancel</button></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>  -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\r\n                                class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"userdef?.length != 0\">\r\n                                    <tr *ngFor=\"let data of userdef\">\r\n                                        <td>\r\n                                            <!-- <button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\r\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp; -->\r\n\r\n                                            <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\"\r\n                                                (click)=\"editClickHandler(data.id)\" placement=\"bottom\"\r\n                                                ngbTooltip=\"Edit\"></span>\r\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\"\r\n                                                (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        </td>\r\n\r\n                                        <td>{{ data.F_NAME }}</td>\r\n                                        <td>{{ data.L_NAME }}</td>\r\n                                        <td>{{ data.DOB }}</td>\r\n                                        <td>{{ data.MOB_NO }}</td>\r\n                                        <td>{{ data.EMAIL }}</td>\r\n                                        <td>{{ data?.RoleDefine[0]?.Role.NAME }}</td>\r\n                                        <td>{{ data.USER_NAME }}</td>\r\n                                        <!-- <td>{{ data.PASSWORD }}</td> -->\r\n                                        <td>{{ data.STATUS }}</td>\r\n                                        <!-- <td>{{ data.USER_CREATED_AT }}</td> -->\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"userdef?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search first nmae\" name=\"F_NAME\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Last Name\" name=\"L_NAME\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search DOB\" name=\"DOB\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search MOB_NO\" name=\"MOB_NO\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search EMAIL\" name=\"EMAIL\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search ROLE\" name=\"ROLE\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search USER_NAME\" name=\"USER_NAME\"></th>\r\n                                        <!-- <th><input type=\"text\" placeholder=\"Search PASSWORD\" name=\"PASSWORD\"></th> -->\r\n                                        <th><input type=\"text\" placeholder=\"Search STATUS\" name=\"STATUS\"></th>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserDefinationComponent } from './user-defination.component';\nimport { UserDefinationRoutingModule } from './user-defination-routing.module';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { UserdefinationServiceD } from '../../../shared/dropdownService/user-defination-dropdown.service';\nimport { OwnbranchMasterService } from '../../../shared/dropdownService/own-branch-master-dropdown.service';\nimport { UserDefinationService } from './user-defination.service'\nimport { DataTablesModule } from 'angular-datatables';\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n// import {SelectModule} from 'ng-select';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UserDefinationRoutingModule,\n    SharedModule,\n    FormsModule,\n    NgSelectModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    // SelectModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n\n\n  ],\n  declarations: [UserDefinationComponent],\n  providers: [UserdefinationServiceD, UserDefinationService, OwnbranchMasterService, SystemMasterParametersService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    },]\n})\nexport class UserDefinationModule { }\n"],"sourceRoot":"webpack:///"}