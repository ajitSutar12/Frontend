{"version":3,"sources":["./src/app/shared/dropdownService/ac-master-dropdown.service.ts","./src/app/shared/dropdownService/salary-division-master-dropdown.service.ts","./src/app/shared/elements/gl-master.service.ts","./src/app/theme/transaction/share-transactions/found-payment-transaction/found-payment-transaction.component.ts","./src/app/theme/transaction/share-transactions/found-payment-transaction/found-payment-transaction.component.html","./src/app/theme/transaction/share-transactions/found-payment-transaction/found-payment-transaction.directive.ts","./src/app/theme/transaction/share-transactions/issue-new-shares/issue-new-shares.directive.ts","./src/app/theme/transaction/share-transactions/opening-shares-transactions-entry/opening-shares-transactions-entry.component.ts","./src/app/theme/transaction/share-transactions/opening-shares-transactions-entry/opening-shares-transactions-entry.component.html","./src/app/theme/transaction/share-transactions/rebit-interest-transaction/rebit-interest-transaction.component.ts","./src/app/theme/transaction/share-transactions/rebit-interest-transaction/rebit-interest-transaction.component.html","./src/app/theme/transaction/share-transactions/share-transactions-routing.module.ts","./src/app/theme/transaction/share-transactions/share-transactions.component.ts","./src/app/theme/transaction/share-transactions/share-transactions.component.html","./src/app/theme/transaction/share-transactions/share-transactions.module.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"share-transactions-share-transactions-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ACMasterDropdownService {\n\n    // // gl-account-master\"; \n    url = environment.base_url;\n    acMasterObject = new Array();\n\n    constructor(private http: HttpClient) { }\n\n    public getACMasterList() {\n        this.acMasterObject = [];\n        return this.http.get<any>(this.url + '/gl-account-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\n                    this.acMasterObject.push(obj)\n                });\n                return this.acMasterObject;\n            }));\n    }\n\n    public getACMasterList1() {\n        this.acMasterObject = [];\n        return this.http.get<any>(this.url + '/gl-account-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { AC_NAME: element.AC_NAME, id: element.id, AC_NO: element.AC_NO };\n                    this.acMasterObject.push(obj)\n                });\n                return this.acMasterObject;\n            }));\n    }\n\n    public getACMasterbranch(branchid) {\n        this.acMasterObject = [];\n        return this.http.get<any>(this.url + '/gl-account-master/branch/' + branchid)\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    // let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\n                    // let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id };\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id, name: element.AC_NO };\n                    this.acMasterObject.push(obj)\n                });\n                return this.acMasterObject;\n            }));\n    }\n\n\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n@Injectable()\nexport class SalaryDMasterdropdownService {\n    salaryObject = new Array();\n    // // salary-division-master\";\n    url = environment.base_url;\n    constructor(private http: HttpClient) { }\n    public getSalaryMasterList() {\n        this.salaryObject = []\n        return this.http.get<any>(this.url + '/salary-division-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id, name: element.CODE};\n                    this.salaryObject.push(obj)\n                });\n                return this.salaryObject;\n            }));\n    }\n    public getSalaryDMasterList(branch) {\n        this.salaryObject = []\n        return this.http.get<any>(this.url + '/salary-division-master/getBranch/' + branch)\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.NAME, value: element.id, name: element.CODE};\n                    this.salaryObject.push(obj)\n                });\n                return this.salaryObject;\n            }));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {IOption} from 'ng-select';\n\n\n@Injectable()\nexport class glMasterService {\n  public static readonly PLAYER_ONE: Array<IOption> = [\n    {value: '0', label: 'a'},\n    {value: '1', label: 'b'},\n    {value: '2', label: 'c'},\n    {value: '3', label: 'd'}\n  ];\n\n\n\n    getCharacters(): Array<IOption> {\n        return this.cloneOptions(glMasterService.PLAYER_ONE);\n    }\n\n    loadCharacters(): Observable<Array<IOption>> {\n        return this.loadOptions(glMasterService.PLAYER_ONE);\n    }\n\n    getCharactersWithDisabled(): Array<IOption> {\n        const characters: Array<IOption> = this.cloneOptions(glMasterService.PLAYER_ONE);\n        characters[1].disabled = true;\n        characters[4].disabled = true;\n        return characters;\n    }\n\n   \n\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\n        return new Observable((obs) => {\n            setTimeout(() => {\n                obs.next(this.cloneOptions(options));\n                obs.complete();\n            }, 5000);\n        });\n    }\n\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\n        return options.map(option => ({ value: option.value, label: option.label }));\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service'\nimport Swal from 'sweetalert2';\nimport * as moment from 'moment';\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\nimport { ACMasterDropdownService } from 'src/app/shared/dropdownService/ac-master-dropdown.service';\nimport { data } from 'jquery';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-found-payment-transaction',\n  templateUrl: './found-payment-transaction.component.html',\n  styleUrls: ['./found-payment-transaction.component.scss']\n})\nexport class FoundPaymentTransactionComponent implements OnInit {\n  @ViewChild('triggerhide') triggerhide: ElementRef<HTMLElement>;\n\n  dtExportButtonOptions: any = {};\n\n  //for form\n  ngForm: FormGroup\n\n  //for date\n  maxDate: any;\n  minDate: Date; \n  bsValue = new Date();\n\n  //ngmodel \n  schemeCode\n  memberno\n  selectedBranch\n  deathdate\n  paymentdate\n  resolutiondate\n  ngFnarration: any;\n  fgledger\n  //dropdown\n  scheme\n  schemeType: string = 'SH'\n  values\n  introducerACNo\n  obj: any;\n  branchOption: any;\n  isTransfer: boolean;\n  totalCredit = 0;\n  totalDebit = 0;\n\n\n  multigrid = [];\n\n  item = [\n    { id: 1, name: 'DEBIT' },\n    { id: 2, name: 'CREDIT' },];\n  intIndex: any;\n  schemeACNo: any;\n  selectedTransScheme: any;\n  transferSchemeDetails: any;\n  ngacno: any;\n  transferAccountDetails: any;\n  Scheme\n  jointShowButton: boolean = true; \n  jointUpdateShow: boolean = false;\n  transferTotalAmount: any = 0 ;\n  multigrid1: any = [];\n  particulars: any;\n  url: string;\n  narrationList: any ;\n\n  // mainMaster: any= [];\n\n  constructor(private fb: FormBuilder,     private http: HttpClient,\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\n    private schemeAccountNoService: SchemeAccountNoService, private _ownbranchmasterservice: OwnbranchMasterService,\n    private systemParameter: SystemMasterParametersService, private _ACMasterDropdownService: ACMasterDropdownService,\n    )\n     {\n      this.systemParameter.getFormData(1).subscribe(data => {\n        this.maxDate = moment(data.CURRENT_DATE, 'DD/MM/YYYY')\n        this.maxDate = this.maxDate._d\n      })\n     }\n\n  ngOnInit(): void {\n\n    this.createForm()\n\n\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    if (result.RoleDefine[0].Role.id == 1) {\n      this.ngForm.controls['BRANCH_CODE'].enable()\n      this.selectedBranch = result.branch.id\n\n    }\n    else {\n      this.ngForm.controls['BRANCH_CODE'].disable()\n      this.selectedBranch = result.branch.id\n    }\n\n    //branchOption\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branchOption = data;\n    })\n\n\n    //Scheme Code\n\n    this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data => {\n      this.scheme = data\n      this.schemeCode = data[0].value\n      this.getIntroducer()\n    })\n\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\n      this.Scheme = data;\n    });\n\n    this._ACMasterDropdownService.getACMasterList1().subscribe(data => {\n      console.log('data', data)\n      this.introducerACNo = data;\n    })\n\n    //narration list\n    this.http.get(this.url + '/narration').subscribe(data => {\n   \n      this.narrationList = data\n      console.log(data)\n    });\n\n  }\n\n  getIntroducer() {\n    // debugger\n    this.obj = [this.schemeCode, this.selectedBranch]\n\n\n    this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\n      this.introducerACNo = data;\n    })\n  }\n\n  //get account no according scheme for transfer\n\n  getTransferAccountList(event) {\n    this.transferSchemeDetails = event\n    this.obj = [this.selectedTransScheme, this.selectedBranch]\n    this.ngacno = null\n    switch (event.name) {\n      case 'SB':\n        this.schemeAccountNoService.getSavingSchemeList1(this.obj).subscribe(data => {\n          this.schemeACNo = data;\n        })\n        break;\n\n      case 'CA':\n        this.schemeAccountNoService.getCurrentAccountSchemeList1(this.obj).subscribe(data => {\n          this.schemeACNo = data;\n        })\n        break;\n\n      case 'LN':\n        this.schemeAccountNoService.getTermLoanSchemeList1(this.obj).subscribe(data => {\n          this.schemeACNo = data;\n        })\n        break;\n\n      case 'TD':\n        this.schemeAccountNoService.getTermDepositSchemeList1(this.obj).subscribe(data => {\n          this.schemeACNo = data;\n        })\n        break;\n\n      case 'DS':\n        this.schemeAccountNoService.getDisputeLoanSchemeList1(this.obj).subscribe(data => {\n          this.schemeACNo = data;\n        })\n        break;\n\n      case 'CC':\n        this.schemeAccountNoService.getCashCreditSchemeList1(this.obj).subscribe(data => {\n          this.schemeACNo = data;\n        })\n        break;\n\n      case 'PG':\n        this.schemeAccountNoService.getPigmyAccountSchemeList1(this.obj).subscribe(data => {\n          this.schemeACNo = data;\n        })\n        break;\n\n      case 'GL':\n        this.schemeAccountNoService.getGeneralLedgerList1(this.obj).subscribe(data => {\n          this.schemeACNo = data;\n        })\n        break;\n    }\n  }\n  getTransferAccountDeatil(event) {\n    this.transferAccountDetails = event\n  }\n\n  //transfer and cash radio button effect\n  isFormA(value) {\n    if (value == 1) {\n      this.isTransfer = false\n    }\n    if (value == 2) {\n      this.isTransfer = true\n    }\n  }\n\n\n\n  createForm() {\n    this.ngForm = this.fb.group({\n\n      BRANCH_CODE: ['', [Validators.required]],\n      AC_TYPE: ['', [Validators.required]],\n      MEMBER_NO: ['', [Validators.required]],\n      TRAN_NO: ['', [Validators.required]],\n      PAYMENT_TO_PERSON: ['', [Validators.required]],\n      DEATH_DATE: ['', [Validators.required]],\n      PAYMENT_DATE: ['', [Validators.required]],\n      RESOLUTION_DATE: ['', [Validators.required]],\n      PAYMENT_AMOUNT: ['', [Validators.pattern]],\n      RES_NO: ['', [Validators.required]],\n      FUND_G_NO: ['', [Validators.required]],\n      REASON: [''],\n      T_TYPE: ['cash'],\n      Tscheme: ['', [Validators.required]],\n      TschemeAC: ['', [Validators.required]],\n      amount: ['', [Validators.pattern]],\n      DEBIT_CREDIT: ['', [Validators.required]],\n      T_DEBIT: ['', [Validators.required]],\n      T_CREDIT: ['', [Validators.required]],\n      PERTICULARS: [''],\n    });\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    if (result.RoleDefine[0].Role.id == 1) {\n      this.ngForm.controls['BRANCH_CODE'].enable()\n      this.selectedBranch = result.branch.id\n    }\n    else {\n      this.ngForm.controls['BRANCH_CODE'].disable()\n      this.ngForm.patchValue({\n        'BRANCH_CODE': result.branch.id\n      })\n      this.selectedBranch = result.branch.id\n    }\n\n  }\n\n\n  addTransferAccount() {\n\n   \n    const formVal = this.ngForm.value;\n    var object =\n    {\n      Tscheme: formVal.Tscheme,\n      TschemeAC: formVal.TschemeAC,\n      T_TYPE: formVal.T_TYPE,\n      DEBIT_CREDIT: formVal.DEBIT_CREDIT,\n      PERTICULARS: formVal.PERTICULARS,\n      amount: formVal.amount,\n\n\n    }\n   \n\n    if (formVal.Tscheme == \"\" || formVal.Tscheme == null) {\n      Swal.fire(\"Warning!\", \"Please Select Transaction Scheme!\", \"error\");\n    }\n    else if (formVal.TschemeAC == \"\" || formVal.TschemeAC == null) {\n      Swal.fire(\n        \"Warning!\",\n        \"Please Select Account Number !\",\n        \"info\"\n      );\n    }\n    else if (formVal.amount == \"\" || formVal.amount == null) {\n      Swal.fire(\n        \"Warning!\",\n        \"Please Insert Transfer Amount!\",\n        \"info\"\n      );\n    }\n    else if (formVal.DEBIT_CREDIT == \"\" || formVal.DEBIT_CREDIT == null) {\n      Swal.fire(\n        \"Warning!\", \"Please Select Debit or Credit Transfer!\", \"error\"\n      );\n    }\n\n    // else if (formVal.PERTICULARS == \"\" || formVal.PERTICULARS == null) {\n    //   Swal.fire(\n    //     \"Warning!\",\n    //     \"Please Insert PERTICULARS!\",\n    //     \"info\"\n    //   );\n    // }\n    else {\n\n      if (formVal.DEBIT_CREDIT == 'CREDIT') {\n        this.totalCredit = this.totalCredit + Number(formVal.amount)\n      } else {\n        this.totalDebit = this.totalDebit + Number(formVal.amount);\n      }\n \n      this.transferTotalAmount = this.transferTotalAmount + Number(formVal.amount)\n      this.multigrid.push(object);\n      this.resetForm();\n    }\n  \n \n  }\n\n\n \n\n  editTransferAccount(indexOfelement) {\n\n    this.intIndex = indexOfelement;\n    // this.intID = this.multiField[id].SR_NO;\n    this.jointShowButton = false;\n    this.jointUpdateShow = true;\n    this.ngForm.patchValue({\n\n\n\n\n      // SR_NO: this.multiField[id].SR_NO,\n      Tscheme: this.multigrid[indexOfelement].Tscheme,\n      TschemeAC: this.multigrid[indexOfelement].TschemeAC,\n      amount: this.multigrid[indexOfelement].amount,\n      DEBIT_CREDIT: this.multigrid[indexOfelement].DEBIT_CREDIT,\n      TRANSFER_ACNO: this.multigrid[indexOfelement].TRANSFER_ACNO,\n      T_TYPE: this.multigrid[indexOfelement].T_TYPE,\n      PERTICULARS: this.multigrid[indexOfelement].PERTICULARS,\n      T_SHARES_AMOUNT: this.multigrid[indexOfelement].T_SHARES_AMOUNT,\n\n\n\n\n    })\n  }\n\n  updateTransferAcccount() {\n    let index = this.intIndex;\n\n    const formVal = this.ngForm.value;\n    var object = {\n\n      Tscheme: formVal.Tscheme,\n      TschemeAC: formVal.TschemeAC,\n      amount: formVal.amount,\n      DEBIT_CREDIT: formVal.DEBIT_CREDIT,\n      TRANSFER_ACNO: formVal.TRANSFER_ACNO,\n      T_TYPE: formVal.T_TYPE,\n      PERTICULARS: formVal.PERTICULARS,\n\n\n    }\n    this.multigrid[index] = object;\n    this.jointShowButton = true;\n    this.jointUpdateShow = false;\n    this.resetForm();\n\n  }\n\n\n\n  resetForm() {\n\n    // this.ngForm.controls['BRANCH_CODE'].reset()\n    // this.ngForm.controls['AC_TYPE'].reset()\n    // this.ngForm.controls['MEMBER_NO'].reset()\n    // this.ngForm.controls['TRAN_NO'].reset()\n    // this.ngForm.controls['MEMBERSHIP_DATE'].reset()\n    // this.ngForm.controls['T_SHARES_AMOUNT'].reset()\n    // this.ngForm.controls['T_NO_OF_SHARES'].reset()\n    // this.ngForm.controls['ISSUE_DATE'].reset()\n    // this.ngForm.controls['CERTIFICATE_NO'].reset()\n    // this.ngForm.controls['FROM'].reset()\n    // this.ngForm.controls['TO'].reset()\n    // this.ngForm.controls['NO_OF_SHARES'].reset()\n    // this.ngForm.controls['FACE_VALUE'].reset()\n    // this.ngForm.controls['RESOLUTION_DATE'].reset()\n    // this.ngForm.controls['SHARES_AMOUNT'].reset()\n    // this.ngForm.controls['RES_NO'].reset()\n    this.ngForm.controls['PERTICULARS'].reset()\n    this.ngForm.controls['Tscheme'].reset()\n    this.ngForm.controls['TschemeAC'].reset()\n    this.ngForm.controls['amount'].reset() \n    this.ngForm.controls['DEBIT_CREDIT'].reset()\n    this.ngForm.controls['FREE_PAID'].reset()\n    this.ngForm.controls['T_DEBIT'].reset()\n    this.ngForm.controls['T_CREDIT'].reset()\n\n\n  }\n\n  submit() {\n    if(this.ngForm.valid){\n    const formVal = this.ngForm.value;\n    var object =\n    {\n      BRANCH_CODE: formVal.BRANCH_CODE,\n      AC_TYPE: formVal.AC_TYPE,\n      MEMBER_NO: formVal.MEMBER_NO,\n      TRAN_NO: formVal.TRAN_NO,\n      PAYMENT_TO_PERSON: formVal.PAYMENT_TO_PERSON,\n      DEATH_DATE: formVal.DEATH_DATE,\n      PAYMENT_DATE: formVal.PAYMENT_DATE,\n      RESOLUTION_DATE: formVal.RESOLUTION_DATE,\n      PAYMENT_AMOUNT: formVal.PAYMENT_AMOUNT,\n      RES_NO: formVal.RES_NO,\n      FUND_G_NO: formVal.FUND_G_NO,\n      REASON: formVal.REASON,\n      Tscheme: formVal.Tscheme,\n      TschemeAC: formVal.TschemeAC,\n      T_TYPE: formVal.T_TYPE,\n      DEBIT_CREDIT: formVal.DEBIT_CREDIT,\n      PERTICULARS: formVal.PERTICULARS,\n      amount: formVal.amount,\n\n\n     }\n\n     this.multigrid1.push(object);\n     console.log(object);\n\n     Swal.fire(\n      'Good job!',\n      'You clicked the button!',\n      'success'\n    );\n  }\n  \n  else {\n    Swal.fire('Warning!','Please fill All Mandatory Fields!','warning')\n  }\n }\n \n\n decimalAllContent($event) {\n  // let value = Number($event.target.value);\n  //   let data = value.toFixed(2);\n  //   $event.target.value = data;\n    var t = $event.target.value;\n    $event.target.value = (t.indexOf(\".\") >= 0) ? (t.substr(0, t.indexOf(\".\")) + t.substr(t.indexOf(\".\"), 3)) : t;\n}\n\ngetNarration(ele) {\n  this.particulars = ele;\n  let el: HTMLElement = this.triggerhide.nativeElement;\n  el.click();\n}\n\n\n}\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Fund Payment Transactions</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form [formGroup]=\"ngForm\" appFoundPaymentTransaction >\r\n                <div class=\"card-block\">\r\n                    <div class=\"solid\">\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Branch Code<sub\r\n                                        class=\"required\">*</sub></label></div>\r\n                            <div class=\"col-sm-12 col-md-4\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select bindValue=\"value\" bindLabel=\"label\" [(ngModel)]=\"selectedBranch\"\r\n                                            formControlName=\"BRANCH_CODE\" #branchcode autofocus\r\n                                            (change)=\"getIntroducer()\">\r\n                                            <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                                {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['BRANCH_CODE'].invalid && (ngForm.controls['BRANCH_CODE'].dirty || ngForm.controls['BRANCH_CODE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-2\"><label for=\"AC_TYPE\">Scheme Code <sub class=\"required\">\r\n                                        * </sub></label>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\" autofocus>\r\n                                        <ng-select bindValue=\"value\" [(ngModel)]=\"schemeCode\" id=\"AC_TYPE\"\r\n                                            bindLabel=\"label\" formControlName=\"AC_TYPE\" title=\"Compulsory Selection\"\r\n                                            required placeholder=\"Scheme\">\r\n                                            <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                                {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['AC_TYPE'].invalid && (ngForm.controls['AC_TYPE'].dirty || ngForm.controls['AC_TYPE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['AC_TYPE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div class=\"col-md-2\"> <label for=\"Member No\">Member Number<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"cdropdown\" [(ngModel)]=\"memberno\" [selectOnTab]='true'\r\n                                            formControlName=\"MEMBER_NO\" bindValue=\"value\" bindLabel=\"NAME\"\r\n                                            title=\"Compulsory Selection\" required placeholder=\" Member No\">\r\n                                            <ng-option *ngFor=\"let values of introducerACNo\" [value]=\"values\">\r\n                                                {{values.label}} {{values.name}} </ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['MEMBER_NO'].invalid && (ngForm.controls['MEMBER_NO'].dirty || ngForm.controls['MEMBER_NO'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['MEMBER_NO'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n\r\n                            <div class=\"col-md-2\">\r\n                                <label for=\"tranno\">Transaction Number<sub class=\"required\">* </sub></label>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" name=\"label-name\" class=\"form-control\" placeholder=\" \"\r\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                            formControlName=\"TRAN_NO\" disabled>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['TRAN_NO'].invalid && (ngForm.controls['TRAN_NO'].dirty || ngForm.controls['TRAN_NO'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div\r\n                                        *ngIf=\"ngForm.controls['TRAN_NO'].errors?. maxlength || ngForm.controls['TRAN_NO'].errors?. minlength || ngForm.controls['TRAN_NO'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <br>\r\n                    <div class=\"solid\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"payment_to_person\">Payment to Person<sub class=\"required\">*\r\n                                    </sub></label>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" name=\"label-name\" class=\"form-control\" placeholder=\" \"\r\n                                            (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122)\"\r\n                                            formControlName=\"PAYMENT_TO_PERSON\">\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['PAYMENT_TO_PERSON'].invalid && (ngForm.controls['PAYMENT_TO_PERSON'].dirty || ngForm.controls['PAYMENT_TO_PERSON'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div\r\n                                        *ngIf=\"ngForm.controls['PAYMENT_TO_PERSON'].errors?. maxlength || ngForm.controls['PAYMENT_TO_PERSON'].errors?. minlength || ngForm.controls['PAYMENT_TO_PERSON'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3\"> <label for=\"Death Date\">Death Date<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"date\" id=\"date\"\r\n                                            [(ngModel)]=\"deathdate\" formControlName=\"DEATH_DATE\" class=\"form-control\"\r\n                                            [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY'}\" [maxDate]=\"maxDate\"\r\n                                            appButton minlength=\"10\" maxlength=\"10\"\r\n                                            bsDatepicker required style=\"width: 75%;\">\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['DEATH_DATE'].invalid && (ngForm.controls['DEATH_DATE'].dirty || ngForm.controls['DEATH_DATE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['DEATH_DATE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-12 col-md-4\">\r\n                                <div class=\"form-radio\">\r\n                                    <div class=\"radio radio-inline\">\r\n                                        <label>\r\n                                            <input type=\"radio\" name=\"T_TYPE\" value=\"cash\" formControlName=\"T_TYPE\"\r\n                                                (change)=\"isFormA(1)\">\r\n\r\n                                            <i class=\"helper\"></i>Cash </label>\r\n                                    </div>\r\n                                    <div class=\"radio radio-inline\">\r\n                                        <label>\r\n                                            <input type=\"radio\" name=\"T_TYPE\" value=\"transfer\" formControlName=\"T_TYPE\"\r\n                                                (change)=\"isFormA(2)\">\r\n                                            <i class=\"helper\"></i>Transfer </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-md-3\"> <label for=\"Payment Date\">Payment Date<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"date\" id=\"date\"\r\n                                            [(ngModel)]=\"paymentdate\" formControlName=\"PAYMENT_DATE\"\r\n                                            appButton minlength=\"10\" maxlength=\"10\"\r\n                                            class=\"form-control\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY'}\"\r\n                                            [maxDate]=\"maxDate\" bsDatepicker required style=\"width: 75%;\">\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['PAYMENT_DATE'].invalid && (ngForm.controls['PAYMENT_DATE'].dirty || ngForm.controls['PAYMENT_DATE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['PAYMENT_DATE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\"> <label for=\"Resolution Date\">Resolution Date<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"date\" id=\"date\"\r\n                                        appButton minlength=\"10\" maxlength=\"10\"\r\n                                            [(ngModel)]=\"resolutiondate\" formControlName=\"RESOLUTION_DATE\"\r\n                                            class=\"form-control\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY'}\"\r\n                                            [maxDate]=\"maxDate\" bsDatepicker required style=\"width: 75%;\">\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['RESOLUTION_DATE'].invalid && (ngForm.controls['RESOLUTION_DATE'].dirty || ngForm.controls['RESOLUTION_DATE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['RESOLUTION_DATE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"payment_amount\">Payment Amount<sub class=\"required\">* </sub></label>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" name=\"label-name\" class=\"form-control\" placeholder=\" \"\r\n                                            formControlName=\"PAYMENT_AMOUNT\" maxlength=\"15\"\r\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\"\r\n                                            (keyup)=\"decimalAllContent($event)\" disabled>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['PAYMENT_AMOUNT'].invalid && (ngForm.controls['PAYMENT_AMOUNT'].dirty || ngForm.controls['PAYMENT_AMOUNT'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['PAYMENT_AMOUNT'].errors?.maxlength\">\r\n                                        Input allowed only 0-9\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"Resolution_no\">Resolution Number<sub class=\"required\">* </sub></label>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" name=\"label-name\" class=\"form-control\" placeholder=\" \"\r\n                                        maxlength=\"8\"\r\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                            formControlName=\"RES_NO\">\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['RES_NO'].invalid && (ngForm.controls['RES_NO'].dirty || ngForm.controls['RES_NO'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div\r\n                                        *ngIf=\"ngForm.controls['RES_NO'].errors?. maxlength || ngForm.controls['RES_NO'].errors?. minlength || ngForm.controls['RES_NO'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-4\">\r\n                                <label for=\"Fund_G_No\">Fund General Ledger A/c Number<sub class=\"required\">*\r\n                                    </sub></label>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n\r\n                                        <ng-select id=\"cdropdown\" [(ngModel)]=\"fgledger\" [selectOnTab]='true'\r\n                                            formControlName=\"FUND_G_NO\" title=\"Compulsory Selection\" required\r\n                                            placeholder=\" Fund General Ledger No\">\r\n                                            <ng-option *ngFor=\"let item of introducerACNo\" [value]=\"item\">\r\n                                                {{item.value}}{{item.name}}</ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['FUND_G_NO'].invalid && (ngForm.controls['FUND_G_NO'].dirty || ngForm.controls['FUND_G_NO'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['FUND_G_NO'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-sm-12 col-md-2  \">\r\n                                <label for=\"reason\">Reason</label>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <textarea class=\"form-control\" formControlName=\"REASON\"\r\n                                            [(ngModel)]=\"ngFnarration\"></textarea>\r\n                                        <i class=\"fa fa-info-circle errspan\" (click)=\"modalLarge.show()\" ></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"row\" id=\"FORMA\" *ngIf=\"isTransfer\">\r\n                            <div class=\"col-sm-12\">\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Scheme<sub\r\n                                                class=\"required\">*</sub></label></div>\r\n                                    <div class=\"col-sm-12 col-md-2\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select [(ngModel)]=\"selectedTransScheme\"\r\n                                                    (change)=\"getTransferAccountList($event)\" formControlName=\"Tscheme\"\r\n                                                    bindValue=\"value\" bindLabel=\"label\">\r\n                                                    <ng-option *ngFor=\"let item of Scheme\" [value]=\"item\">\r\n                                                        {{item.id}} {{item.label}}</ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['Tscheme'].invalid && (ngForm.controls['Tscheme'].dirty || ngForm.controls['Tscheme'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['Tscheme'].errors?.required\">\r\n                                                This field is required.\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div class=\"col-sm-12 col-md-2\">\r\n                                        <label for=\"TschemeAC\">Account Number <sub class=\"required\">*</sub></label>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select id=\"TschemeAC\" [(ngModel)]=\"ngacno\"\r\n                                                    formControlName=\"TschemeAC\" bindLabel=\"label\" bindValue=\"bankacno\"\r\n                                                    title=\"Compulsory Selection\" placeholder=\"Account Number\"\r\n                                                    (change)=\"getTransferAccountDeatil($event)\">\r\n                                                    <ng-option *ngFor=\"let values of schemeACNo\" [value]=\"values\">\r\n                                                        {{values.label}} {{values.name}}</ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['TschemeAC'].invalid && (ngForm.controls['TschemeAC'].dirty || ngForm.controls['TschemeAC'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['TschemeAC'].errors?.required\">\r\n                                                This field is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-2\"><label for=\"amount\">Amount<sub\r\n                                                class=\"required\">*</sub></label></div>\r\n                                    <div class=\"col-md-2\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <input style=\"text-align: right;\" type=\"text\" class=\"form-control\"\r\n                                                    name=\"amount\" id=\"amount\" formControlName=\"amount\" maxlength=\"15\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\"\r\n                                                    (keyup)=\"decimalAllContent($event)\">\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['amount'].invalid && (ngForm.controls['amount'].dirty || ngForm.controls['amount'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['amount'].errors?.maxlength\">\r\n                                                Input allowed only 0-9\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-2\">\r\n                                        <label for=\"debit/credit\"> Debit / Credit <sub class=\"required\">*</sub></label>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select id=\"d/c\" [(ngModel)]=\"debitcredit\"\r\n                                                    formControlName=\"DEBIT_CREDIT\" bindLabel=\"label\" bindValue=\"name\"\r\n                                                    title=\"Compulsory Selection\" placeholder=\"\">\r\n                                                    <ng-option *ngFor=\"let values of item\" [value]=\"values\">\r\n                                                        {{values.name}}</ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['DEBIT_CREDIT'].invalid && (ngForm.controls['DEBIT_CREDIT'].dirty || ngForm.controls['DEBIT_CREDIT'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['DEBIT_CREDIT'].errors?.required\">\r\n                                                This field is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"row\">\r\n\r\n                                    <div class=\"col-sm-12 col-md-2  \">\r\n                                        <label for=\"PARTICULARS\">Particulars</label>\r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <textarea class=\"form-control\" formControlName=\"PERTICULARS\"\r\n                                                    [(ngModel)]=\"particulars\"></textarea>\r\n                                                <i class=\"fa fa-info-circle errspan\" (click)=\"modalLarge.show()\"></i>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md\">\r\n                                        <button type=\"button\" class=\"btn btn-outline-primary btn-sm\"\r\n                                            *ngIf=\"jointShowButton\" (click)=\"addTransferAccount()\">\r\n                                            Add\r\n                                        </button>\r\n                                        <button class=\"btn btn-outline-primary btn-sm\"\r\n                                            (click)=\"updateTransferAcccount()\" *ngIf=\"jointUpdateShow\">\r\n                                            Update\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <br>\r\n                                <!-- Multiple Transaction details data show here -->\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12\">\r\n                                        <div class=\"table-responsive\">\r\n                                            <table class=\"table table-bordered table-hover compact\">\r\n                                                <thead>\r\n                                                    <td>Action</td>\r\n                                                    <td>Scheme</td>\r\n                                                    <td>Account Number</td>\r\n                                                    <td>Tran. Type</td>\r\n                                                    <td>DR/CR</td>\r\n                                                    <td>Particulars</td>\r\n                                                    <td style=\"text-align: right;\">Amount</td>\r\n                                                </thead>\r\n\r\n                                                <tbody *ngIf=\"multigrid.length != 0\">\r\n                                                    <tr *ngFor=\"let data of multigrid; let indexOfelement = index\">\r\n\r\n                                                        <td class=\"td_center\"> <span class=\"fa fa-fw fa-edit field-icon\"\r\n                                                                id=\"editbutton\"\r\n                                                                (click)=\"editTransferAccount(indexOfelement)\"\r\n                                                                placement=\"top\" ngbTooltip=\"Edit\"></span>\r\n                                                        </td>\r\n\r\n                                                        <td class=\"td_center\">{{data.Tscheme}}</td>\r\n                                                        <td class=\"td_center\">{{data.TschemeAC}}</td>\r\n                                                        <td class=\"td_center\">{{data.T_TYPE}}</td>\r\n                                                        <td class=\"td_center\">{{data.DEBIT_CREDIT}}</td>\r\n                                                        <td class=\"td_center\">{{data.PERTICULARS}}</td>\r\n                                                        <td class=\"td_center\">{{data.amount}}</td>\r\n                                                    </tr>\r\n                                                    <tr *ngIf=\"multigrid.length != 0\">\r\n\r\n                                                        <td colspan=\"6\" style=\"text-align: right;\">Total\r\n                                                        </td>\r\n                                                        <td class=\"td_center\">\r\n                                                            {{transferTotalAmount}}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n\r\n\r\n                                    <div class=\"col-md-2\">\r\n                                        <label for=\"t_debit\">Total Debit<sub class=\"required\">* </sub></label>\r\n                                    </div>\r\n                                    <div class=\"col-md-2\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <input type=\"text\" name=\"label-name\" class=\"form-control\"\r\n                                                    placeholder=\" \" [ngModel]=\"totalDebit\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\r\n                                                    formControlName=\"T_DEBIT\">\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['T_DEBIT'].invalid && (ngForm.controls['T_DEBIT'].dirty || ngForm.controls['T_DEBIT'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div\r\n                                                *ngIf=\"ngForm.controls['T_DEBIT'].errors?. maxlength || ngForm.controls['T_DEBIT'].errors?. minlength || ngForm.controls['T_DEBIT'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-2\">\r\n                                        <label for=\"t_credit\">Total Credit<sub class=\"required\">* </sub></label>\r\n                                    </div>\r\n                                    <div class=\"col-md-2\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <input type=\"text\" name=\"label-name\" class=\"form-control\"\r\n                                                    placeholder=\" \" [ngModel]=\"totalCredit\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\r\n                                                    formControlName=\"T_CREDIT\">\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['T_CREDIT'].invalid && (ngForm.controls['T_CREDIT'].dirty || ngForm.controls['T_CREDIT'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div\r\n                                                *ngIf=\"ngForm.controls['T_CREDIT'].errors?. maxlength || ngForm.controls['T_CREDIT'].errors?. minlength || ngForm.controls['T_CREDIT'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <br>\r\n                        <div class=\"row\">\r\n                            <button class=\"btn btn-outline-primary btn-sm \" (click)=\"submit()\">\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<app-modal-basic #modalLarge [dialogClass]=\"'modal-md'\">\r\n    <div class=\"app-modal-header\">\r\n        <h4 class=\"modal-title\">Narration Master</h4>\r\n        <button type=\"button\" class=\"close basic-close\" (click)=\"modalLarge.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"app-modal-body\">\r\n        <perfect-scrollbar style=\"overflow-y: auto;\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <th>Paticulars</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let item of narrationList\" (click)=\"getNarration1(item.NARRATION)\"\r\n                                (click)=\"getNarration(item.NARRATION)\">\r\n                                {{item.NARRATION}}\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <button type=\"button\" style=\"display: none;\" class=\"btn btn-outline-primary btn-sm\" id=\"triggrhide\"\r\n                        #triggerhide (click)=\"modalLarge.hide()\">Close</button>\r\n                </div>\r\n            </div>\r\n        </perfect-scrollbar>\r\n    </div>\r\n    <!-- <div class=\"app-modal-footer\">\r\n        \r\n      </div> -->\r\n</app-modal-basic>","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appFoundPaymentTransaction]'\n})\nexport class FoundPaymentTransactionDirective {\n\n  constructor(private el: ElementRef) { }\n\n  @HostListener('submit')\n  onFormSubmit() {\n    const invalidControl = this.el.nativeElement.querySelector('.ng-invalid');\n\n    if (invalidControl) {\n      invalidControl.focus();  \n    }\n  }\n\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appIssueNewShares]'\n})\nexport class IssueNewSharesDirective {\n\n  constructor(private el: ElementRef) { }\n\n  @HostListener('submit')\n  onFormSubmit() {\n    const invalidControl = this.el.nativeElement.querySelector('.ng-invalid');\n\n    if (invalidControl) {\n      invalidControl.focus();  \n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-opening-shares-transactions-entry',\n  templateUrl: './opening-shares-transactions-entry.component.html',\n  styleUrls: ['./opening-shares-transactions-entry.component.scss']\n})\nexport class OpeningSharesTransactionsEntryComponent implements OnInit {\n\n  dtExportButtonOptions: any = {};\n  constructor() { }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/datatable-data.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\">Edit</button>' + ' ' +'<button class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n        title: 'Name',\n        data: 'name'\n      }, {\n        title: 'Position',\n        data: 'position'\n      }, {\n        title: 'Office',\n        data: 'office'\n      }, {\n        title: 'Age',\n        data: 'age'\n      }, {\n        title: 'Start Date',\n        data: 'date'\n      }, {\n        title: 'Salary',\n        data: 'salary'\n      }],\n      dom: \"Blrtip\",\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ]\n    };\n    \n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Shares Details Entry</h5>\n            </div>\n            <form class=\"form-material\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <input type=\"text\" name=\"footer-email\" class=\"form-control\" required=\"\">\n                                <span class=\"form-bar\"></span>\n                                <label class=\"float-label\">Scheme<span class=\"required\"> *</span></label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <input type=\"text\" name=\"footer-email\" class=\"form-control\" required=\"\">\n                                <span class=\"form-bar\"></span>\n                                <label class=\"float-label\">Member No.<span class=\"required\"> *</span></label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-inline\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group\">\n                                        <input placeholder=\"Membership Closing Date *\" class=\"form-control\" type=\"text\" onfocus=\"(this.type='date')\" onblur=\"(this.type='text')\" id=\"date\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <input type=\"text\" name=\"footer-email\" class=\"form-control\" required=\"\">\n                                <span class=\"form-bar\"></span>\n                                <label class=\"float-label\">O/p No. of Shares<span class=\"required\"> *</span></label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <input type=\"text\" name=\"footer-email\" class=\"form-control\" required=\"\">\n                                <span class=\"form-bar\"></span>\n                                <label class=\"float-label\">O/p Shares Amount<span class=\"required\"> *</span></label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-inline\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group\">\n                                        <input placeholder=\"O/p Balance Date *\" class=\"form-control\" type=\"text\" onfocus=\"(this.type='date')\" onblur=\"(this.type='text')\" id=\"date\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <input type=\"text\" name=\"footer-email\" class=\"form-control\" required=\"\">\n                                <span class=\"form-bar\"></span>\n                                <label class=\"float-label\">Total No. of Shares<span class=\"required\"> *</span></label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <input type=\"text\" name=\"footer-email\" class=\"form-control\" required=\"\">\n                                <span class=\"form-bar\"></span>\n                                <label class=\"float-label\">Total Shares Amount<span class=\"required\"> *</span></label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\">Edit</button>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-lg-9\">\n    \n                        </div>\n                    <div class=\"col-sm\">\n                    <h6><span class=\"required\">* </span>: Required Fields</h6>\n                </div>\n                </div>\n\n\n                </div>\n            </form>\n           \n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgSelectConfig } from '@ng-select/ng-select';\nimport { first } from 'rxjs/operators';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { SalaryDMasterdropdownService } from 'src/app/shared/dropdownService/salary-division-master-dropdown.service';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-rebit-interest-transaction',\n  templateUrl: './rebit-interest-transaction.component.html',\n  styleUrls: ['./rebit-interest-transaction.component.scss'],\n  providers:[SchemeCodeDropdownService,SalaryDMasterdropdownService,SchemeAccountNoService],\n})\nexport class RebitInterestTransactionComponent implements OnInit {\n  ngForm: FormGroup;\n  url = environment.base_url;\n  //for date \n  datemax: any;\n  startingdate: any = null\n  endingdate: any = null\n  processdate: any = null\n  maxDate: Date;\n  minDate: Date;\n\n    // for dropdown ng module \n\n// schemeCode: any = null;\nsalary_divList: any = null;\nngSAccno\nngEAccno\n//dropdown\nscheme: any[];\nsalary_div: any[];\nstartingAC: any[];\nschemeCode\n\nEndingAC: any[];\nselectedBranch\nbranchOption: any;\n// schemeType: string = 'SH'\n \n\nobj: any;\n\n  \n  constructor( private router: Router,\n    private config: NgSelectConfig,\n    private fb: FormBuilder,\n    private systemParameter: SystemMasterParametersService,\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\n    private SalaryDMasterdropdownService: SalaryDMasterdropdownService,\n    private schemeAccountNoService: SchemeAccountNoService,private _ownbranchmasterservice: OwnbranchMasterService,) { }\n\n  ngOnInit(): void {\n    this.createForm();\n\n\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\n      this.branchOption = data;\n    })\n\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\n      var filtered = data.filter(function (scheme) {\n        return (scheme.name == 'SH');\n      });\n      this.scheme = filtered;\n     \n    })\n    this.systemParameter.getFormData(1).subscribe(data => {\n      this.ngForm.patchValue({\n        Process_Date: data.CURRENT_DATE\n      })\n    })\n    // this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data => {\n    //   console.log(data,'scheme')\n    //   this.scheme = data\n    //   this.schemeCode = data[0].value\n    //   this.getIntroducer()\n    // })\n\n     // Salary Division\n     let data: any = localStorage.getItem('user');\n     let result = JSON.parse(data);\n     let branchCode = result.branch.id\n     if (result.RoleDefine[0].Role.id == 1) {\n       this.SalaryDMasterdropdownService.getSalaryMasterList().pipe(first()).subscribe(data => {\n         this.salary_div = data;\n       })\n     }\n     else {\n       this.SalaryDMasterdropdownService.getSalaryDMasterList(branchCode).pipe(first()).subscribe(data => {\n         this.salary_div = data;\n       })\n \n     }\n    \n    \n  }\n  createForm() {\n    this.ngForm = this.fb.group({\n     \n      Scheme_code: ['', [Validators.required]],\n       SalaryD_code: ['', [Validators.required]],\n       starting_Account: ['', [Validators.required]],\n       Ending_Account: ['', [Validators.required]],\n       Starting_Date: ['', [Validators.required]],\n       Ending_Date: ['', [Validators.required]],\n       Process_Date: ['', [Validators.required]],\n       Rate: [''],\n       branch_code: ['', [Validators.required]],\n       AC_TYPE: ['', [Validators.required]],\n       TDS_RATE: ['', [Validators.required]],\n    })\n\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    if (result.RoleDefine[0].Role.id == 1) {\n      this.ngForm.controls['branch_code'].enable()\n      this.selectedBranch = result.branch.id\n    }\n    else {\n      this.ngForm.controls['branch_code'].disable()\n      this.ngForm.patchValue({\n        'branch_code': result.branch.id\n      })\n      this.selectedBranch = result.branch.id\n    }\n\n  }\n  decimalAllContent($event) {\n    let value = Number($event.target.value);\n    let data = value.toFixed(2);\n    $event.target.value = data;\n  }\n\n  getschemename: any\n  getIntro(event) {\n    this.getschemename = event.name\n    this.getIntroducer()\n  }\n  checkmargin(ele: any) {\n    //check  if given value  is below 100\n    if (ele <= 50) {\n    } else {\n      Swal.fire(\"Invalid Input\", \"Please insert values below 50\", \"error\");\n      this.ngForm.patchValue({\n        TDS_RATE: 0\n      })\n    }\n  }\n  \n  getIntroducer() {\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    let branchCode = result.branch.id;\n    this.obj = [this.schemeCode, branchCode]\n    switch (this.getschemename) {\n\n\n      case 'SH':\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\n          this.startingAC = data\n          this.EndingAC = data\n          this.ngSAccno =null\n          this.ngEAccno =null\n        })\n        break;\n      \n\n\n    }\n  }\n}\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Rebit Interest List</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <div class=\"card\">\r\n                <form [formGroup]=\"ngForm\">\r\n\r\n                    <div class=\"card-block\">\r\n                        <div class=\"solid\">\r\n\r\n\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Branch Code<sub\r\n                                            class=\"required\">*</sub></label></div>\r\n                                <div class=\"col-sm-12 col-md-2\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <ng-select bindValue=\"value\" bindLabel=\"label\" [(ngModel)]=\"selectedBranch\"\r\n                                                formControlName=\"branch_code\" #branchcode autofocus \r\n                                                (change)=\"getIntroducer()\">\r\n                                                <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                                    {{values.label}}</ng-option>\r\n                                            </ng-select>\r\n\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"ngForm.controls['branch_code'].invalid && (ngForm.controls['branch_code'].dirty || ngForm.controls['branch_code'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div *ngIf=\"ngForm.controls['branch_code'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Code<sub\r\n                                            class=\"required\">*</sub></label></div>\r\n                                <div class=\"col-sm-12 col-md-2\">\r\n                                    \r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select formControlName=\"Scheme_code\"  bindValue=\"value\" bindLabel=\"label\"\r\n                                                [(ngModel)]=\"schemeCode\"  (change)=\"getIntro($event)\" >\r\n                                                    <ng-option  *ngFor=\"let values of scheme\" [value]=\"values\"> {{values.id}} {{values.label}}\r\n                                                    </ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n    \r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['Scheme_code'].invalid && (ngForm.controls['Scheme_code'].dirty || ngForm.controls['Scheme_code'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['Scheme_code'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n    \r\n                                    \r\n                              \r\n\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-md-2\"> <label for=\"Salary Division Code\">Salary Division\r\n                                        Code<sub class=\"required\">*</sub></label>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-md-2\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <ng-select formControlName=\"SalaryD_code\" bindValue=\"value\"\r\n                                                bindLabel=\"label\" [(ngModel)]=\"salary_divList\">\r\n                                                <ng-option *ngFor=\"let values of salary_div\" [value]=\"values\">\r\n                                                    {{values.label}}</ng-option>\r\n                                            </ng-select>\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"ngForm.controls['SalaryD_code'].invalid && (ngForm.controls['SalaryD_code'].dirty || ngForm.controls['SalaryD_code'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div *ngIf=\"ngForm.controls['SalaryD_code'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                            <div class=\"row\">\r\n\r\n\r\n                                <div class=\"col-sm-12 col-md-2\"> <label for=\"Starting Account\">Starting Account<sub\r\n                                            class=\"required\">*</sub></label>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-md-2\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <ng-select formControlName=\"starting_Account\" bindValue=\"value\"\r\n                                                bindLabel=\"label\" [(ngModel)]=\"ngSAccno\">\r\n                                                <ng-option *ngFor=\"let values of startingAC\" [value]=\"values\">\r\n                                                    {{values.label}} {{values.name}}\r\n                                                </ng-option>\r\n                                            </ng-select>\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"ngForm.controls['starting_Account'].invalid && (ngForm.controls['starting_Account'].dirty || ngForm.controls['starting_Account'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div *ngIf=\"ngForm.controls['starting_Account'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-2\"> <label for=\"Ending Account\">Ending Account<sub\r\n                                            class=\"required\">*</sub></label>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-2\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <ng-select formControlName=\"Ending_Account\" bindValue=\"value\"\r\n                                                bindLabel=\"label\" [(ngModel)]=\"ngEAccno\">\r\n                                                <ng-option *ngFor=\"let values of EndingAC\" [value]=\"values\">\r\n                                                    {{values.label}}\r\n                                                    {{values.name}}\r\n                                                </ng-option>\r\n                                            </ng-select>\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"ngForm.controls['Ending_Account'].invalid && (ngForm.controls['Ending_Account'].dirty || ngForm.controls['Ending_Account'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div *ngIf=\"ngForm.controls['Ending_Account'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-md-2\"> <label for=\"Starting Date\">Starting Date<sub\r\n                                            class=\"required\">*</sub></label>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-md-2\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"STARTING_DATE\"\r\n                                            appButton minlength=\"10\" maxlength=\"10\"\r\n                                                id=\"STARTING_DATE\" class=\"form-control\" [(ngModel)]=\"startingdate\"\r\n                                                [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                                formControlName=\"Starting_Date\"\r\n                                                (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                bsDatepicker>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"ngForm.controls['Starting_Date'].invalid && (ngForm.controls['Starting_Date'].dirty || ngForm.controls['Starting_Date'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div\r\n                                            *ngIf=\"ngForm.controls['Starting_Date'].errors?. maxlength || ngForm.controls['Starting_Date'].errors?. minlength || ngForm.controls['Starting_Date'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-2\"> <label for=\"Ending Date\">Ending Date<sub\r\n                                            class=\"required\">*</sub></label>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-md-2\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"STARTING_DATE\"\r\n                                            appButton minlength=\"10\" maxlength=\"10\"\r\n                                                id=\"STARTING_DATE\" class=\"form-control\" [(ngModel)]=\"endingdate\"\r\n                                                [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"[minDate]=\"maxDate\"\r\n                                                formControlName=\"Ending_Date\"\r\n                                                (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                bsDatepicker>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"ngForm.controls['Ending_Date'].invalid && (ngForm.controls['Ending_Date'].dirty || ngForm.controls['Ending_Date'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div\r\n                                            *ngIf=\"ngForm.controls['Ending_Date'].errors?. maxlength || ngForm.controls['Ending_Date'].errors?. minlength || ngForm.controls['Ending_Date'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-12 col-md-2\"> <label for=\"Process Date\">Process Date<sub\r\n                                            class=\"required\">*</sub></label>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-md-2\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"STARTING_DATE\"\r\n                                            appButton minlength=\"10\" maxlength=\"10\"\r\n                                                id=\"STARTING_DATE\" class=\"form-control\" [(ngModel)]=\"processdate\"\r\n                                                [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                                formControlName=\"Process_Date\"\r\n                                                (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                bsDatepicker>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"ngForm.controls['Process_Date'].invalid && (ngForm.controls['Process_Date'].dirty || ngForm.controls['Process_Date'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div\r\n                                            *ngIf=\"ngForm.controls['Process_Date'].errors?. maxlength || ngForm.controls['Process_Date'].errors?. minlength || ngForm.controls['Process_Date'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm\">\r\n\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"Rate\"> Rate</label>\r\n                                        </div>\r\n\r\n                                        <div class=\"col-sm-12 col-md-2\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input style=\"text-align: right;\" type=\"text\" name=\"TDS_RATE\" class=\"form-control\" placeholder=\" \"\r\n                                                      pattern=\"\\d{1,2}(\\.\\d{2})?\" id=\"TDS_RATE\" maxlength=\"5\" title=\"Input allowed only  0-9\" #margin\r\n                                                      (keyup)=\"checkmargin(margin.value)\" formControlName=\" TDS_RATE\"\r\n                                                      (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\">\r\n                                                  </span>\r\n                                            </div>\r\n                                            <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"ngForm.controls['TDS_RATE'].invalid && (ngForm.controls['TDS_RATE'].dirty || ngForm.controls['TDS_RATE'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div\r\n                                            *ngIf=\"ngForm.controls['TDS_RATE'].errors?. maxlength || ngForm.controls['TDS_RATE'].errors?. minlength || ngForm.controls['TDS_RATE'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm\">\r\n                                    <button class=\"btn btn-outline-primary btn-sm\">Submit</button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ShareTransactionsComponent} from './share-transactions.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ShareTransactionsComponent,\r\n    data: {\r\n      title: 'Share Tran',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ShareTransactionsRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-share-transactions',\n  templateUrl: './share-transactions.component.html',\n  styleUrls: ['./share-transactions.component.scss']\n})\nexport class ShareTransactionsComponent implements OnInit {\n\n\n  issuenewsharesTrue = true;\n  sharestransferTrue = false;\n  membershipcancellationTrue = false;\n  foundpaymenttransactionTrue = false;\n  openingsharesteTrue = false;\n  rebitintresttransactionTrue = false;\n  constructor(private_router: Router) {\n  }\n  ngOnInit(): void {\n  }\n\n  OpenLink(val) {\n    // \n    if (val == 1) {\n      this.issuenewsharesTrue = true;\n      this.sharestransferTrue = false;\n      this.membershipcancellationTrue = false;\n      this.foundpaymenttransactionTrue = false;\n      this.openingsharesteTrue = false;\n      this.rebitintresttransactionTrue = false;\n\n    }\n    if (val == 2) {\n      this.issuenewsharesTrue = false;\n      this.sharestransferTrue = true;\n      this.membershipcancellationTrue = false;\n      this.foundpaymenttransactionTrue = false;\n      this.openingsharesteTrue = false;\n      this.rebitintresttransactionTrue = false;\n\n    }\n    if (val == 3) {\n      this.issuenewsharesTrue = false;\n      this.sharestransferTrue = false;\n      this.membershipcancellationTrue = true;\n      this.foundpaymenttransactionTrue = false;\n      this.openingsharesteTrue = false;\n      this.rebitintresttransactionTrue = false;\n\n\n    }\n    if (val == 4) {\n      this.issuenewsharesTrue = false;\n      this.sharestransferTrue = false;\n      this.membershipcancellationTrue = false;\n      this.foundpaymenttransactionTrue = true;\n      this.openingsharesteTrue = false;\n      this.rebitintresttransactionTrue = false;\n\n    }\n    if (val == 5) {\n      this.issuenewsharesTrue = false;\n      this.sharestransferTrue = false;\n      this.membershipcancellationTrue = false;\n      this.foundpaymenttransactionTrue = false;\n      this.openingsharesteTrue = true;\n      this.rebitintresttransactionTrue = false;\n\n\n    }\n    if (val == 6) {\n      this.issuenewsharesTrue = false;\n      this.sharestransferTrue = false;\n      this.membershipcancellationTrue = false;\n      this.foundpaymenttransactionTrue = false;\n      this.openingsharesteTrue = false;\n      this.rebitintresttransactionTrue = true;\n\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-sm-3\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Shares Transactions</h5>\n            </div>\n            <div class=\"card-block\">\n                <div class=\"col-md-12\">\n                    <perfect-scrollbar style=\"max-width: 600px; max-height: 450px;\">\n\n                        <ul class=\"basic-list\">\n                            <li>\n                                <h6> <a (click)=\"OpenLink(1)\" routerLink=\"/transaction/shareTransactions\"\n                                        routerLinkActive=\"active\" [ngClass]=\"{'isActive': issuenewsharesTrue}\"\n                                        class=\"text-right f-w-600\" id=\"pointer\">1. Issue New Shares</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(2)\" routerLink=\"/transaction/shareTransactions\"\n                                        routerLinkActive=\"active\" [ngClass]=\"{'isActive': sharestransferTrue}\"\n                                        class=\"text-right f-w-600\" id=\"pointer\">2. Shares Transfer</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(3)\" routerLink=\"/transaction/shareTransactions\"\n                                        routerLinkActive=\"active\" [ngClass]=\"{'isActive': membershipcancellationTrue}\"\n                                        class=\"text-right f-w-600\" id=\"pointer\">3. Membership Cancellation</a></h6>\n                            </li>\n                            <!-- <li>\n                                <h6> <a (click)=\"OpenLink(4)\" routerLink=\"/transaction/shareTransactions\"\n                                        routerLinkActive=\"active\" [ngClass]=\"{'isActive': foundpaymenttransactionTrue}\"\n                                        class=\"text-right f-w-600\" id=\"pointer\">4. Fund Payment Transaction</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(5)\" routerLink=\"/transaction/shareTransactions\"\n                                        routerLinkActive=\"active\" [ngClass]=\"{'isActive': openingsharesteTrue}\"\n                                        class=\"text-right f-w-600\" id=\"pointer\">5. Opening Shares Transactions Entry</a>\n                                </h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(6)\" routerLink=\"/transaction/shareTransactions\"\n                                        routerLinkActive=\"active\" [ngClass]=\"{'isActive': rebitintresttransactionTrue}\"\n                                        class=\"text-right f-w-600\" id=\"pointer\">6. Rebit Intrest Transactions</a></h6>\n                            </li> -->\n\n                        </ul>\n                    </perfect-scrollbar>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-sm-9\">\n        <div class=\"card-block\">\n            <div *ngIf=\"issuenewsharesTrue\">\n                <app-issue-new-shares></app-issue-new-shares>\n            </div>\n            <div *ngIf=\"sharestransferTrue\">\n                <app-shares-transfer></app-shares-transfer>\n            </div>\n            <div *ngIf=\"membershipcancellationTrue\">\n                <app-membership-cancellation></app-membership-cancellation>\n            </div>\n            <!-- <div *ngIf=\"foundpaymenttransactionTrue\">\n                <app-found-payment-transaction></app-found-payment-transaction>\n            </div>\n            <div *ngIf=\"openingsharesteTrue\">\n                <app-opening-shares-transactions-entry></app-opening-shares-transactions-entry>\n            </div>\n            <div *ngIf=\"rebitintresttransactionTrue\">\n                <app-rebit-interest-transaction></app-rebit-interest-transaction>\n            </div> -->\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ShareTransactionsComponent } from './share-transactions.component';\nimport { ShareTransactionsRoutingModule } from './share-transactions-routing.module';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { IssueNewSharesComponent } from './issue-new-shares/issue-new-shares.component';\n// import { SharesTransferComponent } from './shares-transfer/shares-transfer.component';\nimport { MembershipCancellationComponent } from './membership-cancellation/membership-cancellation.component';\nimport { FoundPaymentTransactionComponent } from './found-payment-transaction/found-payment-transaction.component';\nimport { OpeningSharesTransactionsEntryComponent } from './opening-shares-transactions-entry/opening-shares-transactions-entry.component';\nimport { RebitInterestTransactionComponent } from './rebit-interest-transaction/rebit-interest-transaction.component';\nimport { glMasterService } from '../../../shared/elements/gl-master.service';\nimport { DataTablesModule } from 'angular-datatables';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SelectOptionService } from '../../../shared/elements/select-option.service';\n// import {SelectModule} from 'ng-select';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\nimport { SystemMasterParametersService } from '../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\nimport { ButtonModule } from '../../ui-elements/basic/button/button.module';\nimport { ACMasterDropdownService } from 'src/app/shared/dropdownService/ac-master-dropdown.service';\nimport { IssueNewSharesDirective } from './issue-new-shares/issue-new-shares.directive';\nimport { FoundPaymentTransactionDirective } from './found-payment-transaction/found-payment-transaction.directive';\nimport { SalaryDMasterdropdownService } from 'src/app/shared/dropdownService/salary-division-master-dropdown.service';\nimport {SharesTransferModule} from './shares-transfer/shares-transfer.module'\nimport {IssueNewSharesModule } from './issue-new-shares/issue-new-shares.module'\nimport {MembershipCancellationModule } from './membership-cancellation/membership-cancellation.module'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ShareTransactionsRoutingModule,\n    SharedModule,\n    DataTablesModule,\n    // SelectModule,\n    NgSelectModule,\n    FormsModule, ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n    NgSelectModule,\n    ButtonModule,\n    SharesTransferModule,\n    IssueNewSharesModule,\n    MembershipCancellationModule\n\n  ],\n  declarations: [ShareTransactionsComponent, \n    FoundPaymentTransactionComponent, OpeningSharesTransactionsEntryComponent, RebitInterestTransactionComponent, IssueNewSharesDirective, FoundPaymentTransactionDirective],\n\n\n  providers: [SelectOptionService, glMasterService, SchemeCodeDropdownService, SchemeAccountNoService,\n    OwnbranchMasterService, SystemMasterParametersService, ACMasterDropdownService,\n\n    {\n      provide: HTTP_INTERCEPTORS, \n      useClass: UserAuthInterceptor,\n      multi: true\n    }, SalaryDMasterdropdownService]\n\n})\nexport class ShareTransactionsModule { }","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n\n@Injectable()\nexport class SystemMasterParametersService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n  // url = \"http://localhost:4000/system-master-parameters\";\n  url = environment.base_url;\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\n      catchError((error) => {\n        let errorMessage = 'Please add valid length';\n        Swal.fire('Kindly Add Valid Length !');\n        return throwError(errorMessage);\n      })\n    )\n  }\n\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/system-master-parameters/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\n  }\n\n  getData(): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\n  }\n\n\n}\n\n\n"],"sourceRoot":"webpack:///"}