{"version":3,"sources":["./src/app/shared/dropdownService/customer-id-master-dropdown.service.ts","./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/theme/master/customer/customer-id/customer-id.service.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5-routing.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.html","./src/app/theme/reports/term-deposits/custidwise-intpaidlist/custidwise-intpaidlist-routing.module.ts","./src/app/theme/reports/term-deposits/custidwise-intpaidlist/custidwise-intpaidlist.component.ts","./src/app/theme/reports/term-deposits/custidwise-intpaidlist/custidwise-intpaidlist.component.html","./src/app/theme/reports/term-deposits/custidwise-intpaidlist/custidwise-intpaidlist.module.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"custidwise-intpaidlist-custidwise-intpaidlist-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable()\nexport class CustomerIDMasterDropdownService {\n    loadCharacters() {\n        throw new Error('Method not implemented.');\n    }\n\n    url = environment.base_url;\n    customerIDMasterObject = new Array();\n\n    constructor(private http: HttpClient) { }\n\n    public getCustomerIDMasterList() {\n        this.customerIDMasterObject = [];\n        return this.http.get<any>(this.url + '/customer-id')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    // let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME, value: element.id, name: element.AC_NO };\n                    this.customerIDMasterObject.push(obj)\n                });\n                return this.customerIDMasterObject;\n            }));\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { IOption } from 'ng-select';\nimport { map } from 'rxjs/operators';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable()\nexport class OwnbranchMasterService {\n    OwnbranchMasterObject = new Array();\n    // API \n    //// own-branch-master\"; \n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    public getOwnbranchList() {\n        this.OwnbranchMasterObject = []\n        return this.http.get<any>(this.url + '/own-branch-master')\n            .pipe(map(ele => {\n                ele.forEach(element => {\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\n                    this.OwnbranchMasterObject.push(obj)\n                });\n                return this.OwnbranchMasterObject;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport {environment}  from '../../../../../environments/environment'\n@Injectable()\nexport class CustomerIdService {\n    // Variable for handleError\n    [x: string]: any;\n    // API \n    // // customer-id\";\n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    //Insertion Operation\n    postData(data: any): Observable<any> {\n        return this.http.post(this.url + '/customer-id/insert', data).pipe(map((res) => res),\n            catchError((error) => {\n                Swal.fire('Please Input Proper Data!');\n                return throwError(error);\n            })\n        )\n    }\n    // For append data\n    getFormData(id: any): Observable<any> {\n        return this.http.get(this.url + '/customer-id/' + id).pipe(catchError(this.handleError));\n    }\n\n    getData(): Observable<any> {\n        return this.http.get(this.url + '/customer-id/').pipe(catchError(this.handleError));\n    }\n    //Updation Operation\n    updateData(data): Observable<any> {\n        return this.http.put(this.url + '/customer-id/update', data);\n    }\n    //Deletion Operation\n    deleteData(id: any): Observable<any> {\n        return this.http.delete(this.url + '/customer-id/delete/' + id).pipe(catchError(this.handleError));\n    }  \n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Iframe5Component } from './iframe5/iframe5.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component:Iframe5Component,\n    data: {\n      title: 'Iframe5',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Iframe5RoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Iframe5RoutingModule } from './iframe5-routing.module';\nimport { Iframe5Component } from './iframe5/iframe5.component';\n\n\n@NgModule({\n  declarations: [Iframe5Component],\n  imports: [\n    CommonModule,\n    Iframe5RoutingModule\n  ],\n  exports:[Iframe5Component]\n})\nexport class Iframe5Module { }\n","import { Component, OnInit,Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-iframe5',\n  templateUrl: './iframe5.component.html',\n  styleUrls: ['./iframe5.component.scss']\n})\nexport class Iframe5Component implements OnInit {\n  @Input() url: any;\n  \n\n  constructor(\n    private sanitizer: DomSanitizer) {\n    this.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.url);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <form  novalidate>\n                <div class=\"card-block\">\n                    <div class=\"embed-responsive embed-responsive-16by9\">\n                        <div class=\"loader\">\n                            <img src=\"assets/Loading.gif\">\n                        </div>\n                        <iframe [src]=\"url\"></iframe>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustidwiseIntpaidlistComponent } from './custidwise-intpaidlist.component';\n\nconst routes: Routes = [{\n  path: '',\n  component:CustidwiseIntpaidlistComponent  ,\n  data: {\n    title: 'matured but not closed',\n    icon: 'icon-home',\n    caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n    status: true\n  }\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustidwiseIntpaidlistRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup ,FormBuilder,Validators } from '@angular/forms';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { first } from 'rxjs/operators';\nimport { SystemMasterParametersService } from \"../../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\nimport * as moment from 'moment';\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\nimport { DomSanitizer} from '@angular/platform-browser';\nimport { CustomerIDMasterDropdownService } from '../../../../shared/dropdownService/customer-id-master-dropdown.service';\nimport { CustomerIdService } from 'src/app/theme/master/customer/customer-id/customer-id.service';\n@Component({\n  selector: 'app-custidwise-intpaidlist',\n  templateUrl: './custidwise-intpaidlist.component.html',\n  styleUrls: ['./custidwise-intpaidlist.component.scss']\n})\nexport class CustidwiseIntpaidlistComponent implements OnInit {\n// Created Form Group\nngForm: FormGroup;\n // Date variables\n todate: any = null;\n fromdate: any = null\n maxDate: Date;\n minDate: Date;\n bsValue = new Date();\n equal: any\n startfrom\n startto\n //iframe\n formSubmitted = false;\n clicked:boolean=false;\n showRepo: boolean = false;\n   //api\n   url = environment.base_url;\n   report_url = environment.report_url;\n   iframe5url: any = ' ';\n //dropdown\n  branchOption: any[];\n  Cust_ID\n  // for dropdown ng module\n    ngbranch: any = null;\n    ngcust: any = null;\n  constructor( private fb: FormBuilder,\n    private _ownbranchmasterservice: OwnbranchMasterService,\n    private systemParameter: SystemMasterParametersService,\n    private sanitizer: DomSanitizer,\n    private customerID: CustomerIDMasterDropdownService,\n    public customerIdService: CustomerIdService,\n    ) {  this.todate = moment().format('DD/MM/YYYY');\n    this.maxDate = new Date();\n    this.minDate = new Date();\n    this.minDate.setDate(this.minDate.getDate() - 1);\n    this.maxDate.setDate(this.maxDate.getDate()) }\n\n  ngOnInit(): void {\n    this.createForm()\n    //branch List\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\n     this.branchOption = data;\n   });\n  }\n  //validation\n  createForm() {\n    this.ngForm = this.fb.group({\n      BRANCH_CODE: [\"\", [Validators.pattern, Validators.required]],\n      CUST_ID: [\"\", [Validators.pattern, Validators.required]],\n      START_DATE: [\"\", [Validators.required]],\n      END_DATE: [\"\", [Validators.required]],\n     \n    });\n    //customer Id\n    this.customerID.getCustomerIDMasterList().pipe(first()).subscribe(data => {\n      this.Cust_ID = data;\n    })\n    //for starting and ending date\n    this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\n      this.todate = data.CURRENT_DATE;\n    });\n  \n    this.systemParameter.getFormData(1).subscribe(data => {\n      let year = moment(data.CURRENT_DATE, \"DD/MM/YYYY\").year()\n      this.todate = data.CURRENT_DATE\n      \n      this.fromdate = moment(`01/04/${year - 1}`, \"DD/MM/YYYY\")\n      this.fromdate = this.fromdate._d\n    })\n    let data: any = localStorage.getItem('user');\n    let result = JSON.parse(data);\n    if (result.RoleDefine[0].Role.id == 1) {\n      this.ngbranch = result.branch.id\n      this.ngForm.controls['BRANCH_CODE'].enable()\n    }\n    else {\n      this.ngForm.controls['BRANCH_CODE'].disable()\n      this.ngbranch = result.branch.id\n    }\n}\nend() {}\nsrc: any;\nview(event) {\n  debugger\n  event.preventDefault();\n  this.formSubmitted = true;\n\n  let userData = JSON.parse(localStorage.getItem('user'));\n  let bankName = userData.branch.syspara.BANK_NAME;\n  let branchName = userData.branch.NAME\n\n  if(this.ngForm.valid){\n  let obj = this.ngForm.value\n  this.showRepo = true;\n  let date =  moment(obj.FROM_DATE).format('DD/MM/YYYY');\n  \n  let custid = obj.CUST_ID\n  let branch = obj.BRANCH_CODE\n\n  this.iframe5url=this.report_url+\"examples/AgentwisePigmyBalList.php?date='\" + date + \"'&custid=\" + custid + \"&branch=\"+ branch +\"'&bankName=\" + bankName + \"\" ;\n  this.iframe5url=this.sanitizer.bypassSecurityTrustResourceUrl(this.iframe5url);\n  \n \n}\nelse {\n  Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(()=>{ this.clicked=false});\n}\n\n}\n\nclose(){\nthis.resetForm()\n}\n\n// Reset Function\nresetForm() {\nthis.ngForm.controls.CUST_ID.reset();\nthis.showRepo = false;\nthis.clicked=false;\n}\n}\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Customer Id wise Interest Paid List</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n\r\n            <form [formGroup]=\"ngForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"scheme\">Branch <sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngbranch\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" placeholder=\"\">\r\n                                        <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"ngForm.controls['BRANCH_CODE'].invalid && (ngForm.controls['BRANCH_CODE'].dirty || ngForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"ngForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"scheme\">Cust Id <sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"CUST_ID\" bindValue=\"value\" [(ngModel)]=\"ngcust\"\r\n                                        formControlName=\"CUST_ID\" bindLabel=\"label\" placeholder=\"\">\r\n                                        <ng-option *ngFor=\"let values of Cust_ID\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"ngForm.controls['CUST_ID'].invalid && (ngForm.controls['CUST_ID'].dirty || ngForm.controls['CUST_ID'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"ngForm.controls['CUST_ID'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"col-md-2\"> <label for=\"START_DATE\">Starting Date<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"START_DATE\" id=\"START_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"fromdate\" [bsValue]=\"bsValue\"\r\n                                        [maxDate]=\"maxDate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                        formControlName=\"START_DATE\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"ngForm.controls['START_DATE'].invalid && (ngForm.controls['START_DATE'].dirty || ngForm.controls['START_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"ngForm.controls['START_DATE'].errors?.required ||ngForm.controls['START_DATE'].invalid\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"> <label for=\"END_DATE\">Ending Date<sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"END_DATE\" id=\"END_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"todate\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"fromdate\"\r\n                                        [maxDate]=\"maxDate\" formControlName=\"END_DATE\" (change)=\"end()\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"ngForm.controls['END_DATE'].invalid && (ngForm.controls['END_DATE'].dirty || ngForm.controls['END_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"ngForm.controls['END_DATE'].errors?.required ||ngForm.controls['START_DATE'].invalid\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-9\"></div>\r\n                        <div class=\"col-sm-12 col-md-1\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\r\n                                (click)=\"view($event); clicked = true \">View</button>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-1\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\"\r\n                                (click)=\"close()\">Close</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\">\r\n                                    <h5>Report Frame</h5>\r\n                                </div>\r\n                                <div *ngIf=\"showRepo\">\r\n                                    <app-iframe5 [url]='iframe5url'></app-iframe5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CustidwiseIntpaidlistRoutingModule } from './custidwise-intpaidlist-routing.module';\nimport { CustidwiseIntpaidlistComponent } from './custidwise-intpaidlist.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { SystemMasterParametersService } from \"../../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\nimport { Iframe5Module } from 'src/app/theme/reports/pigmy-report/iframe5/iframe5.module';\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\nimport { CustomerIDMasterDropdownService } from '../../../../shared/dropdownService/customer-id-master-dropdown.service';\nimport { CustomerIdService } from 'src/app/theme/master/customer/customer-id/customer-id.service';\n@NgModule({\n  declarations: [CustidwiseIntpaidlistComponent],\n  imports: [\n    CommonModule,\n    CustidwiseIntpaidlistRoutingModule ,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    NgbModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n    Iframe5Module\n  ],\n  providers:[\n    OwnbranchMasterService,\n    CustomerIDMasterDropdownService,\n    CustomerIdService,\n    {\n\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: PERFECT_SCROLLBAR_CONFIG,\n\n    },\n    SystemMasterParametersService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UserAuthInterceptor,\n      multi: true\n    }]\n})\nexport class CustidwiseIntpaidlistModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../../environments/environment'\n\n@Injectable()\nexport class SystemMasterParametersService {\n  // Variable for handleError\n  [x: string]: any;\n  // API \n  // url = \"http://localhost:4000/system-master-parameters\";\n  url = environment.base_url;\n  constructor(private http: HttpClient) { }\n\n  //Insertion Operation\n  postData(data: any): Observable<any> {\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\n      catchError((error) => {\n        let errorMessage = 'Please add valid length';\n        Swal.fire('Kindly Add Valid Length !');\n        return throwError(errorMessage);\n      })\n    )\n  }\n\n  // For append data\n  getFormData(id: any): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\n  }\n  //Updation Operation\n  updateData(data): Observable<any> {\n    return this.http.put(this.url + '/system-master-parameters/update', data);\n  }\n  //Deletion Operation\n  deleteData(id: any): Observable<any> {\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\n  }\n\n  getData(): Observable<any> {\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\n  }\n\n\n}\n\n\n"],"sourceRoot":"webpack:///"}