{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/dropdownService/tdReceipt-type.service.ts","./src/app/theme/master/policy-settings/t-dreceipt-type-master/t-dreceipt-type-master-routing.module.ts","./src/app/theme/master/policy-settings/t-dreceipt-type-master/t-dreceipt-type-master.component.service.ts","./src/app/theme/master/policy-settings/t-dreceipt-type-master/t-dreceipt-type-master.component.ts","./src/app/theme/master/policy-settings/t-dreceipt-type-master/t-dreceipt-type-master.component.html","./src/app/theme/master/policy-settings/t-dreceipt-type-master/t-dreceipt-type-master.module.ts"],"names":[],"mappings":"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","file":"t-dreceipt-type-master-t-dreceipt-type-master-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class TdReceiptService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: 'A', label: 'A'},\r\n    {value: 'B', label: 'B'},\r\n    {value: 'C', label: 'C'},\r\n    {value: 'D', label: 'D'},\r\n    {value: 'E', label: 'E'},\r\n    {value: 'F', label: 'F'},\r\n    {value: 'G', label: 'G'},\r\n    {value: 'H', label: 'H'},\r\n    {value: 'I', label: 'I'},\r\n    {value: 'J', label: 'J'},\r\n    {value: 'K', label: 'K'},\r\n    {value: 'L', label: 'L'},\r\n    {value: 'M', label: 'M'},\r\n    {value: 'N', label: 'N'},\r\n    {value: 'O', label: 'O'},\r\n    {value: 'P', label: 'P'},\r\n    {value: 'Q', label: 'Q'},\r\n    {value: 'R', label: 'R'},\r\n    {value: 'S', label: 'S'},\r\n    {value: 'T', label: 'T'},\r\n    {value: 'U', label: 'U'},\r\n    {value: 'V', label: 'V'},\r\n    {value: 'W', label: 'W'},\r\n    {value: 'X', label: 'X'},\r\n    {value: 'Y', label: 'Y'},\r\n    {value: 'Z', label: 'Z'},\r\n  ];\r\n\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(TdReceiptService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(TdReceiptService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(TdReceiptService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {TDReceiptTypeMasterComponent} from './t-dreceipt-type-master.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TDReceiptTypeMasterComponent,\r\n    data: {\r\n      title: 'TD Receipt Type Master',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TDReceiptTypeMasterRoutingModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { environment } from \"../../../../../environments/environment\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport Swal from \"sweetalert2\";\r\n@Injectable()\r\nexport class TDReceiptService {\r\n  url = environment.base_url;\r\n  handleError: any;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    console.log(data);\r\n    return this.http.post(this.url + \"/td-receipt-type/insert\", data).pipe(\r\n      map((res) => res),\r\n      catchError((error) => {\r\n        Swal.fire(\"Please Input Proper Data !\");\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/td-receipt-type/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  \r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/td-receipt-type/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/td-receipt-type/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { IOption } from 'ng-select';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Angular Datatable Directive  \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n// Service File For Handling CRUD Operation\r\nimport { TDReceiptService } from './t-dreceipt-type-master.component.service';\r\nimport { TdReceiptService } from '../../../../shared/dropdownService/tdReceipt-type.service';\r\nimport { environment } from '../../../../../environments/environment'\r\nimport { first } from 'rxjs/operators';\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\ninterface TDReceiptinterface {\r\n  LAST_RECEIPT_NO: number,\r\n  RECEIPT_TYPE: string,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-t-dreceipt-type-master',\r\n  templateUrl: './t-dreceipt-type-master.component.html',\r\n  styleUrls: ['./t-dreceipt-type-master.component.scss'],\r\n})\r\nexport class TDReceiptTypeMasterComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  //api \r\n  url = environment.base_url;\r\n  angForm: FormGroup;\r\n  formSubmitted = false;\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  dtExportButtonOptions: any = {};\r\n  // Variables for hide/show add and update and new button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  newbtnShow: boolean = false;\r\n\r\n  // tdMaster: any[]\r\n  //variable to get ID to update\r\n  updateID: number = 0;\r\n\r\n  //filter variable\r\n  filterData = {};\r\n  //variables for pagination\r\n  page: number = 1;\r\n\r\n  // Store data from backend\r\n  tdReceipt: TDReceiptinterface[];\r\n\r\n  selectedValue: any = null\r\n  receipt: number\r\n  //title select variables\r\n  tdMaster: Array<IOption> = this._tdReceiptService.getCharacters();\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n  private dataSub: Subscription = null;\r\n\r\n  constructor(private fb: FormBuilder, private _receipt: TDReceiptService,\r\n    private http: HttpClient,\r\n    private _tdReceiptService: TdReceiptService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n\r\n        dataTableParameters.columns.forEach(element => {\r\n          if (element.search.value != '') {\r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          } else {\r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if (this.filterData.hasOwnProperty(element.data)) {\r\n              let value = this.filterData[getColumnName];\r\n              if (columnValue != undefined || value != undefined) {\r\n                delete this.filterData[element.data];\r\n              }\r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            this.url + '/td-receipt-type',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.tdReceipt = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      columnDefs: [{\r\n        targets: '_all',\r\n        defaultContent: \"\"\r\n      }],\r\n      columns: [\r\n        // {\r\n        //   title: 'Action',\r\n        // },\r\n        {\r\n          title: 'Receipt Type',\r\n          data: 'RECEIPT_TYPE'\r\n        },\r\n        {\r\n          title: 'Last Receipt No',\r\n          data: 'LAST_RECEIPT_NO'\r\n        }\r\n      ],\r\n      dom: 'Blrtip',\r\n    };\r\n\r\n    this.runTimer();\r\n    this.dataSub = this._tdReceiptService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n  }\r\n\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n\r\n  }\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      LAST_RECEIPT_NO: [, [Validators.pattern, Validators.required]],\r\n      RECEIPT_TYPE: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.formSubmitted = true;\r\n    if (this.angForm.valid) {\r\n      const formVal = this.angForm.value;\r\n      console.log(this.receipt)\r\n      const dataToSend = {\r\n        'LAST_RECEIPT_NO': formVal.LAST_RECEIPT_NO,\r\n        'RECEIPT_TYPE': formVal.RECEIPT_TYPE\r\n      };\r\n      console.log(this.angForm.value);\r\n      console.log(dataToSend, \"dataToSend\");\r\n      this._receipt.postData(dataToSend).subscribe(\r\n        (data) => {\r\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\r\n          // to reload after insertion of data\r\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n            dtInstance.ajax.reload()\r\n          });\r\n          this.formSubmitted = false;\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n      //To clear form\r\n      this.resetForm();\r\n    }\r\n  }\r\n  //function toggle update to add button\r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    this._receipt.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.newbtnShow = false;\r\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n        dtInstance.ajax.reload()\r\n      });\r\n      this.resetForm();\r\n    })\r\n  }\r\n  //function for edit button clicked\r\n  editClickHandler(id): void {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.newbtnShow = true;\r\n    this._receipt.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.patchValue({\r\n        RECEIPT_TYPE: data.RECEIPT_TYPE,\r\n        LAST_RECEIPT_NO: data.LAST_RECEIPT_NO\r\n      })\r\n    })\r\n  }\r\n\r\n  //function for delete button clicked\r\n  delClickHandler() {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your file has been deleted.',\r\n          'success'\r\n        )\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your imaginary file is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n    this.selectedValue = null\r\n  }\r\n\r\n  //reset function while update\r\n  addNewData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    this.newbtnShow = false;\r\n    this.resetForm();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next()\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      $('#ftable tfoot tr').appendTo('#ftable thead');\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          } else {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n\r\n  getValue(event) {\r\n    this.http.get<any>(\r\n      this.url + '/td-receipt-type',\r\n    ).subscribe(resp => {\r\n      if (resp.length != 0) {\r\n        for (let element of resp) {\r\n          if (event.value == element.RECEIPT_TYPE) {\r\n            this.angForm.patchValue({\r\n              LAST_RECEIPT_NO: element.LAST_RECEIPT_NO\r\n            })\r\n            break\r\n          }\r\n          else {\r\n            this.angForm.patchValue({\r\n              LAST_RECEIPT_NO: 0\r\n            })\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        this.angForm.patchValue({\r\n          LAST_RECEIPT_NO: 0\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>TD Receipt Type Master</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <div class=\"card-block\">\r\n                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select bindValue=\"value\" [(ngModel)]=\"selectedValue\" id=\"RECEIPT_TYPE\"\r\n                                        bindValue=\"value\" bindLabel=\"label\" formControlName=\"RECEIPT_TYPE\"\r\n                                        title=\"Compulsory Selection\" (change)=\"getValue($event)\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\r\n                                        placeholder=\"Receipt Type \">\r\n                                        <ng-option *ngFor=\"let values of tdMaster\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                    <label for=\"RECEIPT_TYPE\">Receipt Type <sub class=\"required\"> *</sub></label>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <!-- <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"tdMaster\" [multiple]=\"false\"\r\n                                    placeholder=\"Receipt Type *\" required title=\"Compulsory Selection\"\r\n                                    [(ngModel)]=\"selectedValue\" (selected)=\"getValue($event)\"\r\n                                    formControlName=\"RECEIPT_TYPE\">\r\n                                </ng-select>\r\n                            </div> -->\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['RECEIPT_TYPE'].invalid && (angForm.controls['RECEIPT_TYPE'].dirty || angForm.controls['RECEIPT_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['RECEIPT_TYPE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"LAST_RECEIPT_NO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"LAST_RECEIPT_NO\" pattern=\"^[0-9]+$\" maxlength=\"10\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                        title=\"Input allowed only  0-9\" formControlName=\"LAST_RECEIPT_NO\" required>\r\n                                    <label for=\"LAST_RECEIPT_NO\">Last Receipt No.<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['LAST_RECEIPT_NO'].invalid && (angForm.controls['LAST_RECEIPT_NO'].dirty || angForm.controls['LAST_RECEIPT_NO'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['LAST_RECEIPT_NO'].errors?.pattern || angForm.controls['LAST_RECEIPT_NO'].errors?.maxlength  || angForm.controls['LAST_RECEIPT_NO'].errors?.required\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- <div class=\"col-sm-3\">\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\"\r\n                                [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\"\r\n                                [disabled]=\"angForm.invalid\">Update</button>&nbsp;\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"addNewData()\"\r\n                                *ngIf=\"newbtnShow\">New</button>\r\n                        </div> -->\r\n                        <div class=\"col-sm-3\" style=\"float: right;\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\"\r\n                                (click)=\"submit()\" [disabled]=\"angForm.invalid\">\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card shadow\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"ftable\" datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\r\n                                class=\"table table-striped table-bordered table-hover compact\">\r\n                                <tbody *ngIf=\"tdReceipt?.length != 0\">\r\n                                    <tr *ngFor=\"let data of tdReceipt\">\r\n                                        <!-- <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\r\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp; -->\r\n                                        <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" -->\r\n                                        <!-- (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        <!-- </td> -->\r\n                                        <td>{{ data.RECEIPT_TYPE}}</td>\r\n                                        <td>{{ data.LAST_RECEIPT_NO}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"tdReceipt?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"2\" style=\"text-align: center;\" class=\"no-data-available\">No data!\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot #filters class=\"filters\">\r\n                                    <tr class=\"testing\">\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"RECEIPT_TYPE\"> </th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"LAST_RECEIPT_NO\"> </th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TDReceiptTypeMasterComponent } from './t-dreceipt-type-master.component';\r\nimport { TDReceiptTypeMasterRoutingModule } from './t-dreceipt-type-master-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { TDReceiptService } from './t-dreceipt-type-master.component.service'\r\nimport { TdReceiptService } from '../../../../shared/dropdownService/tdReceipt-type.service';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TDReceiptTypeMasterRoutingModule,\r\n    DataTablesModule,\r\n    NgbModule,\r\n    FormsModule, ReactiveFormsModule,\r\n    NgSelectModule\r\n  ],\r\n  declarations: [TDReceiptTypeMasterComponent],\r\n  providers: [TDReceiptService, TdReceiptService, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n\r\n    multi: true\r\n  },]\r\n})\r\nexport class TDReceiptTypeMasterModule { }\r\n"],"sourceRoot":"webpack:///"}