{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/shared/elements/branch.service.ts","./src/app/shared/elements/scheme-code.service.ts","./src/app/theme/master/shares/dividend-calculation/dividend-calculation-routing.module.ts","./src/app/theme/master/shares/dividend-calculation/dividend-calculation.component.ts","./src/app/theme/master/shares/dividend-calculation/dividend-calculation.component.html","./src/app/theme/master/shares/dividend-calculation/dividend-calculation.module.ts","./src/app/theme/master/shares/dividend-calculation/dividend-calculation.service.ts"],"names":[],"mappings":"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","file":"dividend-calculation-dividend-calculation-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                }); console.log('in service', this.schemeObject)\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class BranchService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: 'branch1' },\r\n        { value: '1', label: 'branch2' },\r\n        { value: '2', label: 'branch1' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(BranchService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(BranchService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(BranchService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class SchemeCodeService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '40100', label: '40100' },\r\n        { value: '40200', label: '40200' },\r\n        { value: '40300', label: '40300' },\r\n        { value: '40400', label: '40400' },\r\n        \r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(SchemeCodeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(SchemeCodeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(SchemeCodeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { DividendCalculationComponent } from './dividend-calculation.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DividendCalculationComponent,\r\n    data: {\r\n      title: 'Dividend Calculation',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DividendCalculationRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { SchemeCodeService } from '../../../../shared/elements/scheme-code.service';\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service'\r\n// import { MembernoService } from '../../../../shared/elements/memberno.service';\r\nimport { BranchService } from '../../../../shared/elements/branch.service';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport * as moment from 'moment';\r\nimport { environment } from 'src/environments/environment';\r\n// Angular Datatable Directive\r\nimport { DataTableDirective } from \"angular-datatables\";\r\nimport { data } from 'jquery';\r\nimport { Subject } from 'rxjs-compat';\r\nimport { HttpClient } from '@angular/common/http';\r\n//date pipe\r\nimport { DatePipe } from '@angular/common';\r\nimport { DividendCalculationService } from './dividend-calculation.service'\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface DividendCalculation {\r\n  id: number;\r\n  AC_TYPE: string\r\n  FROM_AC: string\r\n  TO_AC: string\r\n  DIV_FROMDATE: Date\r\n  DIV_TODATE: Date\r\n  WARRENT_DATE: Date\r\n  Dividend: number\r\n  Bonus: number\r\n}\r\n\r\n@Component({\r\n  selector: 'app-dividend-calculation',\r\n  templateUrl: './dividend-calculation.component.html',\r\n  styleUrls: ['./dividend-calculation.component.scss']\r\n})\r\n\r\nexport class DividendCalculationComponent implements OnInit {\r\n  //api\r\n  url = environment.base_url;\r\n  formSubmitted = false;\r\n  angForm: FormGroup;\r\n\r\n  dividendcalculation: DividendCalculation[];\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  dtExportButtonOptions: any = {};\r\n\r\n  // a: Array<IOption> = this.SchemeCodeService.getCharacters();\r\n  WarrantDate: Array<IOption> = this.SchemeCodeService.getCharacters();\r\n  BranchCode: Array<IOption> = this.BranchService.getCharacters();\r\n  // b: Array<IOption> = this.MembernoService.getCharacters();\r\n\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n\r\n\r\n  // dropdown ngmodel names\r\n\r\n  //Scheme type variable\r\n  schemeType: string = 'SH'\r\n  shareSchemeType\r\n  scheme: any[];\r\n  ngscheme: any = null\r\n  ngfromac: any = null\r\n  ngtoac: any = null\r\n\r\n  // date variables\r\n  divfromdate: any = null\r\n  divtodate: any = null\r\n  warrentdate: any = null\r\n  maxDate: Date;\r\n  minDate: Date;\r\n\r\n\r\n  private dataSub: Subscription = null;\r\n  fromAC\r\n  ToAC\r\n  getschemename: any;\r\n  filterData: any;\r\n  page: number;\r\n\r\n  INT_ROUND_OFF\r\n  shareDividend\r\n  divMethod\r\n  isAddBonusInDividend\r\n\r\n\r\n  constructor(private fb: FormBuilder, public SchemeCodeService: SchemeCodeService,\r\n    public BranchService: BranchService,\r\n    private http: HttpClient,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private _service: DividendCalculationService,\r\n    // public MembernoService: MembernoService,\r\n    private datePipe: DatePipe,) {\r\n\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate());\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: \"full_numbers\",\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n\r\n        dataTableParameters.columns.forEach((element) => {\r\n          if (element.search.value != \"\") {\r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          } else {\r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if (this.filterData.hasOwnProperty(element.data)) {\r\n              let value = this.filterData[getColumnName];\r\n              if (columnValue != undefined || value != undefined) {\r\n                delete this.filterData[element.data];\r\n              }\r\n            }\r\n          }\r\n        });\r\n        dataTableParameters[\"filterData\"] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            this.url + '/dividend-calculation',\r\n            dataTableParameters\r\n          )\r\n          .subscribe((resp) => {\r\n            this.dividendcalculation = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: [],\r\n            });\r\n          });\r\n      },\r\n\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n        },\r\n        {\r\n          title: 'Scheme Code',\r\n          data: 'AC_TYPE'\r\n        },\r\n        {\r\n          title: 'Membership From',\r\n          data: 'FROM_AC'\r\n        },\r\n        {\r\n          title: 'Membership To',\r\n          data: 'TO_AC'\r\n        },\r\n        {\r\n          title: 'Div.Date From',\r\n          data: 'DIV_FROMDATE'\r\n        },\r\n        {\r\n          title: 'Div.Date To',\r\n          data: 'DIV_TODATE'\r\n        },\r\n        {\r\n          title: 'Warrent Date',\r\n          data: 'WARRENT_DATE'\r\n        },\r\n        {\r\n          title: 'Dividend %',\r\n          data: 'Dividend'\r\n        },\r\n        {\r\n          title: 'Bonus %',\r\n          data: 'Bonus'\r\n        },\r\n\r\n      ],\r\n      dom: 'Bfrtip',\r\n    };\r\n\r\n    this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data => {\r\n      this.scheme = data\r\n      this.ngscheme = data[0].value\r\n      this.shareDividend = data[0].dividend\r\n      this.divMethod = data[0].divMethod\r\n      this.isAddBonusInDividend = data[0].isAddBonus\r\n      this.INT_ROUND_OFF = data[0].INT_ROUND_OFF\r\n      this.angForm.patchValue({\r\n        Dividend: this.shareDividend\r\n      })\r\n      this.getAccountList()\r\n      this.getDivTOYear()\r\n    })\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      AC_TYPE: ['', [Validators.required, Validators.pattern]],\r\n      FROM_AC: ['', [Validators.required, Validators.pattern]],\r\n      TO_AC: ['', [Validators.required, Validators.pattern]],\r\n      DIV_FROMDATE: ['', [Validators.required, Validators.pattern]],\r\n      DIV_TODATE: ['', [Validators.required, Validators.pattern]],\r\n      WARRENT_DATE: ['', [Validators.required, Validators.pattern]],\r\n      Dividend: ['', [Validators.required, Validators.pattern]],\r\n      Bonus: ['', [Validators.required, Validators.pattern]],\r\n    });\r\n  }\r\n\r\n  //get account no according scheme\r\n  getAccountList() {\r\n    this.ngfromac = null\r\n    this.ngtoac = null\r\n    let data1: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data1);\r\n    let branchCode = result.branch.id;\r\n    let trandate = this.angForm.controls['DIV_FROMDATE'].value\r\n    var full = []\r\n    var fullDate = trandate;\r\n    full = fullDate.split(' ');\r\n    var date = full[0].split(/\\//);\r\n    var newDate = date[1] + '/' + date[0] + '/' + date[2]\r\n    var k = new Date(newDate);\r\n    var expiryDate = moment(k).format('DD.MM.YYYY');\r\n    let obj = [this.ngscheme, branchCode, expiryDate]\r\n    this.http.get(this.url + '/dividend-calculation/check/' + obj).subscribe((data) => {\r\n      this.ToAC = data\r\n      this.fromAC = data\r\n    })\r\n  }\r\n\r\n  getShareDividend(event) {\r\n    this.shareDividend = event.dividend\r\n    this.divMethod = event.divMethod\r\n    this.isAddBonusInDividend = event.isAddBonus\r\n    this.INT_ROUND_OFF = event.INT_ROUND_OFF\r\n    this.angForm.patchValue({\r\n      Dividend: event.dividend\r\n    })\r\n  }\r\n\r\n  //checks percentage of interest rate\r\n  checkInt(event) {\r\n    if (Number(event) > 25) {\r\n      Swal.fire('Info', 'Please Input Dividend Percentage upto 25', 'info')\r\n      this.angForm.patchValue({\r\n        Dividend: ''\r\n      })\r\n    }\r\n  }\r\n\r\n  //checks percentage of interest rate\r\n  checkBonus(event) {\r\n    if (Number(event) > 99) {\r\n      Swal.fire('Info', 'Please Input Bonus Percentage upto 99', 'info')\r\n      this.angForm.patchValue({\r\n        Bonus: ''\r\n      })\r\n    }\r\n  }\r\n\r\n  //select content of field\r\n  selectAllContent($event) {\r\n    $event.target.select();\r\n  }\r\n\r\n  getDivTOYear() {\r\n    let finYear\r\n    var sysDate = new Date()\r\n    var year = sysDate.getFullYear();\r\n    var month = new Date().getMonth();\r\n    month > 2 ? finYear = year : finYear = year - 1\r\n    var full = []\r\n    var fullDate = `01/04/${finYear}`;\r\n    full = fullDate.split(' ');\r\n    var date = full[0].split(/\\//);\r\n    var newDate = date[1] + '/' + date[0] + '/' + date[2]\r\n    var formatDate = new Date(newDate);\r\n    // starting and end date\r\n    let start = moment(formatDate);\r\n    let end = moment(start).add(12, 'M');\r\n    var endDT = moment(end).subtract(1, \"days\").format(\"DD/MM/YYYY\");\r\n    let starting = moment(start).format('DD/MM/YYYY')\r\n    let ending = moment(end).format('DD/MM/YYYY')\r\n    this.angForm.patchValue({\r\n      DIV_FROMDATE: starting,\r\n      DIV_TODATE: endDT\r\n    })\r\n  }\r\n\r\n  send = {}\r\n  endYr\r\n  startYr\r\n  DIV_FROM_MONTH\r\n  DIV_TO_MONTH\r\n  checkDivYear() {\r\n    let startDate = this.angForm.controls['DIV_FROMDATE'].value\r\n    let endDate = this.angForm.controls['DIV_TODATE'].value\r\n    var full = []\r\n    var startDT = startDate;\r\n    full = startDT.split(' ');\r\n    var sdate = full[0].split(/\\//);\r\n    this.startYr = sdate[2]\r\n    this.DIV_FROM_MONTH = sdate[1]\r\n\r\n    var full = []\r\n    var endDT = endDate;\r\n    full = endDT.split(' ');\r\n    var date = full[0].split(/\\//);\r\n    this.endYr = date[2]\r\n    this.DIV_TO_MONTH = date[1]\r\n    let obj = [this.startYr, this.endYr]\r\n    this.http.get(this.url + '/dividend-calculation/divYrcheck/' + obj).subscribe((data) => {\r\n      if (data['historyCheck'] == \"Already Posted\") {\r\n        this.send['Flag'] = 'history'\r\n        Swal.fire(\"Warning!\", \"Dividend Already Posted !\", \"warning\");\r\n      }\r\n      else if (data['divCheck'] == 'Already Processed') {\r\n        Swal.fire({\r\n          text: \"Dividend Already Processed.Do You Want To Overwrite?\",\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#229954\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, Overwrite it!\",\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.send['Flag'] = 'Overwrite'\r\n          } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n            this.send['Flag'] = 'Insert'\r\n          }\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  getAccNumbers() {\r\n    this.arrTable = []\r\n    this.divArr = []\r\n    var memFrom = this.angForm.controls['FROM_AC'].value\r\n    var memTo = this.angForm.controls['TO_AC'].value\r\n    if (this.angForm.controls['FROM_AC'].value < this.angForm.controls['TO_AC'].value && this.angForm.controls['TO_AC'].value != '') {\r\n      let mem = [memFrom, memTo, this.ngscheme]\r\n      this.http.get(this.url + '/dividend-calculation/accounts/' + mem).subscribe((data) => {\r\n        this.arrTable = data;\r\n        this.arrTable.forEach(element => {\r\n          var object = {\r\n            AC_NO: element.AC_NO,\r\n            AC_NAME: element.AC_NAME,\r\n            id: element.id,\r\n            AC_CLOSEDT: element.AC_CLOSEDT,\r\n            BANKACNO: element.BANKACNO == undefined || element.BANKACNO == null ? '' : element.BANKACNO,\r\n            BRANCH_CODE: element.BRANCH_CODE,\r\n          }\r\n          this.divArr.push(object)\r\n        });\r\n      });\r\n    }\r\n    console.log(this.divArr, 'div arr')\r\n  }\r\n\r\n  divArr = []\r\n  arrTable\r\n\r\n  submit() {\r\n    console.log(this.angForm.valid);\r\n    if (this.angForm.valid) {\r\n      console.log(this.angForm.value);\r\n    }\r\n    // if (this.send['Flag'] == 'history') {\r\n    //   Swal.fire(\"Warning!\", \"Dividend Already Posted !\", \"warning\");\r\n    // }\r\n    this.send['Flag'] = 'Insert'\r\n\r\n    const formVal = this.angForm.value;\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    const dataToSend = {\r\n      DIV_FROMDATE: formVal.DIV_FROMDATE,\r\n      DIV_TODATE: formVal.DIV_TODATE,\r\n      USER: result.USER_NAME,\r\n      divMethod: this.divMethod,\r\n      Dividend: formVal.Dividend,\r\n      Bonus: formVal.Bonus,\r\n      WARRENT_DATE: (formVal.WARRENT_DATE == '' || formVal.WARRENT_DATE == 'Invalid date') ? '' : moment(formVal.WARRENT_DATE).format('DD/MM/YYYY'),\r\n      DIV_FROM_YEAR: this.startYr,\r\n      DIV_TO_YEAR: this.endYr,\r\n      ACTYPE: this.ngscheme,\r\n      DIV_FROM_MONTH: this.DIV_FROM_MONTH,\r\n      DIV_TO_MONTH: this.DIV_TO_MONTH,\r\n      divArr: this.divArr,\r\n      send: this.send,\r\n      isAddBonus: this.isAddBonusInDividend\r\n    };\r\n    console.log(dataToSend);\r\n    this._service.postData(dataToSend).subscribe(data => {\r\n      this.formSubmitted = false;\r\n      Swal.fire(\"Success!\", \"Data Updated Successfully !\", \"success\");\r\n\r\n    })\r\n    this.arrTable = []\r\n    this.divArr = []\r\n    this.resetForm()\r\n  }\r\n\r\n  /**\r\n* @editClickHandler function for edit button clicked\r\n*/\r\n\r\n  editClickHandler(info: any): void {\r\n\r\n    this.updateShow = true;\r\n  }\r\n\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n    this.ngscheme = null\r\n    this.ngfromac = null\r\n    this.ngtoac = null\r\n  }\r\n\r\n  /**\r\n  * @updateData function for update data \r\n  */\r\n  updateData() {\r\n    // this.showButton = true;\r\n    this.updateShow = false;\r\n    // this.form.reset();\r\n  }\r\n\r\n  /**\r\n  * @delClickHandler function for delete button \r\n    @Swal sweetalert2\r\n    @Swal.fire open a modal window to display message\r\n  */\r\n  //function for delete button clicked\r\n  delClickHandler(info: any): void {\r\n    // this.message.SchemeCode = info.SchemeCode;\r\n    // Swal.fire({\r\n    //   title: 'Are you sure?',\r\n    //   text: \"Do you want to delete Scheme Code.\" + this.message.SchemeCode + \"  data\",\r\n    //   icon: 'warning',\r\n    //   showCancelButton: true,\r\n    //   confirmButtonColor: '#229954',\r\n    //   cancelButtonColor: '#d33',\r\n    //   confirmButtonText: 'Yes, delete it!'\r\n    // }).then((result) => {\r\n    //   if (result.isConfirmed) {\r\n    //     Swal.fire(\r\n    //       'Deleted!',\r\n    //       'Your data has been deleted.',\r\n    //       'success'\r\n    //     )\r\n    //   } else if (\r\n    //     result.dismiss === Swal.DismissReason.cancel\r\n    //   ) {\r\n    //     Swal.fire(\r\n    //       'Cancelled',\r\n    //       'Your data is safe.',\r\n    //       'error'\r\n    //     )\r\n    //   }\r\n    // })\r\n  }\r\n}\r\n\r\n","<!-- Dividend Calculation -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Dividend Calculation</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Code<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"SchemeCode\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\"\r\n                                        (change)=\"getAccountList(); getShareDividend($event)\"\r\n                                        title=\"Compulsory Selection\" required placeholder=\"Scheme Code\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_AC\">Member From<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"FROM_AC\" bindValue=\"AC_NO\" [(ngModel)]=\"ngfromac\"\r\n                                        formControlName=\"FROM_AC\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\r\n                                        placeholder=\"From Account\">\r\n                                        <ng-option *ngFor=\"let values of fromAC\" [value]=\"values\">\r\n                                            {{values.AC_NO}} {{values.AC_NAME}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['FROM_AC'].invalid && (angForm.controls['FROM_AC'].dirty || angForm.controls['FROM_AC'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['FROM_AC'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_AC\">Member To<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"TO_AC\" bindValue=\"AC_NO\" [(ngModel)]=\"ngtoac\" formControlName=\"TO_AC\"\r\n                                        bindLabel=\"label\" title=\"Compulsory Selection\" (change)=\"getAccNumbers()\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"To Account\">\r\n                                        <ng-option *ngFor=\"let values of ToAC\" [value]=\"values\">\r\n                                            {{values.AC_NO}} {{values.AC_NAME}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['TO_AC'].invalid && (angForm.controls['TO_AC'].dirty || angForm.controls['TO_AC'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TO_AC'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"DIV_FROMDATE\">Div.Date From<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"DIV_FROMDATE\" id=\"DIV_FROMDATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"divfromdate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"DIV_FROMDATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        (bsValueChange)=\"getDivTOYear()\" bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['DIV_FROMDATE'].invalid && (angForm.controls['DIV_FROMDATE'].dirty || angForm.controls['DIV_FROMDATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['DIV_FROMDATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"DIV_TODATE\">Div.Date To<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"DIV_TODATE\" id=\"DIV_TODATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"divtodate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"DIV_TODATE\"\r\n                                        (bsValueChange)=\"checkDivYear()\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['DIV_TODATE'].invalid && (angForm.controls['DIV_TODATE'].dirty || angForm.controls['DIV_TODATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['DIV_TODATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"WARRENT_DATE\">Warrent Date<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"WARRENT_DATE\" id=\"WARRENT_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"warrentdate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"minDate\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"WARRENT_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['WARRENT_DATE'].invalid && (angForm.controls['WARRENT_DATE'].dirty || angForm.controls['WARRENT_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['WARRENT_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"Dividend\">Dividend %<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"Dividend\" style=\"text-align: right;\" class=\"form-control\"\r\n                                        placeholder=\" \" id=\"Dividend\" required=\"\" value=\" \" pattern=\"\\d{1,5}(\\.\\d{2})?\"\r\n                                        #INT (focus)=\"selectAllContent($event)\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\"\r\n                                        title=\"Input allowed only 0-9\" formControlName=\"Dividend\"\r\n                                        (keyup)=\"checkInt(INT.value)\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Dividend'].invalid && (angForm.controls['Dividend'].dirty || angForm.controls['Dividend'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['Dividend'].errors?.required\">\r\n                                    This field is required and input allowed only . 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"Bonus\">Bonus %<sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"Bonus\" style=\"text-align: right;\" class=\"form-control\"\r\n                                        placeholder=\" \" id=\"Bonus\" value=\" \" pattern=\"\\d{1,5}(\\.\\d{2})?\"\r\n                                        title=\"Input allowed only 0-9\" #Bonus (focus)=\"selectAllContent($event)\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\"\r\n                                        formControlName=\"Bonus\" (keyup)=\"checkBonus(Bonus.value)\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Bonus'].invalid && (angForm.controls['Bonus'].dirty || angForm.controls['Bonus'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['Bonus'].errors?.required\">\r\n                                    This field is required and input allowed only . 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm\">\r\n                        <button class=\"btn btn-outline-primary btn-sm\" [disabled]=\"angForm.invalid\">Calculate</button>\r\n                        <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\"\r\n                            *ngIf=\"updateShow\">Update</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card shadow\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\"\r\n                                [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover compact\">\r\n                                <tbody *ngIf=\"dividendcalculation?.length != 0\">\r\n                                    <tr *ngFor=\"let data of dividendcalculation\">\r\n                                        <td>\r\n                                            <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\"\r\n                                                (click)=\"editClickHandler(data.id)\" placement=\"bottom\"\r\n                                                ngbTooltip=\"Edit\"></span>\r\n                                            &nbsp;\r\n\r\n                                        </td>\r\n                                        <td>{{ data.AC_TYPE }}</td>\r\n                                        <td>{{ data.FROM_AC }}</td>\r\n                                        <td>{{ data.TO_AC }}</td>\r\n                                        <td>{{ data.DIV_FROMDATE }}</td>\r\n                                        <td>{{ data.DIV_TODATE }}</td>\r\n                                        <td>{{ data.WARRENT_DATE }}</td>\r\n                                        <td>{{ data.Dividend }}</td>\r\n                                        <td>{{ data.Bonus }}</td>\r\n\r\n\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"dividendcalculation?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot #filters class=\"filters\">\r\n                                    <tr class=\"testing\">\r\n                                        <th class=\"testing\"></th>\r\n\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_TYPE\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"FROM_AC\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"TO_AC\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"DIV_FROMDATE\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"DIV_TODATE\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"WARRENT_DATE\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"Dividend\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"Bonus\" /></th>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { DividendCalculationRoutingModule } from './dividend-calculation-routing.module';\r\nimport { DividendCalculationComponent } from './dividend-calculation.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SchemeCodeService } from '../../../../shared/elements/scheme-code.service';\r\nimport { SchemeAccountNoService } from '../../../../shared/dropdownService/schemeAccountNo.service'\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service'\r\nimport { MembernoService } from '../../../../shared/elements/memberno.service';\r\nimport { BranchService } from '../../../../shared/elements/branch.service';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n// import { SelectModule } from 'ng-select';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DividendCalculationService } from './dividend-calculation.service'\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DividendCalculationRoutingModule,\r\n    DataTablesModule,\r\n    NgbModule,\r\n    // SelectModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot()\r\n  ],\r\n  declarations: [DividendCalculationComponent],\r\n  providers: [SchemeCodeService, SchemeAccountNoService, SchemeCodeDropdownService, MembernoService, BranchService,\r\n    DatePipe, DividendCalculationService, {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UserAuthInterceptor,\r\n      multi: true\r\n    },\r\n\r\n  ]\r\n\r\n})\r\nexport class DividendCalculationModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class DividendCalculationService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/dividend-calculation/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data !');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/dividend-calculation/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/dividend-calculation/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/dividend-calculation/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}"],"sourceRoot":"webpack:///"}