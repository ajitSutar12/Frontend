{"version":3,"sources":["./src/app/theme/master/customer/dead-stock-master/dead-stock-master-routing.module.ts","./src/app/theme/master/customer/dead-stock-master/dead-stock-master.component.ts","./src/app/theme/master/customer/dead-stock-master/dead-stock-master.component.html","./src/app/theme/master/customer/dead-stock-master/dead-stock-master.module.ts"],"names":[],"mappings":"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","file":"dead-stock-master-dead-stock-master-module.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { DeadStockMasterComponent } from './dead-stock-master.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  DeadStockMasterComponent,\r\n    data: {\r\n      title: 'Dead Stock Master',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class  DeadStockMasterRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-dead-stock-master',\n  templateUrl: './dead-stock-master.component.html',\n  styleUrls: ['./dead-stock-master.component.scss']\n})\nexport class DeadStockMasterComponent implements OnInit {\n  angForm: FormGroup;\n\n  dtExportButtonOptions: any = {};\n\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  message = {\n    ItemType: \" \",\n    ItemCode: \" \",\n    ItemName: \" \",\n    PurchaseDate: \"\",\n    DeprCategory: \" \",\n    OpBalanceDate: \"\",\n    SupplierName: \" \",\n    PurchaseRate: \" \",\n    PurchaseQty: \" \",\n    PurchaseValue: \" \",\n    OpeningAmount: \" \",\n    Quantity: \" \",\n    LastDepreciationDate: \"\",\n    GLACNo: \" \",\n    TotalRecords: \" \"\n  };\n\n  constructor(private fb: FormBuilder) { this.createForm(); }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/dead-stock-master.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\"id=\"editbtn\">Edit</button>' + ' ' + '<button  id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Item Type',\n          data: 'ItemType'\n        }, {\n          title: 'Item Code',\n          data: 'ItemCode'\n        }, {\n          title: 'Item Name',\n          data: 'ItemName'\n        },\n        {\n          title: 'Purchase Date',\n          data: 'PurchaseDate'\n        }, {\n          title: 'Depr Category',\n          data: 'DeprCategory'\n        },\n        {\n          title: 'Op.Balance Date',\n          data: 'OpBalanceDate'\n        }, {\n          title: 'SupplierName',\n          data: 'SupplierName'\n        }, {\n          title: 'Purchase Rate',\n          data: 'PurchaseRate'\n        },\n        {\n          title: 'Purchase Qty',\n          data: 'PurchaseQty'\n        },\n        {\n          title: 'Purchase Value',\n          data: 'PurchaseValue'\n        },\n        {\n          title: 'Opening Amount',\n          data: 'OpeningAmount'\n        },\n        {\n          title: 'Quantity',\n          data: 'Quantity'\n        },\n        {\n          title: 'Last Depreciation Date',\n          data: 'LastDepreciationDate'\n        },\n        {\n          title: 'GL A/C No',\n          data: 'GLACNo'\n        },\n        {\n          title: 'Total Records',\n          data: 'TotalRecords'\n        },],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      ItemType: ['', [Validators.required, Validators.pattern]],\n      ItemCode: [''],\n      ItemName: ['', [Validators.required, Validators.pattern]],\n      DeprCategory: ['', [Validators.required, Validators.pattern]],\n      PurchaseDate: ['', [Validators.required]],\n      SupplierName: ['', [Validators.pattern]],\n      PurchaseRate: ['', [Validators.pattern]],\n      PurchaseQty: ['', [Validators.pattern]],\n      PurchaseValue: ['', [Validators.pattern]],\n      OpeningAmount: ['', [Validators.pattern]],\n      Quantity: ['', [Validators.pattern]],\n      LastDepreciationDate: ['', [Validators.required]],\n      GLACNo: ['', [Validators.required]],\n      TotalRecords: [''],\n      OpBalanceDate: [''],\n    });\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  /**\n* @editClickHandler function for edit button clicked\n*/\n  editClickHandler(info: any): void {\n    this.message.ItemType = info.ItemType;\n    this.message.ItemCode = info.ItemCode;\n    this.message.ItemName = info.ItemName;\n    this.message.PurchaseDate = info.PurchaseDate;\n    this.message.DeprCategory = info.DeprCategory;\n    this.message.OpBalanceDate = info.OpBalanceDate;\n    this.message.SupplierName = info.SupplierName;\n    this.message.PurchaseRate = info.PurchaseRate;\n    this.message.PurchaseQty = info.PurchaseQty;\n    this.message.PurchaseValue = info.PurchaseValue;\n    this.message.OpeningAmount = info.OpeningAmount;\n    this.message.Quantity = info.Quantity;\n    this.message.LastDepreciationDate = info.LastDepreciationDate;\n    this.message.GLACNo = info.GLACNo;\n    this.message.TotalRecords = info.TotalRecords;\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  /**\n  * @updateData function for update data \n  */\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n    // this.form.reset();\n  }\n\n  /**\n  * @delClickHandler function for delete button \n    @Swal sweetalert2\n    @Swal.fire open a modal window to display message\n  */\n  delClickHandler(info: any): void {\n    this.message.ItemType = info.ItemType;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete ItemType.\" + this.message.ItemType + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      /* run code if our result  isConfirmed function Swal.fire open a modal window to display message\n      else if result is dismiss then it cancel and open a modal window to display cancel message\n       */\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Dead Stock Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <div class=\"card-block\">\n                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Name\" class=\"form-control\" placeholder=\" \" id=\"ItemType\"\n                                        required=\"\" value=\"{{ message.ItemType }}\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"ItemType\">\n                                    <label for=\"ItemType\">Item Type<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['ItemType'].invalid && (angForm.controls['ItemType'].dirty || angForm.controls['ItemType'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['ItemType'].errors?.pattern || angForm.controls['ItemType'].errors?.required\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"ItemCode\" class=\"form-control\" placeholder=\" \"\n                                        id=\"ItemCode\" value=\"{{ message.ItemCode }}\" formControlName=\"ItemCode\">\n                                    <label for=\"ItemCode\">Item Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Name\" class=\"form-control\" placeholder=\" \" id=\"ItemName\"\n                                        required=\"\" value=\"{{ message.ItemName }}\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"ItemName\">\n                                    <label for=\"ItemName\">Item Name<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['ItemName'].invalid && (angForm.controls['ItemName'].dirty || angForm.controls['ItemName'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['ItemName'].errors?.pattern || angForm.controls['ItemName'].errors?.required\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"PurchaseDate\" class=\"form-control\" placeholder=\" \"\n                                        id=\"PurchaseDate\" required=\"\" value=\"{{ message.PurchaseDate }}\"\n                                        max=\"9999-12-31\" onfocus=\"(this.type='date')\" formControlName=\"PurchaseDate\">\n                                    <label for=\"PurchaseDate\">Purchase Date<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['PurchaseDate'].invalid && (angForm.controls['PurchaseDate'].dirty || angForm.controls['PurchaseDate'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['PurchaseDate'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Scheme\" class=\"form-control\" placeholder=\" \"\n                                        id=\"DeprCategory\" required=\"\" value=\"{{ message.DeprCategory }}\"\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"DeprCategory\">\n                                    <label for=\"DeprCategory\">Depr. Category<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['DeprCategory'].invalid && (angForm.controls['DeprCategory'].dirty || angForm.controls['DeprCategory'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['DeprCategory'].errors?.pattern || angForm.controls['DeprCategory'].errors?.required\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"OpBalanceDate\" class=\"form-control\" placeholder=\" \"\n                                        id=\"OpBalanceDate\" value=\"{{ message.OpBalanceDate }}\" max=\"9999-12-31\"\n                                        onfocus=\"(this.type='date')\" formControlName=\"OpBalanceDate\">\n                                    <label for=\"OpBalanceDate\">Op. Balance Date</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <h6 style=\"text-align: center;font-size: 16px;\">--------- Opening Status ---------</h6>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <label> </label>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Name\" class=\"form-control\" placeholder=\" \"\n                                        id=\"SupplierName\" value=\"{{ message.SupplierName }}\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                        formControlName=\"SupplierName\">\n                                    <label for=\"SupplierName\">Supplier Name</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['SupplierName'].invalid && (angForm.controls['SupplierName'].dirty || angForm.controls['SupplierName'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['SupplierName'].errors?.pattern\">\n                                    Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Account\" class=\"form-control\" placeholder=\" \"\n                                        id=\"PurchaseRate\" value=\"{{ message.PurchaseRate }}\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"PurchaseRate\">\n                                    <label for=\"PurchaseRate\">Purchase Rate</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['PurchaseRate'].invalid && (angForm.controls['PurchaseRate'].dirty || angForm.controls['PurchaseRate'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['PurchaseRate'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Account\" class=\"form-control\" placeholder=\" \"\n                                        id=\"PurchaseQty\" value=\"{{ message.PurchaseQty }}\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"PurchaseQty\">\n                                    <label for=\"PurchaseQty\">Purchase Qty</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['PurchaseQty'].invalid && (angForm.controls['PurchaseQty'].dirty || angForm.controls['PurchaseQty'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['PurchaseQty'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Account\" class=\"form-control\" placeholder=\" \"\n                                        id=\"PurchaseValue\" value=\"{{ message.PurchaseValue }}\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"PurchaseValue\">\n                                    <label for=\"PurchaseValue\">Purchase Value</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['PurchaseValue'].invalid && (angForm.controls['PurchaseValue'].dirty || angForm.controls['PurchaseValue'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['PurchaseValue'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Account\" class=\"form-control\" placeholder=\" \"\n                                        id=\"OpeningAmount\" value=\"{{ message.OpeningAmount }}\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"OpeningAmount\">\n                                    <label for=\"OpeningAmount\">Opening Amount</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['OpeningAmount'].invalid && (angForm.controls['OpeningAmount'].dirty || angForm.controls['OpeningAmount'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['OpeningAmount'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Account\" class=\"form-control\" placeholder=\" \" id=\"Quantity\"\n                                        value=\"{{ message.Quantity }}\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"Quantity\">\n                                    <label for=\"Quantity\">Quantity</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Quantity'].invalid && (angForm.controls['Quantity'].dirty || angForm.controls['Quantity'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['Quantity'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Birth_Date\" class=\"form-control\" placeholder=\" \"\n                                        id=\"LastDepreciationDate\" value=\"{{ message.LastDepreciationDate }}\"\n                                        max=\"9999-12-31\" onfocus=\"(this.type='date')\"\n                                        formControlName=\"LastDepreciationDate\">\n                                    <label for=\"LastDepreciationDate\">Last Depreciation Date*</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['LastDepreciationDate'].invalid && (angForm.controls['LastDepreciationDate'].dirty || angForm.controls['LastDepreciationDate'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['LastDepreciationDate'].errors?.required\">\n                                    This is required field\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Scheme\" class=\"form-control\" placeholder=\" \" id=\"GLACNo\"\n                                        required=\"\" value=\"{{ message.GLACNo }}\" formControlName=\"GLACNo\">\n                                    <label for=\"GLACNo\">GL A/C No<sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['GLACNo'].invalid && (angForm.controls['GLACNo'].dirty || angForm.controls['GLACNo'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['GLACNo'].errors?.required\">\n                                    This is required field\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Scheme\" class=\"form-control\" placeholder=\" \"\n                                        id=\"TotalRecords\" value=\"{{ message.TotalRecords }}\"\n                                        formControlName=\"TotalRecords\">\n                                    <label for=\"TotalRecords\">Total Records</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-sm\">\n                        <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                        <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DeadStockMasterRoutingModule } from './dead-stock-master-routing.module';\r\nimport { DeadStockMasterComponent } from './dead-stock-master.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DeadStockMasterRoutingModule,\r\n    DataTablesModule,\r\n    NgbModule,\r\n    FormsModule, ReactiveFormsModule\r\n  ],\r\n  declarations: [DeadStockMasterComponent]\r\n})\r\nexport class DeadStockMasterModule { }"],"sourceRoot":"webpack:///"}