{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/elements/a1.service.ts","./src/app/shared/elements/a2.service.ts","./src/app/shared/elements/cat.service.ts","./src/app/shared/elements/city1.service.ts","./src/app/shared/elements/city2.service.ts","./src/app/shared/elements/city3.service.ts","./src/app/shared/elements/member-type.service.ts","./src/app/shared/elements/sal1.service.ts","./src/app/shared/elements/sal2.service.ts","./src/app/shared/elements/sign-type.service.ts","./src/app/theme/master/customer/shares-master/shares-master-routing.module.ts","./src/app/theme/master/customer/shares-master/shares-master.component.ts","./src/app/theme/master/customer/shares-master/shares-master.component.html","./src/app/theme/master/customer/shares-master/shares-master.module.ts"],"names":[],"mappings":"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","file":"shares-master-shares-master-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class A1Service {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '1' },\r\n        { value: '1', label: '2' },\r\n        { value: '2', label: '3' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(A1Service.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(A1Service.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(A1Service.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class A2Service {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '1' },\r\n        { value: '1', label: '2' },\r\n        { value: '2', label: '3' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(A2Service.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(A2Service.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(A2Service.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class CatService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: 'ac' },\r\n        { value: '1', label: 'ba' },\r\n        { value: '2', label: 'cc' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(CatService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(CatService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(CatService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class City1Service {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: 'Pune' },\r\n        { value: '1', label: 'Kolhapur' },\r\n        { value: '2', label: 'Mumbai' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(City1Service.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(City1Service.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(City1Service.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class City2Service {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: 'Pune' },\r\n        { value: '1', label: 'Kolhapur' },\r\n        { value: '2', label: 'Mumbai' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(City2Service.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(City2Service.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(City2Service.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class City3Service {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: 'Pune' },\r\n        { value: '1', label: 'Kolhapur' },\r\n        { value: '2', label: 'Mumbai' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(City3Service.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(City3Service.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(City3Service.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class MemberTypeService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Direct'},\r\n    {value: '1', label: 'Transfer'}\r\n  ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(MemberTypeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(MemberTypeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(MemberTypeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class Sal1Service {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '122' },\r\n        { value: '1', label: '4545' },\r\n        { value: '2', label: '54544' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(Sal1Service.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(Sal1Service.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(Sal1Service.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class Sal2Service {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '122' },\r\n        { value: '1', label: '4545' },\r\n        { value: '2', label: '54544' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(Sal2Service.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(Sal2Service.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(Sal2Service.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class SignTypeService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Angatha'},\r\n    {value: '1', label: 'Short English'},\r\n    {value: '2', label: 'Full English'},\r\n    {value: '3', label: 'Short Marathi'},\r\n    {value: '4', label: 'Full Marathi'}\r\n    ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(SignTypeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(SignTypeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(SignTypeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { SharesMasterComponent } from './shares-master.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  SharesMasterComponent,\r\n    data: {\r\n      title: 'Shares Master',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SharesMasterRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { StatementTypeService } from '../../../../shared/elements/statment-type.service';\nimport { MemberTypeService } from '../../../../shared/elements/member-type.service';\nimport { A1Service } from '../../../../shared/elements/a1.service';\nimport { SignTypeService } from '../../../../shared/elements/sign-type.service';\nimport { A2Service } from '../../../../shared/elements/a2.service';\nimport { CatService } from '../../../../shared/elements/cat.service';\nimport { City1Service } from '../../../../shared/elements/city1.service';\nimport { City2Service } from '../../../../shared/elements/city2.service';\nimport { Sal1Service } from '../../../../shared/elements/sal1.service';\nimport { Sal2Service } from '../../../../shared/elements/sal2.service';\nimport { City3Service } from '../../../../shared/elements/city3.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { valHooks } from 'jquery';\n\n@Component({\n  selector: 'app-shares-master',\n  templateUrl: './shares-master.component.html',\n  styleUrls: ['./shares-master.component.scss'],\n\n  animations: [\n    trigger('fadeInOutTranslate', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('400ms ease-in-out', style({ opacity: 1 }))\n      ]),\n      transition(':leave', [\n        style({ transform: 'translate(0)' }),\n        animate('400ms ease-in-out', style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class SharesMasterComponent implements OnInit {\n\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n  dtExportButtonOptions1: any = {};\n  dtExportButtonOptions2: any = {};\n  recovery: boolean = false;\n  GuarantorTrue: boolean = false;\n  //Title\n  simpleOption: Array<IOption> = this.StatementTypeService.getCharacters();\n  a: Array<IOption> = this.A1Service.getCharacters();\n  b: Array<IOption> = this.A2Service.getCharacters();\n  c: Array<IOption> = this.CatService.getCharacters();\n  d: Array<IOption> = this.City1Service.getCharacters();\n  e: Array<IOption> = this.City2Service.getCharacters();\n  f: Array<IOption> = this.Sal1Service.getCharacters();\n\n  g: Array<IOption> = this.Sal2Service.getCharacters();\n  h: Array<IOption> = this.City3Service.getCharacters();\n\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n  //Member-type\n  simpleOption1: Array<IOption> = this.MemberTypeService.getCharacters();\n  selectedOption1 = '3';\n  isDisabled1 = true;\n  characters1: Array<IOption>;\n  selectedCharacter1 = '3';\n  timeLeft1 = 5;\n  private dataSub1: Subscription = null;\n  //Sign-type\n  simpleOption2: Array<IOption> = this.SignTypeService.getCharacters();\n  selectedOption2 = '3';\n  isDisabled2 = true;\n  characters2: Array<IOption>;\n  selectedCharacter2 = '3';\n  timeLeft2 = 5;\n  private dataSub2: Subscription = null;\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  constructor(public City3Service: City3Service, public Sal2Service: Sal2Service, public Sal1Service: Sal1Service, public City2Service: City2Service, public City1Service: City1Service, public CatService: CatService, public A2Service: A2Service, public A1Service: A1Service, public StatementTypeService: StatementTypeService, public MemberTypeService: MemberTypeService, public SignTypeService: SignTypeService, private fb: FormBuilder) { this.createForm(); }\n  message = {\n    title: \"\",\n    scheme: \"\",\n    Member_no: \"\",\n    Customer_id: \"\",\n    Customer_name: \"\",\n    Category: \"\",\n    Employee_no: \"\",\n    recovery: \"\",\n    relation: \"\",\n    birthDate: \"\",\n    JoiningDate: \"\",\n    City: \"\",\n    RepresentBy: \"\",\n    House: \"\",\n    Ward: \"\",\n    Detail: \"\",\n    Galli: \"\",\n    Area: \"\",\n    PinCode: \"\",\n    TempGalli: \"\",\n    TempCity: \"\",\n    RetirementDate: \"\",\n    Age: \"\",\n    Signtype: \"\",\n    MembershipType: \"\",\n    TempHouse: \"\",\n    TempWard: \"\",\n    TempDetail: \"\",\n    TempArea: \"\",\n    TempPinCode: \"\",\n    TelePh: \"\",\n    R: \"\",\n    TotalRecords: \"\",\n    customer_email: \"\",\n    Customer_mobile: \"\",\n    OpenDate: \"\",\n    ExpiryDate: \"\",\n    DeathDate: \"\",\n    Customer_Cast: \"\",\n    Customer_Occupation: \"\",\n    Customer_Director: \"\",\n    Sub_Sal_Div: \"\",\n    Customer_Bank_AC: \"\",\n    ResoNo: \"\",\n    Installment: \"\",\n  };\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/customer.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        }, {\n          title: 'Scheme',\n          data: 'Member_scheme'\n        }, {\n          title: 'Member No',\n          data: 'Member_no'\n        }, {\n          title: 'Customer ID',\n          data: 'Customer_id'\n        }, {\n          title: 'Title',\n          data: 'title'\n        }, {\n          title: 'Name',\n          data: 'Customer_name'\n        },\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n\n    this.dtExportButtonOptions2 = {\n      ajax: 'fake-data/documents.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        }, {\n          title: 'Code',\n          data: 'Code'\n        }, {\n          title: 'Description',\n          data: 'Description'\n        }, {\n          title: 'IsAccepted',\n          data: 'IsAccepted'\n        }\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n    this.dtExportButtonOptions1 = {\n      ajax: 'fake-data/customer.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Name',\n          data: 'Customer_name'\n        }, {\n          title: 'Relation',\n          data: 'relation'\n        }, {\n          title: 'Age',\n          data: 'age'\n        }, {\n          title: 'Nomination Date',\n          data: 'birthDate'\n        }, {\n          title: 'Address',\n          data: 'Customer_address'\n        }, {\n          title: 'Address',\n          data: 'Customer_address'\n        }, {\n          title: 'Address',\n          data: 'Customer_address'\n        }, {\n          title: 'City',\n          data: 'Customer_city'\n        }, {\n          title: 'Pin Code',\n          data: 'Customer_pin_code'\n        },\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n    this.runTimer();\n    this.dataSub = this.StatementTypeService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.A1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.A2Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.CatService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.City1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.City2Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.Sal1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n\n    this.dataSub = this.Sal2Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.City3Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n  \n  createForm() {\n    this.angForm = this.fb.group({\n\n      scheme: ['', [Validators.required]],\n      Member_no: [''],\n      Customer_id: ['', [Validators.pattern]],\n      title: ['', [Validators.required]],\n      Customer_name: ['', [Validators.pattern]],\n\n      Category: ['', [Validators.required]],\n      Employee_no: ['', [Validators.pattern]],\n      birthDate: [''],\n      JoiningDate: [''],\n      RetirementDate: [''],\n      Age: ['', [Validators.pattern]],\n      Signtype: ['', [Validators.required]],\n      RepresentBy: ['', [Validators.pattern]],\n      MembershipType: ['', [Validators.required]],\n      House: ['', [Validators.pattern]],\n      Ward: ['', [Validators.pattern]],\n      Galli: ['', [Validators.pattern]],\n      Detail: ['', [Validators.pattern]],\n      City: [''],\n      Area: ['', [Validators.pattern]],\n      PinCode: ['', [Validators.pattern]],\n      TempHouse: ['', [Validators.pattern]],\n      TempWard: ['', [Validators.pattern]],\n      TempGalli: ['', [Validators.pattern]],\n      TempDetail: ['', [Validators.pattern]],\n      TempCity: ['', [Validators.pattern]],\n      TempArea: ['', [Validators.pattern]],\n      TempPinCode: ['', [Validators.pattern]],\n      TelePh: ['', [Validators.pattern]],\n      R: ['', [Validators.pattern]],\n      TotalRecords: ['', [Validators.pattern]],\n      customer_email: ['', [Validators.pattern]],\n      Customer_mobile: ['', [Validators.pattern]],\n      OpenDate: ['', [Validators.required]],\n      ExpiryDate: [''],\n      DeathDate: [''],\n      cast: ['', [Validators.required]],\n      Customer_Occupation: ['', [Validators.required]],\n      Customer_Director: ['', [Validators.required]],\n      Sub_Sal_Div: [''],\n      Sal_Div: [''],\n      Customer_Bank_AC: ['', [Validators.pattern]],\n      ResoNo: ['', [Validators.pattern, Validators.required]],\n      ResolDate:['',[Validators.required]],\n      Installment: ['', [Validators.pattern]],\n      ManualReferanceMember: ['', [Validators.pattern]],\n      Reason_Remarks: ['', [Validators.pattern]],\n      Customer_Branch: ['', [Validators.required]],\n      NomiName:['',[Validators.pattern,Validators.required]],\n      Relation: ['', [Validators.pattern, Validators.required]],\n      NominationDate: ['', [Validators.required]],\n      Nomi_age: [''],\n      Nomi_Address: ['', [Validators.pattern]],\n      Nomi_Address1: ['', [Validators.pattern]],\n      Nomi_Address2: ['', [Validators.pattern]],\n      City1: ['', [Validators.required]],\n      Customer_pin_code1: ['', [Validators.pattern]],\n      SharesUpToDate:[''],\n      TotalShares:['',[Validators.pattern]],\n      FaceValue:['',[Validators.pattern]],\n      TotalAmount:['',[Validators.pattern]],\n      MarathiName:['',[Validators.pattern]],\n      MarathiWard:['',[Validators.pattern]],\n      Marathiaddress:['',[Validators.pattern]],\n      MarathiGalli:['',[Validators.pattern]],\n      MarathiArea:['',[Validators.pattern]],\n      MarathiCity:[''],\n\n    });\n  }\n  submit() {\n    console.log(this.angForm.valid);\n\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  \n  OpenLink(val) {\n    if (val == 1) {\n      this.GuarantorTrue = true;\n    }\n  }\n\n  //function for edit button clicked\n  editClickHandler(info: any): void {\n    this.message.scheme = info.scheme;\n    this.message.Member_no = info.Member_no;\n    this.message.Customer_id = info.Customer_id;\n    this.message.Customer_name = info.Customer_name;\n    this.message.recovery = info.recovery;\n    this.message.title = info.title;\n    this.message.relation = info.relation;\n    this.message.birthDate = info.birthDate;\n    this.message.Age = info.Age;\n    this.showButton = false;\n    this.updateShow = true;\n\n    if (this.message.recovery == \"Yes\") {\n      this.recovery = true;   //return boolean value and display checked checkbox\n    }\n    else {\n      this.recovery = false;   //return boolean value and display unchecked checkbox\n    }\n  }\n\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n  }\n  \n  //function for delete button clicked\n  delClickHandler(info: any): void {\n    this.message.scheme = info.scheme;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Member scheme.\" + this.message.scheme + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n}","<!-- Master Shares Holders -->\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Master Shares Holders</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <div class=\"card-block\">\n                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\" placeholder=\"Scheme *\" required title=\"Compulsory Selection\" formControlName=\"scheme\">\n                                </ng-select>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['scheme'].invalid && (angForm.controls['scheme'].dirty || angForm.controls['scheme'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['scheme'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\" placeholder=\"Member No \" required title=\"Compulsory Selection\" formControlName=\"Member_no\">\n                                    </ng-select>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\" placeholder=\"Customer Id *\" required title=\"Compulsory Selection\" formControlName=\"Customer_id\">\n                                </ng-select>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Customer_id'].invalid && (angForm.controls['Customer_id'].dirty || angForm.controls['Customer_id'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['Customer_id'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"c\" [multiple]=\"false\" placeholder=\"Title *\" required title=\"Compulsory Selection\" formControlName=\"title\">\n                                </ng-select>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['title'].invalid && (angForm.controls['title'].dirty || angForm.controls['title'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['title'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Customer_name\" class=\"form-control\" placeholder=\" \"\n                                        id=\"Customer_name\" required=\"\" value=\"{{ message.Customer_name }}\"\n                                        pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                        formControlName=\"Customer_name\">\n                                    <label for=\"Customer_name\">Name<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Customer_name'].invalid && (angForm.controls['Customer_name'].dirty || angForm.controls['Customer_name'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['Customer_name'].errors?.pattern || angForm.controls['Customer_name'].errors?.required\">\n                                    Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"card-block\">\n                                <ngb-tabset>\n                                    <ngb-tab title=\"1.Basic \">\n                                        <ng-template ngbTabContent>\n                                            <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group form-primary form-static-label\">\n                                                            <ng-select [ngClass]=\"'ng-select'\" [options]=\"c\" [multiple]=\"false\" placeholder=\"Category *\" required title=\"Compulsory Selection\" formControlName=\"Category\">\n                                                            </ng-select>\n                                                            <label>{{ message.Category }}</label>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Category'].invalid && (angForm.controls['Category'].dirty || angForm.controls['Category'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Category'].errors?.required\">\n                                                                This field is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"Employee_no\"\n                                                                    class=\"form-control\" placeholder=\" \"\n                                                                    id=\"Employee_no\" value=\"{{ message.Employee_no }}\"\n                                                                    pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                                                    formControlName=\"Employee_no\">\n                                                                <label for=\"Employee_no\">Employee No.</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Employee_no'].invalid && (angForm.controls['Employee_no'].dirty || angForm.controls['Employee_no'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Employee_no'].errors?.pattern\">\n                                                                Input allowed only 0-9\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"birthDate\" class=\"form-control\"\n                                                                    placeholder=\" \" id=\"birthDate\"\n                                                                    value=\"{{ message.birthDate }}\" max=\"31-12-9999\"\n                                                                    id=\"date\" onfocus=\"(this.type='date')\"\n                                                                    formControlName=\"birthDate\">\n                                                                <label for=\"birthDate\">Birth Date</label>\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"JoiningDate\"\n                                                                    class=\"form-control\" placeholder=\" \"\n                                                                    id=\"JoiningDate\" value=\"{{ message.JoiningDate }}\"\n                                                                    max=\"9999-12-31\" onfocus=\"(this.type='date')\"\n                                                                    formControlName=\"JoiningDate\">\n                                                                <label for=\"JoiningDate\">Joining Date</label>\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"RetirementDate\"\n                                                                    class=\"form-control\" placeholder=\" \"\n                                                                    id=\"RetirementDate\"\n                                                                    value=\"{{ message.RetirementDate }}\"\n                                                                    max=\"9999-12-31\" onfocus=\"(this.type='date')\"\n                                                                    formControlName=\"RetirementDate\">\n                                                                <label for=\"RetirementDate\">Retirement Date</label>\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"Age\" class=\"form-control\"\n                                                                    placeholder=\" \" id=\"Age\" value=\"{{ message.Age }}\"\n                                                                    pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                                                    formControlName=\"Age\">\n                                                                <label for=\"Age\">Age</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Age'].invalid && (angForm.controls['Age'].dirty || angForm.controls['Age'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Age'].errors?.pattern\">\n                                                                Input allowed only 0-9\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group form-primary form-static-label\">\n                                                            <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption1\" [multiple]=\"false\" placeholder=\"Membership Type *\" title=\"Compulsory Selection\" formControlName=\"MembershipType\">\n                                                            </ng-select>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['MembershipType'].invalid && (angForm.controls['MembershipType'].dirty || angForm.controls['MembershipType'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['MembershipType'].errors?.required\">\n                                                                This field is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group form-primary form-static-label\">\n                                                            <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption2\" [multiple]=\"false\" placeholder=\"Sign type *\" title=\"Compulsory Selection\" formControlName=\"Signtype\">\n                                                            </ng-select>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Signtype'].invalid && (angForm.controls['Signtype'].dirty || angForm.controls['Signtype'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Signtype'].errors?.required\">\n                                                                This field is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"RepresentBy\"\n                                                                    class=\"form-control\" placeholder=\" \"\n                                                                    id=\"RepresentBy\" value=\"{{ message.RepresentBy }}\"\n                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                    formControlName=\"RepresentBy\">\n                                                                <label for=\"RepresentBy\">Represent By</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['RepresentBy'].invalid && (angForm.controls['RepresentBy'].dirty || angForm.controls['RepresentBy'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['RepresentBy'].errors?.pattern\">\n                                                                Input allowed only A-Z a-z - / . (Space)\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm\">\n                                                        <h6 style=\"text-align: center;font-size: 16px;\">--------- Permanent Address ---------</h6>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"House\" class=\"form-control\"\n                                                                    placeholder=\" \" id=\"House\"\n                                                                    value=\"{{ message.House }}\"\n                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                    formControlName=\"House\">\n                                                                <label for=\"House\">House</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['House'].invalid && (angForm.controls['House'].dirty || angForm.controls['House'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['House'].errors?.pattern\">\n                                                                Input allowed only A-Z a-z - / . (Space)\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"Ward\" class=\"form-control\"\n                                                                    placeholder=\" \" id=\"Ward\" value=\"{{ message.Ward }}\"\n                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                    formControlName=\"Ward\">\n                                                                <label for=\"Ward\">Ward</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Ward'].invalid && (angForm.controls['Ward'].dirty || angForm.controls['Ward'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Ward'].errors?.pattern\">\n                                                                Input allowed only A-Z a-z - / . (Space)\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <textarea type=\"text\" name=\"Detail\" class=\"form-control\"\n                                                                    placeholder=\" \" pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                    id=\"Detail\" value=\"{{ message.Detail }}\"\n                                                                    formControlName=\"Detail\"></textarea>\n                                                                <label for=\"Detail\">Detail</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Detail'].invalid && (angForm.controls['Detail'].dirty || angForm.controls['Detail'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Detail'].errors?.pattern\">\n                                                                Input allowed only A-Z a-z - / . (Space)\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"Galli\" class=\"form-control\"\n                                                                    placeholder=\" \" id=\"Galli\"\n                                                                    value=\"{{ message.Galli }}\"\n                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                    formControlName=\"Galli\">\n                                                                <label for=\"Galli\">Galli</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Galli'].invalid && (angForm.controls['Galli'].dirty || angForm.controls['Galli'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Galli'].errors?.pattern\">\n                                                                Input allowed only A-Z a-z - / . (Space)\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm-4\">\n                                                        <div class=\"form-group form-primary form-static-label\">\n                                                            <ng-select [ngClass]=\"'ng-select'\" [options]=\"d\" [multiple]=\"false\" placeholder=\"City\" required title=\"Compulsory Selection\" formControlName=\"City\">\n                                                            </ng-select>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"Area\" class=\"form-control\"\n                                                                    placeholder=\" \" id=\"Area\" value=\"{{ message.Area }}\"\n                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                    formControlName=\"Area\">\n                                                                <label for=\"Area\">Area</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Area'].invalid && (angForm.controls['Area'].dirty || angForm.controls['Area'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Area'].errors?.pattern\">\n                                                                Input allowed only A-Z a-z - / . (Space)\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col-sm-4\">\n                                                    <div class=\"form-group input-group\">\n                                                        <span class=\"border-lable-flt\">\n                                                            <input type=\"text\" name=\"PinCode\" class=\"form-control\"\n                                                                placeholder=\" \" id=\"PinCode\"\n                                                                value=\"{{ message.PinCode }}\" pattern=\"^[0-9]+$\"\n                                                                title=\"Input allowed only  0-9\"\n                                                                formControlName=\"PinCode\">\n                                                            <label for=\"PinCode\">Pin Code</label>\n                                                        </span>\n                                                    </div>\n                                                    <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['PinCode'].invalid && (angForm.controls['PinCode'].dirty || angForm.controls['PinCode'].touched)\" class=\"alert alert-danger\">\n                                                        <div *ngIf=\"angForm.controls['PinCode'].errors?.pattern\">\n                                                            Input allowed only 0-9\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col-sm\">\n                                                    <h6 style=\"text-align: center;font-size: 16px;\">--------- Temporory Address ---------</h6>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col-md\">\n                                                    <div class=\"form-group input-group\">\n                                                        <span class=\"border-lable-flt\">\n                                                            <input type=\"text\" name=\"TempHouse\" class=\"form-control\"\n                                                                placeholder=\" \" id=\"TempHouse\"\n                                                                value=\"{{ message.TempHouse }}\"\n                                                                pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                formControlName=\"TempHouse\">\n                                                            <label for=\"TempHouse\">House</label>\n                                                        </span>\n                                                    </div>\n                                                    <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TempHouse'].invalid && (angForm.controls['TempHouse'].dirty || angForm.controls['TempHouse'].touched)\" class=\"alert alert-danger\">\n                                                        <div *ngIf=\"angForm.controls['TempHouse'].errors?.pattern\">\n                                                            Input allowed only A-Z a-z - / . (Space)\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-md\">\n                                                    <div class=\"form-group input-group\">\n                                                        <span class=\"border-lable-flt\">\n                                                            <input type=\"text\" name=\"TempWard\" class=\"form-control\"\n                                                                placeholder=\" \" id=\"TempWard\"\n                                                                value=\"{{ message.TempWard }}\"\n                                                                pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                formControlName=\"TempWard\">\n                                                            <label for=\"TempWard\">Ward</label>\n                                                        </span>\n                                                    </div>\n                                                    <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TempWard'].invalid && (angForm.controls['TempWard'].dirty || angForm.controls['TempWard'].touched)\" class=\"alert alert-danger\">\n                                                        <div *ngIf=\"angForm.controls['TempWard'].errors?.pattern\">\n                                                            Input allowed only A-Z a-z - / . (Space)\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-md\">\n                                                    <div class=\"form-group input-group\">\n                                                        <span class=\"border-lable-flt\">\n                                                            <textarea type=\"text\" name=\"TempDetail\" class=\"form-control\"\n                                                                placeholder=\" \" pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                id=\"TempDetail\" value=\"{{ message.TempDetail }}\"\n                                                                formControlName=\"TempDetail\"></textarea>\n                                                            <label for=\"TempDetail\">Detail</label>\n                                                        </span>\n                                                    </div>\n                                                    <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TempDetail'].invalid && (angForm.controls['TempDetail'].dirty || angForm.controls['TempDetail'].touched)\" class=\"alert alert-danger\">\n                                                        <div *ngIf=\"angForm.controls['TempDetail'].errors?.pattern\">\n                                                            Input allowed only A-Z a-z - / . (Space)\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col-md\">\n                                                    <div class=\"form-group input-group\">\n                                                        <span class=\"border-lable-flt\">\n                                                            <input type=\"text\" name=\"TempGalli\" class=\"form-control\"\n                                                                placeholder=\" \" id=\"TempGalli\"\n                                                                value=\"{{ message.TempGalli }}\"\n                                                                pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                formControlName=\"TempGalli\">\n                                                            <label for=\"TempGalli\">Galli</label>\n                                                        </span>\n                                                    </div>\n                                                    <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TempGalli'].invalid && (angForm.controls['TempGalli'].dirty || angForm.controls['TempGalli'].touched)\" class=\"alert alert-danger\">\n                                                        <div *ngIf=\"angForm.controls['TempGalli'].errors?.pattern\">\n                                                            Input allowed only A-Z a-z - / . (Space)\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm-4\">\n                                                    <div class=\"form-group form-primary form-static-label\">\n                                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"d\" [multiple]=\"false\" placeholder=\"City\" title=\"Compulsory Selection\" formControlName=\"TempCity\">\n                                                        </ng-select>\n                                                    </div>\n                                                    <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TempCity'].invalid && (angForm.controls['TempCity'].dirty || angForm.controls['TempCity'].touched)\" class=\"alert alert-danger\">\n                                                        <div *ngIf=\"angForm.controls['TempCity'].errors?.pattern\">\n                                                            Input allowed only A-Z a-z - / . (Space)\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-md\">\n                                                    <div class=\"form-group input-group\">\n                                                        <span class=\"border-lable-flt\">\n                                                            <input type=\"text\" name=\"TempArea\" class=\"form-control\"\n                                                                placeholder=\" \" id=\"TempArea\"\n                                                                value=\"{{ message.TempArea }}\"\n                                                                pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                formControlName=\"TempArea\">\n                                                            <label for=\"TempArea\">Area</label>\n                                                        </span>\n                                                    </div>\n                                                    <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TempArea'].invalid && (angForm.controls['TempArea'].dirty || angForm.controls['TempArea'].touched)\" class=\"alert alert-danger\">\n                                                        <div *ngIf=\"angForm.controls['TempArea'].errors?.pattern\">\n                                                            Input allowed only A-Z a-z - / . (Space)\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col-sm\">\n                                                    <div class=\"form-group input-group\">\n                                                        <span class=\"border-lable-flt\">\n                                                            <input type=\"text\" name=\"TempPinCode\" class=\"form-control\"\n                                                                placeholder=\" \" id=\"TempPinCode\"\n                                                                value=\"{{ message.TempPinCode }}\" pattern=\"^[0-9]+$\"\n                                                                title=\"Input allowed only  0-9\"\n                                                                formControlName=\"TempPinCode\">\n                                                            <label for=\"TempPinCode\">Pin Code</label>\n                                                        </span>\n                                                    </div>\n                                                    <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TempPinCode'].invalid && (angForm.controls['TempPinCode'].dirty || angForm.controls['TempPinCode'].touched)\" class=\"alert alert-danger\">\n                                                        <div *ngIf=\"angForm.controls['TempPinCode'].errors?.pattern\">\n                                                            Input allowed only 0-9\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm\">\n                                                    <div class=\"form-group input-group\">\n                                                        <span class=\"border-lable-flt\">\n                                                            <input type=\"text\" name=\"TelePh\" class=\"form-control\"\n                                                                placeholder=\" \" id=\"TelePh\" value=\"{{ message.TelePh }}\"\n                                                                pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                                                formControlName=\"TelePh\">\n                                                            <label for=\"TelePh\">Tele. Ph.</label>\n                                                        </span>\n                                                    </div>\n                                                    <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TelePh'].invalid && (angForm.controls['TelePh'].dirty || angForm.controls['TelePh'].touched)\" class=\"alert alert-danger\">\n                                                        <div *ngIf=\"angForm.controls['TelePh'].errors?.pattern\">\n                                                            Input allowed only 0-9\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm-4\">\n                                                    <div class=\"form-group input-group\">\n                                                        <span class=\"border-lable-flt\">\n                                                            <input type=\"text\" name=\"R\" class=\"form-control\" placeholder=\" \"\n                                                                id=\"label-name\"  value=\"{{ message.R }}\" pattern=\"^[0-9]+$\"\n                                                                title=\"Input allowed only  0-9\" formControlName=\"R\">\n                                                            <label for=\"label-name\">R</label>\n                                                        </span>\n                                                    </div>\n                                                    <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['R'].invalid && (angForm.controls['R'].dirty || angForm.controls['R'].touched)\" class=\"alert alert-danger\">\n                                                        <div *ngIf=\"angForm.controls['R'].errors?.pattern\">\n                                                            Input allowed only 0-9\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col-sm-4\">\n                                                    <div class=\"form-group input-group\">\n                                                        <span class=\"border-lable-flt\">\n                                                            <input type=\"text\" name=\"Customer_mobile\"\n                                                                class=\"form-control\" placeholder=\" \"\n                                                                id=\"Customer_mobile\"\n                                                                value=\"{{ message.Customer_mobile }}\" pattern=\"^[0-9]+$\"\n                                                                title=\"Input allowed only  0-9\"\n                                                                formControlName=\"Customer_mobile\">\n                                                            <label for=\"Customer_mobile\">Mobile</label>\n                                                        </span>\n                                                    </div>\n                                                    <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Customer_mobile'].invalid && (angForm.controls['Customer_mobile'].dirty || angForm.controls['Customer_mobile'].touched)\" class=\"alert alert-danger\">\n                                                        <div *ngIf=\"angForm.controls['Customer_mobile'].errors?.pattern\">\n                                                            Input allowed only 0-9\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-md\">\n                                                    <div class=\"form-group input-group\">\n                                                        <span class=\"border-lable-flt\">\n                                                            <input type=\"text\" name=\"customer_email\"\n                                                                class=\"form-control\" placeholder=\" \"\n                                                                pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n                                                                title=\"Enter valid Email\" id=\"customer_email\"\n                                                                value=\"{{ message.customer_email }}\"\n                                                                formControlName=\"customer_email\">\n                                                            <label for=\"customer_email\">Email</label>\n                                                        </span>\n                                                    </div>\n                                                    <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['customer_email'].invalid && (angForm.controls['customer_email'].dirty || angForm.controls['customer_email'].touched)\" class=\"alert alert-danger\">\n                                                        <div *ngIf=\"angForm.controls['customer_email'].errors?.pattern\">\n                                                            Enter valid Email\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm-4\">\n                                                    <div class=\"form-group input-group\">\n                                                        <span class=\"border-lable-flt\">\n                                                            <input type=\"text\" name=\"TotalRecords\" class=\"form-control\"\n                                                                placeholder=\" \" id=\"TotalRecords\"\n                                                                value=\"{{ message.TotalRecords }}\" pattern=\"^[0-9]+$\"\n                                                                title=\"Input allowed only  0-9\"\n                                                                formControlName=\"TotalRecords\">\n                                                            <label for=\"TotalRecords\">Total Records</label>\n                                                        </span>\n                                                    </div>\n                                                    <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TotalRecords'].invalid && (angForm.controls['TotalRecords'].dirty || angForm.controls['TotalRecords'].touched)\" class=\"alert alert-danger\">\n                                                        <div *ngIf=\"angForm.controls['TotalRecords'].errors?.pattern\">\n                                                            Input allowed only 0-9\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm-4\">\n                                                    <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n\n                                                    <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                                                </div>\n                                            </div>\n                                        </ng-template>\n                                    </ngb-tab>\n                                    <ngb-tab title=\"2.Other\">\n                                        <ng-template ngbTabContent>\n                                            <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"OpenDate\" class=\"form-control\"\n                                                                    placeholder=\" \" id=\"OpenDate\" required=\"\"\n                                                                    value=\"{{ message.birthDate }}\" max=\"9999-12-31\"\n                                                                    onfocus=\"(this.type='date')\"\n                                                                    formControlName=\"OpenDate\">\n                                                                <label for=\"OpenDate\">Open Date<sub class=\"required\">*\n                                                                    </sub></label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['OpenDate'].invalid && (angForm.controls['OpenDate'].dirty || angForm.controls['OpenDate'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['OpenDate'].errors?.required\">\n                                                                This field is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"ExpiryDate\"\n                                                                    class=\"form-control\" placeholder=\" \" id=\"ExpiryDate\"\n                                                                    value=\"{{ message.ExpiryDate }}\" max=\"9999-12-31\"\n                                                                    onfocus=\"(this.type='date')\"\n                                                                    formControlName=\"ExpiryDate\">\n                                                                <label for=\"ExpiryDate\">Expiry Date</label>\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"DeathDate\" class=\"form-control\"\n                                                                    placeholder=\" \" id=\"DeathDate\"\n                                                                    value=\"{{ message.DeathDate }}\" max=\"9999-12-31\"\n                                                                    onfocus=\"(this.type='date')\"\n                                                                    formControlName=\"DeathDate\">\n                                                                <label for=\"DeathDate\">Death Date</label>\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group form-primary form-static-label\">\n                                                            <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\" placeholder=\"Cast *\" required title=\"Compulsory Selection\" formControlName=\"cast\">\n                                                            </ng-select>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['cast'].invalid && (angForm.controls['cast'].dirty || angForm.controls['cast'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['cast'].errors?.required\">\n                                                                This field is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group form-primary form-static-label\">\n                                                            <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\" placeholder=\"Occupation *\" required title=\"Compulsory Selection\" formControlName=\"Customer_Occupation\">\n                                                            </ng-select>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Customer_Occupation'].invalid && (angForm.controls['Customer_Occupation'].dirty || angForm.controls['Customer_Occupation'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Customer_Occupation'].errors?.required\">\n                                                                This field is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group form-primary form-static-label\">\n                                                            <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\" placeholder=\"Director *\" required title=\"Compulsory Selection\" formControlName=\"Customer_Director\">\n                                                            </ng-select>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Customer_Director'].invalid && (angForm.controls['Customer_Director'].dirty || angForm.controls['Customer_Director'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Customer_Director'].errors?.required\">\n                                                                This field is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group form-primary form-static-label\">\n                                                            <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\" placeholder=\"Branch Code*\" required title=\"Compulsory Selection\" formControlName=\"Customer_Branch\">\n                                                            </ng-select>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Customer_Branch'].invalid && (angForm.controls['Customer_Branch'].dirty || angForm.controls['Customer_Branch'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\" angForm.controls['Customer_Branch'].errors?.required\">\n                                                                This field is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group form-primary form-static-label\">\n                                                            <ng-select [ngClass]=\"'ng-select'\" [options]=\"f\" [multiple]=\"false\" placeholder=\"Salary Division\" title=\"Compulsory Selection\" formControlName=\"Sal_Div\">\n                                                            </ng-select>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group form-primary form-static-label\">\n                                                            <ng-select [ngClass]=\"'ng-select'\" [options]=\"g\" [multiple]=\"false\" placeholder=\"Sub Salary Division\" title=\"Compulsory Selection\" formControlName=\"Sub_Sal_Div\">\n                                                            </ng-select>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"Customer_Bank_AC\"\n                                                                    class=\"form-control\" placeholder=\" \"\n                                                                    pattern=\"^[0-9]+$\" title=\"Input allowed only 0-9\"\n                                                                    id=\"Customer_Bank_AC\"\n                                                                    value=\"{{ message.Customer_Bank_AC }}\"\n                                                                    formControlName=\"Customer_Bank_AC\">\n                                                                <label for=\"Customer_Bank_AC\">Bank A/c No.</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Customer_Bank_AC'].invalid && (angForm.controls['Customer_Bank_AC'].dirty || angForm.controls['Customer_Bank_AC'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Customer_Bank_AC'].errors?.pattern\">\n                                                                Input allowed only 0-9\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"ResoNo\" class=\"form-control\"\n                                                                    placeholder=\" \" id=\"ResoNo\" required=\"\"\n                                                                    value=\"{{ message.ResoNo }}\" pattern=\"^[0-9]+$\"\n                                                                    title=\"Input allowed only 0-9\"\n                                                                    formControlName=\"ResoNo\">\n                                                                <label for=\"ResoNo\">Reso No.<sub class=\"required\">*\n                                                                    </sub></label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['ResoNo'].invalid && (angForm.controls['ResoNo'].dirty || angForm.controls['ResoNo'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['ResoNo'].errors?.pattern || angForm.controls['ResoNo'].errors?.required\">\n                                                                This field is required and Input allowed only 0-9\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"ResolDate\" class=\"form-control\"\n                                                                    placeholder=\" \" id=\"ResolDate\" required=\" \"\n                                                                    value=\"{{ message.birthDate }}\" max=\"9999-12-31\"\n                                                                    id=\"date\" onfocus=\"(this.type='date')\"\n                                                                    formControlName=\"ResolDate\">\n                                                                <label for=\"ResolDate\">Resol. Date<sub class=\"required\">*\n                                                                </sub></label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['ResolDate'].invalid && (angForm.controls['ResolDate'].dirty || angForm.controls['ResolDate'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['ResolDate'].errors?.required\">\n                                                                This field is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm-4\">\n                                                        <div class=\"border-checkbox-section\">\n                                                            <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                                                <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\" [checked]=\"recovery == true\">\n                                                                <label class=\"border-checkbox-label\" for=\"checkbox1\">Recovery<span class=\"required\">\n                                                                    </span></label>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"Installment\"\n                                                                    class=\"form-control\" placeholder=\" \"\n                                                                    pattern=\"^[0-9]+$\" title=\"Input allowed only 0-9\"\n                                                                    id=\"Installment\"\n                                                                    value=\"{{ message.Installment }}\"\n                                                                    formControlName=\"Installment\">\n                                                                <label for=\"Installment\">Installment</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Installment'].invalid && (angForm.controls['Installment'].dirty || angForm.controls['Installment'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Installment'].errors?.pattern\">\n                                                                Input allowed only 0-9\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"ManualReferanceMember\"\n                                                                    class=\"form-control\" placeholder=\" \"\n                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                    title=\"Input allowed only  A-Z a-z - / . (Space)\"\n                                                                    id=\"label-name\"\n                                                                    value=\"{{ message.Customer_Bank_AC }}\"\n                                                                    formControlName=\"ManualReferanceMember\">\n                                                                <label for=\"ManualReferanceMember\">Manual Referance\n                                                                    Member\n                                                                    No.</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['ManualReferanceMember'].invalid && (angForm.controls['ManualReferanceMember'].dirty || angForm.controls['ManualReferanceMember'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['ManualReferanceMember'].errors?.pattern\">\n                                                                This field is required and Input allowed only A-Z a-z - / . (Space)\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm-4\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"Reason_Remarks\"\n                                                                    class=\"form-control\" placeholder=\" \"\n                                                                    id=\"Reason_Remarks\"\n                                                                    value=\"{{ message.Customer_name }}\"\n                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                    formControlName=\"Reason_Remarks\">\n                                                                <label for=\"Reason_Remarks\">Reason/Remarks</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Reason_Remarks'].invalid && (angForm.controls['Reason_Remarks'].dirty || angForm.controls['Reason_Remarks'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Reason_Remarks'].errors?.pattern\">\n                                                                Input allowed only A-Z a-z - / . (Space)\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm-2\">\n                                                        <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                                                        <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </ng-template>\n                                    </ngb-tab>\n                                    <ngb-tab title=\"3.Nominee\">\n                                        <ng-template ngbTabContent>\n                                            <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm-3\">\n                                                        <h6 [ngClass]=\"{'isActive': GuarantorTrue}\">Nominee</h6>\n                                                    </div>\n                                                    <div class=\"col-sm-3\">\n                                                        <h6 (click)=\"OpenLink(1)\" class=\"text-right f-w-600\" id=\"pointer\">Click Here to Modify</h6>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\"></div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm\">\n                                                        <div *ngIf=\"GuarantorTrue\">\n                                                            <div class=\"card-block\">\n                                                                <div class=\"row\">\n                                                                    <div class=\"col-sm\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <input type=\"text\" name=\"NomiName\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    id=\"NomiName\" required=\"\"\n                                                                                    value=\"{{ message.NomiName }}\"\n                                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                                    formControlName=\"NomiName\">\n                                                                                <label for=\"NomiName\">Name<sub\n                                                                                        class=\"required\">*\n                                                                                    </sub></label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NomiName'].invalid && (angForm.controls['NomiName'].dirty || angForm.controls['NomiName'].touched)\" class=\"alert alert-danger\">\n                                                                            <div *ngIf=\"angForm.controls['NomiName'].errors?.pattern || angForm.controls['NomiName'].errors?.required\">\n                                                                                This fiels is required and Input allowed only A-Z a-z - / . (Space)\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-md\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <input type=\"text\" name=\"Relation\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    id=\"Relation\" required=\"\"\n                                                                                    value=\"{{ message.Relation }}\"\n                                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                                    formControlName=\"Relation\">\n                                                                                <label for=\"label-name\">Relation<sub\n                                                                                        class=\"required\">*\n                                                                                    </sub></label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Relation'].invalid && (angForm.controls['Relation'].dirty || angForm.controls['Relation'].touched)\" class=\"alert alert-danger\">\n                                                                            <div *ngIf=\"angForm.controls['Relation'].errors?.pattern || angForm.controls['Relation'].errors?.required\">\n                                                                                This fiels is required and Input allowed only A-Z a-z - / . (Space)\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-md\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <input type=\"text\" name=\"NominationDate\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    id=\"NominationDate\" required=\"\"\n                                                                                    value=\"{{ message.NominationDate }}\"\n                                                                                    max=\"9999-12-31\"\n                                                                                    onfocus=\"(this.type='date')\"\n                                                                                    formControlName=\"NominationDate\">\n                                                                                <label for=\"NominationDate\">Nomination\n                                                                                    Date<sub class=\"required\">*\n                                                                                    </sub></label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NominationDate'].invalid && (angForm.controls['NominationDate'].dirty || angForm.controls['NominationDate'].touched)\" class=\"alert alert-danger\">\n                                                                            <div *ngIf=\"angForm.controls['NominationDate'].errors?.required\">\n                                                                                This fiels is required\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"row\">\n                                                                    <div class=\"col-md\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <input type=\"text\" name=\"Nomi_age\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    pattern=\"^[0-9]+$\"\n                                                                                    title=\"Input allowed only 0-9\"\n                                                                                    id=\"Nomi_age\"\n                                                                                    value=\"{{ message.Nomi_age }}\"\n                                                                                    formControlName=\"Nomi_age\">\n                                                                                <label for=\"Nomi_age\">Age</label>\n                                                                            </span>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-md\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <textarea type=\"text\"\n                                                                                    name=\"Nomi_Address\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                                    id=\"Nomi_Address\"\n                                                                                    value=\"{{ message.Nomi_Address }}\"\n                                                                                    formControlName=\"Nomi_Address\"></textarea>\n                                                                                <label\n                                                                                    for=\"Nomi_Address\">Address</label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Nomi_Address'].invalid && (angForm.controls['Nomi_Address'].dirty || angForm.controls['Nomi_Address'].touched)\" class=\"alert alert-danger\">\n                                                                            <div *ngIf=\"angForm.controls['Nomi_Address'].errors?.pattern\">\n                                                                                Input allowed only A-Z a-z - / . (Space)\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-md\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <textarea type=\"text\"\n                                                                                    name=\"Nomi_Address1\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                                    id=\"Nomi_Address1\"\n                                                                                    value=\"{{ message.Nomi_Address1 }}\"\n                                                                                    formControlName=\"Nomi_Address1\"></textarea>\n                                                                                <label\n                                                                                    for=\"Nomi_Address1\">Address</label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Nomi_Address1'].invalid && (angForm.controls['Nomi_Address1'].dirty || angForm.controls['Nomi_Address1'].touched)\" class=\"alert alert-danger\">\n                                                                            <div *ngIf=\"angForm.controls['Nomi_Address1'].errors?.pattern\">\n                                                                                Input allowed only A-Z a-z - / . (Space)\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"row\">\n                                                                    <div class=\"col-md\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <textarea type=\"text\"\n                                                                                    name=\"Nomi_Address2\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                                    id=\"Nomi_Address2\"\n                                                                                    value=\"{{ message.Nomi_Address2 }}\"\n                                                                                    formControlName=\"Nomi_Address2\"></textarea>\n                                                                                <label\n                                                                                    for=\"Nomi_Address2\">Address</label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Nomi_Address2'].invalid && (angForm.controls['Nomi_Address2'].dirty || angForm.controls['Nomi_Address2'].touched)\" class=\"alert alert-danger\">\n                                                                            <div *ngIf=\"angForm.controls['Nomi_Address2'].errors?.pattern\">\n                                                                                Input allowed only A-Z a-z - / . (Space)\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-sm\">\n                                                                        <div class=\"form-group form-primary form-static-label\">\n                                                                            <ng-select [ngClass]=\"'ng-select'\" [options]=\"f\" [multiple]=\"false\" placeholder=\"City *\" required title=\"Compulsory Selection\" formControlName=\"City1\">\n                                                                            </ng-select>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['City1'].invalid && (angForm.controls['City1'].dirty || angForm.controls['City1'].touched)\" class=\"alert alert-danger\">\n                                                                            <div *ngIf=\"angForm.controls['City1'].errors?.required\">\n                                                                                This field is required\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-md\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <input type=\"text\"\n                                                                                    name=\"Customer_pin_code1\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    pattern=\"^[0-9]+$\"\n                                                                                    title=\"Input allowed only 0-9\"\n                                                                                    id=\"Customer_pin_code1\"\n                                                                                    value=\"{{ message.Customer_pin_code1 }}\"\n                                                                                    formControlName=\"Customer_pin_code1\">\n                                                                                <label for=\"Customer_pin_code1\">Pin\n                                                                                    Code</label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Customer_pin_code1'].invalid && (angForm.controls['Customer_pin_code1'].dirty || angForm.controls['Customer_pin_code1'].touched)\" class=\"alert alert-danger\">\n                                                                            <div *ngIf=\"angForm.controls['Customer_pin_code1'].errors?.pattern\">\n                                                                                Input allowed only 0-9\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-sm\">\n                                                                        <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                                                                        <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-12\">\n                                                        <div class=\"table-responsive\">\n                                                            <table datatable [dtOptions]=\"dtExportButtonOptions1\" class=\"table table-striped table-bordered table-hover\" width=\"100%\">\n                                                            </table>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm\">\n                                                        <h6>Shares Details</h6>\n                                                    </div>\n                                                </div>\n                                                <div class=\"card-block\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-md\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <input type=\"text\" name=\"SharesUpToDate\"\n                                                                        class=\"form-control\" placeholder=\" \"\n                                                                        id=\"SharesUpToDate\"\n                                                                        value=\"{{ message.SharesUpToDate }}\"\n                                                                        max=\"9999-12-31\"\n                                                                        onfocus=\"(this.type='date')\"\n                                                                        formControlName=\"SharesUpToDate\">\n                                                                    <label for=\"SharesUpToDate\">Shares Up To\n                                                                        Date</label>\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-md\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <input type=\"text\" name=\"TotalShares\"\n                                                                        class=\"form-control\" placeholder=\" \"\n                                                                        pattern=\"^[0-9]+$\"\n                                                                        title=\"Input allowed only 0-9\" id=\"TotalShares\"\n                                                                        value=\"{{ message.TotalShares }}\"\n                                                                        formControlName=\"TotalShares\">\n                                                                    <label for=\"TotalShares\">Total Shares</label>\n                                                                </span>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TotalShares'].invalid && (angForm.controls['TotalShares'].dirty || angForm.controls['TotalShares'].touched)\" class=\"alert alert-danger\">\n                                                                <div *ngIf=\"angForm.controls['TotalShares'].errors?.pattern\">\n                                                                    Input allowed only 0-9\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-md\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <input type=\"text\" name=\"FaceValue\"\n                                                                        class=\"form-control\" placeholder=\" \"\n                                                                        pattern=\"^[0-9]+$\"\n                                                                        title=\"Input allowed only 0-9\" id=\"FaceValue\"\n                                                                        value=\"{{ message.FaceValue }}\"\n                                                                        formControlName=\"FaceValue\">\n                                                                    <label for=\"FaceValue\">Face Value</label>\n                                                                </span>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['FaceValue'].invalid && (angForm.controls['FaceValue'].dirty || angForm.controls['FaceValue'].touched)\" class=\"alert alert-danger\">\n                                                                <div *ngIf=\"angForm.controls['FaceValue'].errors?.pattern\">\n                                                                    Input allowed only 0-9\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-md\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <input type=\"text\" name=\"TotalAmount\"\n                                                                        class=\"form-control\" placeholder=\" \"\n                                                                        pattern=\"^[0-9]+$\"\n                                                                        title=\"Input allowed only 0-9\" id=\"TotalAmount\"\n                                                                        value=\"{{ message.TotalAmount }}\"\n                                                                        formControlName=\"TotalAmount\">\n                                                                    <label for=\"TotalAmount\">Total Amount</label>\n                                                                </span>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TotalAmount'].invalid && (angForm.controls['TotalAmount'].dirty || angForm.controls['TotalAmount'].touched)\" class=\"alert alert-danger\">\n                                                                <div *ngIf=\"angForm.controls['TotalAmount'].errors?.pattern\">\n                                                                    Input allowed only 0-9\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </ng-template>\n                                    </ngb-tab>\n                                    <ngb-tab title=\"4.Documents\">\n                                        <ng-template ngbTabContent>\n                                            <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                                <div class=\"table-responsive\">\n                                                    <table datatable [dtOptions]=\"dtExportButtonOptions2\" class=\"table table-striped table-bordered table-hover\" width=\"100%\">\n                                                    </table>\n                                                </div>\n                                            </div>\n                                        </ng-template>\n                                    </ngb-tab>\n                                    <ngb-tab title=\"5.Marathi Details\">\n                                        <ng-template ngbTabContent>\n                                            <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"MarathiName\"\n                                                                    class=\"form-control\" placeholder=\" \"\n                                                                    id=\"MarathiName\" value=\"{{ message.City_Name }}\"\n                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                    formControlName=\"MarathiName\">\n                                                                <label for=\"MarathiName\">Name</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['MarathiName'].invalid && (angForm.controls['MarathiName'].dirty || angForm.controls['MarathiName'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['MarathiName'].errors?.pattern\">\n                                                                Input allowed only A-Z a-z - / . (Space)\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"MarathiWard\"\n                                                                    class=\"form-control\" placeholder=\" \"\n                                                                    id=\"MarathiWard\" value=\"{{ message.City_Name }}\"\n                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                    formControlName=\"MarathiWard\">\n                                                                <label for=\"MarathiWard\">Ward</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['MarathiWard'].invalid && (angForm.controls['MarathiWard'].dirty || angForm.controls['MarathiWard'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['MarathiWard'].errors?.pattern\">\n                                                                Input allowed only A-Z a-z - / . (Space)\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <textarea type=\"text\" name=\"Marathiaddress\"\n                                                                    class=\"form-control\" placeholder=\" \"\n                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                    id=\"Marathiaddress\"\n                                                                    value=\"{{ message.Customer_address }}\"\n                                                                    formControlName=\"Marathiaddress\"></textarea>\n                                                                <label for=\"Marathiaddress\">Address</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Marathiaddress'].invalid && (angForm.controls['Marathiaddress'].dirty || angForm.controls['Marathiaddress'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['Marathiaddress'].errors?.pattern\">\n                                                                Input allowed only A-Z a-z - / . (Space)\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"MarathiGalli\"\n                                                                    class=\"form-control\" placeholder=\" \"\n                                                                    id=\"MarathiGalli\" value=\"{{ message.City_Name }}\"\n                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                    formControlName=\"MarathiGalli\">\n                                                                <label for=\"MarathiGalli\">Galli</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['MarathiGalli'].invalid && (angForm.controls['MarathiGalli'].dirty || angForm.controls['MarathiGalli'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['MarathiGalli'].errors?.pattern\">\n                                                                Input allowed only A-Z a-z - / . (Space)\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm\">\n                                                        <div class=\"form-group input-group\">\n                                                            <span class=\"border-lable-flt\">\n                                                                <input type=\"text\" name=\"MarathiArea\"\n                                                                    class=\"form-control\" placeholder=\" \"\n                                                                    id=\"MarathiArea\" value=\"{{ message.City_Name }}\"\n                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                    formControlName=\"MarathiArea\">\n                                                                <label for=\"MarathiArea\">Area</label>\n                                                            </span>\n                                                        </div>\n                                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['MarathiArea'].invalid && (angForm.controls['MarathiArea'].dirty || angForm.controls['MarathiArea'].touched)\" class=\"alert alert-danger\">\n                                                            <div *ngIf=\"angForm.controls['MarathiArea'].errors?.pattern\">\n                                                                Input allowed only A-Z a-z - / . (Space)\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                    <div class=\"col-md\">\n                                                        <div class=\"form-group form-primary form-static-label\">\n                                                            <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\" placeholder=\"City\" required title=\"Compulsory Selection\" formControlName=\"MarathiCity\">\n                                                            </ng-select>\n                                                        </div>\n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </ng-template>\n                                    </ngb-tab>\n                                </ngb-tabset>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" class=\"table table-striped table-bordered table-hover\" width=\"100%\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {DataTablesModule} from 'angular-datatables';  \r\nimport {SharesMasterRoutingModule } from './shares-master-routing.module';\r\nimport { SharesMasterComponent } from './shares-master.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'; \r\nimport { MemberTypeService } from '../../../../shared/elements/member-type.service';\r\nimport {SelectModule} from 'ng-select';\r\nimport { StatementTypeService } from '../../../../shared/elements/statment-type.service';\r\nimport { SignTypeService } from '../../../../shared/elements/sign-type.service';\r\nimport { A1Service } from '../../../../shared/elements/a1.service';\r\nimport { A2Service } from '../../../../shared/elements/a2.service';\r\nimport { CatService } from '../../../../shared/elements/cat.service';\r\nimport { City1Service } from '../../../../shared/elements/city1.service';\r\nimport { City2Service } from '../../../../shared/elements/city2.service';\r\nimport { Sal1Service } from '../../../../shared/elements/sal1.service';\r\nimport { Sal2Service } from '../../../../shared/elements/sal2.service';\r\nimport { City3Service } from '../../../../shared/elements/city3.service';\r\nimport { FormsModule,ReactiveFormsModule  }   from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharesMasterRoutingModule,\r\n    DataTablesModule,\r\n    NgbModule,\r\n    SelectModule,\r\n    FormsModule,ReactiveFormsModule\r\n  ],\r\n  providers:[City3Service,Sal2Service,Sal1Service,StatementTypeService, MemberTypeService, SignTypeService,A1Service,A2Service,CatService,City1Service,City2Service],\r\n  declarations: [SharesMasterComponent],\r\n  bootstrap: [SharesMasterComponent]\r\n})\r\nexport class  SharesMasterModule { }"],"sourceRoot":"webpack:///"}