{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/elements/a1.service.ts","./src/app/shared/elements/branch.service.ts","./src/app/theme/master/investment/account-opening/account-opening-routing.module.ts","./src/app/theme/master/investment/account-opening/account-opening.component.ts","./src/app/theme/master/investment/account-opening/account-opening.component.html","./src/app/theme/master/investment/account-opening/account-opening.module.ts"],"names":[],"mappings":"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","file":"account-opening-account-opening-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class A1Service {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '1' },\r\n        { value: '1', label: '2' },\r\n        { value: '2', label: '3' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(A1Service.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(A1Service.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(A1Service.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class BranchService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: 'branch1' },\r\n        { value: '1', label: 'branch2' },\r\n        { value: '2', label: 'branch1' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(BranchService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(BranchService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(BranchService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {AccountOpeningComponent} from './account-opening.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountOpeningComponent,\r\n    data: {\r\n      title: 'Account Opening',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountOpeningRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\nimport { A1Service } from '../../../../shared/elements/a1.service';\nimport { BranchService } from '../../../../shared/elements/branch.service';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-account-opening',\n  templateUrl: './account-opening.component.html',\n  styleUrls: ['./account-opening.component.scss']\n})\n\nexport class AccountOpeningComponent implements OnInit {\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {}; //Datatable variable\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\n  BankCode: Array<IOption> = this.A1Service.getCharacters();\n  BranchCode: Array<IOption> = this.BranchService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n\n  //variables for  add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //object created to get data when row is clicked\n  message = {\n    Scheme: \"\",\n    AccountNo: \"\",\n    Name: \"\",\n    BankCode: \"\",\n    BranchCode: \"\",\n    ReceiptNo: \"\",\n    AcOpenDate: \"\",\n    AsOnDate: \"\",\n    MaturityDate: \"\",\n    Months: \"\",\n    Days: \"\",\n    DepositAmount: \"\",\n    IntRate: \"\",\n    MaturityAmount: \"\",\n    AccountClosedDate: \"\"\n  };\n\n  constructor(private fb: FormBuilder, public Scheme1Service: Scheme1Service, public A1Service: A1Service, public BranchService: BranchService) { this.createForm(); }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/account-opening.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Scheme',\n          data: 'Scheme'\n        },\n        {\n          title: 'Account No.',\n          data: 'AccountNo'\n        },\n        {\n          title: 'Name',\n          data: 'Name'\n        },\n        {\n          title: 'Bank Code',\n          data: 'BankCode'\n        },\n        {\n          title: 'Branch Code',\n          data: 'BranchCode'\n        },\n        {\n          title: 'Receipt No.',\n          data: 'ReceiptNo'\n        },\n        {\n          title: 'A/c Open Date',\n          data: 'AcOpenDate'\n        },\n        {\n          title: 'As On Date',\n          data: 'AsOnDate'\n        },\n        {\n          title: 'Maturity Date',\n          data: 'MaturityDate'\n        },\n        {\n          title: 'Months',\n          data: 'Months'\n        },\n        {\n          title: 'Days',\n          data: 'Days'\n        },\n        {\n          title: 'Deposit Amount',\n          data: 'DepositAmount'\n        },\n        {\n          title: 'Int. Rate',\n          data: 'IntRate'\n        },\n        {\n          title: 'Maturity Amount',\n          data: 'MaturityAmount'\n        },\n        {\n          title: 'Account Closed Date',\n          data: 'AccountClosedDate'\n        },\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.A1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.BranchService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      Scheme: ['', [Validators.required]],\n      AccountNo: ['',],\n      AC_NAME: ['', [Validators.pattern],],\n      BankCode: ['', [Validators.required]],\n      BranchCode: ['', [Validators.required]],\n      ReceiptNo: ['', [Validators.pattern, Validators.required]],\n      Date: ['', [Validators.required]],\n      AsOnDate: ['', [Validators.required]],\n      MaturityDate: ['', [Validators.required]],\n      Months: ['', [Validators.pattern, Validators.required]],\n      Days: ['', [Validators.pattern, Validators.required]],\n      DepositAmount: ['', [Validators.pattern, Validators.required]],\n      IntRate: ['', [Validators.pattern, Validators.required]],\n      MaturityAmount: ['', [Validators.pattern]],\n      AccountClosedDate: ['']\n    });\n  }\n\n  submit() {\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  //function executes when edit button clicked\n  editClickHandler(info: any): void {\n    this.message.Scheme = info.Scheme;\n    this.message.AccountNo = info.AccountNo;\n    this.message.Name = info.Name;\n    this.message.BankCode = info.BankCode;\n    this.message.BranchCode = info.BranchCode;\n    this.message.ReceiptNo = info.ReceiptNo;\n    this.message.AcOpenDate = info.AcOpenDate;\n    this.message.AsOnDate = info.AsOnDate;\n    this.message.MaturityDate = info.MaturityDate;\n    this.message.Months = info.Months;\n    this.message.Days = info.Days;\n    this.message.DepositAmount = info.DepositAmount;\n    this.message.IntRate = info.IntRate;\n    this.message.MaturityAmount = info.MaturityAmount;\n    this.message.AccountClosedDate = info.AccountClosedDate;\n    //return boolean value and toggle add to update button\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  //function toggle update to add button\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n  }\n\n  //function execute when delete button clicked\n  delClickHandler(info: any): void {\n    this.message.Scheme = info.Scheme;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete scheme.\" + this.message.Scheme + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n}\n","<!-- Other Bank's Deposit Master   -->\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Other Bank's Deposit Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"Scheme *\" required title=\"Compulsory Select\" formControlName=\"Scheme\">\n                                </ng-select>\n                                <label>{{ message.Scheme}}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"TotalAmount\" class=\"form-control\" placeholder=\" \"\n                                        id=\"label-name\" value=\"{{ message.AccountNo }}\" formControlName=\"AccountNo\">\n                                    <label for=\"label-name\">Account No.</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"AC_NAME\" class=\"form-control\" placeholder=\" \" id=\"AC_NAME\"\n                                        value=\"{{ message.Name }}\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"AC_NAME\">\n                                    <label for=\"AC_NAME\">Name</label>\n                                </span>\n                            </div>\n                            <div *ngIf=\"angForm.controls['AC_NAME'].invalid && (angForm.controls['AC_NAME'].dirty || angForm.controls['AC_NAME'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_NAME'].errors?.pattern\">\n                                    Input allowed only A-Za-z-/.(Space)\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"BankCode\" [multiple]=\"false\"\n                                    placeholder=\"Bank Code *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"BankCode\">\n                                </ng-select>\n                                <label>{{ message.BankCode }}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['BankCode'].invalid && (angForm.controls['BankCode'].dirty || angForm.controls['BankCode'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['BankCode'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"BranchCode\" [multiple]=\"false\"\n                                    placeholder=\"Branch Code *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"BranchCode\">\n                                </ng-select>\n                                <label>{{ message.BranchCode }}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['BranchCode'].invalid && (angForm.controls['BranchCode'].dirty || angForm.controls['BranchCode'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['BranchCode'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"ReceiptNo\"\n                                        required=\"\" value=\"{{ message.ReceiptNo }}\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only 0-9\" formControlName=\"ReceiptNo\">\n                                    <label for=\"ReceiptNo\">Receipt No. <sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['ReceiptNo'].invalid && (angForm.controls['ReceiptNo'].dirty || angForm.controls['ReceiptNo'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['ReceiptNo'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"Date\" required=\"\"\n                                        max=\"9999-12-31\" formControlName=\"Date\" value=\"{{ message.AcOpenDate}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"Date\">A/c Open Date <sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Date'].invalid && (angForm.controls['Date'].dirty || angForm.controls['Date'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['Date'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"AsOnDate\" required=\"\"\n                                        max=\"9999-12-31\" formControlName=\"AsOnDate\" value=\"{{ message.AsOnDate}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"AsOnDate\">As On Date<sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AsOnDate'].invalid && (angForm.controls['AsOnDate'].dirty || angForm.controls['AsOnDate'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AsOnDate'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"MaturityDate\"\n                                        required=\"\" max=\"9999-12-31\" formControlName=\"MaturityDate\"\n                                        value=\"{{ message.MaturityDate}}\" onfocus=\"(this.type='date')\" />\n                                    <label for=\"MaturityDate\">Maturity Date <sub class=\"required\">*</sub> </label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['MaturityDate'].invalid && (angForm.controls['MaturityDate'].dirty || angForm.controls['MaturityDate'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['MaturityDate'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <h6>Deposit Period:</h6>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Months\"\n                                        required=\"\" value=\"{{ message.Months }}\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only 0-9\" formControlName=\"Months\">\n                                    <label for=\"Months\">Months<sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Months'].invalid && (angForm.controls['Months'].dirty || angForm.controls['Months'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['Months'].errors?.pattern || angForm.controls['Months'].errors?.required\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Days\" class=\"form-control\" placeholder=\" \" id=\"Days\"\n                                        required value=\"{{ message.Days }}\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only 0-9\" formControlName=\"Days\">\n                                    <label for=\"Days\">Days <sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Days'].invalid && (angForm.controls['Days'].dirty || angForm.controls['Days'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['Days'].errors?.pattern || angForm.controls['Days'].errors?.required\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Days\" class=\"form-control\" placeholder=\" \"\n                                        id=\"DepositAmount\" required=\"\" value=\"{{ message.DepositAmount }}\"\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only 0-9\"\n                                        formControlName=\"DepositAmount\">\n                                    <label for=\"DepositAmount\">Deposit Amount<sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['DepositAmount'].invalid && (angForm.controls['DepositAmount'].dirty || angForm.controls['DepositAmount'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['DepositAmount'].errors?.pattern || angForm.controls['DepositAmount'].errors?.required\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"IntRate\" class=\"form-control\" placeholder=\" \" id=\"IntRate\"\n                                        required value=\"{{ message.IntRate }}\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only 0-9\" formControlName=\"IntRate\">\n                                    <label for=\"IntRate\">Int. Rate <sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['IntRate'].invalid && (angForm.controls['IntRate'].dirty || angForm.controls['IntRate'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['IntRate'].errors?.pattern || angForm.controls['IntRate'].errors?.required\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"MaturityAmount\" class=\"form-control\" placeholder=\" \"\n                                        id=\"MaturityAmount\" value=\"{{ message.MaturityAmount }}\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only 0-9\" formControlName=\"MaturityAmount\">\n                                    <label for=\"MaturityAmount\">Maturity Amount</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['MaturityAmount'].invalid && (angForm.controls['MaturityAmount'].dirty || angForm.controls['MaturityAmount'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['MaturityAmount'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"AccountClosedDate\"\n                                        required=\"\" max=\"9999-12-31\" formControlName=\"AccountClosedDate\"\n                                        value=\"{{ message.AccountClosedDate}}\" onfocus=\"(this.type='date')\" />\n                                    <label for=\"AccountClosedDate\">Account Closed Date </label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountOpeningComponent } from './account-opening.component';\r\nimport { AccountOpeningRoutingModule } from './account-opening-routing.module';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SelectModule } from 'ng-select';\r\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\r\nimport { A1Service } from '../../../../shared/elements/a1.service';\r\nimport { BranchService } from '../../../../shared/elements/branch.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DataTablesModule,\r\n    AccountOpeningRoutingModule,\r\n    NgbModule,\r\n    SelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [AccountOpeningComponent],\r\n  providers: [Scheme1Service, A1Service, BranchService]\r\n})\r\nexport class AccountOpeningModule { }\r\n"],"sourceRoot":"webpack:///"}