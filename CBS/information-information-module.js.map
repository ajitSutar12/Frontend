{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/dropdownService/company-group-master-dropdown.service.ts","./src/app/shared/dropdownService/lockersize-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/shared/dropdownService/title.service.ts","./src/app/theme/master/policy-settings/information/Depriciation-catagory-master/depriciation-catagory-master.component.ts","./src/app/theme/master/policy-settings/information/Depriciation-catagory-master/depriciation-catagory-master.component.html","./src/app/theme/master/policy-settings/information/Depriciation-catagory-master/depriciation-category-master.service.ts","./src/app/theme/master/policy-settings/information/advocate-master/advocate-master.component.ts","./src/app/theme/master/policy-settings/information/advocate-master/advocate-master.component.html","./src/app/theme/master/policy-settings/information/advocate-master/advocate-master.service.ts","./src/app/theme/master/policy-settings/information/authority-master/authority-master.component.ts","./src/app/theme/master/policy-settings/information/authority-master/authority-master.component.html","./src/app/theme/master/policy-settings/information/authority-master/authority-master.service.ts","./src/app/theme/master/policy-settings/information/bank-master/bank-master.component.ts","./src/app/theme/master/policy-settings/information/bank-master/bank-master.component.html","./src/app/theme/master/policy-settings/information/bank-master/bank-master.service.ts","./src/app/theme/master/policy-settings/information/cast-master/cast-master.component.ts","./src/app/theme/master/policy-settings/information/cast-master/cast-master.component.html","./src/app/theme/master/policy-settings/information/cast-master/cast-master.service.ts","./src/app/theme/master/policy-settings/information/category-master/category-master.component.ts","./src/app/theme/master/policy-settings/information/category-master/category-master.component.html","./src/app/theme/master/policy-settings/information/category-master/category-master.service.ts","./src/app/theme/master/policy-settings/information/city-master/city-master.component.ts","./src/app/theme/master/policy-settings/information/city-master/city-master.component.html","./src/app/theme/master/policy-settings/information/city-master/city-master.service.ts","./src/app/theme/master/policy-settings/information/clearing-branch-master/clearing-branch-master.component.ts","./src/app/theme/master/policy-settings/information/clearing-branch-master/clearing-branch-master.component.html","./src/app/theme/master/policy-settings/information/clearing-branch-master/clearing-branch-master.service.ts","./src/app/theme/master/policy-settings/information/company-group-link-master/company-group-link-master.component.ts","./src/app/theme/master/policy-settings/information/company-group-link-master/company-group-link-master.component.html","./src/app/theme/master/policy-settings/information/company-group-link-master/company-group-link-master.service.ts","./src/app/theme/master/policy-settings/information/company-group-master/company-group-master.component.ts","./src/app/theme/master/policy-settings/information/company-group-master/company-group-master.component.html","./src/app/theme/master/policy-settings/information/company-group-master/company-group-master.service.ts","./src/app/theme/master/policy-settings/information/court-master/court-master.component.ts","./src/app/theme/master/policy-settings/information/court-master/court-master.component.html","./src/app/theme/master/policy-settings/information/court-master/court-master.service.ts","./src/app/theme/master/policy-settings/information/director-master/director-master.component.ts","./src/app/theme/master/policy-settings/information/director-master/director-master.component.html","./src/app/theme/master/policy-settings/information/director-master/director-master.service.ts","./src/app/theme/master/policy-settings/information/document-master/document-master.component.ts","./src/app/theme/master/policy-settings/information/document-master/document-master.component.html","./src/app/theme/master/policy-settings/information/document-master/document-master.service.ts","./src/app/theme/master/policy-settings/information/health-master/health-master.component.ts","./src/app/theme/master/policy-settings/information/health-master/health-master.component.html","./src/app/theme/master/policy-settings/information/health-master/health-master.service.ts","./src/app/theme/master/policy-settings/information/industry-master/industry-master.component.ts","./src/app/theme/master/policy-settings/information/industry-master/industry-master.component.html","./src/app/theme/master/policy-settings/information/industry-master/industry-master.service.ts","./src/app/theme/master/policy-settings/information/information-routing.module.ts","./src/app/theme/master/policy-settings/information/information.component.ts","./src/app/theme/master/policy-settings/information/information.component.html","./src/app/theme/master/policy-settings/information/information.module.ts","./src/app/theme/master/policy-settings/information/insurance-master/insurance-master.component.ts","./src/app/theme/master/policy-settings/information/insurance-master/insurance-master.component.html","./src/app/theme/master/policy-settings/information/insurance-master/insurance-master.service.ts","./src/app/theme/master/policy-settings/information/interest-category-master/interest-category-master.component.ts","./src/app/theme/master/policy-settings/information/interest-category-master/interest-category-master.component.html","./src/app/theme/master/policy-settings/information/interest-category-master/interest-category-master.service.ts","./src/app/theme/master/policy-settings/information/item-category-master/item-category-master.component.ts","./src/app/theme/master/policy-settings/information/item-category-master/item-category-master.component.html","./src/app/theme/master/policy-settings/information/item-category-master/item-category-master.service.ts","./src/app/theme/master/policy-settings/information/loan-stage-master/loan-stage-master.component.ts","./src/app/theme/master/policy-settings/information/loan-stage-master/loan-stage-master.component.html","./src/app/theme/master/policy-settings/information/loan-stage-master/loan-stage-master.service.ts","./src/app/theme/master/policy-settings/information/locker-rack-master/locker-rack-master.component.ts","./src/app/theme/master/policy-settings/information/locker-rack-master/locker-rack-master.component.html","./src/app/theme/master/policy-settings/information/locker-rack-master/locker-rack-master.service.ts","./src/app/theme/master/policy-settings/information/locker-rack-wise-master/locker-rack-wise-master.component.ts","./src/app/theme/master/policy-settings/information/locker-rack-wise-master/locker-rack-wise-master.component.html","./src/app/theme/master/policy-settings/information/locker-rack-wise-master/locker-rack-wise-master.service.ts","./src/app/theme/master/policy-settings/information/locker-size-master/locker-size-master.component.ts","./src/app/theme/master/policy-settings/information/locker-size-master/locker-size-master.component.html","./src/app/theme/master/policy-settings/information/locker-size-master/locker-size-master.service.ts","./src/app/theme/master/policy-settings/information/minimum-balance-master/minimum-balance-master.component.ts","./src/app/theme/master/policy-settings/information/minimum-balance-master/minimum-balance-master.component.html","./src/app/theme/master/policy-settings/information/minimum-balance-master/minimum-balance-master.service.ts","./src/app/theme/master/policy-settings/information/narration/narration.component.ts","./src/app/theme/master/policy-settings/information/narration/narration.component.html","./src/app/theme/master/policy-settings/information/narration/narration.service.ts","./src/app/theme/master/policy-settings/information/occupation-master/occupation-master.component.ts","./src/app/theme/master/policy-settings/information/occupation-master/occupation-master.component.html","./src/app/theme/master/policy-settings/information/occupation-master/occupation-master.service.ts","./src/app/theme/master/policy-settings/information/operation-master/operation-master.component.ts","./src/app/theme/master/policy-settings/information/operation-master/operation-master.component.html","./src/app/theme/master/policy-settings/information/operation-master/operation-master.service.ts","./src/app/theme/master/policy-settings/information/own-branch-master/own-branch-master.component.ts","./src/app/theme/master/policy-settings/information/own-branch-master/own-branch-master.component.html","./src/app/theme/master/policy-settings/information/own-branch-master/own-branch-master.service.ts","./src/app/theme/master/policy-settings/information/prefix-master/prefix-master.component.ts","./src/app/theme/master/policy-settings/information/prefix-master/prefix-master.component.html","./src/app/theme/master/policy-settings/information/prefix-master/prefix-master.service.ts","./src/app/theme/master/policy-settings/information/priority-sector-master/priority-sector-master.component.ts","./src/app/theme/master/policy-settings/information/priority-sector-master/priority-sector-master.component.html","./src/app/theme/master/policy-settings/information/priority-sector-master/priority-sector-master.service.ts","./src/app/theme/master/policy-settings/information/purpose-master/purpose-master.component.ts","./src/app/theme/master/policy-settings/information/purpose-master/purpose-master.component.html","./src/app/theme/master/policy-settings/information/purpose-master/purpose-master.service.ts","./src/app/theme/master/policy-settings/information/recovery-cleark-master/recovery-cleark-master.component.ts","./src/app/theme/master/policy-settings/information/recovery-cleark-master/recovery-cleark-master.component.html","./src/app/theme/master/policy-settings/information/recovery-cleark-master/recovery-cleark-master.service.ts","./src/app/theme/master/policy-settings/information/report-type-master/report-type-master.component.ts","./src/app/theme/master/policy-settings/information/report-type-master/report-type-master.component.html","./src/app/theme/master/policy-settings/information/report-type-master/report-type-master.service.ts","./src/app/theme/master/policy-settings/information/salary-division-master/salary-division-master.component.ts","./src/app/theme/master/policy-settings/information/salary-division-master/salary-division-master.component.html","./src/app/theme/master/policy-settings/information/salary-division-master/salary-division-master.service.ts","./src/app/theme/master/policy-settings/information/sub-salary-division-master/sub-salary-division-master.component.ts","./src/app/theme/master/policy-settings/information/sub-salary-division-master/sub-salary-division-master.component.html","./src/app/theme/master/policy-settings/information/sub-salary-division-master/sub-salary-division-master.service.ts","./src/app/theme/master/policy-settings/information/td-recipt-series-master/td-recipt-series-master.component.ts","./src/app/theme/master/policy-settings/information/td-recipt-series-master/td-recipt-series-master.component.html","./src/app/theme/master/policy-settings/information/weaker-section-master/weaker-section-master.component.ts","./src/app/theme/master/policy-settings/information/weaker-section-master/weaker-section-master.component.html","./src/app/theme/master/policy-settings/information/weaker-section-master/weaker-section-master.service.ts"],"names":[],"mappings":"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","file":"information-information-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class CompanyGroupMasterDropdownService {\r\n    companyGroupObject = new Array();\r\n    url = \"http://localhost:4000/company-group-master\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n    public getCompanyGroupMasterList() {\r\n        this.companyGroupObject = []\r\n        return this.http.get<any>(this.url + '/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.COMP_CODE, value: element.id };\r\n                    this.companyGroupObject.push(obj)\r\n                });\r\n                return this.companyGroupObject;\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LockerSMasterDropDownService {\r\n    lockerSObject = new Array();\r\n    url = \"http://localhost:4000/locker-size-master\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n    public getLockerSMasterList() {\r\n        this.lockerSObject = []\r\n        return this.http.get<any>(this.url + '/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.SIZE_NAME, value: element.id };\r\n                    this.lockerSObject.push(obj)\r\n                });\r\n                return this.lockerSObject;\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    url = \"http://localhost:4000/scheme-parameters\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n    public getSchemeCodeList() {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL, value: element.id };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class TitleService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Shree'},\r\n    {value: '1', label: 'Sou'},\r\n    {value: '2', label: 'Miss'},\r\n    {value: '3', label: 'M/s'}\r\n  ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(TitleService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(TitleService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(TitleService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport { DepriciationService } from './depriciation-category-master.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface DescriptionCategoryMaster {\r\n  CODE: number,\r\n  NAME: string,\r\n  AC_NO: number\r\n}\r\n@Component({\r\n  selector: 'app-depriciation-catagory-master',\r\n  templateUrl: './depriciation-catagory-master.component.html',\r\n  styleUrls: ['./depriciation-catagory-master.component.scss']\r\n})\r\nexport class DepriciationCatagoryMasterComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  descriptionCategoryMasters: DescriptionCategoryMaster[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  //variable to get Id to update\r\n  updateID: number = 0;\r\n\r\n  // column filter\r\n  filterData = {};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private depriciationService: DepriciationService,\r\n    private fb: FormBuilder) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n       \r\n        dataTableParameters.columns.forEach(element => {\r\n          if(element.search.value !=''){\r\n  \r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          }else{\r\n  \r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if(this.filterData.hasOwnProperty(element.data)){\r\n                let value = this.filterData[getColumnName];\r\n                if(columnValue != undefined || value != undefined){\r\n                  delete this.filterData[element.data];\r\n                } \r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            'http://localhost:4000/Depriciation-category-master',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.descriptionCategoryMasters = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Code',\r\n          data: 'CODE'\r\n        },\r\n        {\r\n          title: 'Description',\r\n          data: 'NAME'\r\n        },\r\n        {\r\n          title: 'Account No.',\r\n          data: 'AC_NO'\r\n        },\r\n      ],\r\n      dom: 'Blrtip',\r\n    };\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      CODE: [''],\r\n      NAME: ['', [Validators.pattern, Validators.required]],\r\n      AC_NO: ['', [Validators.pattern, Validators.required]]\r\n    });\r\n  }\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'CODE': formVal.CODE,\r\n      'NAME': formVal.NAME,\r\n      'AC_NO': formVal.AC_NO,\r\n    }\r\n    this.depriciationService.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n    //To clear form\r\n    this.resetForm();\r\n  }\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.depriciationService.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        'CODE': data.CODE,\r\n        'NAME': data.NAME,\r\n        'AC_NO': data.AC_NO,\r\n      })\r\n    })\r\n  }\r\n  //Method for update data \r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    this.depriciationService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n      this.resetForm();\r\n    })\r\n  }\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete depriciation category Master data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.depriciationService.deleteData(id).subscribe(data1 => {\r\n          this.descriptionCategoryMasters = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n          console.log(error)\r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          debugger\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }else{\r\n            that\r\n            .search(this['value'])\r\n            .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Depriciation Category Master</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"Code\" pattern=\"^[0-9]+$\" disabled\r\n                                        title=\"Input allowed only  0-9\" formControlName=\"CODE\">\r\n                                    <label for=\"Code\">Code</label>\r\n                                </span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"Description\"\r\n                                        required=\"\"  pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\r\n                                        formControlName=\"NAME\">\r\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"AccountNo\" required=\"\" pattern=\"^[0-9]+$\" maxlength=\"15\" minlength=\"15\"\r\n                                        title=\"Input allowed only  0-9\" formControlName=\"AC_NO\">\r\n                                    <label for=\"AccountNo\">Account No.<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_NO'].invalid && (angForm.controls['AC_NO'].dirty || angForm.controls['AC_NO'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.pattern || angForm.controls['AC_NO'].errors?.required || angForm.controls['AC_NO'].errors?.maxlength || angForm.controls['AC_NO'].errors?.minlength\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"descriptionCategoryMasters?.length != 0\">\r\n                                    <tr *ngFor=\"let data of descriptionCategoryMasters\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        </td>\r\n                                        <td>{{ data.CODE }}</td>\r\n                                        <td>{{ data.NAME }}</td>\r\n                                        <td>{{ data.AC_NO }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"descriptionCategoryMasters?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search CODE\" name=\"search-CODE\">\r\n                                            <th><input type=\"text\" placeholder=\"Search NAME\" name=\"search-NAME\">\r\n                                                <th><input type=\"text\" placeholder=\"Search AC_NO\" name=\"search-AC_NO\">\r\n                                                </th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class DepriciationService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n // url = \"http://localhost:4000/Depriciation-category-master\";\r\n url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/Depriciation-category-master/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/Depriciation-category-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/Depriciation-category-master/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/Depriciation-category-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { AdvocateService } from './advocate-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface AdvocateMaster {\n  CODE: number,\n  NAME: string\n}\n@Component({\n  selector: 'app-advocate-master',\n  templateUrl: './advocate-master.component.html',\n  styleUrls: ['./advocate-master.component.scss']\n})\nexport class AdvocateMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  advocatemasters: AdvocateMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private advocateService: AdvocateService,\n    private fb: FormBuilder) {\n  }\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/advocate-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.advocatemasters = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Advocate Code',\n          data: 'CODE'\n        },\n        {\n          title: 'Description',\n          data: 'NAME'\n        },\n      ],\n      dom: 'Blrtip',\n    };\n  }\n  // Method to handle validation of form\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n      NAME: ['', [Validators.pattern, Validators.required]],\n    });\n  }\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n      'NAME': formVal.NAME,\n    }\n    this.advocateService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm;\n  }\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.advocateService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n        'NAME': data.NAME,\n      })\n    })\n  }\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.advocateService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete advocate Master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.advocateService.deleteData(id).subscribe(data1 => {\n          this.advocatemasters = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Advocate Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" disabled\n                                        id=\"AdvocateCode\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"CODE\">\n                                    <label for=\"AdvocateCode\">Advocate Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"Description\"\n                                        required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"advocatemasters?.length != 0\">\n                                    <tr *ngFor=\"let data of advocatemasters\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.CODE }}</td>\n                                        <td>{{ data.NAME }}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"advocatemasters?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Advocate Code\" name=\"CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class AdvocateService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  url = \"http://localhost:4000/advocate-master\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { AuthorityMasterService } from './authority-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface AuthorityMaster {\n  CODE: number,\n  NAME: string,\n}\n\n@Component({\n  selector: 'app-authority-master',\n  templateUrl: './authority-master.component.html',\n  styleUrls: ['./authority-master.component.scss']\n})\nexport class AuthorityMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  authorityMaster: AuthorityMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private authorityMasterService: AuthorityMasterService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/authority-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.authorityMaster = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Authority Code',\n          data: 'CODE'\n        }, {\n          title: 'Description',\n          data: 'NAME'\n        },\n      ],\n      dom: 'Blrtip',\n    };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n      NAME: ['', [Validators.pattern, Validators.required]]\n    });\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n      'NAME': formVal.NAME\n    }\n    this.authorityMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.authorityMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n        'NAME': data.NAME,\n      })\n    })\n  }\n\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.authorityMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Authority master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.authorityMasterService.deleteData(id).subscribe(data1 => {\n          this.authorityMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Authority Manager</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \"\n                                        id=\"AuthorityCode\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"CODE\" disabled>\n                                    <label for=\"AuthorityCode\">Authority Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"Description\"\n                                        required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"authorityMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of authorityMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" -->\n                                            <!-- (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.CODE}}</td>\n                                        <td>{{ data.NAME}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"authorityMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Authority Code\" name=\"CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot> \n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class AuthorityMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = \"http://localhost:4000/authority-master\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport { BankService } from './bank-master.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface BankMaster {\r\n  BANK_CODE: number;\r\n  BANK_NAME: string;\r\n  BANK_SHORTNAME: string;\r\n  LEDGER_CODE: number;\r\n  BANKCODE: number;\r\n  DD_APPLICABLE: boolean;\r\n  GL_ACNO: number;\r\n  HO_SUB_GLACNO: number;\r\n  BANKERS_COMM_APPLICABLE: boolean;\r\n  RIGHT_TO_PREPARE_DD: boolean;\r\n  PARTICIPATE_IN_CLEARING: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-bank-master',\r\n  templateUrl: './bank-master.component.html',\r\n  styleUrls: ['./bank-master.component.scss']\r\n})\r\nexport class BankMasterComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  // dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  bankmasters: BankMaster[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: any = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  //variable to get Id to update\r\n  updateID: number = 0;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private bankService: BankService,\r\n    private fb: FormBuilder) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n        if (dataTableParameters.search.value != '') {\r\n          this.filter = dataTableParameters.search.value;\r\n          this.filterObject = [\r\n            { name: \"BANK_NAME\", type: \"default\" },\r\n            { name: \"BANK_SHORTNAME\", type: \"default\" },\r\n            { name: \"LEDGER_CODE\", type: \"default\" }\r\n          ]\r\n          datatableRequestParam = {\r\n            page: this.page,\r\n            limit: dataTableParameters.length,\r\n            filter: dataTableParameters.search.value,\r\n            filter_in: this.filterObject\r\n          }\r\n        }\r\n        else {\r\n          datatableRequestParam = {\r\n            page: this.page,\r\n            limit: dataTableParameters.length\r\n          }\r\n        }\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            'http://localhost:4000/bank-master',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.bankmasters = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Bank Code',\r\n          data: 'BANK_CODE'\r\n        },\r\n        {\r\n          title: 'Bank Name',\r\n          data: 'BANK_NAME'\r\n        },\r\n        {\r\n          title: 'Bank Short Name',\r\n          data: 'BANK_SHORTNAME'\r\n        },\r\n        {\r\n          title: 'Ledger Code',\r\n          data: 'LEDGER_CODE'\r\n        },\r\n        {\r\n          title: 'Bank Code',\r\n          data: 'BANKCODE'\r\n        },\r\n        {\r\n          title: 'DD Applicable',\r\n          data: 'DD_APPLICABLE'\r\n        },\r\n        {\r\n          title: 'GL Code',\r\n          data: 'GL_ACNO'\r\n        },\r\n        {\r\n          title: 'Sub GL Code',\r\n          data: 'HO_SUB_GLACNO'\r\n        },\r\n        {\r\n          title: 'Bankers Commission Applicable',\r\n          data: 'BANKERS_COMM_APPLICABLE'\r\n        },\r\n        {\r\n          title: 'Allow To Prepare D.D. By our Bank',\r\n          data: 'RIGHT_TO_PREPARE_DD'\r\n        },\r\n        {\r\n          title: 'Participation in Clearing',\r\n          data: 'PARTICIPATE_IN_CLEARING'\r\n        }\r\n      ],\r\n      dom: 'Blrtip',\r\n    }\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      BANK_CODE: [''],\r\n      LEDGER_CODE: ['', [Validators.pattern]],\r\n      BANK_NAME: ['', [Validators.pattern]],\r\n      BANK_SHORTNAME: ['', [Validators.pattern, Validators.required]],\r\n      DD_APPLICABLE: [false],\r\n      BANKERS_COMM_APPLICABLE: [false],\r\n      RIGHT_TO_PREPARE_DD: [false],\r\n      PARTICIPATE_IN_CLEARING: [false],\r\n      GL_ACNO: ['', [Validators.pattern]],\r\n      HO_SUB_GLACNO: ['', [Validators.pattern]],\r\n      BANKCODE: ['', [Validators.pattern]],\r\n    });\r\n  }\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'BANK_CODE': formVal.BANK_CODE,\r\n      'LEDGER_CODE': formVal.LEDGER_CODE,\r\n      'BANK_NAME': formVal.BANK_NAME,\r\n      'BANK_SHORTNAME': formVal.BANK_SHORTNAME,\r\n      'DD_APPLICABLE': formVal.DD_APPLICABLE,\r\n      'BANKERS_COMM_APPLICABLE': formVal.BANKERS_COMM_APPLICABLE,\r\n      'RIGHT_TO_PREPARE_DD': formVal.RIGHT_TO_PREPARE_DD,\r\n      'PARTICIPATE_IN_CLEARING': formVal.PARTICIPATE_IN_CLEARING,\r\n      'GL_ACNO': formVal.GL_ACNO,\r\n      'HO_SUB_GLACNO': formVal.HO_SUB_GLACNO,\r\n      'BANKCODE': formVal.BANKCODE,\r\n    }\r\n    console.log(dataToSend);\r\n    this.bankService.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n    //To clear form\r\n    this.resetForm();\r\n\r\n  }\r\n\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.bankService.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        'BANK_CODE': data.BANK_CODE,\r\n        'LEDGER_CODE': data.LEDGER_CODE,\r\n        'BANK_NAME': data.BANK_NAME,\r\n        'BANK_SHORTNAME': data.BANK_SHORTNAME,\r\n        'DD_APPLICABLE': data.DD_APPLICABLE,\r\n        'BANKERS_COMM_APPLICABLE': data.BANKERS_COMM_APPLICABLE,\r\n        'RIGHT_TO_PREPARE_DD': data.RIGHT_TO_PREPARE_DD,\r\n        'PARTICIPATE_IN_CLEARING': data.PARTICIPATE_IN_CLEARING,\r\n        'GL_ACNO': data.GL_ACNO,\r\n        'HO_SUB_GLACNO': data.HO_SUB_GLACNO,\r\n        'BANKCODE': data.BANKCODE,\r\n      })\r\n    })\r\n  }\r\n  //Method for update data \r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    this.bankService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n      this.resetForm();\r\n    })\r\n  }\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete bank master data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.bankService.deleteData(id).subscribe(data1 => {\r\n          this.bankmasters = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n          console.log(error)\r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n  }\r\n\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n}","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Bank Master</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"BANK_CODE\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"BankCode\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\r\n                                        formControlName=\"BANK_CODE\" disabled>\r\n                                    <label for=\"BankCode\">Bank Code</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"BANK_NAME\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"BankName\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"BANK_NAME\">\r\n                                    <label for=\"BankName\">Bank Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['BANK_NAME'].invalid && (angForm.controls['BANK_NAME'].dirty || angForm.controls['BANK_NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BANK_NAME'].errors?.pattern || angForm.controls['BANK_NAME'].errors?.required || angForm.controls['BANK_NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"BANK_SHORTNAME\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"BankShortName\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"25\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\r\n                                        formControlName=\"BANK_SHORTNAME\">\r\n                                    <label for=\"BankShortName\">Bank Short Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['BANK_SHORTNAME'].invalid && (angForm.controls['BANK_SHORTNAME'].dirty || angForm.controls['BANK_SHORTNAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BANK_SHORTNAME'].errors?.pattern || angForm.controls['BANK_SHORTNAME'].errors?.required || angForm.controls['BANK_SHORTNAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <h6>Clearing House Details</h6>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"LEDGER_CODE\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"LedgerCode\" pattern=\"^[0-9]+$\" maxlength=\"1\"\r\n                                        title=\"Input allowed only  0-9\" formControlName=\"LEDGER_CODE\">\r\n                                    <label for=\"LedgerCode\">Ledger Code</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['LEDGER_CODE'].invalid && (angForm.controls['LEDGER_CODE'].dirty || angForm.controls['LEDGER_CODE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['LEDGER_CODE'].errors?.pattern || angForm.controls['LEDGER_CODE'].errors?.maxlength\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"BANKCODE\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"CBankCode\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" maxlength=\"2\"\r\n                                        formControlName=\"BANKCODE\">\r\n                                    <label for=\"CBankCode\">Bank Code</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['BANKCODE'].invalid && (angForm.controls['BANKCODE'].dirty || angForm.controls['BANKCODE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BANKCODE'].errors?.pattern || angForm.controls['BANKCODE'].errors?.maxlength\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <h6>DD Details</h6>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"border-checkbox-section\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" name=\"DD_APPLICABLE\" id=\"checkbox1\" value=\"checkbox\" formControlName=\"DD_APPLICABLE\">\r\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">DD Applicable</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"GL_ACNO\" class=\"form-control\" placeholder=\" \" id=\"GLCode\"\r\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" maxlength=\"6\"\r\n                                        formControlName=\"GL_ACNO\">\r\n                                    <label for=\"GLCode\">GL Code</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['GL_ACNO'].invalid && (angForm.controls['GL_ACNO'].dirty || angForm.controls['GL_ACNO'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['GL_ACNO'].errors?.pattern || angForm.controls['GL_ACNO'].errors?.maxlength\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"SubGLCode\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"SubGLCode\" pattern=\"^[0-9]+$\" maxlength=\"6\" title=\"Input allowed only  0-9\"\r\n                                        formControlName=\"HO_SUB_GLACNO\">\r\n                                    <label for=\"SubGLCode\">Sub GL Code</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['HO_SUB_GLACNO'].invalid && (angForm.controls['HO_SUB_GLACNO'].dirty || angForm.controls['HO_SUB_GLACNO'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['HO_SUB_GLACNO'].errors?.pattern || angForm.controls['HO_SUB_GLACNO'].errors?.maxlength\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"border-checkbox-section\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" name=\"BANKERS_COMM_APPLICABLE\" id=\"checkbox2\" value=\"checkbox\" formControlName=\"BANKERS_COMM_APPLICABLE\">\r\n                                    <label class=\"border-checkbox-label\" for=\"checkbox2\">Bankers Commission\r\n                                        Applicable</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"border-checkbox-section\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" name=\"RIGHT_TO_PREPARE_DD\" id=\"checkbox3\" value=\"checkbox\" formControlName=\"RIGHT_TO_PREPARE_DD\">\r\n                                    <label class=\"border-checkbox-label\" for=\"checkbox3\">Allow To Prepare D. D. by our\r\n                                        Bank<span class=\"required\"> </span></label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"border-checkbox-section\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" name=\"PARTICIPATE_IN_CLEARING\" id=\"checkbox4\" value=\"checkbox\" checked formControlName=\"PARTICIPATE_IN_CLEARING\">\r\n                                    <label class=\"border-checkbox-label\" for=\"checkbox4\">Participation in\r\n                                        Clearing<span class=\"required\"> </span></label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"bankmasters?.length != 0\">\r\n                                    <tr *ngFor=\"let data of bankmasters\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                            <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button>\r\n                                        </td>\r\n                                        <td>{{ data.BANK_CODE }}</td>\r\n                                        <td>{{ data.BANK_NAME }}</td>\r\n                                        <td>{{ data.BANK_SHORTNAME }}</td>\r\n                                        <td>{{ data.LEDGER_CODE }}</td>\r\n                                        <td>{{ data.BANKCODE }}</td>\r\n                                        <td>{{ data.DD_APPLICABLE }}</td>\r\n                                        <td>{{ data.GL_ACNO }}</td>\r\n                                        <td>{{ data.HO_SUB_GLACNO }}</td>\r\n                                        <td>{{ data.BANKERS_COMM_APPLICABLE }}</td>\r\n                                        <td>{{ data.RIGHT_TO_PREPARE_DD }}</td>\r\n                                        <td>{{ data.PARTICIPATE_IN_CLEARING }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"bankmasters?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search CODE\" name=\"search-BANK_CODE\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search BANK NAME\" name=\"search-BANK_NAME\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search BANK SHORT NAME\" name=\"search-BANK_SHORTNAME\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Ledger Code\" name=\"search-LEDGER_CODE\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search BANK CODE\" name=\"search-BANKCODE\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search DD APPLICABLE\" name=\"search-DD_APPLICABLE\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search GL ACNO\" name=\"search-GL_ACNO\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Sub GL Code\" name=\"search-HO_SUB_GLACNO\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Bankers Commission Applicable\" name=\"search-RIGHT_TO_PREPARE_DD\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Allow To Prepare D.D. By our Bank\" name=\"search-RIGHT_TO_PREPARE_DD\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Participation in Clearing\" name=\"search-PARTICIPATE_IN_CLEARING\"></th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class BankService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n // url = \"http://localhost:4000/bank-master\";\r\n url = environment.base_url;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/bank-master/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/bank-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/bank-master/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/bank-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n// Service File For Handling CRUD Operation\nimport { CastMasterService } from './cast-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n// Angular Datatable Directive \nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n\n}\n// For fetching values from backend\ninterface CastMaster {\n  CODE: number;\n  NAME: string;\n\n}\n@Component({\n  selector: 'app-cast-master',\n  templateUrl: './cast-master.component.html',\n  styleUrls: ['./cast-master.component.scss']\n})\nexport class CastMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Created Form Group\n  angForm: FormGroup;\n  // Store data from backend\n  castmaster: CastMaster[];\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  updateID: number = 0;\n  constructor(private fb: FormBuilder,\n    private castMasterService: CastMasterService,\n    private http: HttpClient) { this.createForm(); }\n\n\n  ngOnInit(): void {\n    const that = this;\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        if (dataTableParameters.search.value != '') {\n          this.filter = dataTableParameters.search.value;\n          this.filterObject = [\n\n\n          ]\n\n          datatableRequestParam = {\n            page: this.page,\n            limit: dataTableParameters.length,\n            filter: dataTableParameters.search.value,\n            filter_in: this.filterObject\n          }\n        }\n        else {\n          datatableRequestParam = {\n            page: this.page,\n            limit: dataTableParameters.length\n          }\n        }\n        that.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/cast-master',\n\n            dataTableParameters\n          ).subscribe(resp => {\n            this.castmaster = resp.data;\n\n\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n\n            });\n          });\n      },\n\n      columns: [\n        {\n          title: 'Action',\n\n        },\n        {\n          title: 'Category Code',\n\n        },\n        {\n          title: 'Description',\n        }\n      ],\n      dom: 'Blrtip',\n\n    };\n    this.angForm = new FormGroup({\n      'CODE': new FormControl(''),\n      'NAME': new FormControl(''),\n\n\n    })\n\n  }\n\n\n  // Method to handle validation of form\n  createForm() {\n    this.angForm = this.fb.group({\n\n      CODE: [''],\n      NAME: ['', [Validators.pattern, Validators.required]]\n    });\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      \"CODE\": formVal.CODE,\n      \"NAME\": formVal.NAME,\n    }\n    this.castMasterService.postData(dataToSend).subscribe(data => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      this.rerender();\n    }, (error) => {\n\n\n    })\n    this.resetForm();\n  }\n\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.castMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id\n      this.angForm.setValue({\n        'CODE': data.CODE,\n        'NAME': data.NAME,\n\n\n      })\n\n    })\n  }\n  //Method for update data \n  updateData(id) {\n\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n\n    this.castMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n  //Method for delete data\n  delClickHandler(id: number) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Cast Master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n        this.castMasterService.deleteData(id).subscribe(data1 => {\n          this.castmaster = data1;\n\n        })\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n\n  }\n\n\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n\n\n\n\n\n\n}\n\n\n\n\n\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Cast Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" maxlength=\"4\" disabled\n                                        id=\"CastCode\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" formControlName=\"CODE\">\n                                    <label for=\"CastCode\">Cast Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" maxlength=\"100\"\n                                        id=\"Description\" required=\"\"  pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                        </div>\n\n                    </div>\n\n                </div>\n            </form>\n\n        </div>\n\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                                <tbody *ngIf=\"castmaster?.length != 0\">\n                                    <tr *ngFor=\"let data of castmaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n\n                                        <td>{{ data.CODE }}</td>\n                                        <td>{{ data.NAME }}</td>\n\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"castmaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Code\" name=\"search-CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Name\" name=\"search-NAME\"></th>\n\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class CastMasterService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  url = \"http://localhost:4000/cast-master\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        Swal.fire('Please Input Proper Data !');\r\n        return throwError(error);\r\n      })\r\n      // catchError((e: any) => Observable.throw(this.errorHandler(e)))\r\n    )\r\n  }\r\n  errorHandler(error: any): void {\r\n    console.log(error)\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n \r\n    return this.http.put(this.url + '/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n// Service File For Handling CRUD Operation\r\nimport { CategoryMasterService } from './category-master.service'\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs';\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n\r\n}\r\n// For fetching values from backend\r\ninterface CategoryMaster {\r\n  CODE: number;\r\n  NAME: string;\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-category-master',\r\n  templateUrl: './category-master.component.html',\r\n  styleUrls: ['./category-master.component.scss']\r\n})\r\nexport class CategoryMasterComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  // Store data from backend\r\n  categorymaster: CategoryMaster[];\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  updateID: number = 0;\r\n\r\n  // column search\r\n  filterData = {};\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private categoryMasterService: CategoryMasterService,\r\n    private http: HttpClient) { this.createForm(); }\r\n\r\n  ngOnInit(): void {\r\n    const that = this;\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n        \r\n        // column filter\r\n        dataTableParameters.columns.forEach(element => {\r\n          if(element.search.value !=''){\r\n  \r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          }else{\r\n  \r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if(this.filterData.hasOwnProperty(element.data)){\r\n                let value = this.filterData[getColumnName];\r\n                if(columnValue != undefined || value != undefined){\r\n                  delete this.filterData[element.data];\r\n                } \r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n\r\n        that.http\r\n          .post<DataTableResponse>(\r\n            'http://localhost:4000/category-master',\r\n\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.categorymaster = resp.data;\r\n\r\n\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n\r\n            });\r\n          });\r\n      },\r\n\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n              render: function (data: any, type: any, full: any) {\r\n                return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n              }\r\n        },\r\n        {\r\n          title: 'Category Code',\r\n\r\n        },\r\n        {\r\n          title: 'Description',\r\n        }\r\n      ],\r\n      dom: 'Blrtip',\r\n\r\n    };\r\n    this.angForm = new FormGroup({\r\n      'CODE': new FormControl(''),\r\n      'NAME': new FormControl(''),\r\n\r\n\r\n    })\r\n\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n\r\n      CODE: [''],\r\n      NAME: ['', [Validators.pattern, Validators.required]]\r\n    });\r\n  }\r\n\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      \"CODE\": formVal.CODE,\r\n      \"NAME\": formVal.NAME,\r\n\r\n    }\r\n\r\n    this.categoryMasterService.postData(dataToSend).subscribe(data => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      this.rerender();\r\n    }, (error) => {\r\n\r\n\r\n    })\r\n     this.resetForm();\r\n  }\r\n\r\n\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.categoryMasterService.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        'CODE': data.CODE,\r\n        'NAME': data.NAME,\r\n\r\n\r\n      })\r\n\r\n    })\r\n  }\r\n  //Method for update data \r\n  updateData(id) {\r\n\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n\r\n    this.categoryMasterService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n       this.resetForm();\r\n    })\r\n  }\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete Category Master data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your data has been deleted.',\r\n          'success'\r\n        )\r\n        this.categoryMasterService.deleteData(id).subscribe(data1 => {\r\n          this.categorymaster = data1;\r\n\r\n        })\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n    ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          debugger\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }else{\r\n            that\r\n            .search(this['value'])\r\n            .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Category Master</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" maxlength=\"4\" disabled\r\n                                        id=\"CategoryCode\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" formControlName=\"CODE\">\r\n                                    <label for=\"CategoryCode\">Category Code</label>\r\n                                </span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" maxlength=\"100\"\r\n                                        id=\"Description\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\r\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required|| angForm.controls['NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                                <tbody *ngIf=\"categorymaster?.length != 0\">\r\n                                    <tr *ngFor=\"let data of categorymaster\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        </td>\r\n\r\n                                        <td>{{ data.CODE }}</td>\r\n                                        <td>{{ data.NAME }}</td>\r\n\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"categorymaster?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search CODE\" name=\"search-CODE\">\r\n                                            <th><input type=\"text\" placeholder=\"Search NAME\" name=\"search-NAME\">\r\n\r\n                                            </th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment';\r\n@Injectable()\r\nexport class CategoryMasterService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  //url = \"http://localhost:4000/category-master\";\r\n  url = environment.base_url;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/category-master/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/category-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n  \r\n    return this.http.put(this.url + '/category-master/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/category-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport { CitytMasterService} from './city-master.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface CityMaster {\r\n  CODE: number,\r\n  AC_NO: number,\r\n  NAME: string,\r\n}\r\n@Component({\r\n  selector: 'app-city-master',\r\n  templateUrl: './city-master.component.html',\r\n  styleUrls: ['./city-master.component.scss']\r\n})\r\nexport class CityMasterComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  cityMaster: CityMaster[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\nupdateID:number=0;\r\n// column filter\r\nfilterData = {};\r\n  constructor(\r\n    private http: HttpClient,\r\n    private citytMasterService: CitytMasterService,\r\n    private fb: FormBuilder) {\r\n   \r\n  }\r\n\r\n\r\n \r\n \r\n\r\nngOnInit(): void {\r\n  // Fetching Server side data\r\n  this.dtExportButtonOptions = {\r\n    pagingType: 'full_numbers',\r\n    paging: true,\r\n    pageLength: 10,\r\n    serverSide: true,\r\n    processing: true,\r\n    ajax: (dataTableParameters: any, callback) => {\r\n      dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n      dataTableParameters.maxNumber =\r\n        dataTableParameters.start + dataTableParameters.length;\r\n      let datatableRequestParam: any;\r\n      this.page = dataTableParameters.start / dataTableParameters.length;\r\n      \r\n      // \r\n      dataTableParameters.columns.forEach(element => {\r\n        if(element.search.value !=''){\r\n\r\n          let string = element.search.value;\r\n          this.filterData[element.data] = string;\r\n        }else{\r\n\r\n          let getColumnName = element.data;\r\n          let columnValue = element.value;\r\n          if(this.filterData.hasOwnProperty(element.data)){\r\n              let value = this.filterData[getColumnName];\r\n              if(columnValue != undefined || value != undefined){\r\n                delete this.filterData[element.data];\r\n              } \r\n          }\r\n        }\r\n      });\r\n      dataTableParameters['filterData'] = this.filterData;\r\n\r\n      this.http\r\n        .post<DataTableResponse>(\r\n          'http://localhost:4000/city-master',\r\n          dataTableParameters\r\n        ).subscribe(resp => {\r\n          this.cityMaster = resp.data;\r\n         \r\n          callback({\r\n            recordsTotal: resp.recordsTotal,\r\n            recordsFiltered: resp.recordsTotal,\r\n            data: []\r\n          });\r\n        });\r\n    },\r\n    columns: [\r\n      {\r\n        title: 'Action',\r\n        render: function (data: any, type: any, full: any) {\r\n          return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n        }\r\n      },\r\n      {\r\n        title: 'City Code',\r\n        data: 'CITY_CODE',\r\n      },\r\n      {\r\n        title: 'City Name',\r\n        data: 'CITY_NAME',\r\n      },\r\n      {\r\n        title: 'Distance',\r\n        data: 'DISTANCE',\r\n      },\r\n      {\r\n        title: 'Taluka Code',\r\n        data: 'TALUKA_CODE',\r\n      },\r\n      {\r\n        title: 'District Code',\r\n        data: 'DISTRICT_CODE',\r\n      },\r\n      {\r\n        title: 'State Code',\r\n        data: 'STATE_CODE',\r\n      },\r\n      {\r\n        title: 'Region',\r\n        data: 'REGION_CODE',\r\n      },\r\n    ],\r\n    dom: 'Blrtip',\r\n  };\r\n  this.createForm();\r\n}\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      \r\n      CITY_CODE: [''],\r\n      DISTANCE: ['',[Validators.pattern]],\r\n      CITY_NAME:   ['',[Validators.required,Validators.pattern]],\r\n      TALUKA_CODE: ['',[Validators.required,Validators.pattern]],\r\n      STATE_CODE:  ['',[Validators.required,Validators.pattern]],\r\n      DISTRICT_CODE:     ['',[Validators.required,Validators.pattern]],\r\n      REGION_CODE: ['',[Validators.required,Validators.pattern]],\r\n    });\r\n  }\r\n   // Method to insert data into database through NestJS\r\n   submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n     \r\n      'CITY_CODE': formVal.CITY_CODE,\r\n          'CITY_NAME': formVal.CITY_NAME,\r\n          'DISTANCE': formVal.DISTANCE,\r\n          'TALUKA_CODE': formVal.TALUKA_CODE,\r\n          'DISTRICT_CODE': formVal.DISTRICT_CODE,\r\n          'STATE_CODE': formVal.STATE_CODE,\r\n          'REGION_CODE': formVal.REGION_CODE\r\n    }\r\n    this.citytMasterService.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n\r\n    })\r\n    //To clear form\r\n     this.resetForm();\r\n  }\r\n\r\n    //Method for append data into fields\r\n    editClickHandler(id) {\r\n      this.showButton = false;\r\n      this.updateShow = true;\r\n      this.citytMasterService.getFormData(id).subscribe(data => {\r\n        this.updateID=data.id;\r\n        this.angForm.setValue({\r\n          'CITY_CODE': data.CITY_CODE,\r\n          'CITY_NAME': data.CITY_NAME,\r\n          'DISTANCE': data.DISTANCE,\r\n          'TALUKA_CODE': data.TALUKA_CODE,\r\n          'DISTRICT_CODE': data.DISTRICT_CODE,\r\n          'STATE_CODE': data.STATE_CODE,\r\n          'REGION_CODE': data.REGION_CODE\r\n        })\r\n      })\r\n    }\r\n\r\n   //Method for update data \r\n   updateData(id) {\r\n  \r\n    let data = this.angForm.value;\r\n     data['id']=this.updateID;\r\n   \r\n    this.citytMasterService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n       this.resetForm();\r\n    })\r\n  }\r\n\r\n   //Method for delete data\r\n   delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete city master data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.citytMasterService.deleteData(id).subscribe(data1 => {\r\n          this.cityMaster = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n         \r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          debugger\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }else{\r\n            that\r\n            .search(this['value'])\r\n            .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n   // Reset Function\r\n   resetForm() {\r\n    this.createForm();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>City Master</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"CITY_CODE\" class=\"form-control\" placeholder=\" \" maxlength=\"4\"\r\n                                        id=\"label-name\" disabled  pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" formControlName=\"CITY_CODE\">\r\n                                    <label for=\"label-name\">City Code</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"CITY_NAME\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"CityName\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"CITY_NAME\">\r\n                                    <label for=\"CityName\">City Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['CITY_NAME'].invalid && (angForm.controls['CITY_NAME'].dirty || angForm.controls['CITY_NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['CITY_NAME'].errors?.pattern || angForm.controls['CITY_NAME'].errors?.required|| angForm.controls['CITY_NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"DISTANCE\" class=\"form-control\" placeholder=\" \" maxlength=\"4\"\r\n                                        id=\"Distance\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" formControlName=\"DISTANCE\">\r\n                                    <label for=\"Distance\">Distance from Branch(in km)</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['DISTANCE'].invalid && (angForm.controls['DISTANCE'].dirty || angForm.controls['DISTANCE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['DISTANCE'].errors?.pattern ||angForm.controls['DISTANCE'].errors?.maxlength\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"TALUKA_CODE\" class=\"form-control\" placeholder=\" \" maxlength=\"4\"\r\n                                        id=\"TalukaCode\" required=\"\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" formControlName=\"TALUKA_CODE\">\r\n                                    <label for=\"TalukaCode\">Taluka Code<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TALUKA_CODE'].invalid && (angForm.controls['TALUKA_CODE'].dirty || angForm.controls['TALUKA_CODE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TALUKA_CODE'].errors?.pattern || angForm.controls['TALUKA_CODE'].errors?.required|| angForm.controls['TALUKA_CODE'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"DISTRICT_CODE\" class=\"form-control\" placeholder=\" \" maxlength=\"4\"\r\n                                        id=\"DistrictCode\" required=\"\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" formControlName=\"DISTRICT_CODE\">\r\n                                    <label for=\"DistrictCode\">District Code<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['DISTRICT_CODE'].invalid && (angForm.controls['DISTRICT_CODE'].dirty || angForm.controls['DISTRICT_CODE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['DISTRICT_CODE'].errors?.pattern || angForm.controls['DISTRICT_CODE'].errors?.required|| angForm.controls['DISTRICT_CODE'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"STATE_CODE\" class=\"form-control\" placeholder=\" \" maxlength=\"4\"\r\n                                        id=\"StateCode\" required=\"\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" formControlName=\"STATE_CODE\">\r\n                                    <label for=\"StateCode\">State Code<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['STATE_CODE'].invalid && (angForm.controls['STATE_CODE'].dirty || angForm.controls['STATE_CODE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['STATE_CODE'].errors?.pattern || angForm.controls['STATE_CODE'].errors?.required|| angForm.controls['STATE_CODE'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"REGION_CODE\" class=\"form-control\" placeholder=\" \" maxlength=\"4\"\r\n                                        id=\"Region\" required=\"\"  pattern=\"^[0-9]+$\"\r\n                                        title=\"Input allowed only  0-9\" formControlName=\"REGION_CODE\">\r\n                                    <label for=\"Region\">Region<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['REGION_CODE'].invalid && (angForm.controls['REGION_CODE'].dirty || angForm.controls['REGION_CODE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['REGION_CODE'].errors?.pattern || angForm.controls['REGION_CODE'].errors?.required || angForm.controls['REGION_CODE'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-2\">\r\n                                <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\r\n                                <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                                <tbody *ngIf=\"cityMaster?.length != 0\">\r\n                                    <tr *ngFor=\"let data of cityMaster\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        </td>\r\n\r\n                                        <td>{{ data.CITY_CODE }}</td>\r\n                                        <td>{{ data.CITY_NAME }}</td>\r\n                                        <td>{{ data.DISTANCE }}</td>\r\n                                        <td>{{ data.TALUKA_CODE }}</td>\r\n                                        <td>{{ data.DISTRICT_CODE }}</td>\r\n                                        <td>{{ data.STATE_CODE }}</td>\r\n                                        <td>{{ data.REGION_CODE }}</td>\r\n\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"cityMaster?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search City Code\" name=\"search-CITY_CODE\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search City Name\" name=\"search-CITY_NAME\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Distance\" name=\"search-DISTANCE\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Taluka Code\" name=\"search-TALUKA_CODE\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search District Code\" name=\"search-DISTRICT_CODE\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search State Code\" name=\"search-STATE_CODE\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Region\" name=\"search-REGION_CODE\"></th>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment'\r\n\r\n\r\n@Injectable()\r\nexport class CitytMasterService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n   // API \r\n  //url = \"http://localhost:4000/city-master\";\r\n  url = environment.base_url;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/city-master/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/city-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n   //Updation Operation\r\n   updateData(data): Observable<any> {\r\n  \r\n    return this.http.put(this.url + '/city-master/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/city-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport { ClearingBranchService } from './clearing-branch-master.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface ClearingBranch {\r\n  CODE: number,\r\n  AC_NO: number,\r\n  NAME: string,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-clearing-branch-master',\r\n  templateUrl: './clearing-branch-master.component.html',\r\n  styleUrls: ['./clearing-branch-master.component.scss']\r\n})\r\nexport class ClearingBranchMasterComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  clearingBranches: ClearingBranch[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  //variable to get Id to update\r\n  updateID: number = 0;\r\n  filterData = {};\r\n  constructor(\r\n    private http: HttpClient,\r\n    private clearingBranchService: ClearingBranchService,\r\n    private fb: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n     \r\n        dataTableParameters.columns.forEach(element => {\r\n          if(element.search.value !=''){\r\n  \r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          }else{\r\n  \r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if(this.filterData.hasOwnProperty(element.data)){\r\n                let value = this.filterData[getColumnName];\r\n                if(columnValue != undefined || value != undefined){\r\n                  delete this.filterData[element.data];\r\n                } \r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            'http://localhost:4000/clearing-branch-master',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.clearingBranches = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Code',\r\n          data: 'CODE',\r\n        },\r\n        {\r\n          title: 'Name',\r\n          data: 'NAME',\r\n        },\r\n        {\r\n          title: 'Account Number',\r\n          data: 'AC_NO',\r\n        },\r\n      ],\r\n      dom: 'Blrtip',\r\n    };\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      CODE: [''],\r\n      AC_NO: ['', [Validators.pattern]],\r\n      NAME: ['', [Validators.pattern, Validators.required]],\r\n    });\r\n  }\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'CODE': formVal.CODE,\r\n      'AC_NO': formVal.AC_NO,\r\n      'NAME': formVal.NAME,\r\n    }\r\n    this.clearingBranchService.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n    //To clear form\r\n    this.resetForm();\r\n  }\r\n\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.clearingBranchService.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        'CODE': data.CODE,\r\n        'AC_NO': data.AC_NO,\r\n        'NAME': data.NAME,\r\n      })\r\n    })\r\n  }\r\n  //Method for update data \r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    this.clearingBranchService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n      this.resetForm();\r\n    })\r\n  }\r\n\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete clearing branch master data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.clearingBranchService.deleteData(id).subscribe(data1 => {\r\n          this.clearingBranches = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n          console.log(error)\r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          debugger\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }else{\r\n            that\r\n            .search(this['value'])\r\n            .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Clearing Branch Master</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" id=\"BranchCode\"\r\n                                        pattern=\"^[0-9]+$\" disabled\r\n                                        title=\"Input allowed only  0-9\" formControlName=\"CODE\">\r\n                                    <label for=\"BranchCode\">Branch Code</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"BranchName\"\r\n                                        required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\r\n                                    <label for=\"BranchName\">Branch Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_NO\" class=\"form-control\" placeholder=\" \" id=\"AccountNo\"\r\n                                       pattern=\"^[0-9]+$\" maxlength=\"15\" minlength=\"15\"\r\n                                        title=\"Input allowed only  0-9\" formControlName=\"AC_NO\">\r\n                                    <label for=\"AccountNo\">Account No.</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_NO'].invalid && (angForm.controls['AC_NO'].dirty || angForm.controls['AC_NO'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.pattern || angForm.controls['AC_NO'].errors?.maxlength || angForm.controls['AC_NO'].errors?.minlength\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"clearingBranches?.length != 0\">\r\n                                    <tr *ngFor=\"let data of clearingBranches\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        </td>\r\n                                        <td>{{ data.CODE }}</td>\r\n                                        <td>{{ data.NAME }}</td>\r\n                                        <td>{{ data.AC_NO }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"clearingBranches?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search CODE\" name=\"search-CODE\">\r\n                                            <th><input type=\"text\" placeholder=\"Search NAME\" name=\"search-NAME\">\r\n                                                <th><input type=\"text\" placeholder=\"Search AC_NO\" name=\"search-AC_NO\">\r\n                                                </th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment'\r\n\r\n\r\n@Injectable()\r\nexport class ClearingBranchService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n   // API \r\n  //url = \"http://localhost:4000/clearing-branch-master\";\r\n  url = environment.base_url;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/clearing-branch-master/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/clearing-branch-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/clearing-branch-master/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/clearing-branch-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { CompanyGroupLinkMasterService } from './company-group-link-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n//Used to dropdown\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SchemeCodeDropdownService } from '../../../../../shared/dropdownService/scheme-code-dropdown.service';\nimport { CompanyGroupMasterDropdownService } from '../../../../../shared/dropdownService/company-group-master-dropdown.service';\nimport { first } from 'rxjs/operators';\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface CompanyGroupLinkMaster {\n  COMP_CODE: string,\n  CODE: string,\n  FROM_AC: number,\n  TO_AC: number,\n}\n@Component({\n  selector: 'app-company-group-link-master',\n  templateUrl: './company-group-link-master.component.html',\n  styleUrls: ['./company-group-link-master.component.scss']\n})\n\nexport class CompanyGroupLinkMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n \n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  companyGroupLinkMaster: CompanyGroupLinkMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  updateID: number = 0;\n\n  companyCode: any;\n  schemeCode: any;\n\n  //for search functionality\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private companyGroupLinkMasterService: CompanyGroupLinkMasterService,\n    private fb: FormBuilder,\n    public schemeCodeService: SchemeCodeDropdownService,\n    public companyGroupService: CompanyGroupMasterDropdownService,\n  ) {\n\n  }\n\n\n\n\n\n  ngOnInit(): void {\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        dataTableParameters.columns.forEach(element => {\n          if(element.search.value !=''){\n  \n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          }else{\n  \n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if(this.filterData.hasOwnProperty(element.data)){\n                let value = this.filterData[getColumnName];\n                if(columnValue != undefined || value != undefined){\n                  delete this.filterData[element.data];\n                } \n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/company-group-link-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.companyGroupLinkMaster = resp.data;\n\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Company Code'\n        },\n        {\n          title: 'Scheme Code'\n        },\n        {\n          title: 'From Account'\n        },\n        {\n          title: 'To Account'\n        },\n\n      ],\n      dom: 'Blrtip',\n    };\n    this.createForm();\n\n\n    this.companyGroupService.getCompanyGroupMasterList().pipe(first()).subscribe(data => {\n      this.companyCode = data;\n    })\n    this.schemeCodeService.getSchemeCodeList().pipe(first()).subscribe(data => {\n      this.schemeCode = data;\n    })\n  }\n \n  createForm() {\n    this.angForm = this.fb.group({\n\n      COMP_CODE: ['', [Validators.required]],\n      CODE: ['', [Validators.required]],\n      FROM_AC: ['', [Validators.pattern]],\n      TO_AC: ['', [Validators.pattern]],\n\n    });\n  }\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n\n      'COMP_CODE': formVal.COMP_CODE,\n      'CODE': formVal.CODE,\n      'FROM_AC': formVal.FROM_AC,\n      'TO_AC': formVal.TO_AC,\n\n    }\n    this.companyGroupLinkMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.companyGroupLinkMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'COMP_CODE': data.COMP_CODE,\n        'CODE': data.CODE,\n        'FROM_AC': data.FROM_AC,\n        'TO_AC': data.TO_AC\n\n      })\n    })\n  }\n\n  //Method for update data \n  updateData(id) {\n\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n\n    this.companyGroupLinkMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  // Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Company Group Link Master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.companyGroupLinkMasterService.deleteData(id).subscribe(data1 => {\n          this.companyGroupLinkMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          debugger\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          }else{\n            that\n            .search(this['value'])\n            .draw();\n          }\n        });\n      });\n    });\n  }\n  \n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n\n\n\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Company Group Link Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"companyCode\" [multiple]=\"false\" placeholder=\"Company Code*\" required title=\"Compulsory Selection\" maxlength=\"5\" formControlName=\"COMP_CODE\">\n                                </ng-select>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['COMP_CODE'].invalid && (angForm.controls['COMP_CODE'].dirty || angForm.controls['COMP_CODE'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['COMP_CODE'].errors?.required|| angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"schemeCode\" [multiple]=\"false\" placeholder=\"Scheme Code*\" required title=\"Compulsory Selection\" maxlength=\"5\" formControlName=\"CODE\">\n                                </ng-select>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['CODE'].invalid && (angForm.controls['CODE'].dirty || angForm.controls['CODE'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['CODE'].errors?.required|| angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \" maxlength=\"6\"\n                                        id=\"FromAC\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"FROM_AC\">\n                                    <label for=\"FromAC\">From A/c.</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['FROM_AC'].invalid && (angForm.controls['FROM_AC'].dirty || angForm.controls['FROM_AC'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['FROM_AC'].errors?.pattern|| angForm.controls['NAME'].errors?.maxlength\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \" maxlength=\"6\"\n                                        id=\"ToAC\"  pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"TO_AC\">\n                                    <label for=\"ToAC\">To A/c.</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TO_AC'].invalid && (angForm.controls['TO_AC'].dirty || angForm.controls['TO_AC'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['TO_AC'].errors?.pattern|| angForm.controls['NAME'].errors?.maxlength\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n\n\n\n        </div>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                                <tbody *ngIf=\"companyGroupLinkMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of companyGroupLinkMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n\n                                        <td>{{ data.COMP_CODE }}</td>\n                                        <td>{{ data.CODE }}</td>\n                                        <td>{{ data.FROM_AC }}</td>\n                                        <td>{{ data.TO_AC }}</td>\n\n\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"companyGroupLinkMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                      <th></th>\n                                      <th><input type=\"text\" placeholder=\"Company Code \" name=\"COMP_CODE\"/></th>\n                                      <th><input type=\"text\" placeholder=\"Scheme Code\" name=\"CODE\"/></th>\n                                      <th><input type=\"text\" placeholder=\"From Account\" name=\"FROM_AC\"/></th>\n                                      <th><input type=\"text\" placeholder=\"To Account\" name=\"TO_AC\"/></th>\n                                    \n                                   \n                                    </tr>\n                                  </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class CompanyGroupLinkMasterService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  url = \"http://localhost:4000/company-group-link-master\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n  }\r\n   //Updation Operation\r\n   updateData(data): Observable<any> {\r\n  \r\n    return this.http.put(this.url + '/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { CompanyGroupMasterService } from './company-group-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n//Used to dropdown\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SchemeTypeDropdownService } from '../../../../../shared/dropdownService/scheme-type-dropdown.service';\nimport { SchemeCodeDropdownService } from '../../../../../shared/dropdownService/scheme-code-dropdown.service';\nimport { first } from 'rxjs/operators';\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface CompanyGroupMaster {\n  id: number;\n  COMP_CODE: number;\n  NAME: string;\n  ADDRESS: string;\n  AC_ACNOTYPE: string;\n  AC_TYPE: string;\n  AC_NO: number;\n}\n\n@Component({\n  selector: 'app-company-group-master',\n  templateUrl: './company-group-master.component.html',\n  styleUrls: ['./company-group-master.component.scss']\n})\nexport class CompanyGroupMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  companyGroupMaster: CompanyGroupMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  updateID: number = 0;\n  schemeCode: any;\n\n  schemeType: Array<IOption> = this.schemeTypeDropdown.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n//for search functionality\nfilterData = {};\n  private dataSub: Subscription = null;\n\n  constructor(\n    private http: HttpClient,\n    private companyGroupMasterService: CompanyGroupMasterService,\n    private fb: FormBuilder,\n    public schemeTypeDropdown: SchemeTypeDropdownService,\n    public schemeCodeDropdown: SchemeCodeDropdownService) {\n\n  }\n\n\n\n\n\n  ngOnInit(): void {\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        dataTableParameters.columns.forEach(element => {\n          if(element.search.value !=''){\n  \n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          }else{\n  \n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if(this.filterData.hasOwnProperty(element.data)){\n                let value = this.filterData[getColumnName];\n                if(columnValue != undefined || value != undefined){\n                  delete this.filterData[element.data];\n                } \n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/company-group-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.companyGroupMaster = resp.data;\n\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Code'\n        }, {\n          title: 'Name'\n        }, {\n          title: 'Address'\n        }, {\n          title: 'SchemeTypeComboBox'\n        }, {\n          title: 'Schemecode'\n        }, {\n          title: 'A/c No'\n        }],\n      dom: 'Blrtip',\n    };\n    this.createForm();\n\n    this.runTimer();\n    this.dataSub = this.schemeTypeDropdown.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.schemeCodeDropdown.getSchemeCodeList().pipe(first()).subscribe(data => {\n      this.schemeCode = data;\n    })\n\n  }\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n\n  createForm() {\n    this.angForm = this.fb.group({\n\n      COMP_CODE: [''],\n      NAME: [''],\n      ADDRESS: [''],\n      AC_ACNOTYPE: ['', [Validators.required]],\n      AC_TYPE: ['', [Validators.pattern]],\n      AC_NO: ['', [Validators.pattern, Validators.required]]\n\n    });\n  }\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n\n      'COMP_CODE': formVal.COMP_CODE,\n      'NAME': formVal.NAME,\n      'ADDRESS': formVal.ADDRESS,\n      'AC_ACNOTYPE': formVal.AC_ACNOTYPE,\n      'AC_TYPE': formVal.AC_TYPE,\n      'AC_NO': formVal.AC_NO,\n\n    }\n    this.companyGroupMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.companyGroupMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n\n        'COMP_CODE': data.COMP_CODE,\n        'NAME': data.NAME,\n        'ADDRESS': data.ADDRESS,\n        'AC_ACNOTYPE': data.AC_ACNOTYPE,\n        'AC_TYPE': data.AC_TYPE,\n        'AC_NO': data.AC_NO,\n\n      })\n    })\n  }\n\n  //Method for update data \n  updateData(id) {\n\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n\n    this.companyGroupMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  // Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Company Group Master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.companyGroupMasterService.deleteData(id).subscribe(data1 => {\n          this.companyGroupMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          debugger\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          }else{\n            that\n            .search(this['value'])\n            .draw();\n          }\n        });\n      });\n    });\n  }\n  \n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n\n\n\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Company Group Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"cl-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" maxlength=\"5\" disabled\n                                        id=\"label-name\"  pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"COMP_CODE\">\n                                    <label for=\"label-name\">Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"Name\" maxlength=\"200\"\n                                        required=\"\"  pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"Name\">Name<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required|| angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <textarea type=\"text\" name=\"ADDRESS\" class=\"form-control\" placeholder=\" \" maxlength=\"2000\"\n                                        pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                        id=\"Address\"\n                                        formControlName=\"ADDRESS\"></textarea>\n                                    <label for=\"Address\">Address</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['ADDRESS'].invalid && (angForm.controls['ADDRESS'].dirty || angForm.controls['ADDRESS'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['ADDRESS'].errors?.pattern || angForm.controls['NAME'].errors?.maxlength\">\n                                    Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"schemeType\" [multiple]=\"false\" maxlength=\"2\" placeholder=\"Scheme Type*\" required title=\"Compulsory Selection\" formControlName=\"AC_ACNOTYPE\">\n                                </ng-select>\n\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_ACNOTYPE'].invalid && (angForm.controls['AC_ACNOTYPE'].dirty || angForm.controls['AC_ACNOTYPE'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_ACNOTYPE'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"schemeCode\" [multiple]=\"false\" placeholder=\"Scheme Code*\" required title=\"Compulsory Selection\" maxlength=\"5\" formControlName=\"AC_TYPE\">\n                                </ng-select>\n\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required|| angForm.controls['AC_TYPE'].errors?.maxlength\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"AC_NO\" class=\"form-control\" placeholder=\" \" maxlength=\"15\" minlength=\"15\"\n                                        id=\"AcNo\" required=\"\"  pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"AC_NO\">\n                                    <label for=\"AcNo\">A/C No.<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_NO'].invalid && (angForm.controls['AC_NO'].dirty || angForm.controls['AC_NO'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.pattern || angForm.controls['AC_NO'].errors?.required || angForm.controls['AC_NO'].errors?.maxlength|| angForm.controls['AC_NO'].errors?.minlength\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n\n\n\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                                <tbody *ngIf=\"companyGroupMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of companyGroupMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n\n                                        <td>{{ data.COMP_CODE }}</td>\n                                        <td>{{ data.NAME }}</td>\n                                        <td>{{ data.ADDRESS }}</td>\n                                        <td>{{ data.AC_ACNOTYPE }}</td>\n                                        <td>{{data.AC_TYPE}}</td>\n                                        <td>{{data.AC_NO}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"companyGroupMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                      <th></th>\n                                      <th><input type=\"text\" placeholder=\"Code \" name=\"COMP_CODE\"/></th>\n                                      <th><input type=\"text\" placeholder=\"Name\" name=\"NAME\"/></th>\n                                      <th><input type=\"text\" placeholder=\"Address\" name=\"ADDRESS\"/></th>\n                                      <th><input type=\"text\" placeholder=\"SchemeTypeComboBox\" name=\"AC_ACNOTYPE\"/></th>\n                                      <th><input type=\"text\" placeholder=\"Schemecode\" name=\"AC_TYPE\"/></th>\n                                      <th><input type=\"text\" placeholder=\"A/c No\" name=\"AC_NO\"/></th>\n                                   \n                                    </tr>\n                                  </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class CompanyGroupMasterService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  url = \"http://localhost:4000/company-group-master\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n  }\r\n   //Updation Operation\r\n   updateData(data): Observable<any> {\r\n  \r\n    return this.http.put(this.url + '/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { CourtMasterService } from './court-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface CourtMaster {\n  CODE: number,\n  AC_NO: number,\n  NAME: string,\n}\n\n@Component({\n  selector: 'app-court-master',\n  templateUrl: './court-master.component.html',\n  styleUrls: ['./court-master.component.scss']\n})\nexport class CourtMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  courtMaster: CourtMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n  constructor(\n    private http: HttpClient,\n    private courtMasterService: CourtMasterService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/court-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.courtMaster = resp.data;\n\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Code',\n          data: 'CODE'\n        },\n        {\n          title: 'Name',\n          data: 'NAME'\n        },\n\n      ],\n      dom: 'Blrtip',\n    };\n    this.createForm();\n  }\n  // Method to handle validation of form\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n\n      NAME: ['', [Validators.pattern, Validators.required]],\n    });\n  }\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n\n      'NAME': formVal.NAME,\n    }\n    this.courtMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.courtMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n\n        'NAME': data.NAME,\n      })\n    })\n  }\n  //Method for update data \n  updateData(id) {\n\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n\n    this.courtMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete court master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.courtMasterService.deleteData(id).subscribe(data1 => {\n          this.courtMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Court Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" maxlength=\"4\"\n                                        disabled id=\"CourtCode\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"CODE\">\n                                    <label for=\"CourtCode\">Court Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" maxlength=\"100\"\n                                        id=\"Description\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.requiredangForm.controls['SUB2_CODE'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n\n                    </div>\n\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                                <tbody *ngIf=\"courtMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of courtMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n\n                                        <td>{{ data.CODE }}</td>\n                                        <td>{{ data.NAME }}</td>\n\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"courtMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Court Master Code\" name=\"CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class CourtMasterService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  url = \"http://localhost:4000/court-master\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n  \r\n    return this.http.put(this.url + '/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { DirectorMasterService } from './director-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface DirectorMaster {\n  CODE: number,\n  NAME: string,\n  DESIGNATION: string,\n  AC_CTCODE: number,\n  AC_ADDR1: string,\n  AC_ADDR2: string,\n  AC_ADDR3: string,\n  AC_PIN: number,\n  AC_MOBILENO: number,\n  SMS_REQUIRED: boolean,\n  IS_CURRENT_BODY_MEMBER: boolean\n}\n\n@Component({\n  selector: 'app-director-master',\n  templateUrl: './director-master.component.html',\n  styleUrls: ['./director-master.component.scss']\n})\nexport class DirectorMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  directorMaster: DirectorMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private directorMasterService: DirectorMasterService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/director-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.directorMaster = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Director Code',\n          data: 'CODE'\n        }, {\n          title: 'Director Name',\n          data: 'NAME'\n        }, {\n          title: 'Designation',\n          data: 'DESIGNATION'\n        }, {\n          title: 'Address 1',\n          data: 'AC_ADDR1'\n        }, {\n          title: 'Address 2',\n          data: 'AC_ADDR2'\n        }, {\n          title: 'Address 3',\n          data: 'AC_ADDR3'\n        },\n        {\n          title: 'City Code',\n          data: 'AC_CTCODE'\n        }, {\n          title: 'Pin Code',\n          data: 'AC_PIN'\n        },\n        {\n          title: 'Mobile No',\n          data: 'AC_MOBILENO'\n        }, {\n          title: 'IS CURRENT BODY MEMBER',\n          data: 'IS_CURRENT_BODY_MEMBER'\n        },\n        {\n          title: 'Required SMS Facilities',\n          data: 'SMS_REQUIRED'\n        },\n      ], dom: 'Blrtip',\n    }\n  }\n\n  // Method to handle validation of form\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n      NAME: ['', [Validators.required, Validators.pattern]],\n      DESIGNATION: ['', [Validators.required, Validators.pattern]],\n      AC_CTCODE: ['', [Validators.required, Validators.pattern]],\n      AC_ADDR1: ['', [Validators.required, Validators.pattern]],\n      AC_ADDR2: ['', [Validators.pattern]],\n      AC_ADDR3: ['', [Validators.pattern]],\n      AC_PIN: ['', [Validators.pattern]],\n      AC_MOBILENO: ['', [Validators.pattern]],\n      SMS_REQUIRED: [false],\n      IS_CURRENT_BODY_MEMBER: [false]\n    });\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n      'NAME': formVal.NAME,\n      'DESIGNATION': formVal.DESIGNATION,\n      'AC_CTCODE': formVal.AC_CTCODE,\n      'AC_ADDR1': formVal.AC_ADDR1,\n      'AC_ADDR2': formVal.AC_ADDR2,\n      'AC_ADDR3': formVal.AC_ADDR3,\n      'AC_PIN': formVal.AC_PIN,\n      'AC_MOBILENO': formVal.AC_MOBILENO,\n      'SMS_REQUIRED': formVal.SMS_REQUIRED,\n      'IS_CURRENT_BODY_MEMBER': formVal.IS_CURRENT_BODY_MEMBER,\n    }\n    this.directorMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.directorMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n        'NAME': data.NAME,\n        'DESIGNATION': data.DESIGNATION,\n        'AC_CTCODE': data.AC_CTCODE,\n        'AC_ADDR1': data.AC_ADDR1,\n        'AC_ADDR2': data.AC_ADDR2,\n        'AC_ADDR3': data.AC_ADDR3,\n        'AC_PIN': data.AC_PIN,\n        'AC_MOBILENO': data.AC_MOBILENO,\n        'SMS_REQUIRED': data.SMS_REQUIRED,\n        'IS_CURRENT_BODY_MEMBER': data.IS_CURRENT_BODY_MEMBER,\n      })\n    })\n  }\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.directorMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete director master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.directorMasterService.deleteData(id).subscribe(data1 => {\n          this.directorMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          debugger\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n\n\n\n\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Director Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" id=\"CODE\"\n                                        disabled formControlName=\"CODE\">\n                                    <label for=\"CODE\">Director Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"NAME\"\n                                        required pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"NAME\">Director Name<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"DESIGNATION\" class=\"form-control\" placeholder=\" \"\n                                        id=\"DESIGNATION\" required pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" maxlength=\"60\"\n                                        formControlName=\"DESIGNATION\">\n                                    <label for=\"DESIGNATION\">Designation<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['DESIGNATION'].invalid && (angForm.controls['DESIGNATION'].dirty || angForm.controls['DESIGNATION'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['DESIGNATION'].errors?.pattern || angForm.controls['DESIGNATION'].errors?.required || angForm.controls['DESIGNATION'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <textarea type=\"text\" name=\"address\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                        id=\"AC_ADDR1\" required formControlName=\"AC_ADDR1\" maxlength=\"100\"></textarea>\n                                    <label for=\"AC_ADDR1\">AC_ADDR1<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_ADDR1'].invalid && (angForm.controls['AC_ADDR1'].dirty || angForm.controls['AC_ADDR1'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_ADDR1'].errors?.pattern || angForm.controls['AC_ADDR1'].errors?.required || angForm.controls['AC_ADDR1'].errors?.maxlength\">\n                                    Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <textarea type=\"text\" name=\"address\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                        id=\"AC_ADDR2\" formControlName=\"AC_ADDR2\" maxlength=\"100\"></textarea>\n                                    <label for=\"AC_ADDR2\">AC_ADDR2</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_ADDR2'].invalid && (angForm.controls['AC_ADDR2'].dirty || angForm.controls['AC_ADDR2'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_ADDR2'].errors?.pattern || angForm.controls['AC_ADDR2'].errors?.maxlength\">\n                                    Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <textarea type=\"text\" name=\"address\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                        id=\"AC_ADDR3\" formControlName=\"AC_ADDR3\" maxlength=\"100\"></textarea>\n                                    <label for=\"AC_ADDR3\">AC_ADDR3</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_ADDR3'].invalid && (angForm.controls['AC_ADDR3'].dirty || angForm.controls['AC_ADDR3'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_ADDR3'].errors?.pattern || angForm.controls['AC_ADDR3'].errors?.maxlength\">\n                                    Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" id=\"AC_CTCODE\"\n                                        required=\"\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" maxlength=\"4\"\n                                        formControlName=\"AC_CTCODE\">\n                                    <label for=\"AC_CTCODE\">City Code<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_CTCODE'].invalid && (angForm.controls['AC_CTCODE'].dirty || angForm.controls['AC_CTCODE'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_CTCODE'].errors?.pattern || angForm.controls['AC_CTCODE'].errors?.required || angForm.controls['AC_CTCODE'].errors?.maxlength\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"AC_PIN\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" maxlength=\"7\"\n                                        formControlName=\"AC_PIN\">\n                                    <label for=\"AC_PIN\">Pin Code</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_PIN'].invalid && (angForm.controls['AC_PIN'].dirty || angForm.controls['AC_PIN'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_PIN'].errors?.pattern || angForm.controls['AC_PIN'].errors?.maxlength\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"border-checkbox-section\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\" formControlName=\"IS_CURRENT_BODY_MEMBER\">\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Current Body Member<span\n                                            class=\"required\"> </span></label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"border-checkbox-section\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox2\" value=\"checkbox\" formControlName=\"SMS_REQUIRED\">\n                                    <label class=\"border-checkbox-label\" for=\"checkbox2\">Require SMS facility<span\n                                            class=\"required\"> </span></label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"AC_MOBILENO\" maxlength=\"10\" minlength=\"10\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"AC_MOBILENO\">\n                                    <label for=\"AC_MOBILENO\">Mobile No</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_MOBILENO'].invalid && (angForm.controls['AC_MOBILENO'].dirty || angForm.controls['AC_MOBILENO'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_MOBILENO'].errors?.pattern || angForm.controls['AC_MOBILENO'].errors?.maxlength || angForm.controls['AC_MOBILENO'].errors?.minlength\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"directorMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of directorMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\"\n                                                (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.CODE}}</td>\n                                        <td>{{ data.NAME}}</td>\n                                        <td>{{ data.DESIGNATION}}</td>\n                                        <td>{{data.AC_ADDR1 }}</td>\n                                        <td>{{data.AC_ADDR2 }}</td>\n                                        <td>{{data.AC_ADDR3 }}</td>\n                                        <td>{{data.AC_CTCODE }}</td>\n                                        <td>{{data.AC_PIN }}</td>\n                                        <td>{{data.AC_MOBILENO }}</td>\n                                        <td>{{data.IS_CURRENT_BODY_MEMBER }}</td>\n                                        <td>{{data.SMS_REQUIRED }}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"directorMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Director Code\" name=\"CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Director Name\" name=\"NAME\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Designation\" name=\"DESIGNATION\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Address 1\" name=\"AC_ADDR1\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Address 2\" name=\"AC_ADDR2\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Address 3\" name=\"AC_ADDR3\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search City Code\" name=\"AC_CTCODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Pin Code\" name=\"AC_PIN\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Mobile No\" name=\"AC_MOBILENO\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search CURRENT BODY MEMBER\" name=\"IS_CURRENT_BODY_MEMBER\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Required SMS Facilities\" name=\"SMS_REQUIRED\"></th>\n\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class DirectorMasterService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  url = \"http://localhost:4000/director-master\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        Swal.fire('Please Input Proper Data!');\r\n        return throwError(error);\r\n      })\r\n    )\r\n  }\r\n\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/update', data);\r\n  }\r\n\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { DocumentMasterService } from './document-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface DocumentMaster {\n  CODE: number,\n  NAME: string,\n}\n\n@Component({\n  selector: 'app-document-master',\n  templateUrl: './document-master.component.html',\n  styleUrls: ['./document-master.component.scss']\n})\nexport class DocumentMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  documentMaster: DocumentMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private documentMasterService: DocumentMasterService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/document-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.documentMaster = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Document Master Code',\n          data: 'CODE'\n        }, {\n          title: 'Description',\n          data: 'NAME'\n        },\n      ],\n      dom: 'Blrtip',\n    };\n  }\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n      NAME: ['', [Validators.pattern, Validators.required]]\n    });\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n      'NAME': formVal.NAME\n    }\n    this.documentMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.documentMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n        'NAME': data.NAME,\n      })\n    })\n  }\n\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.documentMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Document master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.documentMasterService.deleteData(id).subscribe(data1 => {\n          this.documentMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Document Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"CODE\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"CODE\" disabled>\n                                    <label for=\"CODE\">Document Master Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"NAME\"\n                                        required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"NAME\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"documentMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of documentMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\"\n                                                (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.CODE}}</td>\n                                        <td>{{ data.NAME}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"documentMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Document Code\" name=\"CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class DocumentMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = \"http://localhost:4000/document-master\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { HealthMasterService } from './health-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface HealthMaster {\n  CODE: number,\n  NAME: string,\n}\n\n\n@Component({\n  selector: 'app-health-master',\n  templateUrl: './health-master.component.html',\n  styleUrls: ['./health-master.component.scss']\n})\nexport class HealthMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  healthMaster: HealthMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private healthMasterService: HealthMasterService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/health-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.healthMaster = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Health Master Code',\n          data: 'CODE'\n        }, {\n          title: 'Description',\n          data: 'NAME'\n        },\n      ],\n      dom: 'Blrtip',\n    };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n      NAME: ['', [Validators.pattern, Validators.required]]\n    });\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n      'NAME': formVal.NAME\n    }\n    this.healthMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.healthMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n        'NAME': data.NAME,\n      })\n    })\n  }\n\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.healthMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Health master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.healthMasterService.deleteData(id).subscribe(data1 => {\n          this.healthMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Health Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"CODE\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"CODE\" disabled>\n                                    <label for=\"CODE\">Health Master Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"NAME\"\n                                        required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"NAME\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"healthMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of healthMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\"\n                                                (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.CODE}}</td>\n                                        <td>{{ data.NAME}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"healthMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Health Master Code\" name=\"CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class HealthMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = \"http://localhost:4000/health-master\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { IndustryService } from './industry-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface IndustryMaster {\n  CODE: number,\n  NAME: string\n}\n\n@Component({\n  selector: 'app-industry-master',\n  templateUrl: './industry-master.component.html',\n  styleUrls: ['./industry-master.component.scss']\n})\nexport class IndustryMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  industrymasters: IndustryMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private industryService: IndustryService,\n    private fb: FormBuilder) {\n  }\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/industry-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.industrymasters = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Industry Code',\n          data: 'CODE'\n        },\n        {\n          title: 'Description',\n          data: 'NAME'\n        },\n      ],\n      dom: 'Blrtip',\n    };\n  }\n  // Method to handle validation of form\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n      NAME: ['', [Validators.pattern, Validators.required]],\n    });\n  }\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n      'NAME': formVal.NAME,\n    }\n    this.industryService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.industryService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n        'NAME': data.NAME,\n      })\n    })\n  }\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.industryService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Industry Master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.industryService.deleteData(id).subscribe(data1 => {\n          this.industrymasters = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Industry Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \" disabled\n                                        id=\"IndustryCode\"  pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" formControlName=\"CODE\">\n                                    <label for=\"IndustryCode\">Industry Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \"\n                                        id=\"label-name\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"label-name\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                        </div>\n\n                    </div>\n\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"industrymasters?.length != 0\">\n                                    <tr *ngFor=\"let data of industrymasters\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.CODE }}</td>\n                                        <td>{{ data.NAME }}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"industrymasters?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Industry Code\" name=\"CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class IndustryService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  url = \"http://localhost:4000/industry-master\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {InformationComponent} from './information.component';\r\n\r\nconst routes: Routes = [\r\n  \r\n  {\r\n    path: '',\r\n    component: InformationComponent,\r\n    data: {\r\n      title: 'Information',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n      \r\n    \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InformationRoutingModule { }\r\n","import { Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.scss']\n})\nexport class InformationComponent implements  OnInit {\n  narationmasterTrue: boolean = true;\n  bankTrue: boolean  = false;\n  clearingTrue: boolean = false;\n  ownbranchTrue: boolean = false;\n  categoryTrue: boolean = false;\n  cityTrue: boolean = false;\n  castTrue: boolean = false;\n  occupationTrue: boolean = false;\n  diectorTrue: boolean = false;\n  authorityTrue: boolean = false;\n  recoveryTrue: boolean = false;\n  insuranceTrue: boolean = false;\n  operationTrue: boolean = false;\n  purposeTrue: boolean = false;\n  priorityTrue: boolean = false;\n  courtTrue: boolean = false;\n  advocateTrue: boolean = false;\n  industryTrue: boolean = false;\n  weakerTrue: boolean = false;\n  loanstageTrue: boolean = false;\n  interestTrue: boolean = false;\n  healthTrue: boolean = false;\n  prefixTrue: boolean = false;\n  minimumTrue: boolean = false;\n  documentTrue: boolean = false;\n  lockerrackTrue: boolean = false;\n  lockerrackwiseTrue: boolean = false;\n  lockersizeTrue: boolean = false;\n  companygroupTrue: boolean= false;\n  companygrouplinkTrue: boolean= false;\n  reporttypeTrue: boolean= false;\n  itemcategoryTrue: boolean= false;\n  depriciationTrue: boolean= false;\n \n  salarydivisionTrue : boolean= false;\n  subsalarydivisionTrue : boolean= false;\n  \n  \n  constructor(private_router: Router){\n  }\n  ngOnInit(): void {\n  }\n\n  OpenLink(val)\n  {\n    // debugger\n    if(val == 1)\n    {\n      this.narationmasterTrue = true;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n    \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 2)\n    {\n      this.narationmasterTrue =false;\n      this. bankTrue = true;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.itemcategoryTrue= false;\n      this.reporttypeTrue= false;\n      this.depriciationTrue= false;\n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 3)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = true;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 4)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= true;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.itemcategoryTrue= false;\n      this.reporttypeTrue= false;\n      this.depriciationTrue= false;\n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 5)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= true;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 6)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= true;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 7)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= true;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n    \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 8)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= true;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 9)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= true;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n    \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 10)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= true;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 11)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= true;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n    \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 12)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= true;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n    \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 13)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= true;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 14)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= true;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 15)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= true;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n    \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 16)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= true;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 17)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= true;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 18)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= true;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 19)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= true;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 20)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= true;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 21)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= true;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 22)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= true;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 23)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= true;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 24)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= true;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 25)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= true;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 26)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= true;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 27)\n    {\n       this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= true;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 28)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= true;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n     \n    }\n    if(val == 29)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= true;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 30)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= true;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 31)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= true;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 32)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= true;\n      this.depriciationTrue= false;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 33)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= true;\n      \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 34)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n    \n      this.salarydivisionTrue= true;\n      this.subsalarydivisionTrue= false;\n    }\n    if(val == 35)\n    {\n      this.narationmasterTrue = false;\n      this. bankTrue = false;\n      this.clearingTrue = false;\n      this.ownbranchTrue= false;\n      this.categoryTrue= false;\n      this.cityTrue= false;\n      this.castTrue= false;\n      this.occupationTrue= false;\n      this.diectorTrue= false;\n      this.authorityTrue= false;\n      this.recoveryTrue= false;\n      this.insuranceTrue= false;\n      this.operationTrue= false;\n      this.purposeTrue= false;\n      this.priorityTrue= false;\n      this.courtTrue= false;\n      this.advocateTrue= false;\n      this.industryTrue= false;\n      this.weakerTrue= false;\n      this.loanstageTrue= false;\n      this.interestTrue= false;\n      this.healthTrue= false;\n      this.prefixTrue= false;\n      this.minimumTrue= false;\n      this.documentTrue= false;\n      this.lockerrackTrue= false;\n      this.lockerrackwiseTrue= false;\n      this.lockersizeTrue= false;\n      this.companygroupTrue= false;\n      this.companygrouplinkTrue= false;\n      this.reporttypeTrue= false;\n      this.itemcategoryTrue= false;\n      this.depriciationTrue= false;\n    \n      this.salarydivisionTrue= false;\n      this.subsalarydivisionTrue= true;\n    }\n  }\n\n}","<div class=\"row\">\n    <div class=\"col-sm-3\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Other Masters</h5>\n            </div>\n            <div class=\"card-block\">\n                <div class=\"col-md-12\">\n                    <perfect-scrollbar style=\"max-width: 600px; max-height: 450px;\">\n                        <!-- <h6 class=\"sub-title\">Text with Icon Lists</h6> -->\n                        <ul class=\"basic-list\">\n                            <li>\n                                <h6> <a (click)=\"OpenLink(1)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': narationmasterTrue}\" class=\"text-right f-w-600\" id=\"pointer\">1. Naration Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(2)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': bankTrue}\" class=\"text-right f-w-600\" id=\"pointer\">2. Bank Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(3)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': clearingTrue}\" class=\"text-right f-w-600\" id=\"pointer\">3. Clearing Branch Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(4)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': ownbranchTrue}\" class=\"text-right f-w-600\" id=\"pointer\">4. Own Branch Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(5)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': categoryTrue}\" class=\"text-right f-w-600\" id=\"pointer\">5. Category Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(6)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': cityTrue}\" class=\"text-right f-w-600\" id=\"pointer\">6. City Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(7)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': castTrue}\" class=\"text-right f-w-600\" id=\"pointer\">7. Cast Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(8)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': occupationTrue}\" class=\"text-right f-w-600\" id=\"pointer\">8. Occupation Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(9)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': diectorTrue}\" class=\"text-right f-w-600\" id=\"pointer\">9. Director Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(10)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': authorityTrue}\" class=\"text-right f-w-600\" id=\"pointer\">10. Authority Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(11)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': recoveryTrue}\" class=\"text-right f-w-600\" id=\"pointer\">11. Recovery Cleark Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(12)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': insuranceTrue}\" class=\"text-right f-w-600\" id=\"pointer\">12. Insurance Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(13)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': operationTrue}\" class=\"text-right f-w-600\" id=\"pointer\">13. Operation Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(14)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': purposeTrue}\" class=\"text-right f-w-600\" id=\"pointer\">14. Purpose Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(15)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': priorityTrue}\" class=\"text-right f-w-600\" id=\"pointer\">15. Priority Sector Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(16)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': courtTrue}\" class=\"text-right f-w-600\" id=\"pointer\">16. Court Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(17)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': advocateTrue}\" class=\"text-right f-w-600\" id=\"pointer\">17. Advocate Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(18)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': industryTrue}\" class=\"text-right f-w-600\" id=\"pointer\">18. Industry Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(19)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': weakerTrue}\" class=\"text-right f-w-600\" id=\"pointer\">19. Weaker Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(20)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': loanstageTrue}\" class=\"text-right f-w-600\" id=\"pointer\">20. Loan Stage Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(21)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': interestTrue}\" class=\"text-right f-w-600\" id=\"pointer\">21. Interest Category Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(22)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': healthTrue}\" class=\"text-right f-w-600\" id=\"pointer\">22. Health Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(23)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': prefixTrue}\" class=\"text-right f-w-600\" id=\"pointer\">23. Prefix Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(24)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': minimumTrue}\" class=\"text-right f-w-600\" id=\"pointer\">24. Minimum Balance Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(25)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': documentTrue}\" class=\"text-right f-w-600\" id=\"pointer\">25. Document Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(26)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': lockerrackTrue}\" class=\"text-right f-w-600\" id=\"pointer\">26. Locker Rack Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(27)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': lockersizeTrue}\" class=\"text-right f-w-600\" id=\"pointer\">27. Locker Size Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(28)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': lockerrackwiseTrue}\" class=\"text-right f-w-600\" id=\"pointer\">28. Locker Rackwise Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(29)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': companygroupTrue}\" class=\"text-right f-w-600\" id=\"pointer\">29. Company Group Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(30)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': companygrouplinkTrue}\" class=\"text-right f-w-600\" id=\"pointer\">30. Company Group Link Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(31)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': reporttypeTrue}\" class=\"text-right f-w-600\" id=\"pointer\">31. Report Type Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(32)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': itemcategoryTrue}\" class=\"text-right f-w-600\" id=\"pointer\">32. Item Category Master</a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(33)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': depriciationTrue}\" class=\"text-right f-w-600\" id=\"pointer\">33.Depriciation Category Master </a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(34)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': salarydivisionTrue}\" class=\"text-right f-w-600\" id=\"pointer\">34.Salary Division Master </a></h6>\n                            </li>\n                            <li>\n                                <h6> <a (click)=\"OpenLink(35)\" routerLink=\"/master/PolicySettings/information\" routerLinkActive=\"active\" [ngClass]=\"{'isActive': subsalarydivisionTrue}\" class=\"text-right f-w-600\" id=\"pointer\">35. Sub Salary Division Master</a></h6>\n                            </li>\n                        </ul>\n                    </perfect-scrollbar>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-sm-9\">\n        <div class=\"card-block\">\n            <div *ngIf=\"narationmasterTrue\">\n                <app-narration></app-narration>\n            </div>\n            <div *ngIf=\"bankTrue\">\n                <app-bank-master></app-bank-master>\n            </div>\n            <div *ngIf=\"clearingTrue\">\n                <app-clearing-branch-master></app-clearing-branch-master>\n            </div>\n            <div *ngIf=\"ownbranchTrue\">\n                <app-own-branch-master></app-own-branch-master>\n            </div>\n            <div *ngIf=\"categoryTrue\">\n                <app-category-master></app-category-master>\n            </div>\n            <div *ngIf=\"cityTrue\">\n                <app-city-master></app-city-master>\n            </div>\n            <div *ngIf=\"castTrue\">\n                <app-cast-master></app-cast-master>\n            </div>\n            <div *ngIf=\"occupationTrue\">\n                <app-occupation-master></app-occupation-master>\n            </div>\n            <div *ngIf=\"diectorTrue\">\n                <app-director-master></app-director-master>\n            </div>\n            <div *ngIf=\"authorityTrue\">\n                <app-authority-master></app-authority-master>\n            </div>\n            <div *ngIf=\"recoveryTrue\">\n                <app-recovery-cleark-master></app-recovery-cleark-master>\n            </div>\n            <div *ngIf=\"insuranceTrue\">\n                <app-insurance-master></app-insurance-master>\n            </div>\n            <div *ngIf=\"operationTrue\">\n                <app-operation-master></app-operation-master>\n            </div>\n            <div *ngIf=\"purposeTrue\">\n                <app-purpose-master></app-purpose-master>\n            </div>\n            <div *ngIf=\"priorityTrue\">\n                <app-priority-sector-master></app-priority-sector-master>\n            </div>\n            <div *ngIf=\"courtTrue\">\n                <app-court-master></app-court-master>\n            </div>\n            <div *ngIf=\"advocateTrue\">\n                <app-advocate-master></app-advocate-master>\n            </div>\n            <div *ngIf=\"industryTrue\">\n                <app-industry-master></app-industry-master>\n            </div>\n            <div *ngIf=\"weakerTrue\">\n                <app-weaker-section-master></app-weaker-section-master>\n            </div>\n            <div *ngIf=\"loanstageTrue\">\n                <app-loan-stage-master></app-loan-stage-master>\n            </div>\n            <div *ngIf=\"interestTrue\">\n                <app-interest-category-master></app-interest-category-master>\n            </div>\n            <div *ngIf=\"healthTrue\">\n                <app-health-master></app-health-master>\n            </div>\n            <div *ngIf=\"prefixTrue\">\n                <app-prefix-master></app-prefix-master>\n            </div>\n            <div *ngIf=\"minimumTrue\">\n                <app-minimum-balance-master></app-minimum-balance-master>\n            </div>\n            <div *ngIf=\"documentTrue\">\n                <app-document-master></app-document-master>\n            </div>\n            <div *ngIf=\"lockerrackTrue\">\n                <app-locker-rack-master></app-locker-rack-master>\n            </div>\n            <div *ngIf=\"lockerrackwiseTrue\">\n                <app-locker-rack-wise-master></app-locker-rack-wise-master>\n            </div>\n            <div *ngIf=\"lockersizeTrue\">\n                <app-locker-size-master></app-locker-size-master>\n            </div>\n            <div *ngIf=\"companygroupTrue\">\n                <app-company-group-master></app-company-group-master>\n            </div>\n            <div *ngIf=\"companygrouplinkTrue\">\n                <app-company-group-link-master></app-company-group-link-master>\n            </div>\n            <div *ngIf=\"reporttypeTrue\">\n                <app-report-type-master></app-report-type-master>\n            </div>\n            <div *ngIf=\"itemcategoryTrue\">\n                <app-item-category-master></app-item-category-master>\n            </div>\n            <div *ngIf=\"depriciationTrue\">\n                <app-depriciation-catagory-master></app-depriciation-catagory-master>\n            </div>\n            <div *ngIf=\"salarydivisionTrue\">\n                <app-salary-division-master></app-salary-division-master>\n            </div>\n            <div *ngIf=\"subsalarydivisionTrue\">\n                <app-sub-salary-division-master></app-sub-salary-division-master>\n            </div>\n        </div>\n\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InformationComponent } from './information.component';\r\nimport { InformationRoutingModule } from './information-routing.module';\r\nimport { SharedModule } from '../../../../shared/shared.module';\r\nimport { BankMasterComponent } from './bank-master/bank-master.component';\r\nimport { ClearingBranchMasterComponent } from './clearing-branch-master/clearing-branch-master.component';\r\nimport { OwnBranchMasterComponent } from './own-branch-master/own-branch-master.component';\r\nimport { CategoryMasterComponent } from './category-master/category-master.component';\r\nimport { CourtMasterComponent } from './court-master/court-master.component';\r\nimport { AdvocateMasterComponent } from './advocate-master/advocate-master.component';\r\nimport { IndustryMasterComponent } from './industry-master/industry-master.component';\r\nimport { WeakerSectionMasterComponent } from './weaker-section-master/weaker-section-master.component';\r\nimport { LoanStageMasterComponent } from './loan-stage-master/loan-stage-master.component';\r\nimport { CityMasterComponent } from './city-master/city-master.component';\r\nimport { CastMasterComponent } from './cast-master/cast-master.component';\r\nimport { OccupationMasterComponent } from './occupation-master/occupation-master.component';\r\nimport { DirectorMasterComponent } from './director-master/director-master.component';\r\nimport { AuthorityMasterComponent } from './authority-master/authority-master.component';\r\nimport { RecoveryClearkMasterComponent } from './recovery-cleark-master/recovery-cleark-master.component';\r\nimport { InsuranceMasterComponent } from './insurance-master/insurance-master.component';\r\nimport { OperationMasterComponent } from './operation-master/operation-master.component';\r\nimport { PurposeMasterComponent } from './purpose-master/purpose-master.component';\r\nimport { PrioritySectorMasterComponent } from './priority-sector-master/priority-sector-master.component';\r\nimport { LockerSizeMasterComponent } from './locker-size-master/locker-size-master.component';\r\nimport { LockerRackMasterComponent } from './locker-rack-master/locker-rack-master.component';\r\nimport { LockerRackWiseMasterComponent } from './locker-rack-wise-master/locker-rack-wise-master.component';\r\nimport { CompanyGroupMasterComponent } from './company-group-master/company-group-master.component';\r\nimport { CompanyGroupLinkMasterComponent } from './company-group-link-master/company-group-link-master.component';\r\nimport { NarrationComponent } from './narration/narration.component';\r\nimport { InterestCategoryMasterComponent } from './interest-category-master/interest-category-master.component'; \r\nimport { HealthMasterComponent } from './health-master/health-master.component';\r\nimport { PrefixMasterComponent } from './prefix-master/prefix-master.component';\r\nimport { MinimumBalanceMasterComponent } from './minimum-balance-master/minimum-balance-master.component';\r\nimport { DocumentMasterComponent } from './document-master/document-master.component';\r\nimport { DepriciationCatagoryMasterComponent } from './Depriciation-catagory-master/depriciation-catagory-master.component';\r\nimport { TdReciptSeriesMasterComponent } from './td-recipt-series-master/td-recipt-series-master.component';\r\nimport { SalaryDivisionMasterComponent } from './salary-division-master/salary-division-master.component';\r\nimport { SubSalaryDivisionMasterComponent } from './sub-salary-division-master/sub-salary-division-master.component';\r\nimport { ItemCategoryMasterComponent } from './item-category-master/item-category-master.component';\r\nimport { SelectModule } from 'ng-select';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { ReportTypeMasterComponent } from './report-type-master/report-type-master.component';\r\nimport { TitleService } from '../../../../shared/dropdownService/title.service';\r\nimport { NarrationService } from './narration/narration.service';\r\nimport { BankService } from './bank-master/bank-master.service';\r\nimport { OwnBranchService } from './own-branch-master/own-branch-master.service';\r\nimport { ClearingBranchService } from './clearing-branch-master/clearing-branch-master.service';\r\nimport { AdvocateService } from './advocate-master/advocate-master.service';\r\nimport { IndustryService } from './industry-master/industry-master.service';\r\nimport { WeakerService } from './weaker-section-master/weaker-section-master.service';\r\nimport { LoanStageService } from './loan-stage-master/loan-stage-master.service';\r\nimport { DepriciationService } from './Depriciation-catagory-master/depriciation-category-master.service';\r\nimport { SalaryDivisionService } from './salary-division-master/salary-division-master.service';\r\nimport { SubSalaryService } from './sub-salary-division-master/sub-salary-division-master.service';\r\n//Imported service files \r\nimport { DirectorMasterService } from './director-master/director-master.service';\r\nimport { AuthorityMasterService } from './authority-master/authority-master.service';\r\nimport { RecoveryClearkMasterService } from './recovery-cleark-master/recovery-cleark-master.service';\r\nimport { InsuranceMasterService } from './insurance-master/insurance-master.service';\r\nimport { InterestCategoryMasterService } from './interest-category-master/interest-category-master.service';\r\nimport { PrefixMasterService } from './prefix-master/prefix-master.service';\r\nimport { HealthMasterService } from './health-master/health-master.service';\r\nimport { MinimumBalanceMasterService } from './minimum-balance-master/minimum-balance-master.service';\r\nimport { DocumentMasterService } from './document-master/document-master.service';\r\nimport { LockerRackMasterService } from './locker-rack-master/locker-rack-master.service';\r\nimport { LockerSizeMasterService } from './locker-size-master/locker-size-master.service';\r\nimport { LockerRackWiseMasterService } from './locker-rack-wise-master/locker-rack-wise-master.service';\r\nimport { CastMasterService } from './cast-master/cast-master.service';\r\nimport { CategoryMasterService } from './category-master/category-master.service';\r\nimport { OccupationMasterService } from './occupation-master/occupation-master.service'\r\nimport { CitytMasterService } from './city-master/city-master.service';\r\nimport { OperationService } from './operation-master/operation-master.service';\r\nimport { PurposeMasterService } from './purpose-master/purpose-master.service';\r\nimport { CourtMasterService } from './court-master/court-master.service';\r\nimport { PrioritySectorMasterService } from './priority-sector-master/priority-sector-master.service';\r\nimport { ReportTypeMasterService } from './report-type-master/report-type-master.service';\r\nimport { ItemCategoryMasterService } from './item-category-master/item-category-master.service';\r\nimport { CompanyGroupLinkMasterService } from './company-group-link-master/company-group-link-master.service'\r\nimport { CompanyGroupMasterService } from './company-group-master/company-group-master.service';\r\nimport { LockerSMasterDropDownService } from '../../../../shared/dropdownService/lockersize-master-dropdown.service';\r\nimport { SchemeTypeDropdownService } from '../../../../shared/dropdownService/scheme-type-dropdown.service';\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service';\r\nimport { CompanyGroupMasterDropdownService } from '../../../../shared/dropdownService/company-group-master-dropdown.service';\r\n\r\n\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    InformationRoutingModule,\r\n    SharedModule,\r\n    PerfectScrollbarModule,\r\n    DataTablesModule,\r\n    SelectModule,\r\n    FormsModule, ReactiveFormsModule\r\n\r\n\r\n  ],\r\n  providers: [\r\n    TitleService,\r\n    NarrationService,\r\n    OwnBranchService,\r\n    ClearingBranchService,\r\n    BankService,\r\n    AdvocateService,\r\n    IndustryService,\r\n    WeakerService,\r\n    LoanStageService,\r\n    DepriciationService,\r\n    SalaryDivisionService,\r\n    SubSalaryService,\r\n    DirectorMasterService,\r\n    AuthorityMasterService,\r\n    RecoveryClearkMasterService,\r\n    LockerRackWiseMasterService,\r\n    InsuranceMasterService,\r\n    InterestCategoryMasterService,\r\n    HealthMasterService,\r\n    PrefixMasterService,\r\n    MinimumBalanceMasterService,\r\n    DocumentMasterService,\r\n    LockerRackMasterService,\r\n    LockerSizeMasterService,\r\n    CastMasterService,\r\n    CategoryMasterService,\r\n    OccupationMasterService,\r\n    CitytMasterService,\r\n    OperationService,\r\n    PurposeMasterService,\r\n    CourtMasterService,\r\n    PrioritySectorMasterService,\r\n    ReportTypeMasterService,\r\n    ItemCategoryMasterService,\r\n    CompanyGroupLinkMasterService,\r\n    CompanyGroupMasterService,\r\n    LockerSMasterDropDownService,\r\n    SchemeTypeDropdownService,\r\n    SchemeCodeDropdownService,\r\n    CompanyGroupMasterDropdownService,\r\n    {\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\r\n\r\n    }\r\n  ],\r\n  declarations: [\r\n    InformationComponent,\r\n    BankMasterComponent,\r\n    ClearingBranchMasterComponent,\r\n    OwnBranchMasterComponent,\r\n    CategoryMasterComponent,\r\n    CourtMasterComponent,\r\n    AdvocateMasterComponent,\r\n    IndustryMasterComponent,\r\n    WeakerSectionMasterComponent,\r\n    LoanStageMasterComponent,\r\n    CityMasterComponent,\r\n    CastMasterComponent,\r\n    OccupationMasterComponent,\r\n    DirectorMasterComponent,\r\n    AuthorityMasterComponent,\r\n    NarrationComponent,\r\n    RecoveryClearkMasterComponent,\r\n    InsuranceMasterComponent,\r\n    OperationMasterComponent,\r\n    PurposeMasterComponent,\r\n    PrioritySectorMasterComponent,\r\n    LockerSizeMasterComponent,\r\n    LockerRackMasterComponent,\r\n    LockerRackWiseMasterComponent,\r\n    CompanyGroupMasterComponent,\r\n    CompanyGroupLinkMasterComponent,\r\n    InterestCategoryMasterComponent,\r\n    HealthMasterComponent,\r\n    PrefixMasterComponent,\r\n    MinimumBalanceMasterComponent,\r\n    DocumentMasterComponent,\r\n    DepriciationCatagoryMasterComponent,\r\n    TdReciptSeriesMasterComponent,\r\n    SalaryDivisionMasterComponent,\r\n    SubSalaryDivisionMasterComponent,\r\n    ItemCategoryMasterComponent,\r\n    ReportTypeMasterComponent\r\n  ]\r\n})\r\nexport class InformationModule { }","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { InsuranceMasterService } from './insurance-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface InsuranceMaster {\n  CODE: number,\n  NAME: string,\n}\n\n@Component({\n  selector: 'app-insurance-master',\n  templateUrl: './insurance-master.component.html',\n  styleUrls: ['./insurance-master.component.scss']\n})\nexport class InsuranceMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  insuranceMaster: InsuranceMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private insuranceMasterService: InsuranceMasterService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/insurance-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.insuranceMaster = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Insurance code',\n          data: 'CODE'\n        }, {\n          title: 'Description',\n          data: 'NAME'\n        },\n      ],\n      dom: 'Blrtip',\n    };\n\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n      NAME: ['', [Validators.pattern, Validators.required]]\n    });\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n      'NAME': formVal.NAME\n    }\n    this.insuranceMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.insuranceMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n        'NAME': data.NAME,\n      })\n    })\n  }\n\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.insuranceMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Insurance master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.insuranceMasterService.deleteData(id).subscribe(data1 => {\n          this.insuranceMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Insurance Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Account\" class=\"form-control\" placeholder=\" \" id=\"CODE\"\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" formControlName=\"CODE\"\n                                        disabled>\n                                    <label for=\"CODE\">Insurance Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"NAME\"\n                                        required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"NAME\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"insuranceMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of insuranceMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\"\n                                                (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.CODE}}</td>\n                                        <td>{{ data.NAME}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"insuranceMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Insurance Code\" name=\"CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class InsuranceMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = \"http://localhost:4000/insurance-master\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/update', data);\r\n    }\r\n\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { InterestCategoryMasterService } from './interest-category-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface IntrestCatagoryMaster {\n  CODE: number,\n  NAME: string,\n}\n\n@Component({\n  selector: 'app-interest-category-master',\n  templateUrl: './interest-category-master.component.html',\n  styleUrls: ['./interest-category-master.component.scss']\n})\n\nexport class InterestCategoryMasterComponent implements OnInit {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  intrestCatagoryMaster: IntrestCatagoryMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private interestCategoryMasterService: InterestCategoryMasterService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/interest-category-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.intrestCatagoryMaster = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Interest Category Code',\n          data: 'CODE'\n        }, {\n          title: 'Description',\n          data: 'NAME'\n        },\n      ],\n      dom: 'Blrtip',\n    };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n      NAME: ['', [Validators.pattern, Validators.required]]\n    });\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n      'NAME': formVal.NAME\n    }\n    this.interestCategoryMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.interestCategoryMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n        'NAME': data.NAME,\n      })\n    })\n  }\n\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.interestCategoryMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Interest Category master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.interestCategoryMasterService.deleteData(id).subscribe(data1 => {\n          this.intrestCatagoryMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Interest Category Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Account\" class=\"form-control\" placeholder=\" \" id=\"CODE\"\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" formControlName=\"CODE\"\n                                        disabled>\n                                    <label for=\"CODE\">Interest Category Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"NAME\"\n                                        required pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"NAME\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"intrestCatagoryMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of intrestCatagoryMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\"\n                                                (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.CODE}}</td>\n                                        <td>{{ data.NAME}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"intrestCatagoryMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Interest Category Code\" name=\"CODE\">\n                                        </th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class InterestCategoryMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = \"http://localhost:4000/interest-category-master\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport {ItemCategoryMasterService} from './item-category-master.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface ItemCategoryMaster {\r\n  CODE: number,\r\n  AC_NO: number,\r\n  NAME: string,\r\n}\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-item-category-master',\r\n  templateUrl: './item-category-master.component.html',\r\n  styleUrls: ['./item-category-master.component.scss']\r\n})\r\nexport class ItemCategoryMasterComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  itemCategoryMaster: ItemCategoryMaster[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\nupdateID:number=0;\r\n\r\n// column filter\r\nfilterData = {};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private itemCategoryMasterService: ItemCategoryMasterService,\r\n    private fb: FormBuilder) {\r\n   \r\n  }\r\n\r\n\r\n \r\n  ngOnInit(): void {\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n       \r\n        dataTableParameters.columns.forEach(element => {\r\n          if(element.search.value !=''){\r\n  \r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          }else{\r\n  \r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if(this.filterData.hasOwnProperty(element.data)){\r\n                let value = this.filterData[getColumnName];\r\n                if(columnValue != undefined || value != undefined){\r\n                  delete this.filterData[element.data];\r\n                } \r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            'http://localhost:4000/item-category-master',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.itemCategoryMaster = resp.data;\r\n          \r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Code',\r\n          data: 'CODE',\r\n        },\r\n        {\r\n          title: 'Name',\r\n          data: 'NAME',\r\n        },\r\n      \r\n      ],\r\n      dom: 'Blrtip',\r\n    };\r\n    this.createForm();\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      CODE: [''],\r\n    \r\n      NAME: ['', [Validators.pattern, Validators.required]],\r\n    });\r\n  }\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'CODE': formVal.CODE,\r\n   \r\n      'NAME': formVal.NAME,\r\n    }\r\n    this.itemCategoryMasterService.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n    \r\n    })\r\n    //To clear form\r\n     this.resetForm();\r\n  }\r\n\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.itemCategoryMasterService.getFormData(id).subscribe(data => {\r\n      this.updateID=data.id;\r\n      this.angForm.setValue({\r\n        'CODE': data.CODE,\r\n      \r\n        'NAME': data.NAME,\r\n      })\r\n    })\r\n  }\r\n  //Method for update data \r\n  updateData(id) {\r\n  \r\n    let data = this.angForm.value;\r\n     data['id']=this.updateID;\r\n   \r\n    this.itemCategoryMasterService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n       this.resetForm();\r\n    })\r\n  }\r\n\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete Item Category Master data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.itemCategoryMasterService.deleteData(id).subscribe(data1 => {\r\n          this.itemCategoryMaster = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n         \r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          debugger\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }else{\r\n            that\r\n            .search(this['value'])\r\n            .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n   // Reset Function\r\n   resetForm() {\r\n    this.createForm();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n}","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Item Category Code</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"ItemCategoryCode\" disabled maxlength=\"5\"\r\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\r\n                                        formControlName=\"CODE\">\r\n                                    <label for=\"ItemCategoryCode\">Item Category Code<sub class=\"required\">*\r\n                                        </sub></label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"Description\"\r\n                                        required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\r\n                                        formControlName=\"NAME\">\r\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                                <tbody *ngIf=\"itemCategoryMaster?.length != 0\">\r\n                                    <tr *ngFor=\"let data of itemCategoryMaster\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        </td>\r\n\r\n                                        <td>{{ data.CODE }}</td>\r\n                                        <td>{{ data.NAME }}</td>\r\n\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"itemCategoryMaster?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search CODE\" name=\"search-CODE\">\r\n                                            <th><input type=\"text\" placeholder=\"Search NAME\" name=\"search-NAME\">\r\n                                            </th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class ItemCategoryMasterService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n // url = \"http://localhost:4000/item-category-master\";\r\n url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/item-category-master/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/item-category-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n   //Updation Operation\r\n   updateData(data): Observable<any> {\r\n  \r\n    return this.http.put(this.url + '/item-category-master/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/item-category-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { LoanStageService } from './loan-stage-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface LoanStageMaster {\n  CODE: number,\n  NAME: string\n}\n\n\n@Component({\n  selector: 'app-loan-stage-master',\n  templateUrl: './loan-stage-master.component.html',\n  styleUrls: ['./loan-stage-master.component.scss']\n})\nexport class LoanStageMasterComponent implements OnInit {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  loanstagemasters: LoanStageMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  //variable to get Id to update\n  updateID: number = 0;\n  //filter variable\n  filterData = {};\n\n\n  constructor(\n    private http: HttpClient,\n    private loanstageService: LoanStageService,\n    private fb: FormBuilder) {\n  }\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/loan-stage-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.loanstagemasters = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Weaker Section Code',\n          data: 'CODE'\n        },\n        {\n          title: 'Description',\n          data: 'NAME'\n        },\n      ],\n      dom: 'Blrtip',\n    };\n  }\n  // Method to handle validation of form\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n      NAME: ['', [Validators.pattern, Validators.required]],\n    });\n  }\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n      'NAME': formVal.NAME,\n    }\n    this.loanstageService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.loanstageService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n        'NAME': data.NAME,\n      })\n    })\n  }\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.loanstageService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete loan stage master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.loanstageService.deleteData(id).subscribe(data1 => {\n          this.loanstagemasters = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Loan Stage Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" disabled\n                                        id=\"LoanStageCode\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"CODE\">\n                                    <label for=\"LoanStageCode\">Loan Stage Code.</label>\n                                </span>\n                            </div>\n\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"Description\"\n                                        required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"loanstagemasters?.length != 0\">\n                                    <tr *ngFor=\"let data of loanstagemasters\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.CODE }}</td>\n                                        <td>{{ data.NAME }}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"loanstagemasters?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Loan Stage Code\" name=\"CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class LoanStageService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  url = \"http://localhost:4000/loan-stage-master\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { LockerRackMasterService } from './locker-rack-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface LockerRackMaster {\n  RACK_NO: number,\n  RACK_DESC: string,\n  LOCKER_FROMNO: number,\n  LOCKER_TONO: number\n}\n\n@Component({\n  selector: 'app-locker-rack-master',\n  templateUrl: './locker-rack-master.component.html',\n  styleUrls: ['./locker-rack-master.component.scss']\n})\n\nexport class LockerRackMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  lockerRackMaster: LockerRackMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n  //for search functionality\n  filterData = {};\n  constructor(\n    private http: HttpClient,\n    private lockerRackMasterService: LockerRackMasterService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        dataTableParameters.columns.forEach(element => {\n          if(element.search.value !=''){\n  \n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          }else{\n  \n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if(this.filterData.hasOwnProperty(element.data)){\n                let value = this.filterData[getColumnName];\n                if(columnValue != undefined || value != undefined){\n                  delete this.filterData[element.data];\n                } \n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/locker-rack-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.lockerRackMaster = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Rack Number'\n        }, {\n          title: 'Rack Description'\n        },\n        {\n          title: 'Lockers From'\n        },\n        {\n          title: 'Lockers to'\n        }\n      ],\n      dom: 'Blrtip',\n    };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      LOCKER_TONO: ['', [Validators.required, Validators.pattern]],\n      LOCKER_FROMNO: ['', [Validators.required, Validators.pattern]],\n      RACK_DESC: ['', [Validators.required, Validators.pattern]],\n      RACK_NO: [''],\n    });\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'RACK_NO': formVal.RACK_NO,\n      'RACK_DESC': formVal.RACK_DESC,\n      'LOCKER_FROMNO': formVal.LOCKER_FROMNO,\n      'LOCKER_TONO': formVal.LOCKER_TONO\n    }\n    this.lockerRackMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.lockerRackMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'RACK_NO': data.RACK_NO,\n        'RACK_DESC': data.RACK_DESC,\n        'LOCKER_FROMNO': data.LOCKER_FROMNO,\n        'LOCKER_TONO': data.LOCKER_TONO\n      })\n    })\n  }\n\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.lockerRackMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Locker Rack master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.lockerRackMasterService.deleteData(id).subscribe(data1 => {\n          this.lockerRackMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          debugger\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          }else{\n            that\n            .search(this['value'])\n            .draw();\n          }\n        });\n      });\n    });\n  }\n  \n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Locker Rack Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <div class=\"card-block\">\n                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"RACK_NO\" class=\"form-control\" placeholder=\" \"\n                                        id=\"RackNumber\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"RACK_NO\" disabled>\n                                    <label for=\"RackNumber\">Rack Number</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"RACK_DESC\" class=\"form-control\" placeholder=\" \"\n                                        id=\"RACK_DESC\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"50\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"RACK_DESC\">\n                                    <label for=\"RACK_DESC\">Rack Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['RACK_DESC'].invalid && (angForm.controls['RACK_DESC'].dirty || angForm.controls['RACK_DESC'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['RACK_DESC'].errors?.pattern || angForm.controls['RACK_DESC'].errors?.required || angForm.controls['RACK_DESC'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"LOCKER_FROMNO\" class=\"form-control\" placeholder=\" \"\n                                        id=\"LOCKER_FROMNO\" required=\"\" pattern=\"^[0-9]+$\" maxlength=\"10\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"LOCKER_FROMNO\">\n                                    <label for=\"LOCKER_FROMNO\">Lockers From<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['LOCKER_FROMNO'].invalid && (angForm.controls['LOCKER_FROMNO'].dirty || angForm.controls['LOCKER_FROMNO'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['LOCKER_FROMNO'].errors?.pattern || angForm.controls['LOCKER_FROMNO'].errors?.required || angForm.controls['LOCKER_FROMNO'].errors?.maxlength\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"LOCKER_TONO\" class=\"form-control\" placeholder=\" \"\n                                        id=\"LOCKER_TONO\" required=\"\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"LOCKER_TONO\" maxlength=\"10\">\n                                    <label for=\"LOCKER_TONO\">Lockers to<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['LOCKER_TONO'].invalid && (angForm.controls['LOCKER_TONO'].dirty || angForm.controls['LOCKER_TONO'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['LOCKER_TONO'].errors?.pattern || angForm.controls['LOCKER_TONO'].errors?.required || angForm.controls['LOCKER_TONO'].errors?.maxlength\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"lockerRackMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of lockerRackMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\"\n                                                (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.RACK_NO}}</td>\n                                        <td>{{ data.RACK_DESC}}</td>\n                                        <td>{{ data.LOCKER_FROMNO}}</td>\n                                        <td>{{ data.LOCKER_TONO}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"lockerRackMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                      <th></th>\n                                      <th><input type=\"text\" placeholder=\"Rack Number \" name=\"RACK_NO\"/></th>\n                                      <th><input type=\"text\" placeholder=\"Rack Description\" name=\"RACK_DESC\"/></th>\n                                      <th><input type=\"text\" placeholder=\"Lockers From\" name=\"LOCKER_FROMNO\"/></th>\n                                      <th><input type=\"text\" placeholder=\"Lockers to\" name=\"LOCKER_TONO\"/></th>\n                                    </tr>\n                                  </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class LockerRackMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = \"http://localhost:4000/locker-rack-master\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { LockerSMasterDropDownService } from '../../../../../shared/dropdownService/lockersize-master-dropdown.service';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { LockerRackWiseMasterService } from './locker-rack-wise-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { first } from 'rxjs/operators';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface LockerRackWiseMaster {\n  RACK_NO: number;\n  LOCKER_NO: number;\n  KEY_NO: number;\n  SIZE_SR_NO: string;\n}\n\n@Component({\n  selector: 'app-locker-rack-wise-master',\n  templateUrl: './locker-rack-wise-master.component.html',\n  styleUrls: ['./locker-rack-wise-master.component.scss']\n})\n\nexport class LockerRackWiseMasterComponent implements OnInit {\n\n\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  lockerRackWiseMaster: LockerRackWiseMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  lockerMaster: any;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //for search functionality\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private lockerRackWiseMasterService: LockerRackWiseMasterService,\n    private fb: FormBuilder,\n    private lockerSMaster: LockerSMasterDropDownService) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        dataTableParameters.columns.forEach(element => {\n          if(element.search.value !=''){\n  \n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          }else{\n  \n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if(this.filterData.hasOwnProperty(element.data)){\n                let value = this.filterData[getColumnName];\n                if(columnValue != undefined || value != undefined){\n                  delete this.filterData[element.data];\n                } \n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/locker-rackwise-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.lockerRackWiseMaster = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Rack Number'\n        }, {\n          title: 'Locker Number'\n        },\n        {\n          title: 'Locker Key Number'\n        },\n        {\n          title: 'Locker size'\n        },\n      ],\n      dom: 'Blrtip',\n    };\n\n    this.lockerSMaster.getLockerSMasterList().pipe(first()).subscribe(data => {\n      this.lockerMaster = data;\n    })\n\n\n  }\n\n\n  createForm() {\n    this.angForm = this.fb.group({\n      RACK_NO: [''],\n      SIZE_SR_NO: ['', [Validators.required]],\n      LOCKER_NO: ['', [Validators.required, Validators.pattern]],\n      KEY_NO: ['', [Validators.required, Validators.pattern]],\n    });\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'RACK_NO': formVal.RACK_NO,\n      'LOCKER_NO': formVal.LOCKER_NO,\n      'KEY_NO': formVal.KEY_NO,\n      'SIZE_SR_NO': formVal.SIZE_SR_NO\n    }\n    this.lockerRackWiseMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.lockerRackWiseMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'RACK_NO': data.RACK_NO,\n        'LOCKER_NO': data.LOCKER_NO,\n        'KEY_NO': data.KEY_NO,\n        'SIZE_SR_NO': data.SIZE_SR_NO\n      })\n    })\n  }\n\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.lockerRackWiseMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Locker Rack Wise master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.lockerRackWiseMasterService.deleteData(id).subscribe(data1 => {\n          this.lockerRackWiseMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          debugger\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          }else{\n            that\n            .search(this['value'])\n            .draw();\n          }\n        });\n      });\n    });\n  }\n  \n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n\n\n\n\n\n\n\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Locker Rack Wise Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <div class=\"card-block\">\n                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"RackNumber\" formControlName=\"RACK_NO\" disabled>\n                                    <label for=\"RackNumber\">Rack Number</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"LOCKER_NO\" required=\"\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"LOCKER_NO\" maxlength=\"5\">\n                                    <label for=\"LOCKER_NO\">Locker Number<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['LOCKER_NO'].invalid && (angForm.controls['LOCKER_NO'].dirty || angForm.controls['LOCKER_NO'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['LOCKER_NO'].errors?.pattern || angForm.controls['LOCKER_NO'].errors?.required || angForm.controls['LOCKER_NO'].errors?.maxlength\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"KEY_NO\" required=\"\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"KEY_NO\" maxlength=\"10\">\n                                    <label for=\"KEY_NO\">Locker Key Number<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['KEY_NO'].invalid && (angForm.controls['KEY_NO'].dirty || angForm.controls['KEY_NO'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['KEY_NO'].errors?.pattern || angForm.controls['KEY_NO'].errors?.required || angForm.controls['KEY_NO'].errors?.maxlength\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"lockerMaster\" [multiple]=\"false\" placeholder=\"Locker Size*\" formControlName=\"SIZE_SR_NO\" required>\n                                </ng-select>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['SIZE_SR_NO'].invalid && (angForm.controls['SIZE_SR_NO'].dirty || angForm.controls['SIZE_SR_NO'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['SIZE_SR_NO'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"lockerRackWiseMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of lockerRackWiseMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.RACK_NO}}</td>\n                                        <td>{{ data.LOCKER_NO}}</td>\n                                        <td>{{ data.KEY_NO}}</td>\n                                        <td>{{ data.SIZE_SR_NO}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"lockerRackWiseMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                      <th></th>\n                                      <th><input type=\"text\" placeholder=\"Rack Number \" name=\"RACK_NO\"/></th>\n                                      <th><input type=\"text\" placeholder=\"Locker Number\" name=\"LOCKER_NO\"/></th>\n                                      <th><input type=\"text\" placeholder=\"Locker Key Number\" name=\"KEY_NO\"/></th>\n                                      <th><input type=\"text\" placeholder=\"Locker size\" name=\"SIZE_SR_NO\"/></th>\n                                    </tr>\n                                  </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class LockerRackWiseMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = \"http://localhost:4000/locker-rackwise-master\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { LockerSizeMasterService } from './locker-size-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface LockerSizeMaster {\n  SIZE_SR_NO: number;\n  SIZE_NAME: string;\n  RENT: number;\n}\n\n@Component({\n  selector: 'app-locker-size-master',\n  templateUrl: './locker-size-master.component.html',\n  styleUrls: ['./locker-size-master.component.scss']\n})\nexport class LockerSizeMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  lockerSizeMaster: LockerSizeMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n  //for search functionality\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private lockerSizeMasterService: LockerSizeMasterService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        dataTableParameters.columns.forEach(element => {\n          if(element.search.value !=''){\n  \n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          }else{\n  \n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if(this.filterData.hasOwnProperty(element.data)){\n                let value = this.filterData[getColumnName];\n                if(columnValue != undefined || value != undefined){\n                  delete this.filterData[element.data];\n                } \n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/locker-size-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.lockerSizeMaster = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Size Serial No'\n        }, {\n          title: 'Locker Size'\n        }, {\n          title: 'Locker Rent Deposit'\n        },\n      ],\n      dom: 'Blrtip',\n    };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      SIZE_SR_NO: [''],\n      SIZE_NAME: ['', [Validators.required, Validators.pattern]],\n      RENT: ['', [Validators.required, Validators.pattern]]\n    });\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'SIZE_SR_NO': formVal.SIZE_SR_NO,\n      'SIZE_NAME': formVal.SIZE_NAME,\n      'RENT': formVal.RENT\n    }\n    this.lockerSizeMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.lockerSizeMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'SIZE_SR_NO': data.SIZE_SR_NO,\n        'SIZE_NAME': data.SIZE_NAME,\n        'RENT': data.RENT\n      })\n    })\n  }\n\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.lockerSizeMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Locker Size master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.lockerSizeMasterService.deleteData(id).subscribe(data1 => {\n          this.lockerSizeMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          debugger\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          }else{\n            that\n            .search(this['value'])\n            .draw();\n          }\n        });\n      });\n    });\n  }\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Locker Size Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <div class=\"card-block\">\n                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"SIZE_SR_NO\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"SIZE_SR_NO\" disabled>\n                                    <label for=\"SIZE_SR_NO\">Size Serial No.</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"SIZE_NAME\" required=\"\" maxlength=\"50\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"SIZE_NAME\">\n                                    <label for=\"SIZE_NAME\">Locker Size<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['SIZE_NAME'].invalid && (angForm.controls['SIZE_NAME'].dirty || angForm.controls['SIZE_NAME'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['SIZE_NAME'].errors?.pattern || angForm.controls['SIZE_NAME'].errors?.required || angForm.controls['SIZE_NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"RENT\" required=\"\" pattern=\"\\d{1,20}(\\.\\d{1,5})?\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"RENT\">\n                                    <label for=\"RENT\">Locker Rent/Deposit<sub class=\"required\">*\n                                        </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['RENT'].invalid && (angForm.controls['RENT'].dirty || angForm.controls['RENT'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['RENT'].errors?.pattern || angForm.controls['RENT'].errors?.required\">\n                                    This field is required and Input allowed only . 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"lockerSizeMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of lockerSizeMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.SIZE_SR_NO}}</td>\n                                        <td>{{ data.SIZE_NAME}}</td>\n                                        <td>{{ data.RENT}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"lockerSizeMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                      <th></th>\n                                      <th><input type=\"text\" placeholder=\"Size Serial No \" name=\"SIZE_SR_NO\"/></th>\n                                      <th><input type=\"text\" placeholder=\"Locker Size\" name=\"SIZE_NAME\"/></th>\n                                      <th><input type=\"text\" placeholder=\"Locker Rent Deposit\" name=\"RENT\"/></th>\n                                      \n                                    </tr>\n                                  </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class LockerSizeMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = \"http://localhost:4000/locker-size-master\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { MinimumBalanceMasterService } from './minimum-balance-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface MinimumBalanceMaster {\n  BC_MINBAL: number,\n  BC_CODE: number,\n  BC_NAME: string\n}\n\n\n@Component({\n  selector: 'app-minimum-balance-master',\n  templateUrl: './minimum-balance-master.component.html',\n  styleUrls: ['./minimum-balance-master.component.scss']\n})\nexport class MinimumBalanceMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  minimumBalanceMaster: MinimumBalanceMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private minimumBalanceMasterService: MinimumBalanceMasterService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/minimum-balance-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.minimumBalanceMaster = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Balance Categary Code',\n          data: 'BC_CODE'\n        }, {\n          title: 'Balance Categary Name',\n          data: 'BC_NAME'\n        },\n        {\n          title: 'Minimum Balance',\n          data: 'BC_MINBAL'\n        },\n      ],\n      dom: 'Blrtip',\n    };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      BC_MINBAL: ['', [Validators.required, Validators.pattern]],\n      BC_CODE: [''],\n      BC_NAME: ['', [Validators.required, Validators.pattern]]\n    });\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'BC_CODE': formVal.BC_CODE,\n      'BC_NAME': formVal.BC_NAME,\n      'BC_MINBAL': formVal.BC_MINBAL\n    }\n    this.minimumBalanceMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.minimumBalanceMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'BC_CODE': data.BC_CODE,\n        'BC_NAME': data.BC_NAME,\n        'BC_MINBAL': data.BC_MINBAL\n      })\n    })\n  }\n\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.minimumBalanceMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Minimum Balance Master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.minimumBalanceMasterService.deleteData(id).subscribe(data1 => {\n          this.minimumBalanceMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Minimum Balance Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Account\" class=\"form-control\" placeholder=\" \" id=\"BC_CODE\"\n                                        pattern=\"^[0-9]+$\" formControlName=\"BC_CODE\" disabled>\n                                    <label for=\"BC_CODE\">Bal.Categary Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"BC_NAME\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"BC_NAME\">\n                                    <label for=\"BC_NAME\">Bal.Categary Name<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['BC_NAME'].invalid && (angForm.controls['BC_NAME'].dirty || angForm.controls['BC_NAME'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['BC_NAME'].errors?.pattern || angForm.controls['BC_NAME'].errors?.required || angForm.controls['BC_NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"BC_MINBAL\" required=\"\" pattern=\"\\d{1,20}(\\.\\d{2})?\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"BC_MINBAL\">\n                                    <label for=\"BC_MINBAL\">Minimum Balance<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['BC_MINBAL'].invalid && (angForm.controls['BC_MINBAL'].dirty || angForm.controls['BC_MINBAL'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['BC_MINBAL'].errors?.pattern || angForm.controls['BC_MINBAL'].errors?.required\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"minimumBalanceMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of minimumBalanceMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\"\n                                                (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.BC_CODE}}</td>\n                                        <td>{{ data.BC_NAME}}</td>\n                                        <td>{{ data.BC_MINBAL}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"minimumBalanceMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Balance Categary Code\"\n                                                name=\"BC_CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Balance Categary Name\"\n                                                name=\"BC_NAME\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Minimum Balance\" name=\"BC_MINBAL\">\n                                        </th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class MinimumBalanceMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = \"http://localhost:4000/minimum-balance-master\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport { NarrationService } from './narration.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n\r\n\r\n// For fetching values from backend\r\ninterface Narration {\r\n  ID: number,\r\n  NARRATION: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-narration',\r\n  templateUrl: './narration.component.html',\r\n  styleUrls: ['./narration.component.scss']\r\n})\r\nexport class NarrationComponent implements AfterViewInit, OnDestroy, OnInit {\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  narrations: Narration[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  //variable to get Id to update\r\n  updateID: number = 0;\r\n\r\n  // column search variable\r\n filterData = {};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private narrationService: NarrationService,\r\n    private fb: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n        dataTableParameters.columns.forEach(element => {\r\n          if(element.search.value !=''){\r\n  \r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          }else{\r\n  \r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if(this.filterData.hasOwnProperty(element.data)){\r\n                let value = this.filterData[getColumnName];\r\n                if(columnValue != undefined || value != undefined){\r\n                  delete this.filterData[element.data];\r\n                } \r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            'http://localhost:4000/narration',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.narrations = resp.data;\r\n\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Narration',\r\n          data: 'NARRATION',\r\n        }\r\n      ],\r\n      dom: 'Blrtip',\r\n    };\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      NARRATION: ['', [Validators.pattern, Validators.required]],\r\n    });\r\n  }\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'NARRATION': formVal.NARRATION,\r\n    }\r\n    this.narrationService.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n    //To clear form\r\n     this.resetForm();\r\n  }\r\n\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.narrationService.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        'NARRATION': data.NARRATION\r\n      })\r\n    })\r\n  }\r\n  //Method for update data \r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    this.narrationService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n       this.resetForm();\r\n    })\r\n  }\r\n\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete narration data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.narrationService.deleteData(id).subscribe(data1 => {\r\n          this.narrations = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n          console.log(error)\r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          debugger\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          } else {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n   // Reset Function\r\n   resetForm() {\r\n    this.createForm();\r\n  }\r\n  \r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Narration Master</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"NARRATION\" maxlength=\"2000\" class=\"form-control\"\r\n                                        placeholder=\" \" id=\"label-name\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NARRATION\">\r\n                                    <label for=\"label-name\">Narration<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NARRATION'].invalid && (angForm.controls['NARRATION'].dirty || angForm.controls['NARRATION'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['NARRATION'].errors?.pattern || angForm.controls['NARRATION'].errors?.required || angForm.controls['NARRATION'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"narrations?.length != 0\">\r\n                                    <tr *ngFor=\"let data of narrations\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        </td>\r\n                                        <td>{{ data.NARRATION }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"narrations?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Narration\" name=\"NARRATION\"></th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class NarrationService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  //url = \"http://localhost:4000/narration\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/narration/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/narration/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/narration/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/narration/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport { OccupationMasterService } from './occupation-master.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface OccupationMaster {\r\n  CODE: number,\r\n\r\n  NAME: string,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-occupation-master',\r\n  templateUrl: './occupation-master.component.html',\r\n  styleUrls: ['./occupation-master.component.scss']\r\n})\r\nexport class OccupationMasterComponent implements OnInit {\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  occupationMaster: OccupationMaster[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  updateID: number = 0;\r\n// column search\r\n  filterData = {};\r\n\r\n\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private occupationMasterService: OccupationMasterService,\r\n    private fb: FormBuilder) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n// column search/filter\r\n        dataTableParameters.columns.forEach(element => {\r\n          if(element.search.value !=''){\r\n  \r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          }else{\r\n  \r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if(this.filterData.hasOwnProperty(element.data)){\r\n                let value = this.filterData[getColumnName];\r\n                if(columnValue != undefined || value != undefined){\r\n                  delete this.filterData[element.data];\r\n                } \r\n            }\r\n          }\r\n        });\r\n\r\n\r\n        dataTableParameters['filterData'] = this.filterData;\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n       \r\n        this.http\r\n          .post<DataTableResponse>(\r\n            'http://localhost:4000/occupation-master',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.occupationMaster = resp.data;\r\n\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Code',\r\n          data: 'CODE',\r\n        },\r\n        {\r\n          title: 'Name',\r\n          data: 'NAME',\r\n        },\r\n      \r\n      ],\r\n      dom: 'Blrtip',\r\n    };\r\n    this.createForm();\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      CODE: [''],\r\n\r\n      NAME: ['', [Validators.pattern, Validators.required]],\r\n    });\r\n  }\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'CODE': formVal.CODE,\r\n\r\n      'NAME': formVal.NAME,\r\n    }\r\n    this.occupationMasterService.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n\r\n    })\r\n    //To clear form\r\n    this.resetForm();\r\n  }\r\n\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.occupationMasterService.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        'CODE': data.CODE,\r\n\r\n        'NAME': data.NAME,\r\n      })\r\n    })\r\n  }\r\n  //Method for update data \r\n  updateData(id) {\r\n\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n\r\n    this.occupationMasterService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n      this.resetForm();\r\n    })\r\n  }\r\n\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete occupation master data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.occupationMasterService.deleteData(id).subscribe(data1 => {\r\n          this.occupationMaster = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n\r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          debugger\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }else{\r\n            that\r\n            .search(this['value'])\r\n            .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Occupation Master</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" maxlength=\"4\" disabled\r\n                                        id=\"OccupationCode\"  pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" formControlName=\"CODE\">\r\n                                    <label for=\"OccupationCode\">Occupation Code</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" maxlength=\"100\"\r\n                                        id=\"Description\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\r\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required|| angForm.controls['NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                                <tbody *ngIf=\"occupationMaster?.length != 0\">\r\n                                    <tr *ngFor=\"let data of occupationMaster\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        </td>\r\n\r\n                                        <td>{{ data.CODE }}</td>\r\n                                        <td>{{ data.NAME }}</td>\r\n\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"occupationMaster?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search CODE\" name=\"search-code\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Name\" name=\"search-name\"></th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class OccupationMasterService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n // url = \"http://localhost:4000/occupation-master\";\r\n url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/occupation-master/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/occupation-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n  \r\n    return this.http.put(this.url + '/occupation-master/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/occupation-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { OperationService } from './operation-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface Operation {\n  CODE: number,\n  AC_NO: number,\n  NAME: string,\n}\n\n\n@Component({\n  selector: 'app-operation-master',\n  templateUrl: './operation-master.component.html',\n  styleUrls: ['./operation-master.component.scss']\n})\nexport class OperationMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  operation: Operation[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private operationService: OperationService,\n    private fb: FormBuilder) {\n\n  }\n\n  ngOnInit(): void {\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/operation-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.operation = resp.data;\n\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Code',\n          data: 'CODE'\n        },\n        {\n          title: 'Name',\n          data: 'NAME'\n        },\n\n      ],\n      dom: 'Blrtip',\n    };\n    this.createForm();\n  }\n  // Method to handle validation of form\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n\n      NAME: ['', [Validators.pattern, Validators.required]],\n    });\n  }\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n\n      'NAME': formVal.NAME,\n    }\n    this.operationService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.operationService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n\n        'NAME': data.NAME,\n      })\n    })\n  }\n  //Method for update data \n  updateData(id) {\n\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n\n    this.operationService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete operation master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.operationService.deleteData(id).subscribe(data1 => {\n          this.operation = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>operation Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" maxlength=\"4\"\n                                        disabled id=\"OperationCode\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"CODE\">\n                                    <label for=\"OperationCode\">Operation Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" maxlength=\"100\"\n                                        id=\"Description\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required|| angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                                <tbody *ngIf=\"operation?.length != 0\">\n                                    <tr *ngFor=\"let data of operation\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n\n                                        <td>{{ data.CODE }}</td>\n                                        <td>{{ data.NAME }}</td>\n\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"operation?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Operation Code\" name=\"CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class OperationService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  url = \"http://localhost:4000/operation-master\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n  \r\n    return this.http.put(this.url + '/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport { OwnBranchService } from './own-branch-master.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface OwnBranch {\r\n  CODE: number,\r\n  AC_NO: number,\r\n  NAME: string,\r\n  ID: number,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-own-branch-master',\r\n  templateUrl: './own-branch-master.component.html',\r\n  styleUrls: ['./own-branch-master.component.scss'],\r\n})\r\nexport class OwnBranchMasterComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  ownBranches: OwnBranch[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  //variable to get Id to update\r\n  updateID: number = 0;\r\n\r\n  // column filter\r\n  filterData = {};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private ownBranchService: OwnBranchService,\r\n    private fb: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n\r\n        \r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n        \r\n        // column filter\r\n        dataTableParameters.columns.forEach(element => {\r\n          if(element.search.value !=''){\r\n  \r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          }else{\r\n  \r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if(this.filterData.hasOwnProperty(element.data)){\r\n                let value = this.filterData[getColumnName];\r\n                if(columnValue != undefined || value != undefined){\r\n                  delete this.filterData[element.data];\r\n                } \r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            'http://localhost:4000/own-branch-master',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.ownBranches = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"deletebtn btn btn-outline-primary btn-sm\">Delete</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Code',\r\n          data: 'CODE',\r\n        },\r\n        {\r\n          title: 'Name',\r\n          data: 'NAME',\r\n        },\r\n        {\r\n          title: 'Account Number',\r\n          data: 'AC_NO',\r\n        },\r\n      ],\r\n      dom: 'Blrtip',\r\n    };\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n\r\n      CODE: [''],\r\n      AC_NO: ['', [Validators.pattern]],\r\n      NAME: ['', [Validators.pattern, Validators.required]],\r\n    });\r\n  }\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'CODE': formVal.CODE,\r\n      'AC_NO': formVal.AC_NO,\r\n      'NAME': formVal.NAME,\r\n    }\r\n    this.ownBranchService.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n    //To clear form\r\n    this.resetForm();\r\n  }\r\n\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.ownBranchService.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        'CODE': data.CODE,\r\n        'AC_NO': data.AC_NO,\r\n        'NAME': data.NAME,\r\n      })\r\n    })\r\n\r\n  }\r\n  //Method for update data \r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    this.ownBranchService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n      this.resetForm();\r\n    })\r\n  }\r\n\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete own branch data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.ownBranchService.deleteData(id).subscribe(data1 => {\r\n          this.ownBranches = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n          console.log(error)\r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          debugger\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }else{\r\n            that\r\n            .search(this['value'])\r\n            .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Own Branch Master</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <!-- <input type=\"hidden\" formControlName=\"ID\"> -->\r\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" id=\"BranchCode\"\r\n                                        pattern=\"^[0-9]+$\" disabled title=\"Input allowed only  0-9\"\r\n                                        formControlName=\"CODE\">\r\n                                    <label for=\"BranchCode\">Branch Code</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"BranchName\"\r\n                                        required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\r\n                                    <label for=\"BranchName\">Branch Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_NO\" class=\"form-control\" placeholder=\" \" id=\"AccountNo\"\r\n                                        pattern=\"^[0-9]+$\" minlength=\"15\" maxlength=\"15\" title=\"Input allowed only  0-9\"\r\n                                        formControlName=\"AC_NO\">\r\n                                    <label for=\"AccountNo\">Account No.</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_NO'].invalid && (angForm.controls['AC_NO'].dirty || angForm.controls['AC_NO'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.pattern || angForm.controls['AC_NO'].errors?.maxlength || angForm.controls['AC_NO'].errors?.minlength\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <!-- <input type=\"text\" name=\"ID\" class=\"form-control\" placeholder=\" \" id=\"ID\" pattern=\"^[0-9]+$\" hidden formControlName=\"ID\"> -->\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"ownBranches?.length != 0\">\r\n                                    <tr *ngFor=\"let data of ownBranches\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        </td>\r\n                                        <td>{{ data.CODE }}</td>\r\n                                        <td>{{ data.NAME }}</td>\r\n                                        <td>{{ data.AC_NO }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"ownBranches?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Code\" name=\"Code\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search NAME\" name=\"NAME\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search AC_NO\" name=\"search-Account-Number\">\r\n                                        </th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class OwnBranchService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  //url = \"http://localhost:4000/own-branch-master\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/own-branch-master/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/own-branch-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/own-branch-master/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/own-branch-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { PrefixMasterService } from './prefix-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n//Importing for prefix dropdown\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { TitleService } from '../../../../../shared/dropdownService/title.service';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface PrefixMaster {\n  SR_NO: number,\n  PREFIX: string,\n  SEX: string\n}\n\n@Component({\n  selector: 'app-prefix-master',\n  templateUrl: './prefix-master.component.html',\n  styleUrls: ['./prefix-master.component.scss']\n})\n\nexport class PrefixMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  prefixMaster: PrefixMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  //prefix dropdown\n  title: Array<IOption> = this.PrefixService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n  private dataSub: Subscription = null;\n\n  //variable to get ID to update\n  updateID: number = 0;\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private prefixMasterService: PrefixMasterService,\n    public PrefixService: TitleService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/prefix-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.prefixMaster = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Serial No',\n          data: 'SR_NO'\n        }, {\n          title: 'Prefix',\n          data: 'PREFIX'\n        },\n        {\n          title: 'Sex',\n          data: 'SEX'\n        }\n      ],\n      dom: 'Blrtip',\n    };\n    this.runTimer();\n    this.dataSub = this.PrefixService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      SR_NO: [''],\n      PREFIX: ['', [Validators.required]],\n      SEX: ['male', [Validators.required]]\n    });\n  }\n\n  // Getter method to access form control\n  get myForm() {\n    return this.angForm.get('SEX');\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'SR_NO': formVal.SR_NO,\n      'PREFIX': formVal.PREFIX,\n      'SEX': formVal.SEX\n    }\n    this.prefixMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.prefixMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'SR_NO': data.SR_NO,\n        'PREFIX': data.PREFIX,\n        'SEX': data.SEX,\n      })\n    })\n  }\n\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.prefixMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Prefix master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.prefixMasterService.deleteData(id).subscribe(data1 => {\n          this.prefixMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Prefix Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"SR_NO\" class=\"form-control\" placeholder=\" \" id=\"SR_NO\"\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" formControlName=\"SR_NO\"\n                                        disabled>\n                                    <label for=\"SR_NO\">Serial No.</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"title\" [multiple]=\"false\"\n                                    placeholder=\"Prefix*\" required title=\"Compulsory Selection\"\n                                    formControlName=\"PREFIX\">\n                                </ng-select>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['PREFIX'].invalid && (angForm.controls['PREFIX'].dirty || angForm.controls['PREFIX'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\" angForm.controls['PREFIX'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-5\">\n                            <div class=\"form-radio\">\n                                <h6>Sex</h6>\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" value=\"\n                                        male\" name=\"SEX\" formControlName=\"SEX\">\n                                        <i class=\"helper\"></i>Male<span class=\"required\"> </span>\n                                    </label>\n                                </div>\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" value=\"female\" formControlName=\"SEX\" name=\"SEX\"\n                                            [checked]=\"true\">\n                                        <i class=\"helper\"></i>Female<span class=\"required\"> </span>\n                                    </label>\n                                </div>\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" value=\"other\" name=\"SEX\" formControlName=\"SEX\">\n                                        <i class=\"helper\"></i>Other<span class=\"required\"> </span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"prefixMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of prefixMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.SR_NO}}</td>\n                                        <td>{{ data.PREFIX}}</td>\n                                        <td>{{ data.SEX}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"prefixMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Serial No\" name=\"SR_NO\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search PREFIX\" name=\"PREFIX\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Sex\" name=\"SEX\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class PrefixMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = \"http://localhost:4000/prefix-master\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { PrioritySectorMasterService } from './priority-sector-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n// For fetching values from backend\ninterface PrioritySectorMaster {\n  CODE: number,\n  AC_NO: number,\n  NAME: string,\n}\n\n@Component({\n  selector: 'app-priority-sector-master',\n  templateUrl: './priority-sector-master.component.html',\n  styleUrls: ['./priority-sector-master.component.scss']\n})\nexport class PrioritySectorMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  prioritySectorMaster: PrioritySectorMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private prioritySectorMasterService: PrioritySectorMasterService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/priority-sector-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.prioritySectorMaster = resp.data;\n\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Code',\n          data: 'CODE'\n        },\n        {\n          title: 'Sub Code',\n          data: 'SUB1_CODE'\n        },\n        {\n          title: '2nd Sub code',\n          data: 'SUB2_CODE'\n        },\n        {\n          title: '3rd Sub Code',\n          data: 'SUB3_CODE'\n        },\n        {\n          title: 'Description',\n          data: 'NAME'\n        }\n      ],\n      dom: 'Blrtip',\n    };\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n\n      CODE: [''],\n      SUB1_CODE: ['', [Validators.pattern]],\n      SUB2_CODE: ['', [Validators.pattern]],\n      SUB3_CODE: ['', [Validators.pattern]],\n      NAME: ['', [Validators.required, Validators.pattern]],\n    });\n  }\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n\n      'CODE': formVal.CODE,\n      'SUB1_CODE': formVal.SUB1_CODE,\n      'SUB2_CODE': formVal.SUB2_CODE,\n      'SUB3_CODE': formVal.SUB3_CODE,\n      'NAME': formVal.NAME\n\n    }\n    this.prioritySectorMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.prioritySectorMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n        'SUB1_CODE': data.SUB1_CODE,\n        'SUB2_CODE': data.SUB2_CODE,\n        'SUB3_CODE': data.SUB3_CODE,\n        'NAME': data.NAME\n\n\n      })\n    })\n  }\n\n  //Method for update data \n  updateData(id) {\n\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n\n    this.prioritySectorMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete narration data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.prioritySectorMasterService.deleteData(id).subscribe(data1 => {\n          this.prioritySectorMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n\n\n\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Priority Sector Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Account\" class=\"form-control\" placeholder=\" \" maxlength=\"4\"\n                                        disabled id=\"Prioritysectorcode\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"CODE\">\n                                    <label for=\"Prioritysectorcode\">Priority Sector Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Account\" class=\"form-control\" placeholder=\" \" maxlength=\"4\"\n                                        id=\"Subcode\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"SUB1_CODE\">\n                                    <label for=\"Subcode\">Subcode</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['SUB1_CODE'].invalid && (angForm.controls['SUB1_CODE'].dirty || angForm.controls['SUB1_CODE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['SUB1_CODE'].errors?.pattern || angForm.controls['SUB1_CODE'].errors?.maxlength\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Account\" class=\"form-control\" placeholder=\" \" maxlength=\"4\"\n                                        id=\"Secondsubcode\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"SUB2_CODE\">\n                                    <label for=\"Secondsubcode\">Second subcode</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['SUB2_CODE'].invalid && (angForm.controls['SUB2_CODE'].dirty || angForm.controls['SUB2_CODE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['SUB2_CODE'].errors?.pattern ||angForm.controls['SUB2_CODE'].errors?.maxlength \">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"Account\" class=\"form-control\" placeholder=\" \" maxlength=\"4\"\n                                        id=\"Thirdsubcode\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"SUB3_CODE\">\n                                    <label for=\"Thirdsubcode\">Third subcode</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['SUB3_CODE'].invalid && (angForm.controls['SUB3_CODE'].dirty || angForm.controls['SUB3_CODE'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['SUB3_CODE'].errors?.pattern ||angForm.controls['SUB2_CODE'].errors?.maxlength\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" maxlength=\"300\"\n                                        id=\"Description\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required ||angForm.controls['SUB2_CODE'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                                <tbody *ngIf=\"prioritySectorMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of prioritySectorMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.CODE }}</td>\n                                        <td>{{ data.SUB1_CODE }}</td>\n                                        <td>{{ data.SUB2_CODE }}</td>\n                                        <td>{{ data.SUB3_CODE }}</td>\n                                        <td>{{ data.NAME }}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"prioritySectorMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Priority Sector Code\" name=\"CODE\">\n                                        </th>\n                                        <th><input type=\"text\" placeholder=\"Search Sub Code\" name=\"SUB1_CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search 2nd Sub Code\" name=\"SUB2_CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search 3rd Sub Code\" name=\"SUB3_CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class PrioritySectorMasterService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  url = \"http://localhost:4000/priority-sector-master\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n  }\r\n   //Updation Operation\r\n   updateData(data): Observable<any> {\r\n  \r\n    return this.http.put(this.url + '/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { PurposeMasterService } from './purpose-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface PurposeMaster {\n  CODE: number,\n  AC_NO: number,\n  NAME: string,\n}\n\n@Component({\n  selector: 'app-purpose-master',\n  templateUrl: './purpose-master.component.html',\n  styleUrls: ['./purpose-master.component.scss']\n})\nexport class PurposeMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  purposeMaster: PurposeMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private purposeMasterService: PurposeMasterService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/purpose-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.purposeMaster = resp.data;\n\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Code',\n          data: 'CODE'\n        },\n        {\n          title: 'Name',\n          data: 'NAME'\n        },\n\n      ],\n      dom: 'Blrtip',\n    };\n    this.createForm();\n  }\n  // Method to handle validation of form\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n\n      NAME: ['', [Validators.pattern, Validators.required]],\n    });\n  }\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n\n      'NAME': formVal.NAME,\n    }\n    this.purposeMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.purposeMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n\n        'NAME': data.NAME,\n      })\n    })\n  }\n  //Method for update data \n  updateData(id) {\n\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n\n    this.purposeMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete purpose master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.purposeMasterService.deleteData(id).subscribe(data1 => {\n          this.purposeMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Purpose Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" maxlength=\"4\"\n                                        disabled id=\"PurposeCode\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"CODE\">\n                                    <label for=\"PurposeCode\">Purpose Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" maxlength=\"100\"\n                                        id=\"Description\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required|| angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                                <tbody *ngIf=\"purposeMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of purposeMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n\n                                        <td>{{ data.CODE }}</td>\n                                        <td>{{ data.NAME }}</td>\n\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"purposeMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Purpose Code\" name=\"CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class PurposeMasterService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  url = \"http://localhost:4000/purpose-master\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n  \r\n    return this.http.put(this.url + '/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { RecoveryClearkMasterService } from './recovery-cleark-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface RecoveryClearkMaster {\n  CODE: number,\n  NAME: string,\n}\n\n@Component({\n  selector: 'app-recovery-cleark-master',\n  templateUrl: './recovery-cleark-master.component.html',\n  styleUrls: ['./recovery-cleark-master.component.scss']\n})\nexport class RecoveryClearkMasterComponent implements OnInit, AfterViewInit, OnDestroy {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  recoveryClearkMaster: RecoveryClearkMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  //filter variable\n  filterData = {};\n\n  constructor(\n    private http: HttpClient,\n    private recoveryClearkMasterService: RecoveryClearkMasterService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/recovery-cleark-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.recoveryClearkMaster = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action'\n        },\n        {\n          title: 'Recovery Cleark Code',\n          data: 'CODE'\n        }, {\n          title: 'Description',\n          data: 'NAME'\n        },\n      ],\n      dom: 'Blrtip',\n    };\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n      NAME: ['', [Validators.pattern, Validators.required]]\n    });\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n      'NAME': formVal.NAME\n    }\n    this.recoveryClearkMasterService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.recoveryClearkMasterService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n        'NAME': data.NAME,\n      })\n    })\n  }\n\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.recoveryClearkMasterService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Recovery cleark master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.recoveryClearkMasterService.deleteData(id).subscribe(data1 => {\n          this.recoveryClearkMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Recovery Cleark Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" id=\"CODE\"\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" formControlName=\"CODE\"\n                                        disabled>\n                                    <label for=\"CODE\">Recovery Cleark Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"NAME\"\n                                        required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"NAME\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"recoveryClearkMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of recoveryClearkMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\"\n                                                (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.CODE}}</td>\n                                        <td>{{ data.NAME}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"recoveryClearkMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Recovery Cleark Code\" name=\"CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class RecoveryClearkMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = \"http://localhost:4000/recovery-cleark-master\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport { ReportTypeMasterService } from './report-type-master.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface ReportTypeMaster {\r\n  CODE: number,\r\n  AC_NO: number,\r\n  NAME: string,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-report-type-master',\r\n  templateUrl: './report-type-master.component.html',\r\n  styleUrls: ['./report-type-master.component.scss']\r\n})\r\nexport class ReportTypeMasterComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  reportTypeMaster: ReportTypeMaster[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  updateID: number = 0;\r\n  filterData = {};\r\n  constructor(\r\n    private http: HttpClient,\r\n    private reportTypeMasterService: ReportTypeMasterService,\r\n    private fb: FormBuilder) {\r\n\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n       \r\n        dataTableParameters.columns.forEach(element => {\r\n          if(element.search.value !=''){\r\n  \r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          }else{\r\n  \r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if(this.filterData.hasOwnProperty(element.data)){\r\n                let value = this.filterData[getColumnName];\r\n                if(columnValue != undefined || value != undefined){\r\n                  delete this.filterData[element.data];\r\n                } \r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            'http://localhost:4000/report-type-master',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.reportTypeMaster = resp.data;\r\n\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Code',\r\n          data: 'CODE',\r\n        },\r\n        {\r\n          title: 'Name',\r\n          data: 'NAME',\r\n        },\r\n      \r\n      ],\r\n      dom: 'Blrtip',\r\n    };\r\n    this.createForm();\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      CODE: [''],\r\n\r\n      NAME: ['', [Validators.pattern, Validators.required]],\r\n    });\r\n  }\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'CODE': formVal.CODE,\r\n\r\n      'NAME': formVal.NAME,\r\n    }\r\n    this.reportTypeMasterService.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n\r\n    })\r\n    //To clear form\r\n    this.resetForm();\r\n  }\r\n\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.reportTypeMasterService.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        'CODE': data.CODE,\r\n\r\n        'NAME': data.NAME,\r\n      })\r\n    })\r\n  }\r\n  //Method for update data \r\n  updateData(id) {\r\n\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n\r\n    this.reportTypeMasterService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n      this.resetForm();\r\n    })\r\n  }\r\n\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete report type master data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.reportTypeMasterService.deleteData(id).subscribe(data1 => {\r\n          this.reportTypeMaster = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n\r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          debugger\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }else{\r\n            that\r\n            .search(this['value'])\r\n            .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n}","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Report Type Code</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"ReportTypeCode\" disabled maxlength=\"50\"\r\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\r\n                                        formControlName=\"CODE\">\r\n                                    <label for=\"ReportTypeCode\">Report Type Code<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"Description\" maxlength=\"100\"\r\n                                        required=\"\"  pattern=\"^[A-Za-z\\./ -]+$\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\r\n                                        formControlName=\"NAME\">\r\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                                <tbody *ngIf=\"reportTypeMaster?.length != 0\">\r\n                                    <tr *ngFor=\"let data of reportTypeMaster\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        </td>\r\n\r\n                                        <td>{{ data.CODE }}</td>\r\n                                        <td>{{ data.NAME }}</td>\r\n\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"reportTypeMaster?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search CODE\" name=\"search-CODE\">\r\n                                            <th><input type=\"text\" placeholder=\"Search NAME\" name=\"search-NAME\">\r\n                                            </th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class ReportTypeMasterService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  //url = \"http://localhost:4000/report-type-master\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/report-type-master/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/report-type-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n   //Updation Operation\r\n   updateData(data): Observable<any> {\r\n  \r\n    return this.http.put(this.url + '/report-type-master/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/report-type-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport { SalaryDivisionService } from './salary-division-master.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface SalaryMaster {\r\n  CODE: number;\r\n  NAME: string;\r\n  AC_NO: number;\r\n  SHORT_NAME: string;\r\n  AT_POST: string;\r\n  TALUKA_NAME: string;\r\n  DISTRICT_NAME: string;\r\n  BRANCH_CODE: number;\r\n  PHNO: number;\r\n  MOBNO: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-salary-division-master',\r\n  templateUrl: './salary-division-master.component.html',\r\n  styleUrls: ['./salary-division-master.component.scss']\r\n})\r\nexport class SalaryDivisionMasterComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  salarymasters: SalaryMaster[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  //variable to get Id to update\r\n  updateID: number = 0;\r\n  // column filter\r\n  filterData = {}\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private salaryDivisionService: SalaryDivisionService,\r\n    private fb: FormBuilder) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n\r\n        // column filter\r\n        dataTableParameters.columns.forEach(element => {\r\n          if (element.search.value != '') {\r\n\r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          } else {\r\n\r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if (this.filterData.hasOwnProperty(element.data)) {\r\n              let value = this.filterData[getColumnName];\r\n              if (columnValue != undefined || value != undefined) {\r\n                delete this.filterData[element.data];\r\n              }\r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            'http://localhost:4000/salary-division-master',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.salarymasters = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      // columns: [\r\n        \r\n      //   {\r\n      //     title: 'Action'\r\n      //   },\r\n      //   {\r\n      //     title: 'Code'\r\n      //   },\r\n      //   {\r\n      //     title: 'Full Name'\r\n      //   }, \r\n      //   {\r\n      //     title: 'Short Name'\r\n      //   }, \r\n      //   {\r\n      //     title: 'At Post'\r\n      //   }, \r\n      //   {\r\n      //     title: 'Taluka Name'\r\n      //   }, \r\n      //   {\r\n      //     title: 'District Name'\r\n      //   },\r\n      //   {\r\n      //     title: 'Branch Code'\r\n      //   }, \r\n      //   {\r\n      //     title: 'Telephone(R)'\r\n      //   },\r\n      //   {\r\n      //     title: 'Telephone(Mob)'\r\n      //   }\r\n      // ],\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Code',\r\n          data: 'CODE'\r\n        }, {\r\n          title: 'Full Name',\r\n          data: 'NAME'\r\n        }, {\r\n          title: 'Short Name',\r\n          data: 'SHORT_NAME'\r\n        }, {\r\n          title: 'At Post',\r\n          data: 'AT_POST'\r\n        }, {\r\n          title: 'Taluka Name',\r\n          data: 'TALUKA_NAME'\r\n        }, {\r\n          title: 'District Name',\r\n          data: 'DISTRICT_NAME'\r\n        },\r\n        {\r\n          title: 'Branch Code',\r\n          data: 'BRANCH_CODE'\r\n        }, {\r\n          title: 'Telephone(R)',\r\n          data: 'PHNO'\r\n        }, {\r\n          title: 'Telephone(Mob)',\r\n          data: 'MOBNO'\r\n        }\r\n      ], dom: 'Blrtip',\r\n    };\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      CODE: [''],\r\n      NAME: ['', [Validators.pattern, Validators.required]],\r\n      SHORT_NAME: ['', [Validators.pattern, Validators.required]],\r\n      AT_POST: ['', [Validators.pattern]],\r\n      TALUKA_NAME: ['', [Validators.pattern]],\r\n      DISTRICT_NAME: ['', [Validators.pattern]],\r\n      BRANCH_CODE: ['', [Validators.pattern, Validators.required]],\r\n      PHNO: ['', [Validators.pattern]],\r\n      MOBNO: ['', [Validators.pattern]],\r\n    });\r\n  }\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'CODE': formVal.CODE,\r\n      'NAME': formVal.NAME,\r\n      'SHORT_NAME': formVal.SHORT_NAME,\r\n      'AT_POST': formVal.AT_POST,\r\n      'TALUKA_NAME': formVal.TALUKA_NAME,\r\n      'DISTRICT_NAME': formVal.DISTRICT_NAME,\r\n      'BRANCH_CODE': formVal.BRANCH_CODE,\r\n      'PHNO': formVal.PHNO,\r\n      'MOBNO': formVal.MOBNO,\r\n\r\n    }\r\n    this.salaryDivisionService.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n    //To clear form\r\n    this.resetForm();\r\n  }\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.salaryDivisionService.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        'CODE': data.CODE,\r\n        'NAME': data.NAME,\r\n        'SHORT_NAME': data.SHORT_NAME,\r\n        'AT_POST': data.AT_POST,\r\n        'TALUKA_NAME': data.TALUKA_NAME,\r\n        'DISTRICT_NAME': data.DISTRICT_NAME,\r\n        'BRANCH_CODE': data.BRANCH_CODE,\r\n        'PHNO': data.PHNO,\r\n        'MOBNO': data.MOBNO,\r\n      })\r\n    })\r\n  }\r\n  //Method for update data \r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    this.salaryDivisionService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n      this.resetForm();\r\n    })\r\n  }\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete salary division Master data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.salaryDivisionService.deleteData(id).subscribe(data1 => {\r\n          this.salarymasters = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n          console.log(error)\r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          debugger\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          } else {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Salary Division Master</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"Code\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" disabled\r\n                                        formControlName=\"CODE\">\r\n                                    <label for=\"Code\">Code</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"FullName\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\r\n                                    <label for=\"FullName\">Full Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"SHORT_NAME\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"50\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"SHORT_NAME\">\r\n                                    <label for=\"SHORT_NAME\">Short Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['SHORT_NAME'].invalid && (angForm.controls['SHORT_NAME'].dirty || angForm.controls['SHORT_NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['SHORT_NAME'].errors?.pattern|| angForm.controls['SHORT_NAME'].errors?.required || angForm.controls['SHORT_NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AT_POST\" class=\"form-control\" placeholder=\" \" id=\"AT_POST\"\r\n                                        pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\" maxlength=\"50\"\r\n                                        formControlName=\"AT_POST\">\r\n                                    <label for=\"AT_POST\">At-Post</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AT_POST'].invalid &&(angForm.controls['AT_POST'].dirty || angForm.controls['AT_POST'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AT_POST'].errors?.pattern || angForm.controls['AT_POST'].errors?.maxlength\">\r\n                                    Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"TALUKA_NAME\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"TALUKA_NAME\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"50\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\r\n                                        formControlName=\"TALUKA_NAME\">\r\n                                    <label for=\"TALUKA_NAME\">Taluka Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TALUKA_NAME'].invalid && (angForm.controls['TALUKA_NAME'].dirty || angForm.controls['TALUKA_NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TALUKA_NAME'].errors?.pattern || angForm.controls['TALUKA_NAME'].errors?.maxlength\">\r\n                                    Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"DISTRICT_NAME\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"DISTRICT_NAME\" required=\" \" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"50\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\r\n                                        formControlName=\"DISTRICT_NAME\">\r\n                                    <label for=\"DISTRICT_NAME\">District Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['DISTRICT_NAME'].invalid && (angForm.controls['DISTRICT_NAME'].dirty || angForm.controls['DISTRICT_NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['DISTRICT_NAME'].errors?.pattern || angForm.controls['DISTRICT_NAME'].errors?.required || angForm.controls['DISTRICT_NAME'].errors?.maxlength\">\r\n                                    Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \" maxlength=\"10\"\r\n                                        id=\"BRANCH_CODE\" required=\"\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\r\n                                        formControlName=\"BRANCH_CODE\">\r\n                                    <label for=\"BRANCH_CODE\">Branch Code<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.pattern || angForm.controls['BRANCH_CODE'].errors?.required || angForm.controls['BRANCH_CODE'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"PHNO\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" maxlength=\"10\" minlength=\"10\"\r\n                                        formControlName=\"PHNO\">\r\n                                    <label for=\"PHNO\">PHNO (R)</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['PHNO'].invalid && (angForm.controls['PHNO'].dirty || angForm.controls['PHNO'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['PHNO'].errors?.pattern || angForm.controls['PHNO'].errors?.maxlength || angForm.controls['PHNO'].errors?.minlength\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"MOBNO\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" maxlength=\"10\" minlength=\"10\"\r\n                                        formControlName=\"MOBNO\">\r\n                                    <label for=\"MOBNO\">Telephone (Mob)</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['MOBNO'].invalid && (angForm.controls['MOBNO'].dirty || angForm.controls['MOBNO'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['MOBNO'].errors?.pattern || angForm.controls['MOBNO'].errors?.maxlength || angForm.controls['MOBNO'].errors?.minlength\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"salarymasters?.length != 0\">\r\n                                    <tr *ngFor=\"let data of salarymasters\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        </td>\r\n                                        <td>{{data.CODE }}</td>\r\n                                        <td>{{data.NAME }}</td>\r\n                                        <td>{{data.SHORT_NAME}}</td>\r\n                                        <td>{{data.AT_POST}}</td>\r\n                                        <td>{{data.TALUKA_NAME}}</td>\r\n                                        <td>{{data.DISTRICT_NAME}}</td>\r\n                                        <td>{{data.BRANCH_CODE}}</td>\r\n                                        <td>{{data.PHNO}}</td>\r\n                                        <td>{{data.MOBNO}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"salarymasters?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Code\" name=\"Code\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Full Name\" name=\"FullName\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Short Name\" name=\"ShortName\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search At_Post\" name=\"AT_POST\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Taluka Name\" name=\"Taluka_Name\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search District Name\" name=\"District_Name\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Branch Code\" name=\"BranchCode\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Telephone(R)\" name=\"Telephone\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Telephone(Mob)\" name=\"MOBNO\"></th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class SalaryDivisionService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  //url = \"http://localhost:4000/salary-division-master\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/salary-division-master/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/salary-division-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/salary-division-master/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/salary-division-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport { SubSalaryService } from './sub-salary-division-master.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface SubSalaryMaster {\r\n  CODE: number;\r\n  NAME: string;\r\n  AT_POST: string;\r\n  TALUKA_NAME: string;\r\n  DISTRICT_NAME: string;\r\n  PHNO: number;\r\n  MOBNO: number;\r\n  SAL_CODE: number;\r\n  AC_EMAILID: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sub-salary-division-master',\r\n  templateUrl: './sub-salary-division-master.component.html',\r\n  styleUrls: ['./sub-salary-division-master.component.scss']\r\n})\r\nexport class SubSalaryDivisionMasterComponent implements OnInit {\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  subsalarymasters: SubSalaryMaster[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  //variable to get Id to update\r\n  updateID: number = 0;\r\n\r\n  // column filter \r\n  filterData = {};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private subSalaryDivisionService: SubSalaryService,\r\n    private fb: FormBuilder) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n        \r\n        // column filter\r\n        dataTableParameters.columns.forEach(element => {\r\n          if(element.search.value !=''){\r\n  \r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          }else{\r\n  \r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if(this.filterData.hasOwnProperty(element.data)){\r\n                let value = this.filterData[getColumnName];\r\n                if(columnValue != undefined || value != undefined){\r\n                  delete this.filterData[element.data];\r\n                } \r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            'http://localhost:4000/sub-salary-division-master',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.subsalarymasters = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      // columns: [\r\n      //   {\r\n      //     title: 'Action',\r\n          \r\n      //   },\r\n      //   {\r\n      //     title: 'Division Code', \r\n      //     data:'SAL_CODE',\r\n      //   }, \r\n      //   {\r\n      //     title: 'Sub Code',\r\n      //     data:'CODE',\r\n      //   }, \r\n      //   {\r\n      //     title: 'Name',\r\n      //     data:'NAME',\r\n      //   }, \r\n      //   {\r\n      //     title: 'At-Post',\r\n      //     data:'AT_POST',\r\n      //   }, \r\n      //   {\r\n      //     title: 'Taluka Name',\r\n      //     data:'TALUKA_NAME',\r\n      //   },\r\n      //    {\r\n      //     title: 'District Name',\r\n      //     data:'DISTRICT_NAME',\r\n      //   },\r\n      //   {\r\n      //     title: 'Email ID',\r\n      //     data:'AC_EMAILID',\r\n      //   },\r\n      //   {\r\n      //     title: 'Telephone(R)',\r\n      //     data:'PHNO',\r\n      //   },\r\n      //   {\r\n      //     title: 'Telephone(Mob)',\r\n      //     data:'MOBNO',\r\n      //   },\r\n      // ],\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Division Code',\r\n          data: 'SAL_CODE'\r\n        }, {\r\n          title: 'Sub Code',\r\n          data: 'CODE'\r\n        }, {\r\n          title: 'Name',\r\n          data: 'NAME'\r\n        }, {\r\n          title: 'At-Post',\r\n          data: 'AT_POST'\r\n        }, {\r\n          title: 'Taluka Name',\r\n          data: 'TALUKA_NAME'\r\n        }, {\r\n          title: 'District Name',\r\n          data: 'DISTRICT_NAME'\r\n        },\r\n        {\r\n          title: 'Email ID',\r\n          data: 'AC_EMAILID'\r\n        },\r\n        {\r\n          title: 'Telephone(R)',\r\n          data: 'PHNO'\r\n        },\r\n        {\r\n          title: 'Telephone(Mob)',\r\n          data: 'MOBNO'\r\n        },\r\n      ],\r\n      dom: 'Blrtip',\r\n    };\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      SAL_CODE: [''],\r\n      CODE: ['', [Validators.pattern, Validators.required]],\r\n      NAME: ['', [Validators.pattern, Validators.required]],\r\n      AT_POST: ['', [Validators.pattern]],\r\n      TALUKA_NAME: ['', [Validators.pattern]],\r\n      DISTRICT_NAME: ['', [Validators.pattern]],\r\n      AC_EMAILID: ['', [Validators.pattern]],\r\n      PHNO: ['', [Validators.pattern]],\r\n      MOBNO: ['', [Validators.pattern]],\r\n    });\r\n  }\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'SAL_CODE': formVal.SAL_CODE,\r\n      'CODE': formVal.CODE,\r\n      'NAME': formVal.NAME,\r\n      'AT_POST': formVal.AT_POST,\r\n      'TALUKA_NAME': formVal.TALUKA_NAME,\r\n      'DISTRICT_NAME': formVal.DISTRICT_NAME,\r\n      'AC_EMAILID': formVal.AC_EMAILID,\r\n      'PHNO': formVal.PHNO,\r\n      'MOBNO': formVal.MOBNO,\r\n\r\n    }\r\n    this.subSalaryDivisionService.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n    //To clear form\r\n     this.resetForm();\r\n  }\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.subSalaryDivisionService.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        'SAL_CODE': data.SAL_CODE,\r\n        'CODE': data.CODE,\r\n        'NAME': data.NAME,\r\n        'AT_POST': data.AT_POST,\r\n        'TALUKA_NAME': data.TALUKA_NAME,\r\n        'DISTRICT_NAME': data.DISTRICT_NAME,\r\n        'AC_EMAILID': data.AC_EMAILID,\r\n        'PHNO': data.PHNO,\r\n        'MOBNO': data.MOBNO,\r\n      })\r\n    })\r\n  }\r\n  //Method for update data \r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    this.subSalaryDivisionService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n       this.resetForm();\r\n    })\r\n  }\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete sub salary division Master data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.subSalaryDivisionService.deleteData(id).subscribe(data1 => {\r\n          this.subsalarymasters = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n          console.log(error)\r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          debugger\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }else{\r\n            that\r\n            .search(this['value'])\r\n            .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n   // Reset Function\r\n   resetForm() {\r\n    this.createForm();\r\n  }\r\n  \r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Sub Salary Division Master</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"SAL_CODE\" class=\"form-control\" placeholder=\" \" disabled\r\n                                        id=\"SAL_CODE\"  pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\r\n                                        formControlName=\"SAL_CODE\">\r\n                                    <label for=\"SAL_CODE\">Division Code</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"CODE\" class=\"form-control\" placeholder=\" \" id=\"CODE\"\r\n                                        required=\"\" pattern=\"^[0-9]+$\" maxlength=\"12\"\r\n                                        title=\"Input allowed only 0-9\" formControlName=\"CODE\">\r\n                                    <label for=\"CODE\">Sub Code<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['CODE'].invalid && (angForm.controls['CODE'].dirty || angForm.controls['CODE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['CODE'].errors?.pattern || angForm.controls['CODE'].errors?.required || angForm.controls['CODE'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"NAME\"\r\n                                        required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\r\n                                    <label for=\"Name\">Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AT_POST\" class=\"form-control\" placeholder=\" \" id=\"AT_POST\"\r\n                                        pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\" maxlength=\"100\"\r\n                                        formControlName=\"AT_POST\">\r\n                                    <label for=\"AT_POST\">At-Post</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AT_POST'].invalid &&(angForm.controls['AT_POST'].dirty || angForm.controls['AT_POST'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AT_POST'].errors?.pattern || angForm.controls['AT_POST'].errors?.maxlength\">\r\n                                    Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"TALUKA_NAME\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"TALUKA_NAME\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"TALUKA_NAME\">\r\n                                    <label for=\"TALUKA_NAME\">Taluka Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TALUKA_NAME'].invalid &&(angForm.controls['TALUKA_NAME'].dirty || angForm.controls['TALUKA_NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TALUKA_NAME'].errors?.pattern || angForm.controls['TALUKA_NAME'].errors?.maxlength\">\r\n                                    Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"DISTRICT_NAME\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"DISTRICT_NAME\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\r\n                                        formControlName=\"DISTRICT_NAME\">\r\n                                    <label for=\"DISTRICT_NAME\">District Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['DISTRICT_NAME'].invalid &&(angForm.controls['DISTRICT_NAME'].dirty || angForm.controls['DISTRICT_NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['DISTRICT_NAME'].errors?.pattern || angForm.controls['DISTRICT_NAME'].errors?.maxlength\">\r\n                                    Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_EMAILID\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"AC_EMAILID\" pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\" maxlength=\"100\"\r\n                                        formControlName=\"AC_EMAILID\">\r\n                                    <label for=\"AC_EMAILID\">Email ID</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_EMAILID'].invalid &&(angForm.controls['AC_EMAILID'].dirty || angForm.controls['AC_EMAILID'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_EMAILID'].errors?.pattern || angForm.controls['AC_EMAILID'].errors?.maxlength\">\r\n                                    Please Enter valid email address\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"PHNO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"PHNO\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" maxlength=\"10\" minlength=\"10\"\r\n                                        formControlName=\"PHNO\">\r\n                                    <label for=\"PHNO\">Telephone (R)</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['PHNO'].invalid &&(angForm.controls['PHNO'].dirty || angForm.controls['PHNO'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['PHNO'].errors?.pattern || angForm.controls['PHNO'].errors?.maxlength || angForm.controls['PHNO'].errors?.minlength\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"MOBNO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"MOBNO\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" maxlength=\"10\" minlength=\"10\"\r\n                                        formControlName=\"MOBNO\">\r\n                                    <label for=\"MOBNO\">Telephone (Mob)</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['MOBNO'].invalid &&(angForm.controls['MOBNO'].dirty || angForm.controls['MOBNO'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['MOBNO'].errors?.pattern || angForm.controls['MOBNO'].errors?.maxlength || angForm.controls['MOBNO'].errors?.minlength\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-2\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"subsalarymasters?.length != 0\">\r\n                                    <tr *ngFor=\"let data of subsalarymasters\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        </td>\r\n                                        <td>{{ data.SAL_CODE }}</td>\r\n                                        <td>{{ data.CODE }}</td>\r\n                                        <td>{{ data.NAME }}</td>\r\n                                        <td>{{data.AT_POST}}</td>\r\n                                        <td>{{data.TALUKA_NAME}}</td>\r\n                                        <td>{{data.DISTRICT_NAME}}</td>\r\n                                        <td>{{data.AC_EMAILID}}</td>\r\n                                        <td>{{data.PHNO}}</td>\r\n                                        <td>{{data.MOBNO}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"subsalarymasters?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Division Code\" name=\"Division_Code\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Sub Code\" name=\"Sub_Code\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search NAME\" name=\"NAME\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search At_Post\" name=\"AT_POST\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Taluka Name\" name=\"Taluka_Name\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search District Name\" name=\"District_Name\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Email ID\" name=\"Email_ID\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Telephone(R)\" name=\"Telephone\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Telephone(Mob)\" name=\"MOBNO\"></th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class SubSalaryService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n // url = \"http://localhost:4000/sub-salary-division-master\";\r\n url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/sub-salary-division-master/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/sub-salary-division-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/sub-salary-division-master/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/sub-salary-division-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-td-recipt-series-master',\n  templateUrl: './td-recipt-series-master.component.html',\n  styleUrls: ['./td-recipt-series-master.component.scss']\n})\nexport class TdReciptSeriesMasterComponent implements OnInit {\n\n  dtExportButtonOptions: any = {};\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  \n \n  message = {\n    PurposeCode: \"\",\n    Description: \"\",\n   name:\"\"\n    \n  };\n\n  //function for edit button clicked\n  editClickHandler(info: any): void {\n    this.message.PurposeCode = info.PurposeCode;\n    this.message.Description = info.Description;\n    this.message.name=info.name;\n    \n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n    // this.form.reset();\n  }\n\n  \n\n  //function for delete button clicked\ndelClickHandler(info:any):void  {\n  this.message.name=info.name;\n      Swal.fire({\n    title: 'Are you sure?',\n    text: \"Do you want to delete name.\" + this.message.name + \"  data\", \n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#229954',\n    cancelButtonColor: '#d33',\n    confirmButtonText: 'Yes, delete it!'\n  }).then((result) => {\n    if (result.isConfirmed) {\n      Swal.fire(\n        'Deleted!',\n        'Your data has been deleted.',\n        'success'\n      )\n    } else if (\n      result.dismiss === Swal.DismissReason.cancel\n    ) {\n      Swal.fire(\n        'Cancelled',\n        'Your data is safe.',\n        'error'\n      )\n    }\n  })\n}\n \n  constructor() { }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/datatable-data.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\"id=\"editbtn\">Edit</button>' + ' ' +'<button  id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n        title: 'Name',\n        data: 'name'\n      }, {\n        title: 'Position',\n        data: 'position'\n      }, {\n        title: 'Office',\n        data: 'office'\n      }, {\n        title: 'Age',\n        data: 'age'\n      }, {\n        title: 'Start Date',\n        data: 'date'\n      }, {\n        title: 'Salary',\n        data: 'salary'\n      }],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n    rowCallback: (row: Node, data: any[] | Object, index: number) => {\n      const self = this;\n      $('td', row).off('click');\n      $('td', row).on('click', '#editbtn', () => {\n        self.editClickHandler(data);\n      });\n      $('td', row).on('click', '#delbtn', () => {\n        self.delClickHandler(data);\n      });\n      return row;\n    }\n    };\n    \n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>TD Receipt Series Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form class=\"form-material\">\n                <div class=\"card-block\">\n\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <input type=\"text\" name=\"footer-email\" class=\"form-control\" required=\"\" pattern=\"^[A-Za-Z ]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space) \">\n                                <span class=\"form-bar\"></span>\n                                <label class=\"float-label\">Receipt Type<span class=\"required\"> *</span></label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <input type=\"text\" name=\"footer-email\" class=\"form-control\" required=\"\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9 digit\">\n                                <span class=\"form-bar\"></span>\n                                <label class=\"float-label\">Last Receipt No.<span class=\"required\"> *</span></label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <!-- <button class=\"btn btn-primary ripple light\">Add</button> -->\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                      \n                        </div>\n                    </div>\n                    \n                </div>\n            </form>\n            <div class=\"col-12\">\n\n                <div class=\"table-responsive\">\n                    <table datatable [dtOptions]=\"dtExportButtonOptions\" class=\"table table-striped table-bordered table-hover\" style=\"width:100%\">\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { WeakerService } from './weaker-section-master.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface WeakerMaster {\n  CODE: number,\n  NAME: string\n}\n@Component({\n  selector: 'app-weaker-section-master',\n  templateUrl: './weaker-section-master.component.html',\n  styleUrls: ['./weaker-section-master.component.scss']\n})\nexport class WeakerSectionMasterComponent implements OnInit {\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  weakermasters: WeakerMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  //variable to get Id to update\n  updateID: number = 0;\n  //filter variable\n  filterData = {};\n\n\n  constructor(\n    private http: HttpClient,\n    private weakerService: WeakerService,\n    private fb: FormBuilder) {\n  }\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.columns.forEach(element => {\n          if (element.search.value != '') {\n            let string = element.search.value;\n            this.filterData[element.data] = string;\n          } else {\n            let getColumnName = element.data;\n            let columnValue = element.value;\n            if (this.filterData.hasOwnProperty(element.data)) {\n              let value = this.filterData[getColumnName];\n              if (columnValue != undefined || value != undefined) {\n                delete this.filterData[element.data];\n              }\n            }\n          }\n        });\n        dataTableParameters['filterData'] = this.filterData;\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/weaker-master',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.weakermasters = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action',\n        },\n        {\n          title: 'Weaker Section Code',\n          data: 'CODE'\n        },\n        {\n          title: 'Description',\n          data: 'NAME'\n        },\n      ],\n      dom: 'Blrtip',\n    };\n  }\n  // Method to handle validation of form\n  createForm() {\n    this.angForm = this.fb.group({\n      CODE: [''],\n      NAME: ['', [Validators.pattern, Validators.required]],\n    });\n  }\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'CODE': formVal.CODE,\n      'NAME': formVal.NAME,\n    }\n    this.weakerService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.resetForm();\n  }\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.weakerService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'CODE': data.CODE,\n        'NAME': data.NAME,\n      })\n    })\n  }\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.weakerService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.resetForm();\n    })\n  }\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete weaker master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.weakerService.deleteData(id).subscribe(data1 => {\n          this.weakermasters = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.columns().every(function () {\n        const that = this;\n        $('input', this.footer()).on('keyup change', function () {\n          if (this['value'] != '') {\n            that\n              .search(this['value'])\n              .draw();\n          } else {\n            that\n              .search(this['value'])\n              .draw();\n          }\n        });\n      });\n    });\n  }\n\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  // Reset Function\n  resetForm() {\n    this.createForm();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Weaker Section Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"WeakerSectionCode\" title=\"Input allowed only  0-9\" disabled\n                                        formControlName=\"CODE\">\n                                    <label for=\"WeakerSectionCode\">Weaker Section Code</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"NAME\" class=\"form-control\" placeholder=\" \" id=\"Description\"\n                                        required=\"\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"100\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"NAME\">\n                                    <label for=\"Description\">Description<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['NAME'].invalid && (angForm.controls['NAME'].dirty || angForm.controls['NAME'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['NAME'].errors?.pattern || angForm.controls['NAME'].errors?.required || angForm.controls['NAME'].errors?.maxlength\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                        </div>\n\n                    </div>\n\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"weakermasters?.length != 0\">\n                                    <tr *ngFor=\"let data of weakermasters\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\n                                        </td>\n                                        <td>{{ data.CODE }}</td>\n                                        <td>{{ data.NAME }}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"weakermasters?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th></th>\n                                        <th><input type=\"text\" placeholder=\"Search Weaker Section Code\" name=\"CODE\"></th>\n                                        <th><input type=\"text\" placeholder=\"Search Description\" name=\"NAME\"></th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class WeakerService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  url = \"http://localhost:4000/weaker-master\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}