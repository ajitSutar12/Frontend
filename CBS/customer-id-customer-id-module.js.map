{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/elements/id1.service.ts","./src/app/shared/elements/member.service.ts","./src/app/theme/master/customer/customer-id/customer-id-routing.module.ts","./src/app/theme/master/customer/customer-id/customer-id.component.ts","./src/app/theme/master/customer/customer-id/customer-id.component.html","./src/app/theme/master/customer/customer-id/customer-id.module.ts","./src/app/theme/master/customer/customer-id/customer-id.service.ts"],"names":[],"mappings":"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","file":"customer-id-customer-id-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class Id1Service {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '1' },\r\n        { value: '1', label: '2' },\r\n        { value: '2', label: '3' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(Id1Service.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(Id1Service.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(Id1Service.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class MemberService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '1' },\r\n        { value: '1', label: '2' },\r\n        { value: '2', label: '3' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(MemberService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(MemberService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(MemberService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { CustomerIdComponent } from './customer-id.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  CustomerIdComponent,\r\n    data: {\r\n      title: 'Customer Id',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class  CustomerIdRoutingModule { }","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n// Creating and maintaining form fields with validation \nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// Displaying Sweet Alert\nimport Swal from 'sweetalert2';\n// Angular Datatable Directive  \nimport { DataTableDirective } from 'angular-datatables';\n// Service File For Handling CRUD Operation\nimport { CustomerIdService } from './customer-id.service';\n// Used to Call API\nimport { HttpClient } from '@angular/common/http';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { StatementTypeService } from '../../../../shared/elements/statment-type.service';\nimport { Id1Service } from '../../../../shared/elements/id1.service';\nimport { MemberService } from '../../../../shared/elements/member.service';\nimport { MsService } from '../../../../shared/elements/ms.service';\n\n// Handling datatable data\nclass DataTableResponse {\n  data: any[];\n  draw: number;\n  recordsFiltered: number;\n  recordsTotal: number;\n}\n\n// For fetching values from backend\ninterface CustomerMaster {\n  AC_NO: number\n  AC_MEMBTYPE: string\n  AC_MEMBNO: string\n  AC_TITLE: string\n  AC_NAME: string\n  AC_CAST: string\n  AC_OCODE: string\n  AC_ADHARNO: string\n  AC_RISKCATG: string\n  AC_BIRTH_DT: string\n  AC_PANNO: number\n  AC_SALARYDIVISION_CODE: string\n  AC_ADDR1: string\n  AC_ADDR2: string\n  AC_ADDR3: string\n  AC_IS_RECOVERY: boolean\n  AC_CTCODE: string\n  AC_PIN: number\n  AC_MOBILENO: number\n  AC_PHONE_RES: number\n  AC_PHONE_OFFICE: number\n  AC_EMAILID: string\n  TDS_REQUIRED: boolean\n  SMS_REQUIRED: boolean\n  IS_KYC_RECEIVED: boolean\n}\n\n@Component({\n  selector: 'app-customer-id',\n  templateUrl: './customer-id.component.html',\n  styleUrls: ['./customer-id.component.scss'],\n})\n\nexport class CustomerIdComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  // For reloading angular datatable after CRUD operation\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  // Store data from backend\n  customerMaster: CustomerMaster[];\n  // Created Form Group\n  angForm: FormGroup;\n  //Datatable variable\n  dtExportButtonOptions: DataTables.Settings = {};\n  Data: any;\n  //variables for pagination\n  page: number = 1;\n  passenger: any;\n  itemsPerPage = 10;\n  totalItems: any;\n  currentJustify = 'start';\n  active = 1;\n  activeKeep = 1;\n  // Variables for search \n  filterObject: { name: string; type: string; }[];\n  filter: any;\n  filterForm: FormGroup;\n  // Variables for hide/show add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable to get ID to update\n  updateID: number = 0;\n\n  simpleOption: Array<IOption> = this.StatementTypeService.getCharacters();\n  a: Array<IOption> = this.Id1Service.getCharacters();\n  b: Array<IOption> = this.MemberService.getCharacters();\n  c: Array<IOption> = this.MsService.getCharacters();\n\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n\n  GuarantorTrue = false;\n  ATrue = false;\n\n  constructor(public StatementTypeService: StatementTypeService,\n    private http: HttpClient,\n    public Id1Service: Id1Service,\n    public MemberService: MemberService,\n    public MsService: MsService,\n    public customerIdService: CustomerIdService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.createForm();\n    // Fetching Server side data\n    this.dtExportButtonOptions = {\n      pagingType: 'full_numbers',\n      paging: true,\n      pageLength: 10,\n      serverSide: true,\n      processing: true,\n      ajax: (dataTableParameters: any, callback) => {\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\n        dataTableParameters.maxNumber =\n          dataTableParameters.start + dataTableParameters.length;\n        let datatableRequestParam: any;\n        this.page = dataTableParameters.start / dataTableParameters.length;\n        if (dataTableParameters.search.value != '') {\n          this.filter = dataTableParameters.search.value;\n          this.filterObject = [\n            // { name: \"A_BALCODE\", type: \"default\" },\n            // { name: \"A_ACHEAD\", type: \"default\" },\n            // { name: \"A_ACTYPE\", type: \"default\" }\n          ]\n          datatableRequestParam = {\n            page: this.page,\n            limit: dataTableParameters.length,\n            filter: dataTableParameters.search.value,\n            filter_in: this.filterObject\n          }\n        }\n        else {\n          datatableRequestParam = {\n            page: this.page,\n            limit: dataTableParameters.length\n          }\n        }\n        this.http\n          .post<DataTableResponse>(\n            'http://localhost:4000/customer-id',\n            dataTableParameters\n          ).subscribe(resp => {\n            this.customerMaster = resp.data;\n            callback({\n              recordsTotal: resp.recordsTotal,\n              recordsFiltered: resp.recordsTotal,\n              data: []\n            });\n          });\n      },\n      columns: [\n        {\n          title: 'Action',\n        },\n\n        {\n          title: ' Customer ID',\n        },\n        {\n          title: 'Member Scheme',\n        },\n        {\n          title: 'Member No.',\n        },\n        {\n          title: 'Title',\n        },\n        {\n          title: 'Cast',\n        },\n        {\n          title: 'Occupation',\n        },\n        {\n          title: 'Adhar Card No.',\n        },\n        {\n          title: 'Risk Category',\n        },\n        {\n          title: 'Birth Date',\n        },\n        {\n          title: 'PAN No.',\n        },\n        {\n          title: 'Salary Div.',\n        },\n        {\n          title: 'Address Text',\n        },\n        {\n          title: 'Address Text',\n        },\n        {\n          title: 'Address Text',\n        },\n        {\n          title: 'Recovery',\n        },\n        {\n          title: 'City',\n        },\n        {\n          title: 'Pin',\n        },\n        {\n          title: 'Mobile',\n        },\n        {\n          title: 'Recidential(R)',\n        },\n        {\n          title: 'Office(O)',\n        },\n        {\n          title: 'Email',\n        },\n        {\n          title: 'TDS Calculation Required?',\n        },\n        {\n          title: 'SMS Facility Required ?',\n        },\n        {\n          title: 'KYC',\n        }\n      ],\n      dom: 'Bfrtip',\n    };\n\n    this.runTimer();\n    this.dataSub = this.StatementTypeService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.Id1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.MemberService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.MsService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  OpenLink(val) {\n    if (val == 1) {\n      this.GuarantorTrue = true;\n    }\n    if (val == 2) {\n      this.ATrue = true;\n    }\n  }\n\n\n  createForm() {\n    this.angForm = this.fb.group({\n      AC_NO: ['',],\n      AC_MEMBTYPE: ['', [Validators.pattern]],\n      AC_MEMBNO: ['', [Validators.pattern]],\n      AC_TITLE: ['',[Validators.required]],\n      AC_NAME: ['', [Validators.pattern, Validators.required]],\n      AC_CAST: ['', [Validators.pattern]],\n      AC_OCODE: ['', [Validators.pattern]],\n      AC_ADHARNO: ['', [Validators.pattern]],\n      AC_RISKCATG: ['', [Validators.pattern]],\n      AC_BIRTH_DT: ['',],\n      AC_PANNO: ['', [Validators.pattern]],\n      AC_SALARYDIVISION_CODE: ['', [Validators.pattern]],\n      AC_ADDR1: ['', [Validators.pattern]],\n      AC_ADDR2: ['', [Validators.pattern]],\n      AC_ADDR3: ['', [Validators.pattern]],\n      AC_IS_RECOVERY: [false],\n      AC_CTCODE: ['', [Validators.pattern]],\n      AC_PIN: ['', [Validators.pattern]],\n      AC_MOBILENO: ['', [Validators.pattern]],\n      AC_PHONE_RES: ['', [Validators.pattern]],\n      AC_PHONE_OFFICE: ['', [Validators.pattern]],\n      AC_EMAILID: ['', [Validators.pattern]],\n      TDS_REQUIRED: [false],\n      SMS_REQUIRED: [false],\n      IS_KYC_RECEIVED: [false],\n      // FIN_YEAR: ['',[Validators.pattern]],\n      // SUBMIT_DATE: [''],\n      // FORM_TYPE: [''],\n      // TDS_RATE: ['',[Validators.pattern,Validators.required]],\n      // TDS_LIMIT: ['',[Validators.pattern,Validators.required]],\n    });\n  }\n\n  // Method to insert data into database through NestJS\n  submit() {\n    const formVal = this.angForm.value;\n    const dataToSend = {\n      'AC_NO': formVal.AC_NO,\n      'AC_MEMBTYPE': formVal.AC_MEMBTYPE,\n      'AC_MEMBNO': formVal.AC_MEMBNO,\n      'AC_TITLE': formVal.AC_TITLE,\n      'AC_NAME': formVal.AC_NAME,\n      'AC_CAST': formVal.AC_CAST,\n      'AC_OCODE': formVal.AC_OCODE,\n      'AC_ADHARNO': formVal.AC_ADHARNO,\n      'AC_RISKCATG': formVal.AC_RISKCATG,\n      'AC_BIRTH_DT': formVal.AC_BIRTH_DT,\n      'AC_PANNO': formVal.AC_PANNO,\n      'AC_SALARYDIVISION_CODE': formVal.AC_SALARYDIVISION_CODE,\n      'AC_ADDR1': formVal.AC_ADDR1,\n      'AC_ADDR2': formVal.AC_ADDR2,\n      'AC_ADDR3': formVal.AC_ADDR3,\n      'AC_IS_RECOVERY': formVal.AC_IS_RECOVERY,\n      'AC_CTCODE': formVal.AC_CTCODE,\n      'AC_PIN': formVal.AC_PIN,\n      'AC_MOBILENO': formVal.AC_MOBILENO,\n      'AC_PHONE_RES': formVal.AC_PHONE_RES,\n      'AC_PHONE_OFFICE': formVal.AC_PHONE_OFFICE,\n      'AC_EMAILID': formVal.AC_EMAILID,\n      'TDS_REQUIRED': formVal.TDS_REQUIRED,\n      'SMS_REQUIRED': formVal.SMS_REQUIRED,\n      'IS_KYC_RECEIVED': formVal.IS_KYC_RECEIVED\n    }\n    this.customerIdService.postData(dataToSend).subscribe(data1 => {\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\n      // to reload after insertion of data\n      this.rerender();\n    }, (error) => {\n      console.log(error)\n    })\n    //To clear form\n    this.angForm.reset();\n  }\n\n  //Method for append data into fields\n  editClickHandler(id) {\n    this.showButton = false;\n    this.updateShow = true;\n    this.customerIdService.getFormData(id).subscribe(data => {\n      this.updateID = data.id;\n      this.angForm.setValue({\n        'AC_NO': data.AC_NO,\n        'AC_MEMBTYPE': data.AC_MEMBTYPE,\n        'AC_MEMBNO': data.AC_MEMBNO,\n        'AC_TITLE': data.AC_TITLE,\n        'AC_NAME': data.AC_NAME,\n        'AC_CAST': data.AC_CAST,\n        'AC_OCODE': data.AC_OCODE,\n        'AC_ADHARNO': data.AC_ADHARNO,\n        'AC_RISKCATG': data.AC_RISKCATG,\n        'AC_BIRTH_DT': data.AC_BIRTH_DT,\n        'AC_PANNO': data.AC_PANNO,\n        'AC_SALARYDIVISION_CODE': data.AC_SALARYDIVISION_CODE,\n        'AC_ADDR1': data.AC_ADDR1,\n        'AC_ADDR2': data.AC_ADDR2,\n        'AC_ADDR3': data.AC_ADDR3,\n        'AC_IS_RECOVERY': data.AC_IS_RECOVERY,\n        'AC_CTCODE': data.AC_CTCODE,\n        'AC_PIN': data.AC_PIN,\n        'AC_MOBILENO': data.AC_MOBILENO,\n        'AC_PHONE_RES': data.AC_PHONE_RES,\n        'AC_PHONE_OFFICE': data.AC_PHONE_OFFICE,\n        'AC_EMAILID': data.AC_EMAILID,\n        'TDS_REQUIRED': data.TDS_REQUIRED,\n        'SMS_REQUIRED': data.SMS_REQUIRED,\n        'IS_KYC_RECEIVED': data.IS_KYC_RECEIVED\n\n      })\n    })\n  }\n\n  //Method for update data \n  updateData() {\n    let data = this.angForm.value;\n    data['id'] = this.updateID;\n    this.customerIdService.updateData(data).subscribe(() => {\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\n      this.showButton = true;\n      this.updateShow = false;\n      this.rerender();\n      this.angForm.reset();\n    })\n  }\n\n  //Method for delete data\n  delClickHandler(id: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Authority master data.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.customerIdService.deleteData(id).subscribe(data1 => {\n          this.customerMaster = data1;\n          Swal.fire(\n            'Deleted!',\n            'Your data has been deleted.',\n            'success'\n          )\n        }), (error) => {\n          console.log(error)\n        }\n        // to reload after delete of data\n        this.rerender();\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  rerender(): void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      // Destroy the table first\n      dtInstance.destroy();\n      // Call the dtTrigger to rerender again\n      this.dtTrigger.next();\n    });\n  }\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Customer ID</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <div class=\"card-block\">\n                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\" placeholder=\"Customer Id\" formControlName=\"AC_NO\">\n                                </ng-select>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\" placeholder=\"Member No\" formControlName=\"AC_MEMBNO\">\n                                </ng-select>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"c\" [multiple]=\"false\" placeholder=\"Member Scheme\" formControlName=\"AC_MEMBTYPE\">\n                                </ng-select>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-2\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" name=\"AC_TITLE\" [multiple]=\"false\" placeholder=\"Title *\" required title=\"Compulsory Selection\" formControlName=\"AC_TITLE\">\n                                </ng-select>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_TITLE'].invalid && (angForm.controls['AC_TITLE'].dirty || angForm.controls['AC_TITLE'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_TITLE'].errors?.required\">\n                                    This is required field\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"AC_NAME\" class=\"form-control\" placeholder=\" \" id=\"AC_NAME\"\n                                        required pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"AC_NAME\">\n                                    <label for=\"AC_NAME\">Name<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_NAME'].invalid && (angForm.controls['AC_NAME'].dirty || angForm.controls['AC_NAME'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_NAME'].errors?.pattern || angForm.controls['AC_NAME'].errors?.required\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select [ngClass]=\"'ng-select'\" [options]=\"c\" [multiple]=\"false\"\n                                        placeholder=\"Cast\" formControlName=\"AC_CAST\">\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_CAST'].invalid && (angForm.controls['AC_CAST'].dirty || angForm.controls['AC_CAST'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_CAST'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select [ngClass]=\"'ng-select'\" [options]=\"c\" [multiple]=\"false\"\n                                        placeholder=\"Occupation\" formControlName=\"AC_OCODE\">\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_OCODE'].invalid && (angForm.controls['AC_OCODE'].dirty || angForm.controls['AC_OCODE'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_OCODE'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select [ngClass]=\"'ng-select'\" [options]=\"c\" [multiple]=\"false\"\n                                        placeholder=\"Risk Category\" formControlName=\"AC_RISKCATG\">\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_RISKCATG'].invalid && (angForm.controls['AC_RISKCATG'].dirty || angForm.controls['AC_RISKCATG'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_RISKCATG'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"AC_ADHARNO\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only 0-9\" id=\"AC_ADHARNO\"\n                                        formControlName=\"AC_ADHARNO\">\n                                    <label for=\"AC_ADHARNO\">Customer Aadhar No.</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_ADHARNO'].invalid && (angForm.controls['AC_ADHARNO'].dirty || angForm.controls['AC_ADHARNO'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_ADHARNO'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"AC_PANNO\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"^[A-Z0-9]+$\" title=\"Enter Uppercase letters and digits only\"\n                                        id=\"AC_PANNO\" formControlName=\"AC_PANNO\">\n                                    <label for=\"AC_PANNO\">Customer Pan No.</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_PANNO'].invalid && (angForm.controls['AC_PANNO'].dirty || angForm.controls['AC_PANNO'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_PANNO'].errors?.pattern\">\n                                    Enter Uppercase letters and digits only\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"AC_BIRTH_DT\" class=\"form-control\" placeholder=\" \"\n                                        id=\"AC_BIRTH_DT\" max=\"9999-12-31\" onfocus=\"(this.type='date')\"\n                                        formControlName=\"AC_BIRTH_DT\">\n                                    <label for=\"AC_BIRTH_DT\">Birth Date</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select [ngClass]=\"'ng-select'\" [options]=\"c\" [multiple]=\"false\"\n                                        placeholder=\"Salary Division\" formControlName=\"AC_SALARYDIVISION_CODE\">\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_SALARYDIVISION_CODE'].invalid && (angForm.controls['AC_SALARYDIVISION_CODE'].dirty || angForm.controls['AC_SALARYDIVISION_CODE'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_SALARYDIVISION_CODE'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"border-checkbox-section\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"AC_IS_RECOVERY\" formControlName=\"AC_IS_RECOVERY\">\n                                    <label class=\"border-checkbox-label\" for=\"AC_IS_RECOVERY\">Recovery</label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <textarea type=\"text\" name=\"Customer_address\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                        id=\"AC_ADDR1\" formControlName=\"AC_ADDR1\"></textarea>\n                                    <label for=\"AC_ADDR1\">Address1</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_ADDR1'].invalid && (angForm.controls['AC_ADDR1'].dirty || angForm.controls['AC_ADDR1'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_ADDR1'].errors?.pattern\">\n                                    Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <textarea type=\"text\" name=\"Customer_address\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                        id=\"AC_ADDR2\" formControlName=\"AC_ADDR2\"></textarea>\n                                    <label for=\"AC_ADDR2\">Address2</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_ADDR2'].invalid && (angForm.controls['AC_ADDR2'].dirty || angForm.controls['AC_ADDR2'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_ADDR2'].errors?.pattern\">\n                                    Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <textarea type=\"text\" name=\"Customer_address\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                        id=\"AC_ADDR3\" formControlName=\"AC_ADDR3\"></textarea>\n                                    <label for=\"AC_ADDR3\">Address3</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_ADDR3'].invalid && (angForm.controls['AC_ADDR3'].dirty || angForm.controls['AC_ADDR3'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_ADDR3'].errors?.pattern\">\n                                    Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <ng-select [ngClass]=\"'ng-select'\" [options]=\"c\" [multiple]=\"false\"\n                                        placeholder=\"City\" formControlName=\"AC_CTCODE\">\n                                    </ng-select>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_CTCODE'].invalid && (angForm.controls['AC_CTCODE'].dirty || angForm.controls['AC_CTCODE'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_CTCODE'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"AC_PIN\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" id=\"AC_PIN\"\n                                        formControlName=\"AC_PIN\">\n                                    <label for=\"AC_PIN\">Pin Code</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_PIN'].invalid && (angForm.controls['AC_PIN'].dirty || angForm.controls['AC_PIN'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_PIN'].errors?.pattern \">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"AC_MOBILENO\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" id=\"AC_MOBILENO\"\n                                        formControlName=\"AC_MOBILENO\">\n                                    <label for=\"AC_MOBILENO\">Mobile</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_MOBILENO'].invalid && (angForm.controls['AC_MOBILENO'].dirty || angForm.controls['AC_MOBILENO'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_MOBILENO'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"AC_PHONE_RES\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" id=\"AC_PHONE_RES\"\n                                        formControlName=\"AC_PHONE_RES\">\n                                    <label for=\"AC_PHONE_RES\">Residential</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_PHONE_RES'].invalid && (angForm.controls['AC_PHONE_RES'].dirty || angForm.controls['AC_PHONE_RES'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_PHONE_RES'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"AC_EMAILID\" class=\"form-control\" placeholder=\" \"\n                                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" title=\"Enter valid Email\"\n                                        id=\"AC_EMAILID\" formControlName=\"AC_EMAILID\">\n                                    <label for=\"AC_EMAILID\">Email</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AC_EMAILID'].invalid && (angForm.controls['AC_EMAILID'].dirty || angForm.controls['AC_EMAILID'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['AC_EMAILID'].errors?.pattern\">\n                                    Enter valid Email\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"border-checkbox-section\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox2\" value=\"checkbox\" (click)=\"OpenLink(1)\" routerLinkActive=\"active\">\n                                    <label class=\"border-checkbox-label\" for=\"checkbox2\">Is Received TDS Document for\n                                        Year 2020-2021<span class=\"required\"> *</span></label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"border-checkbox-section\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"TDS_REQUIRED\" formControlName=\"TDS_REQUIRED\">\n                                    <label class=\"border-checkbox-label\" for=\"TDS_REQUIRED\">TDS Calculation\n                                        Required?<span class=\"required\"> *</span></label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"border-checkbox-section\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"SMS_REQUIRED\" formControlName=\"SMS_REQUIRED\">\n                                    <label class=\"border-checkbox-label\" for=\"SMS_REQUIRED\">SMS Facility Required ?<span\n                                            class=\"required\"> *</span></label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"border-checkbox-section\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"IS_KYC_RECEIVED\" formControlName=\"IS_KYC_RECEIVED\">\n                                    <label class=\"border-checkbox-label\" for=\"IS_KYC_RECEIVED\">KYC<span\n                                            class=\"required\">\n                                            *</span></label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <label> </label>\n                        </div>\n                    </div>\n                    <!-- <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <div *ngIf=\"GuarantorTrue\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm\">\n                                        <div class=\"form-group input-group\">\n                                            <span class=\"border-lable-flt\">\n                                                <input type=\"text\" name=\"Financial_Year\" class=\"form-control\"\n                                                    placeholder=\" \" id=\"Financial_Year\" formControlName=\"FIN_YEAR\">\n                                                <label for=\"Financial_Year\">Financial Year</label>\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-sm\">\n                                        <div class=\"form-group input-group\">\n                                            <span class=\"border-lable-flt\">\n                                                <input class=\"form-control\" required type=\"text\"\n                                                    onfocus=\"(this.type='date')\" id=\"SUBMIT_DATE\" max=\"9999-12-31\"\n                                                    formControlName=\"SUBMIT_DATE\" placeholder=\" \">\n                                                <label for=\"SUBMIT_DATE\">Submission Date<sub class=\"required\">\n                                                        *</sub></label>\n                                            </span>\n                                        </div>\n                                        <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['SUBMIT_DATE'].invalid && (angForm.controls['SUBMIT_DATE'].dirty || angForm.controls['SUBMIT_DATE'].touched)\" class=\"alert alert-danger\">\n                                            <div *ngIf=\"angForm.controls['SUBMIT_DATE'].errors?.required\">\n                                                This is required field\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    Form Type\n                                    <div class=\"form-radio\">\n                                        <form>\n                                            <div class=\"radio radio-inline\">\n                                                <label>\n                                                    <input type=\"radio\"  formControlName=\"FORM_TYPE\" name=\"FORM_TYPE\" value=\"FORM_TYPE\"\n                                                        (click)=\"OpenLink(2)\" routerLinkActive=\"active\">\n                                                    <i class=\"helper\"></i>Form - 15 A\n                                                </label>\n                                            </div>\n                                            <div class=\"radio radio-inline\">\n                                                <label>\n                                                    <input type=\"radio\"  formControlName=\"FORM_TYPE\" name=\"FORM_TYPE\" value=\"FORM_TYPE\">\n                                                    <i class=\"helper\"></i>Form - 15 H\n                                                </label>\n                                            </div>\n                                            <div class=\"radio radio-inline\">\n                                                <label>\n                                                    <input type=\"radio\"  formControlName=\"FORM_TYPE\" name=\"FORM_TYPE\" value=\"FORM_TYPE\">\n                                                    <i class=\"helper\"></i>Letter\n                                                </label>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"ATrue\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-2\">\n                                            <label>Form - 15 A</label>\n                                        </div>\n                                        <div class=\"col-sm\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input type=\"text\" name=\"tds_rate\" class=\"form-control\" required=\"\"\n                                                        placeholder=\" \" id=\"TDS_RATE\" pattern=\"^[0-9]+$\"\n                                                        title=\"Input allowed only  0-9\" formControlName=\"TDS_RATE\">\n                                                    <label for=\"TDS_RATE\">TDS Rate %<sub class=\"required\">\n                                                            *</sub></label>\n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TDS_RATE'].invalid && (angForm.controls['TDS_RATE'].dirty || angForm.controls['TDS_RATE'].touched)\" class=\"alert alert-danger\">\n                                                <div *ngIf=\"angForm.controls['TDS_RATE'].errors?.required ||angForm.controls['TDS_RATE'].errors?.pattern \">\n                                                    This is required field and Input allowed only 0-9\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input type=\"text\" name=\"tds_rate\" class=\"form-control\" required=\"\"\n                                                        placeholder=\" \" id=\"TDS_LIMIT\" pattern=\"^[0-9]+$\"\n                                                        title=\"Input allowed only  0-9\" formControlName=\"TDS_LIMIT\">\n                                                    <label for=\"TDS_LIMIT\">TDS Limit<sub class=\"required\">\n                                                            *</sub></label>\n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['TDS_LIMIT'].invalid && (angForm.controls['TDS_LIMIT'].dirty || angForm.controls['TDS_LIMIT'].touched)\" class=\"alert alert-danger\">\n                                                <div *ngIf=\"angForm.controls['TDS_LIMIT'].errors?.required || angForm.controls['TDS_LIMIT'].errors?.pattern\">\n                                                    This is required field and Input allowed only 0-9\n                                                </div>\n                                            </div>\n                                        </div>\n                                       \n            </div>\n        </div>\n\n    </div>\n</div>\n</div> -->\n                    <div class=\"row\">\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\n                                <tbody *ngIf=\"customerMaster?.length != 0\">\n                                    <tr *ngFor=\"let data of customerMaster\">\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button>\n                                        </td>\n                                        <td>{{data.AC_NO}}</td>\n                                        <td>{{data.AC_MEMBTYPE}}</td>\n                                        <td>{{data.AC_MEMBNO}}</td>\n                                        <td>{{data.AC_TITLE}}</td>\n                                        <td>{{data.AC_NAME}}</td>\n                                        <td>{{data.AC_CAST}}</td>\n                                        <td>{{data.AC_OCODE}}</td>\n                                        <td>{{data.AC_ADHARNO}}</td>\n                                        <td>{{data.AC_RISKCATG}}</td>\n                                        <td>{{data.AC_BIRTH_DT}}</td>\n                                        <td>{{data.AC_PANNO}}</td>\n                                        <td>{{data.AC_SALARYDIVISION_CODE}}</td>\n                                        <td>{{data.AC_ADDR1}}</td>\n                                        <td>{{data.AC_ADDR2}}</td>\n                                        <td>{{data.AC_ADDR3}}</td>\n                                        <td>{{data.AC_IS_RECOVERY}}</td>\n                                        <td>{{data.AC_CTCODE}}</td>\n                                        <td>{{data.AC_PIN}}</td>\n                                        <td>{{data.AC_MOBILENO}}</td>\n                                        <td>{{data.AC_PHONE_RES}}</td>\n                                        <td>{{data.AC_PHONE_OFFICE}} </td>\n                                        <td>{{data.AC_EMAILID}}</td>\n                                        <td>{{data.TDS_REQUIRED}}</td>\n                                        <td>{{data.SMS_REQUIRED}}</td>\n                                        <td>{{data.IS_KYC_RECEIVED}}</td>\n                                    </tr>\n                                </tbody>\n                                <tbody *ngIf=\"customerMaster?.length == 0\">\n                                    <tr>\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { CustomerIdRoutingModule } from './customer-id-routing.module';\r\nimport { CustomerIdComponent } from './customer-id.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { StatementTypeService } from '../../../../shared/elements/statment-type.service';\r\nimport { SelectModule } from 'ng-select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Id1Service } from '../../../../shared/elements/id1.service';\r\nimport { MemberService } from '../../../../shared/elements/member.service';\r\nimport { MsService } from '../../../../shared/elements/ms.service';\r\nimport { CustomerIdService } from './customer-id.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CustomerIdRoutingModule,\r\n    DataTablesModule,\r\n    SelectModule,\r\n    NgbModule,\r\n    FormsModule, ReactiveFormsModule\r\n  ],\r\n  declarations: [CustomerIdComponent],\r\n  providers: [StatementTypeService, Id1Service, MemberService, MsService, CustomerIdService]\r\n})\r\nexport class CustomerIdModule { }","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class CustomerIdService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = \"http://localhost:4000/customer-id\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}