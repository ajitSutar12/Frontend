{"version":3,"sources":["./src/app/shared/elements/gl-type.service.ts","./src/app/theme/master/general-ledger/gl-report-master/gl-report-master-routing.module.ts","./src/app/theme/master/general-ledger/gl-report-master/gl-report-master.component.ts","./src/app/theme/master/general-ledger/gl-report-master/gl-report-master.component.html","./src/app/theme/master/general-ledger/gl-report-master/gl-report-master.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACE;;AAKpC,MAAM,aAAa;IAatB,aAAa;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAED,cAAc;QACV,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACtD,CAAC;IAED,yBAAyB;QACrB,MAAM,UAAU,GAAmB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC/E,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC9B,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC9B,OAAO,UAAU,CAAC;IACtB,CAAC;IAIO,WAAW,CAAC,OAAuB;QACvC,OAAO,IAAI,0DAAU,CAAC,CAAC,GAAG,EAAE,EAAE;YAC1B,UAAU,CAAC,GAAG,EAAE;gBACZ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;gBACrC,GAAG,CAAC,QAAQ,EAAE,CAAC;YACnB,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,YAAY,CAAC,OAAuB;QACxC,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACjF,CAAC;;AAxCoB,wBAAU,GAAmB;IAClD,EAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,uBAAuB,EAAC;IAC5C,EAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,wBAAwB,EAAC;IAC7C,EAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,qCAAqC,EAAC;IAC1D,EAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,cAAc,EAAC;IACnC,EAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,cAAc,EAAC;IACnC,EAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,gBAAgB,EAAC;IACrC,EAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,YAAY,EAAC;CAClC,CAAC;0EATS,aAAa;gGAAb,aAAa,WAAb,aAAa;6FAAb,aAAa;cADzB,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAAuC;AACc;AACgB;;;AAErE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mFAAuB;QAClC,IAAI,EAAE;YACJ,KAAK,EAAE,kBAAkB;YACzB,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,0DAA0D;YACnE,MAAM,EAAE,IAAI;SACb;KACF;CACF,CAAC;AAMK,MAAM,2BAA2B;;0GAA3B,2BAA2B;gLAA3B,2BAA2B,kBAH7B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,2BAA2B,uFAF5B,4DAAY;6FAEX,2BAA2B;cAJvC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+B;AACP;AAE3C;;;;;;;;;ICiCqB,sEACI;IAAA,gIACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA6F;IAA7F,uRAA6F;;;IAMtG,6EAA6F;IAAA,8DAAG;IAAA,4DAAS;;;IAAzC,4FAA4B;;;;IAC5F,6EAAuF;IAA1C,mVAAsB;IAAoB,iEAAM;IAAA,4DAAS;;;;IAjC1H,0EACI;IAAA,+EACI;IADwD,wUAAqB;IAC7E,yEACI;IAAA,yEACI;IAAA,0EACI;IAAA,0EACI;IAAA,2EACI;IAAA,uEAGA;IAAA,4EAAkB;IAAA,gEAAI;IAAA,4DAAQ;IAClC,4DAAO;IACX,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAKA;IAAA,6EAAkB;IAAA,gEAAI;IAAA,0EAAsB;IAAA,8DAAE;IAAA,4DAAM;IAAA,4DAAQ;IAChE,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2IAA6F;IAC7F,2IAAuF;IAC3F,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAO;IACP,0EACI;IAAA,2EACI;IAAA,wEACQ;IACZ,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA5CD,0FAAqB;IACK,0DAAqB;IAArB,qFAAqB;IAOM,0DAA0B;IAA1B,iGAA0B;IAWpD,0DAA0B;IAA1B,iGAA0B;IAMiB,0DAAgH;IAAhH,+LAAgH;IAO1H,0DAAkB;IAAlB,mFAAkB;IACK,0DAAkB;IAAlB,mFAAkB;IAO7E,0DAAmC;IAAnC,mGAAmC;;;IAmCxC,sEACI;IAAA,gIACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA+F;IAA/F,+RAA+F;;;IAMxG,6EAA6F;IAAA,8DAAG;IAAA,4DAAS;;;IAAzC,6FAA4B;;;;IAC5F,6EAAuF;IAA1C,mVAAsB;IAAoB,iEAAM;IAAA,4DAAS;;;;IAjC1H,0EACI;IAAA,+EACI;IADwD,wUAAqB;IAC7E,yEACI;IAAA,yEACI;IAAA,0EACI;IAAA,0EACI;IAAA,2EACI;IAAA,uEAGA;IAAA,4EAAmB;IAAA,gEAAI;IAAA,4DAAQ;IACnC,4DAAO;IACX,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAKA;IAAA,6EAAmB;IAAA,gEAAI;IAAA,0EAAsB;IAAA,8DAAE;IAAA,4DAAM;IAAA,4DAAQ;IACjE,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2IAA6F;IAC7F,2IAAuF;IAC3F,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAO;IACP,0EACI;IAAA,2EACI;IAAA,wEACQ;IACZ,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA5CD,0FAAqB;IACK,0DAAqB;IAArB,qFAAqB;IAOO,0DAA2B;IAA3B,kGAA2B;IAWtD,0DAA2B;IAA3B,kGAA2B;IAMgB,0DAAmH;IAAnH,kMAAmH;IAO7H,0DAAkB;IAAlB,mFAAkB;IACK,0DAAkB;IAAlB,mFAAkB;IAO7E,0DAAoC;IAApC,oGAAoC;;;IAuBzC,sEACI;IAAA,8GACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA+F;IAA/F,+RAA+F;;;IAiBpG,sEACI;IAAA,gIACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA+F;IAA/F,+RAA+F;;;IAiBpG,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAAyD;IAAzD,4LAAyD;;;IAmB9D,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA4D;IAA5D,kMAA4D;;;IAiBjE,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA4D;IAA5D,kMAA4D;;;IAiBjE,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA4D;IAA5D,kMAA4D;;;IA4DjE,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA4D;IAA5D,kMAA4D;;;IAMrE,6EAA6F;IAAA,8DAAG;IAAA,4DAAS;;;IAAzC,6FAA4B;;;;IAC5F,6EAAuF;IAA1C,mVAAsB;IAAoB,iEAAM;IAAA,4DAAS;;;;IAxK1H,0EACI;IAAA,+EACI;IADwD,wUAAqB;IAC7E,yEACI;IAAA,yEACI;IAAA,0EACI;IAAA,0EACI;IAAA,2EACI;IAAA,uEAGA;IAAA,4EAAmB;IAAA,gEAAI;IAAA,0EAAsB;IAAA,8DAAE;IAAA,4DAAM;IAAA,4DAAQ;IACjE,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAKA;IAAA,6EAAc;IAAA,gEAAI;IAAA,0EAAsB;IAAA,8DAAE;IAAA,4DAAM;IAAA,4DAAQ;IAC5D,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAKA;IAAA,6EAA2B;IAAA,0EAAc;IAAA,4DAAQ;IACrD,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACV,4DAAM;IACN,0EACI;IAAA,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAKA;IAAA,6EAA8B;IAAA,8EAAkB;IAAA,4DAAQ;IAC5D,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAKA;IAAA,6EAA8B;IAAA,8EAAkB;IAAA,4DAAQ;IAC5D,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAKA;IAAA,6EAA8B;IAAA,8EAAkB;IAAA,4DAAQ;IAC5D,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACV,4DAAM;IACN,0EACI;IAAA,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAGA;IAAA,6EAAuB;IAAA,sEAAU;IAAA,4DAAQ;IAC7C,4DAAO;IACX,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,wEACA;IAAA,6EAAqD;IAAA,kFACnC;IAAA,4DAAQ;IAC9B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,wEACA;IAAA,6EAAqD;IAAA,mFACtC;IAAA,4DAAQ;IAC3B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,0EACI;IAAA,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAIA;IAAA,6EAAwB;IAAA,sEAAU;IAAA,4DAAQ;IAC9C,4DAAO;IACX,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAKA;IAAA,6EAA8B;IAAA,8EAAkB;IAAA,4DAAQ;IAC5D,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2IAA6F;IAC7F,2IAAuF;IAC3F,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAO;IACP,0EACI;IAAA,2EACI;IAAA,wEACQ;IACZ,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAnLD,0FAAqB;IACK,0DAAqB;IAArB,qFAAqB;IAQpB,0DAA2B;IAA3B,kGAA2B;IAIgB,0DAAmH;IAAnH,kMAAmH;IAW9J,0DAA2B;IAA3B,kGAA2B;IAMgB,0DAAmH;IAAnH,kMAAmH;IAW9J,0DAAmC;IAAnC,0GAAmC;IAMQ,0DAA2I;IAA3I,0NAA2I;IAatL,0DAAsC;IAAtC,6GAAsC;IAMK,0DAAoJ;IAApJ,mOAAoJ;IAW/L,0DAAsC;IAAtC,6GAAsC;IAMK,0DAAoJ;IAApJ,mOAAoJ;IAW/L,0DAAsC;IAAtC,6GAAsC;IAMK,0DAAoJ;IAApJ,mOAAoJ;IAa/L,0DAA+B;IAA/B,sGAA+B;IAQ4C,0DAAyC;IAAzC,yGAAyC;IASzC,0DAAuC;IAAvC,uGAAuC;IAalH,0DAAgC;IAAhC,uGAAgC;IAWhC,0DAAsC;IAAtC,6GAAsC;IAMK,0DAAoJ;IAApJ,mOAAoJ;IAO9J,0DAAkB;IAAlB,mFAAkB;IACK,0DAAkB;IAAlB,mFAAkB;IAO7E,0DAAoC;IAApC,oGAAoC;;;IAwBzC,sEACI;IAAA,8GACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA+F;IAA/F,+RAA+F;;;IAiBpG,sEACI;IAAA,gIACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA+F;IAA/F,+RAA+F;;;IAYpG,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAAiD;IAAjD,2KAAiD;;;IAkB1D,6EAA6F;IAAA,8DAAG;IAAA,4DAAS;;;IAAzC,6FAA4B;;;;IAC5F,6EAAuF;IAA1C,mVAAsB;IAAoB,iEAAM;IAAA,4DAAS;;;;IA/D1H,0EACI;IAAA,+EACI;IADwD,wUAAqB;IAC7E,yEACI;IAAA,yEACI;IAAA,0EACI;IAAA,0EACI;IAAA,2EACI;IAAA,uEAIA;IAAA,4EAAmB;IAAA,gEAAI;IAAA,0EAAsB;IAAA,8DAAE;IAAA,4DAAM;IAAA,4DAAQ;IACjE,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAKA;IAAA,6EAAmB;IAAA,gEAAI;IAAA,0EAAsB;IAAA,8DAAE;IAAA,4DAAM;IAAA,4DAAQ;IACjE,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACY;IACZ,yEAAO;IAAA,wDAAkB;IAAA,4DAAQ;IACrC,4DAAM;IACN,qIACI;IAIR,4DAAM;IACV,4DAAM;IACN,0EACI;IAAA,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAGA;IAAA,6EAAuB;IAAA,sEAAU;IAAA,4DAAQ;IAC7C,4DAAO;IACX,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2IAA6F;IAC7F,2IAAuF;IAC3F,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAO;IACP,0EACI;IAAA,2EACI;IAAA,wEACQ;IACZ,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA1ED,0FAAqB;IACK,0DAAqB;IAArB,qFAAqB;IAQpB,0DAA2B;IAA3B,kGAA2B;IAKgB,0DAAmH;IAAnH,kMAAmH;IAW9J,0DAA2B;IAA3B,kGAA2B;IAMgB,0DAAmH;IAAnH,kMAAmH;IAQ3J,0DAAuB;IAAvB,gFAAuB;IAE3B,0DAAkB;IAAlB,oFAAkB;IAE0B,0DAAgH;IAAhH,+LAAgH;IAa3J,0DAA+B;IAA/B,sGAA+B;IAME,0DAAkB;IAAlB,mFAAkB;IACK,0DAAkB;IAAlB,mFAAkB;IAO7E,0DAAoC;IAApC,oGAAoC;;;IAwBzC,sEACI;IAAA,8GACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAAiG;IAAjG,mSAAiG;;;IAiBtG,sEACI;IAAA,gIACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAAiG;IAAjG,mSAAiG;;;IAYtG,sEACI;IAAA,gIACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAAkD;IAAlD,6KAAkD;;;IAmB3D,6EAA6F;IAAA,8DAAG;IAAA,4DAAS;;;IAAzC,6FAA4B;;;;IAC5F,6EAAuF;IAA1C,mVAAsB;IAAoB,iEAAM;IAAA,4DAAS;;;;IAhE1H,0EACI;IAAA,+EACI;IADwD,wUAAqB;IAC7E,yEACI;IAAA,yEACI;IAAA,0EACI;IAAA,0EACI;IAAA,2EACI;IAAA,uEAIA;IAAA,4EAAoB;IAAA,gEAAI;IAAA,0EAAsB;IAAA,8DAAE;IAAA,4DAAM;IAAA,4DAAQ;IAClE,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAKA;IAAA,6EAAoB;IAAA,gEAAI;IAAA,0EAAsB;IAAA,8DAAE;IAAA,4DAAM;IAAA,4DAAQ;IAClE,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACY;IACZ,yEAAO;IAAA,wDAAmB;IAAA,4DAAQ;IACtC,4DAAM;IACN,qIACI;IAIR,4DAAM;IACV,4DAAM;IACN,0EACI;IAAA,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAIA;IAAA,6EAAwB;IAAA,sEAAU;IAAA,4DAAQ;IAC9C,4DAAO;IACX,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2IAA6F;IAC7F,2IAAuF;IAC3F,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAO;IACP,0EACI;IAAA,2EACI;IAAA,wEACQ;IACZ,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA3ED,0FAAqB;IACK,0DAAqB;IAArB,qFAAqB;IAQpB,0DAA4B;IAA5B,mGAA4B;IAKe,0DAAsH;IAAtH,qMAAsH;IAWjK,0DAA4B;IAA5B,mGAA4B;IAMe,0DAAsH;IAAtH,qMAAsH;IAQ9J,0DAAuB;IAAvB,gFAAuB;IAE3B,0DAAmB;IAAnB,sFAAmB;IAEyB,0DAAmH;IAAnH,kMAAmH;IAa9J,0DAAgC;IAAhC,uGAAgC;IAOC,0DAAkB;IAAlB,mFAAkB;IACK,0DAAkB;IAAlB,mFAAkB;IAO7E,0DAAoC;IAApC,oGAAoC;;;IAwBzC,sEACI;IAAA,8GACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAAiG;IAAjG,mSAAiG;;;IAiBtG,sEACI;IAAA,kIACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA+F;IAA/F,+RAA+F;;;IAYpG,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAAmD;IAAnD,6KAAmD;;;IAsCxD,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA6D;IAA7D,oMAA6D;;;IAqDtE,6EAA6F;IAAA,8DAAG;IAAA,4DAAS;;;IAAzC,6FAA4B;;;;IAC5F,6EAAuF;IAA1C,mVAAsB;IAAoB,iEAAM;IAAA,4DAAS;;;;IAxI1H,0EACI;IAAA,+EACI;IADwD,wUAAqB;IAC7E,yEACI;IAAA,yEACI;IAAA,0EACI;IAAA,0EACI;IAAA,2EACI;IAAA,uEAIA;IAAA,4EAAoB;IAAA,gEAAI;IAAA,0EAAsB;IAAA,8DAAE;IAAA,4DAAM;IAAA,4DAAQ;IAClE,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAKA;IAAA,6EAAmB;IAAA,gEAAI;IAAA,0EAAsB;IAAA,8DAAE;IAAA,4DAAM;IAAA,4DAAQ;IACjE,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACY;IACZ,yEAAO;IAAA,wDAAkB;IAAA,4DAAQ;IACrC,4DAAM;IACN,qIACI;IAIR,4DAAM;IACV,4DAAM;IACN,0EACI;IAAA,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,wEACA;IAAA,6EAAqD;IAAA,oFACpC;IAAA,4DAAQ;IAC7B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAGA;IAAA,6EAAuB;IAAA,sEAAU;IAAA,4DAAQ;IAC7C,4DAAO;IACX,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAKA;IAAA,6EAA+B;IAAA,8EAAkB;IAAA,4DAAQ;IAC7D,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACV,4DAAM;IACN,0EACI;IAAA,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,wEACA;IAAA,6EAAqD;IAAA,kFACnC;IAAA,4DAAQ;IAC9B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,wEACA;IAAA,6EAAqD;IAAA,mFACtC;IAAA,4DAAQ;IAC3B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAKA;IAAA,6EAAyB;IAAA,sEAAU;IAAA,4DAAQ;IAC/C,4DAAO;IACX,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEN,0EACI;IAAA,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,wEAIA;IAAA,6EAAqC;IAAA,oFACpB;IAAA,4DAAQ;IAC7B,4DAAO;IACX,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2IAA6F;IAC7F,2IAAuF;IAC3F,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAO;IACP,0EACI;IAAA,2EACI;IAAA,wEACQ;IACZ,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAnJD,0FAAqB;IACK,0DAAqB;IAArB,qFAAqB;IAQpB,0DAA4B;IAA5B,mGAA4B;IAKe,0DAAsH;IAAtH,qMAAsH;IAWjK,0DAA2B;IAA3B,kGAA2B;IAMgB,0DAAmH;IAAnH,kMAAmH;IAQ3J,0DAAuB;IAAvB,gFAAuB;IAE3B,0DAAkB;IAAlB,qFAAkB;IAE0B,0DAAmH;IAAnH,kMAAmH;IAWnF,0DAAyC;IAAzC,yGAAyC;IAWpH,0DAA+B;IAA/B,sGAA+B;IAU/B,0DAAuC;IAAvC,8GAAuC;IAMI,0DAAuJ;IAAvJ,sOAAuJ;IAWvH,0DAA0C;IAA1C,0GAA0C;IAS1C,0DAAwC;IAAxC,wGAAwC;IAWnH,0DAAiC;IAAjC,wGAAiC;IAejC,0DAA6C;IAA7C,oHAA6C;IAQZ,0DAAkB;IAAlB,mFAAkB;IACK,0DAAkB;IAAlB,mFAAkB;IAO7E,0DAAoC;IAApC,oGAAoC;;;IA2BzC,sEACI;IAAA,8GACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA+F;IAA/F,+RAA+F;;;IAiBpG,sEACI;IAAA,gIACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,0IACI;IAER,4DAAM;;;IAHG,0DAA+F;IAA/F,+RAA+F;;;IAgBxG,6EAA6F;IAAA,8DAAG;IAAA,4DAAS;;;IAAzC,6FAA4B;;;;IAC5F,6EAAuF;IAA1C,mVAAsB;IAAoB,iEAAM;IAAA,4DAAS;;;;IAjD1H,0EACI;IAAA,+EACI;IADwD,wUAAqB;IAC7E,yEACI;IAAA,yEACI;IAAA,0EACI;IAAA,0EACI;IAAA,2EACI;IAAA,uEAIA;IAAA,4EAAmB;IAAA,gEAAI;IAAA,0EAAsB;IAAA,8DAAE;IAAA,4DAAM;IAAA,4DAAQ;IACjE,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,yEAKA;IAAA,8EAAmB;IAAA,gEAAI;IAAA,0EAAsB;IAAA,8DAAE;IAAA,4DAAM;IAAA,4DAAQ;IACjE,4DAAO;IACX,4DAAM;IACN,qIACI;IAIR,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,yEAGA;IAAA,8EAAuB;IAAA,sEAAU;IAAA,4DAAQ;IAC7C,4DAAO;IACX,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2IAA6F;IAC7F,2IAAuF;IAC3F,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAO;IACP,0EACI;IAAA,2EACI;IAAA,yEACQ;IACZ,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA5DD,0FAAqB;IACK,0DAAqB;IAArB,qFAAqB;IAQpB,0DAA2B;IAA3B,kGAA2B;IAKgB,0DAAmH;IAAnH,kMAAmH;IAW9J,0DAA2B;IAA3B,kGAA2B;IAMgB,0DAAmH;IAAnH,kMAAmH;IAW9J,0DAA+B;IAA/B,sGAA+B;IAME,0DAAkB;IAAlB,mFAAkB;IACK,0DAAkB;IAAlB,mFAAkB;IAO7E,0DAAoC;IAApC,oGAAoC;;AD7nBtF,MAAM,uBAAuB;IA2ElC,YAAmB,aAA4B,EAAU,EAAe;QAArD,kBAAa,GAAb,aAAa,CAAe;QAAU,OAAE,GAAF,EAAE,CAAa;QAxExE,0BAAqB,GAAQ,EAAE,CAAC,CAAC,oBAAoB;QACrD,2BAAsB,GAAQ,EAAE,CAAC;QACjC,2BAAsB,GAAQ,EAAE,CAAC;QACjC,2BAAsB,GAAQ,EAAE,CAAC;QACjC,2BAAsB,GAAQ,EAAE,CAAC;QACjC,2BAAsB,GAAQ,EAAE,CAAC;QACjC,2BAAsB,GAAQ,EAAE,CAAC;QAGjC,wBAAwB;QACxB,iBAAY,GAAmB,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QAClE,mBAAc,GAAG,GAAG,CAAC;QACrB,eAAU,GAAG,IAAI,CAAC;QAElB,sBAAiB,GAAG,GAAG,CAAC;QACxB,aAAQ,GAAG,CAAC,CAAC;QAEL,YAAO,GAAiB,IAAI,CAAC;QAErC,sCAAsC;QACtC,eAAU,GAAY,IAAI,CAAC;QAC3B,eAAU,GAAY,KAAK,CAAC;QAE5B,yCAAyC;QACzC,0BAAqB,GAAY,IAAI,CAAC;QACtC,wBAAmB,GAAY,IAAI,CAAC;QAEpC,0BAAqB,GAAY,KAAK,CAAC;QACvC,2BAAsB,GAAY,IAAI,CAAC;QACvC,yBAAoB,GAAY,IAAI,CAAC;QAGrC,gDAAgD;QAChD,YAAO,GAAG;YACR,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,aAAa,EAAE,EAAE;YACjB,gBAAgB,EAAE,EAAE;YACpB,gBAAgB,EAAE,EAAE;YACpB,gBAAgB,EAAE,EAAE;YACpB,SAAS,EAAE,EAAE;YACb,mBAAmB,EAAE,EAAE;YACvB,UAAU,EAAE,EAAE;YACd,iBAAiB,EAAE,EAAE;YACrB,gBAAgB,EAAE,EAAE;YACpB,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,SAAS,EAAE,EAAE;YACb,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,mBAAmB,EAAE,EAAE;YACvB,SAAS,EAAE,EAAE;YACb,iBAAiB,EAAE,EAAE;YACrB,oBAAoB,EAAE,EAAE;YACxB,kBAAkB,EAAE,EAAE;YACtB,WAAW,EAAE,EAAE;YACf,uBAAuB,EAAE,EAAE;YAC3B,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,SAAS,EAAE,EAAE;YACb,UAAU,EAAE,EAAE;SACf,CAAC;QAE0E,IAAI,CAAC,UAAU,EAAE,CAAC;IAAC,CAAC;IAEhG,QAAQ;QACN,IAAI,CAAC,qBAAqB,GAAG;YAC3B,IAAI,EAAE,iCAAiC;YACvC,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,UAAU,IAAS,EAAE,IAAS,EAAE,IAAS;wBAC/C,OAAO,2EAA2E,GAAG,GAAG,GAAG,4EAA4E,CAAC;oBAC1K,CAAC;iBACF;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,MAAM;iBACb,EAAE;oBACD,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,MAAM;iBACb;aACF;YAED,GAAG,EAAE,QAAQ;YACb,OAAO,EAAE;gBACP,MAAM;gBACN,OAAO;gBACP,OAAO;gBACP,KAAK;aACN;YACD,wBAAwB;YACxB,WAAW,EAAE,CAAC,GAAS,EAAE,IAAoB,EAAE,KAAa,EAAE,EAAE;gBAC9D,MAAM,IAAI,GAAG,IAAI,CAAC;gBAClB,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC1B,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE;oBACxC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;gBACH,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,IAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC;YACb,CAAC;SACF,CAAC;QAEF,IAAI,CAAC,sBAAsB,GAAG;YAC5B,IAAI,EAAE,2BAA2B;YACjC,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,UAAU,IAAS,EAAE,IAAS,EAAE,IAAS;wBAC/C,OAAO,2EAA2E,GAAG,GAAG,GAAG,4EAA4E,CAAC;oBAC1K,CAAC;iBACF;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,OAAO;iBACd,EAAE;oBACD,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,OAAO;iBACd;aACF;YAED,GAAG,EAAE,QAAQ;YACb,OAAO,EAAE;gBACP,MAAM;gBACN,OAAO;gBACP,OAAO;gBACP,KAAK;aACN;YACD,wBAAwB;YACxB,WAAW,EAAE,CAAC,GAAS,EAAE,IAAoB,EAAE,KAAa,EAAE,EAAE;gBAC9D,MAAM,IAAI,GAAG,IAAI,CAAC;gBAClB,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC1B,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE;oBACxC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;gBACH,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,IAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC;YACb,CAAC;SACF,CAAC;QAEF,IAAI,CAAC,sBAAsB,GAAG;YAC5B,IAAI,EAAE,2BAA2B;YACjC,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,UAAU,IAAS,EAAE,IAAS,EAAE,IAAS;wBAC/C,OAAO,2EAA2E,GAAG,GAAG,GAAG,4EAA4E,CAAC;oBAC1K,CAAC;iBACF;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,OAAO;iBACd;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,OAAO;iBACd;gBACD;oBACE,KAAK,EAAE,gBAAgB;oBACvB,IAAI,EAAE,eAAe;iBACtB;gBACD;oBACE,KAAK,EAAE,oBAAoB;oBAC3B,IAAI,EAAE,kBAAkB;iBACzB;gBACD;oBACE,KAAK,EAAE,oBAAoB;oBAC3B,IAAI,EAAE,kBAAkB;iBACzB;gBACD;oBACE,KAAK,EAAE,oBAAoB;oBAC3B,IAAI,EAAE,kBAAkB;iBACzB;gBACD;oBACE,KAAK,EAAE,YAAY;oBACnB,IAAI,EAAE,WAAW;iBAClB;gBACD;oBACE,KAAK,EAAE,wBAAwB;oBAC/B,IAAI,EAAE,qBAAqB;iBAC5B;gBACD;oBACE,KAAK,EAAE,YAAY;oBACnB,IAAI,EAAE,YAAY;iBACnB;gBACD;oBACE,KAAK,EAAE,wBAAwB;oBAC/B,IAAI,EAAE,mBAAmB;iBAC1B;gBACD;oBACE,KAAK,EAAE,oBAAoB;oBAC3B,IAAI,EAAE,kBAAkB;iBACzB;aACF;YAED,GAAG,EAAE,QAAQ;YACb,OAAO,EAAE;gBACP,MAAM;gBACN,OAAO;gBACP,OAAO;gBACP,KAAK;aACN;YACD,wBAAwB;YACxB,WAAW,EAAE,CAAC,GAAS,EAAE,IAAoB,EAAE,KAAa,EAAE,EAAE;gBAC9D,MAAM,IAAI,GAAG,IAAI,CAAC;gBAClB,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC1B,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE;oBACxC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;gBACH,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,IAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC;YACb,CAAC;SACF,CAAC;QAEF,IAAI,CAAC,sBAAsB,GAAG;YAC5B,IAAI,EAAE,2BAA2B;YACjC,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,UAAU,IAAS,EAAE,IAAS,EAAE,IAAS;wBAC/C,OAAO,2EAA2E,GAAG,GAAG,GAAG,4EAA4E,CAAC;oBAC1K,CAAC;iBACF;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,OAAO;iBACd;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,OAAO;iBACd;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,MAAM;iBACb;gBACD;oBACE,KAAK,EAAE,WAAW;oBAClB,IAAI,EAAE,WAAW;iBAClB;aACF;YAED,GAAG,EAAE,QAAQ;YACb,OAAO,EAAE;gBACP,MAAM;gBACN,OAAO;gBACP,OAAO;gBACP,KAAK;aACN;YACD,wBAAwB;YACxB,WAAW,EAAE,CAAC,GAAS,EAAE,IAAoB,EAAE,KAAa,EAAE,EAAE;gBAC9D,MAAM,IAAI,GAAG,IAAI,CAAC;gBAClB,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC1B,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE;oBACxC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;gBACH,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,IAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC;YACb,CAAC;SACF,CAAC;QAEF,IAAI,CAAC,sBAAsB,GAAG;YAC5B,IAAI,EAAE,2BAA2B;YACjC,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,UAAU,IAAS,EAAE,IAAS,EAAE,IAAS;wBAC/C,OAAO,2EAA2E,GAAG,GAAG,GAAG,4EAA4E,CAAC;oBAC1K,CAAC;iBACF;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,QAAQ;iBACf;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,QAAQ;iBACf;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,QAAQ;iBACf;gBACD;oBACE,KAAK,EAAE,WAAW;oBAClB,IAAI,EAAE,YAAY;iBACnB;aACF;YAED,GAAG,EAAE,QAAQ;YACb,OAAO,EAAE;gBACP,MAAM;gBACN,OAAO;gBACP,OAAO;gBACP,KAAK;aACN;YACD,wBAAwB;YACxB,WAAW,EAAE,CAAC,GAAS,EAAE,IAAoB,EAAE,KAAa,EAAE,EAAE;gBAC9D,MAAM,IAAI,GAAG,IAAI,CAAC;gBAClB,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC1B,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE;oBACxC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;gBACH,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,IAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC;YACb,CAAC;SACF,CAAC;QAEF,IAAI,CAAC,sBAAsB,GAAG;YAC5B,IAAI,EAAE,2BAA2B;YACjC,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,UAAU,IAAS,EAAE,IAAS,EAAE,IAAS;wBAC/C,OAAO,2EAA2E,GAAG,GAAG,GAAG,4EAA4E,CAAC;oBAC1K,CAAC;iBACF;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,OAAO;iBACd;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,OAAO;iBACd;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,OAAO;iBACd;gBACD;oBACE,KAAK,EAAE,wBAAwB;oBAC/B,IAAI,EAAE,qBAAqB;iBAC5B;gBACD;oBACE,KAAK,EAAE,YAAY;oBACnB,IAAI,EAAE,WAAW;iBAClB;gBACD;oBACE,KAAK,EAAE,oBAAoB;oBAC3B,IAAI,EAAE,mBAAmB;iBAC1B;gBACD;oBACE,KAAK,EAAE,wBAAwB;oBAC/B,IAAI,EAAE,sBAAsB;iBAC7B;gBACD;oBACE,KAAK,EAAE,sBAAsB;oBAC7B,IAAI,EAAE,oBAAoB;iBAC3B;gBACD;oBACE,KAAK,EAAE,YAAY;oBACnB,IAAI,EAAE,aAAa;iBACpB;gBACD;oBACE,KAAK,EAAE,0BAA0B;oBACjC,IAAI,EAAE,yBAAyB;iBAChC;aAEF;YAED,GAAG,EAAE,QAAQ;YACb,OAAO,EAAE;gBACP,MAAM;gBACN,OAAO;gBACP,OAAO;gBACP,KAAK;aACN;YACD,wBAAwB;YACxB,WAAW,EAAE,CAAC,GAAS,EAAE,IAAoB,EAAE,KAAa,EAAE,EAAE;gBAC9D,MAAM,IAAI,GAAG,IAAI,CAAC;gBAClB,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC1B,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE;oBACxC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;gBACH,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,IAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC;YACb,CAAC;SACF,CAAC;QAEF,IAAI,CAAC,sBAAsB,GAAG;YAC5B,IAAI,EAAE,2BAA2B;YACjC,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,UAAU,IAAS,EAAE,IAAS,EAAE,IAAS;wBAC/C,OAAO,2EAA2E,GAAG,GAAG,GAAG,4EAA4E,CAAC;oBAC1K,CAAC;iBACF;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,OAAO;iBACd;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,OAAO;iBACd;gBACD;oBACE,KAAK,EAAE,YAAY;oBACnB,IAAI,EAAE,WAAW;iBAClB;aACF;YAED,GAAG,EAAE,QAAQ;YACb,OAAO,EAAE;gBACP,MAAM;gBACN,OAAO;gBACP,OAAO;gBACP,KAAK;aACN;YACD,wBAAwB;YACxB,WAAW,EAAE,CAAC,GAAS,EAAE,IAAoB,EAAE,KAAa,EAAE,EAAE;gBAC9D,MAAM,IAAI,GAAG,IAAI,CAAC;gBAClB,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC1B,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE;oBACxC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;gBACH,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE;oBACvC,IAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC;YACb,CAAC;SACF,CAAC;QAEF,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EAAE;YACvE,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE;YAC7B,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC;YACnB,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;gBACvB,aAAa,CAAC,KAAK,CAAC,CAAC;aACtB;QACH,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,IAAI,EAAE,CAAC,EAAE,EAAE;YACX,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACvD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,CAAC;YACjC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACtD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACtD,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,CAAC;YACzC,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,CAAC;YAC5C,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,CAAC;YAC5C,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,CAAC;YAC5C,SAAS,EAAE,CAAC,EAAE,EAAE;YAChB,UAAU,EAAE,CAAC,EAAE,EAAE;YACjB,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,CAAC;YAE5C,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACtD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACtD,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,CAAC;YAErC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACvD,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACvD,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACvD,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,CAAC;YAEtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACtD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACtD,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,CAAC;YACrC,iBAAiB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,CAAC;YAC7C,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,CAAC;YACvC,uBAAuB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,CAAC;YAEnD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACtD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACtD,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,CAAC;YACrC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAElC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACnC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACjC;IACH,CAAC;IAED,kCAAkC;IAClC,gBAAgB,CAAC,IAAS;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAChD,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC5D,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC5D,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAC9D,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC;QAEpE,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAE1C,kBAAkB;QAClB,IAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,IAAI,KAAK,EAAE;YAC7C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,CAAG,mDAAmD;SACzF;aACI;YACH,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC,CAAG,qDAAqD;SAC5F;QAED,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,oCAAoC;IACpC,eAAe;QACb,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,mCAAmC;YACzC,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,iBAAiB;SACrC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,kDAAI,CAAC,IAAI,CACP,UAAU,EACV,yBAAyB,EACzB,SAAS,CACV;aACF;iBAAM,IACL,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAC5C;gBACA,kDAAI,CAAC,IAAI,CACP,WAAW,EACX,oBAAoB,EACpB,OAAO,CACR;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED,sCAAsC;IACtC,UAAU;QACR,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;;8FAllBU,uBAAuB;uGAAvB,uBAAuB;QC1BpC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,2EAAgB;QAAA,4DAAK;QACzB,wEAA0B;QAAA,yEAAsB;QAAA,6DAAE;QAAA,4DAAM;QAAA,4EAAiB;QAAA,4DAAK;QAClF,4DAAM;QACN,0EACI;QAAA,8EACI;QAAA,8EACI;QAAA,sIACI;QA8CR,4DAAU;QACV,8EACI;QAAA,sIACI;QA8CR,4DAAU;QACV,+EACI;QAAA,uIACI;QAqLR,4DAAU;QACV,+EACI;QAAA,uIACI;QA4ER,4DAAU;QACV,+EACI;QAAA,uIACI;QA6ER,4DAAU;QACV,+EACI;QAAA,uIACI;QAqJR,4DAAU;QAIV,+EACI;QAAA,uIACI;QA8DR,4DAAU;QACd,4DAAa;QACjB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;uxCDtpBQ;YACV,mEAAO,CAAC,oBAAoB,EAAE;gBAC5B,sEAAU,CAAC,QAAQ,EAAE;oBACnB,iEAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;oBACrB,mEAAO,CAAC,mBAAmB,EAAE,iEAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;iBACpD,CAAC;gBACF,sEAAU,CAAC,QAAQ,EAAE;oBACnB,iEAAK,CAAC,EAAE,SAAS,EAAE,cAAc,EAAE,CAAC;oBACpC,mEAAO,CAAC,mBAAmB,EAAE,iEAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;iBACpD,CAAC;aACH,CAAC;SACH;6FAGU,uBAAuB;cAlBnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;gBAChD,UAAU,EAAE;oBACV,mEAAO,CAAC,oBAAoB,EAAE;wBAC5B,sEAAU,CAAC,QAAQ,EAAE;4BACnB,iEAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;4BACrB,mEAAO,CAAC,mBAAmB,EAAE,iEAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;yBACpD,CAAC;wBACF,sEAAU,CAAC,QAAQ,EAAE;4BACnB,iEAAK,CAAC,EAAE,SAAS,EAAE,cAAc,EAAE,CAAC;4BACpC,mEAAO,CAAC,mBAAmB,EAAE,iEAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;yBACpD,CAAC;qBACH,CAAC;iBACH;aACF;;;;;;;;;;;;;;AExBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACwB;AACQ;AACzB;AACC;AACW;AACU;AACnC;;AAclC,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,mBAFpB,CAAC,8EAAa,CAAC,YATjB;YACP,4DAAY;YACZ,4FAA2B;YAC3B,mEAAgB;YAChB,oEAAS;YACT,0DAAW,EAAE,kEAAmB;YAChC,sDAAY;SACb;mIAIU,oBAAoB,mBAHhB,mFAAuB,aAPpC,4DAAY;QACZ,4FAA2B;QAC3B,mEAAgB;QAChB,oEAAS;QACT,0DAAW,EAAE,kEAAmB;QAChC,sDAAY;6FAKH,oBAAoB;cAZhC,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,4FAA2B;oBAC3B,mEAAgB;oBAChB,oEAAS;oBACT,0DAAW,EAAE,kEAAmB;oBAChC,sDAAY;iBACb;gBACD,YAAY,EAAE,CAAC,mFAAuB,CAAC;gBACvC,SAAS,EAAE,CAAC,8EAAa,CAAC;aAC3B","file":"gl-report-master-gl-report-master-module.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class glTypeService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'On Balance Sheet Item'},\r\n    {value: '1', label: 'Off Balance Sheet Item'},\r\n    {value: '2', label: 'Capital Funds and Risk Assets Ratio'},\r\n    {value: '3', label: 'Other Amount'},\r\n    {value: '4', label: 'Total Amount'},\r\n    {value: '5', label: 'Display Amount'},\r\n    {value: '6', label: 'Percentage'}\r\n  ];\r\n\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(glTypeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(glTypeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(glTypeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {GlReportMasterComponent} from './gl-report-master.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GlReportMasterComponent,\r\n    data: {\r\n      title: 'GL Report Master',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GlReportMasterRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { glTypeService } from '../../../../shared/elements/gl-type.service';\nimport Swal from 'sweetalert2';\nimport { Subscription } from 'rxjs';\nimport { IOption } from 'ng-select';\n\n@Component({\n  selector: 'app-gl-report-master',\n  templateUrl: './gl-report-master.component.html',\n  styleUrls: ['./gl-report-master.component.scss'],\n  animations: [\n    trigger('fadeInOutTranslate', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('400ms ease-in-out', style({ opacity: 1 }))\n      ]),\n      transition(':leave', [\n        style({ transform: 'translate(0)' }),\n        animate('400ms ease-in-out', style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\n\nexport class GlReportMasterComponent implements OnInit {\n  angForm: FormGroup;\n\n  dtExportButtonOptions: any = {}; //Datatable variable\n  dtExportButtonOptions1: any = {};\n  dtExportButtonOptions2: any = {};\n  dtExportButtonOptions3: any = {};\n  dtExportButtonOptions4: any = {};\n  dtExportButtonOptions5: any = {};\n  dtExportButtonOptions6: any = {};\n\n\n  //title select variables\n  simpleOption: Array<IOption> = this.glTypeService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n\n  //variables for  add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable for checkbox and radio button \n  isLinkingInputAllowed: boolean = true;\n  isIsPrintinGLReport: boolean = true;\n\n  isAddProfitLossAmount: boolean = false;\n  isLinkingInputAllowed1: boolean = true;\n  isIsPrintinGLReport1: boolean = true;\n\n\n  //object created to get data when row is clicked\n  message = {\n    Code: \"\",\n    Name: \"\",\n    Code7: \"\",\n    Name7: \"\",\n    Code8: \"\",\n    Name8: \"\",\n    AlternateCode: \"\",\n    HOLiquidityCode1: \"\",\n    HOLiquidityCode2: \"\",\n    AlterBalanceCode: \"\",\n    SerialNo8: \"\",\n    LinkingInputAllowed: \"\",\n    Percentage: \"\",\n    IsPrintinGLReport: \"\",\n    PercentageOfcode: \"\",\n    Code9: \"\",\n    Name9: \"\",\n    SerialNo9: \"\",\n    Type: \"\",\n    Code10: \"\",\n    Name10: \"\",\n    Type10: \"\",\n    Code1: \"\",\n    Type3: \"\",\n    Name1: \"\",\n    AddProfitLossAmount: \"\",\n    SerialNo1: \"\",\n    PercentageOfcode1: \"\",\n    LinkingInputAllowed1: \"\",\n    IsPrintinGLReport1: \"\",\n    Percentage1: \"\",\n    PercentageConsideration: \"\",\n    Code3: \"\",\n    Name3: \"\",\n    SerialNo3: \"\",\n    SerialNo90: \"\"\n  };\n\n  constructor(public glTypeService: glTypeService, private fb: FormBuilder) { this.createForm(); }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/gl_report_master.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Code',\n          data: 'Code'\n        }, {\n          title: 'Name',\n          data: 'Name'\n        }\n      ],\n\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler();\n        });\n        return row;\n      }\n    };\n\n    this.dtExportButtonOptions1 = {\n      ajax: 'fake-data/gl_report1.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Code',\n          data: 'Code7'\n        }, {\n          title: 'Name',\n          data: 'Name7'\n        }\n      ],\n\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler();\n        });\n        return row;\n      }\n    };\n\n    this.dtExportButtonOptions2 = {\n      ajax: 'fake-data/gl_report2.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Code',\n          data: 'Code8'\n        },\n        {\n          title: 'Name',\n          data: 'Name8'\n        },\n        {\n          title: 'Alternate Code',\n          data: 'AlternateCode'\n        },\n        {\n          title: 'HO Liquidity Code1',\n          data: 'HOLiquidityCode1'\n        },\n        {\n          title: 'HO Liquidity Code2',\n          data: 'HOLiquidityCode2'\n        },\n        {\n          title: 'Alter Balance Code',\n          data: 'AlterBalanceCode'\n        },\n        {\n          title: 'Serial No.',\n          data: 'SerialNo8'\n        },\n        {\n          title: 'Linking Input Allowed?',\n          data: 'LinkingInputAllowed'\n        },\n        {\n          title: 'Percentage',\n          data: 'Percentage'\n        },\n        {\n          title: 'Is Print in GL Report?',\n          data: 'IsPrintinGLReport'\n        },\n        {\n          title: 'Percentage Of code',\n          data: 'PercentageOfcode'\n        }\n      ],\n\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler();\n        });\n        return row;\n      }\n    };\n\n    this.dtExportButtonOptions3 = {\n      ajax: 'fake-data/gl_report3.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Code',\n          data: 'Code9'\n        },\n        {\n          title: 'Name',\n          data: 'Name9'\n        },\n        {\n          title: 'Type',\n          data: 'Type'\n        },\n        {\n          title: 'Serial No',\n          data: 'SerialNo9'\n        }\n      ],\n\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler();\n        });\n        return row;\n      }\n    };\n\n    this.dtExportButtonOptions4 = {\n      ajax: 'fake-data/gl_report4.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Code',\n          data: 'Code10'\n        },\n        {\n          title: 'Name',\n          data: 'Name10'\n        },\n        {\n          title: 'Type',\n          data: 'Type10'\n        },\n        {\n          title: 'Serial No',\n          data: 'SerialNo90'\n        }\n      ],\n\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler();\n        });\n        return row;\n      }\n    };\n\n    this.dtExportButtonOptions5 = {\n      ajax: 'fake-data/gl_report5.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Code',\n          data: 'Code1'\n        },\n        {\n          title: 'Name',\n          data: 'Name1'\n        },\n        {\n          title: 'Type',\n          data: 'Type3'\n        },\n        {\n          title: 'Add Profit Loss Amount',\n          data: 'AddProfitLossAmount'\n        },\n        {\n          title: 'Serial No1',\n          data: 'SerialNo1'\n        },\n        {\n          title: 'Percentage Of code',\n          data: 'PercentageOfcode1'\n        },\n        {\n          title: 'Linking Input Allowed.',\n          data: 'LinkingInputAllowed1'\n        },\n        {\n          title: 'Is Print in GLReport',\n          data: 'IsPrintinGLReport1'\n        },\n        {\n          title: 'Percentage',\n          data: 'Percentage1'\n        },\n        {\n          title: 'Percentage Consideration',\n          data: 'PercentageConsideration'\n        }\n\n      ],\n\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler();\n        });\n        return row;\n      }\n    };\n\n    this.dtExportButtonOptions6 = {\n      ajax: 'fake-data/gl_report6.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Code',\n          data: 'Code3'\n        },\n        {\n          title: 'Name',\n          data: 'Name3'\n        },\n        {\n          title: 'Serial No3',\n          data: 'SerialNo3'\n        }\n      ],\n\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler();\n        });\n        return row;\n      }\n    };\n\n    this.runTimer();\n    this.dataSub = this.glTypeService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      Code: ['',],\n      Name: ['', [Validators.required, , Validators.pattern]],\n      Code7: ['', [Validators.pattern]],\n      Name7: ['', [Validators.required, Validators.pattern]],\n      Code8: ['', [Validators.pattern, Validators.required]],\n      Name8: ['', [Validators.required, Validators.pattern]],\n      AlternateCode: ['', [Validators.pattern]],\n      HOLiquidityCode1: ['', [Validators.pattern]],\n      AlterBalanceCode: ['', [Validators.pattern]],\n      HOLiquidityCode2: ['', [Validators.pattern]],\n      SerialNo8: ['',],\n      Percentage: ['',],\n      PercentageOfcode: ['', [Validators.pattern]],\n\n      Code9: ['', [Validators.required, Validators.pattern]],\n      Name9: ['', [Validators.required, Validators.pattern]],\n      SerialNo9: ['', [Validators.pattern]],\n\n      Code10: ['', [Validators.required, Validators.pattern]],\n      Code12: ['', [Validators.required, Validators.pattern]],\n      Name10: ['', [Validators.required, Validators.pattern]],\n      SerialNo90: ['', [Validators.pattern]],\n\n      Code1: ['', [Validators.required, Validators.pattern]],\n      Name1: ['', [Validators.required, Validators.pattern]],\n      SerialNo1: ['', [Validators.pattern]],\n      PercentageOfcode1: ['', [Validators.pattern]],\n      Percentage1: ['', [Validators.pattern]],\n      PercentageConsideration: ['', [Validators.pattern]],\n\n      Code3: ['', [Validators.required, Validators.pattern]],\n      Name3: ['', [Validators.required, Validators.pattern]],\n      SerialNo3: ['', [Validators.pattern]],\n      Type: ['', [Validators.required]],\n      Type1: ['', [Validators.required]],\n\n      Type3: ['', [Validators.required]],\n    });\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  //function for edit button clicked\n  editClickHandler(info: any): void {\n    this.message.Code = info.Code;\n    this.message.Name = info.Name;\n    this.message.Code7 = info.Code7;\n    this.message.Name7 = info.Name7;\n    this.message.Code8 = info.Code8;\n    this.message.Name8 = info.Name8;\n    this.message.AlternateCode = info.AlternateCode;\n    this.message.HOLiquidityCode1 = info.HOLiquidityCode1;\n    this.message.HOLiquidityCode2 = info.HOLiquidityCode2;\n    this.message.AlterBalanceCode = info.AlterBalanceCode;\n    this.message.SerialNo8 = info.SerialNo8;\n    this.message.LinkingInputAllowed = info.LinkingInputAllowed;\n    this.message.Percentage = info.Percentage;\n    this.message.IsPrintinGLReport = info.IsPrintinGLReport;\n    this.message.PercentageOfcode = info.PercentageOfcode;\n    this.message.Code9 = info.Code9;\n    this.message.Name9 = info.Name9;\n    this.message.SerialNo9 = info.SerialNo9;\n    this.message.Type = info.Type;\n    this.message.Code10 = info.Code10;\n    this.message.Name10 = info.Name10;\n    this.message.Type10 = info.Type10;\n    this.message.Code1 = info.Code1;\n    this.message.Type3 = info.Type3;\n    this.message.Name1 = info.Name1;\n    this.message.AddProfitLossAmount = info.AddProfitLossAmount;\n    this.message.SerialNo1 = info.SerialNo1;\n    this.message.PercentageOfcode1 = info.PercentageOfcode1;\n    this.message.LinkingInputAllowed1 = info.LinkingInputAllowed1;\n    this.message.IsPrintinGLReport1 = info.IsPrintinGLReport1;\n    this.message.Percentage1 = info.Percentage1;\n    this.message.PercentageConsideration = info.PercentageConsideration;\n\n    this.message.Code3 = info.Code3;\n    this.message.Name3 = info.Name3;\n    this.message.SerialNo3 = info.SerialNo3;\n    this.message.SerialNo90 = info.SerialNo90;\n\n    //code for chekbox\n    if (this.message.AddProfitLossAmount == \"Yes\") {\n      this.isAddProfitLossAmount = true;   //return boolean value and display checked checkbox\n    }\n    else {\n      this.isAddProfitLossAmount = false;   //return boolean value and display unchecked checkbox\n    }\n\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  //function for delete button clicked\n  delClickHandler() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  //function toggle update to add button\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n  }\n\n}\n\n\n\n\n\n\n\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>GL Report Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <div class=\"card-block\">\n                <ngb-tabset>\n                    <ngb-tab title=\"1.SUBSIDARY\">\n                        <ng-template ngbTabContent>\n                            <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                                    <div class=\"card-block\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Code\" value=\"{{ message.Code }}\"\n                                                            formControlName=\"Code\">\n                                                        <label for=\"Code\">Code</label>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Name\" required=\"\"\n                                                            value=\"{{ message.Name }}\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                                            title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                            formControlName=\"Name\">\n                                                        <label for=\"Name\">Name<sub class=\"required\">* </sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Name'].invalid && (angForm.controls['Name'].dirty || angForm.controls['Name'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Name'].errors?.pattern || angForm.controls['Name'].errors?.required\">\n                                                        This field is required and Input allowed only A-Z a-z - / . (Space)\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                                                <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                                <div class=\"col-12\">\n                                    <div class=\"table-responsive\">\n                                        <table datatable [dtOptions]=\"dtExportButtonOptions\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngb-tab>\n                    <ngb-tab title=\"2.EXPENSES\">\n                        <ng-template ngbTabContent>\n                            <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                                    <div class=\"card-block\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Code7\" value=\"{{ message.Code7 }}\"\n                                                            formControlName=\"Code7\">\n                                                        <label for=\"Code7\">Code</label>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Name7\" required=\"\"\n                                                            value=\"{{ message.Name7 }}\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                                            title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                            formControlName=\"Name7\">\n                                                        <label for=\"Name7\">Name<sub class=\"required\">* </sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Name7'].invalid && (angForm.controls['Name7'].dirty || angForm.controls['Name7'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Name7'].errors?.pattern || angForm.controls['Name7'].errors?.required\">\n                                                        This field is required and Input allowed only A-Z a-z - / . (Space)\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                                                <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                                <div class=\"col-12\">\n                                    <div class=\"table-responsive\">\n                                        <table datatable [dtOptions]=\"dtExportButtonOptions1\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngb-tab>\n                    <ngb-tab title=\"3.DAILY LIQUIDITY\">\n                        <ng-template ngbTabContent>\n                            <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                                    <div class=\"card-block\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Code8\" required=\"\" pattern=\"^[0-9]+$\"\n                                                            value=\"{{ message.Code8 }}\" formControlName=\"Code8\">\n                                                        <label for=\"Code8\">Code<sub class=\"required\">* </sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Code8'].invalid && (angForm.controls['Code8'].dirty || angForm.controls['Code8'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Code8'].errors?.pattern || angForm.controls['Code8'].errors?.required\">\n                                                        This field is required and Input allowed only 0-9\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"\" required=\"\"\n                                                            value=\"{{ message.Name8 }}\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                                            title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                            formControlName=\"Name8\">\n                                                        <label for=\"\">Name<sub class=\"required\">* </sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Name8'].invalid && (angForm.controls['Name8'].dirty || angForm.controls['Name8'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Name8'].errors?.pattern || angForm.controls['Name8'].errors?.required\">\n                                                        This field is required and Input allowed only A-Z a-z - / . (Space)\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"AlternateCode\"\n                                                            value=\"{{ message.AlternateCode }}\" pattern=\"^[0-9]+$\"\n                                                            title=\"Input allowed only 0-9\"\n                                                            formControlName=\"AlternateCode\">\n                                                        <label for=\"AlternateCode\">Alternate Code</label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AlternateCode'].invalid && (angForm.controls['AlternateCode'].dirty || angForm.controls['AlternateCode'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['AlternateCode'].errors?.pattern\">\n                                                        Input allowed only 0-9\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"HOLiquidityCode1\"\n                                                            value=\"{{ message.HOLiquidityCode1 }}\" pattern=\"^[0-9]+$\"\n                                                            title=\"Input allowed only 0-9\"\n                                                            formControlName=\"HOLiquidityCode1\">\n                                                        <label for=\"HOLiquidityCode1\">HO Liquidity Code1</label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['HOLiquidityCode1'].invalid && (angForm.controls['HOLiquidityCode1'].dirty || angForm.controls['HOLiquidityCode1'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['HOLiquidityCode1'].errors?.pattern\">\n                                                        Input allowed only 0-9\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"AlterBalanceCode\"\n                                                            value=\"{{ message.AlterBalanceCode }}\" pattern=\"^[0-9]+$\"\n                                                            title=\"Input allowed only 0-9\"\n                                                            formControlName=\"AlterBalanceCode\">\n                                                        <label for=\"AlterBalanceCode\">Alter Balance Code</label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['AlterBalanceCode'].invalid && (angForm.controls['AlterBalanceCode'].dirty || angForm.controls['AlterBalanceCode'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['AlterBalanceCode'].errors?.pattern\">\n                                                        Input allowed only 0-9\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"HOLiquidityCode2\"\n                                                            value=\"{{ message.HOLiquidityCode2 }}\" pattern=\"^[0-9]+$\"\n                                                            title=\"Input allowed only 0-9\"\n                                                            formControlName=\"HOLiquidityCode2\">\n                                                        <label for=\"HOLiquidityCode2\">HO Liquidity Code2</label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['HOLiquidityCode2'].invalid && (angForm.controls['HOLiquidityCode2'].dirty || angForm.controls['HOLiquidityCode2'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['HOLiquidityCode2'].errors?.pattern\">\n                                                        Input allowed only 0-9\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"SerialNo8\"\n                                                            value=\"{{ message.SerialNo8 }}\" formControlName=\"SerialNo8\">\n                                                        <label for=\"SerialNo8\">Serial No.</label>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <div class=\"border-checkbox-section\">\n                                                    <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                                        <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\" [checked]=\"isLinkingInputAllowed == true\" checked>\n                                                        <label class=\"border-checkbox-label\" for=\"checkbox1\">Linking\n                                                            Input Allowed?</label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <div class=\"border-checkbox-section\">\n                                                    <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                                        <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox2\" value=\"checkbox\" [checked]=\"isIsPrintinGLReport == true\" checked>\n                                                        <label class=\"border-checkbox-label\" for=\"checkbox2\">Is Print in\n                                                            GL Report ?</label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Percentage\"\n                                                            value=\"{{ message.Percentage }}\"\n                                                            formControlName=\"Percentage\">\n                                                        <label for=\"Percentage\">Percentage</label>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"PercentageOfcode\"\n                                                            value=\"{{ message.PercentageOfcode }}\" pattern=\"^[0-9]+$\"\n                                                            title=\"Input allowed only 0-9\"\n                                                            formControlName=\"PercentageOfcode\">\n                                                        <label for=\"PercentageOfcode\">Percentage Of code</label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['PercentageOfcode'].invalid && (angForm.controls['PercentageOfcode'].dirty || angForm.controls['PercentageOfcode'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['PercentageOfcode'].errors?.pattern\">\n                                                        Input allowed only 0-9\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                                                <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                                <div class=\"col-12\">\n                                    <div class=\"table-responsive\">\n                                        <table datatable [dtOptions]=\"dtExportButtonOptions2\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngb-tab>\n                    <ngb-tab title=\"4.CRR\">\n                        <ng-template ngbTabContent>\n                            <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                                    <div class=\"card-block\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Code9\" required=\"\"\n                                                            value=\"{{ message.Code9 }}\" pattern=\"^[0-9]+$\"\n                                                            title=\"Input allowed only 0-9\" formControlName=\"Code9\">\n                                                        <label for=\"Code9\">Code<sub class=\"required\">* </sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Code9'].invalid && (angForm.controls['Code9'].dirty || angForm.controls['Code9'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Code9'].errors?.pattern || angForm.controls['Code9'].errors?.required\">\n                                                        This field is required and Input allowed only 0-9\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Name9\" required=\"\"\n                                                            value=\"{{ message.Name9 }}\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                                            title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                            formControlName=\"Name9\">\n                                                        <label for=\"Name9\">Name<sub class=\"required\">* </sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Name9'].invalid && (angForm.controls['Name9'].dirty || angForm.controls['Name9'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Name9'].errors?.pattern || angForm.controls['Name9'].errors?.required\">\n                                                        This field is required and Input allowed only A-Z a-z - / . (Space)\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <div class=\"form-group form-primary form-static-label\">\n                                                    <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" [multiple]=\"false\" placeholder=\"Type*\" required title=\"Complsory Selection\" formControlName=\"Type\">\n                                                    </ng-select>\n                                                    <label>{{ message.Type }}</label>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Type'].invalid && (angForm.controls['Type'].dirty || angForm.controls['Type'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Type'].errors?.required\">\n                                                        This field is required\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-3\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"SerialNo9\"\n                                                            value=\"{{ message.SerialNo9 }}\" formControlName=\"SerialNo9\">\n                                                        <label for=\"SerialNo9\">Serial No.</label>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                                                <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                                <div class=\"col-12\">\n                                    <div class=\"table-responsive\">\n                                        <table datatable [dtOptions]=\"dtExportButtonOptions3\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngb-tab>\n                    <ngb-tab title=\"5.SLR\">\n                        <ng-template ngbTabContent>\n                            <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                                    <div class=\"card-block\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Code10\" required=\"\"\n                                                            value=\"{{ message.Code10 }}\" pattern=\"^[0-9]+$\"\n                                                            title=\"Input allowed only 0-9\" formControlName=\"Code10\">\n                                                        <label for=\"Code10\">Code<sub class=\"required\">* </sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Code10'].invalid && (angForm.controls['Code10'].dirty || angForm.controls['Code10'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Code10'].errors?.pattern || angForm.controls['Code10'].errors?.required\">\n                                                        This field is required and Input allowed only 0-9\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Name10\" required=\"\"\n                                                            value=\"{{ message.Name10 }}\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                                            title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                            formControlName=\"Name10\">\n                                                        <label for=\"Name10\">Name<sub class=\"required\">* </sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Name10'].invalid && (angForm.controls['Name10'].dirty || angForm.controls['Name10'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Name10'].errors?.pattern || angForm.controls['Name10'].errors?.required\">\n                                                        This field is required and Input allowed only A-Z a-z - / . (Space)\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <div class=\"form-group form-primary form-static-label\">\n                                                    <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" [multiple]=\"false\" placeholder=\"Type*\" required title=\"Complsory Selection\" formControlName=\"Type1\">\n                                                    </ng-select>\n                                                    <label>{{ message.Type10}}</label>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Type1'].invalid && (angForm.controls['Type1'].dirty || angForm.controls['Type1'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Type1'].errors?.required\">\n                                                        This field is required and Input allowed only A-Z a-z - / . (Space)\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-3\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"SerialNo90\"\n                                                            value=\"{{ message.SerialNo90 }}\"\n                                                            formControlName=\"SerialNo90\">\n                                                        <label for=\"SerialNo90\">Serial No.</label>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                                                <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                                <div class=\"col-12\">\n                                    <div class=\"table-responsive\">\n                                        <table datatable [dtOptions]=\"dtExportButtonOptions4\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngb-tab>\n                    <ngb-tab title=\"6.CRAR\">\n                        <ng-template ngbTabContent>\n                            <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                                    <div class=\"card-block\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Code12\" required=\"\"\n                                                            value=\"{{ message.Code12 }}\" pattern=\"^[0-9]+$\"\n                                                            title=\"Input allowed only 0-9\" formControlName=\"Code12\">\n                                                        <label for=\"Code12\">Code<sub class=\"required\">* </sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Code12'].invalid && (angForm.controls['Code12'].dirty || angForm.controls['Code12'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Code12'].errors?.pattern || angForm.controls['Code12'].errors?.required\">\n                                                        This field is required and Input allowed only 0-9\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Name1\" required=\"\"\n                                                            value=\"{{ message.Name1 }}\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                                            title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                            formControlName=\"Name1\">\n                                                        <label for=\"Name1\">Name<sub class=\"required\">* </sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Name1'].invalid && (angForm.controls['Name1'].dirty || angForm.controls['Name1'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Name1'].errors?.pattern || angForm.controls['Name1'].errors?.required\">\n                                                        This field is required and Input allowed only A-Z a-z - / . (Space)\"\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <div class=\"form-group form-primary form-static-label\">\n                                                    <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" [multiple]=\"false\" placeholder=\"Type*\" required title=\"Complsory Selection\" formControlName=\"Type3\">\n                                                    </ng-select>\n                                                    <label>{{ message.Type3}}</label>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Type3'].invalid && (angForm.controls['Type3'].dirty || angForm.controls['Type3'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\" angForm.controls['Type3'].errors?.required\">\n                                                        This field is required\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-sm\">\n                                                <div class=\"border-checkbox-section\">\n                                                    <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                                        <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox6\" value=\"checkbox\" [checked]=\"isAddProfitLossAmount == true\">\n                                                        <label class=\"border-checkbox-label\" for=\"checkbox6\">Add Profit\n                                                            & Loss Amount</label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"SerialNo1\"\n                                                            value=\"{{ message.SerialNo1 }}\" formControlName=\"SerialNo1\">\n                                                        <label for=\"SerialNo1\">Serial No.</label>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"PercentageOfcode1\"\n                                                            value=\"{{ message.PercentageOfcode1 }}\" pattern=\"^[0-9]+$\"\n                                                            title=\"Input allowed only 0-9\"\n                                                            formControlName=\"PercentageOfcode1\">\n                                                        <label for=\"PercentageOfcode1\">Percentage Of code</label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['PercentageOfcode1'].invalid && (angForm.controls['PercentageOfcode1'].dirty || angForm.controls['PercentageOfcode1'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['PercentageOfcode1'].errors?.pattern\">\n                                                        Input allowed only 0-9\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-sm\">\n                                                <div class=\"border-checkbox-section\">\n                                                    <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                                        <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox4\" value=\"checkbox\" [checked]=\"isLinkingInputAllowed1 == true\" checked>\n                                                        <label class=\"border-checkbox-label\" for=\"checkbox4\">Linking\n                                                            Input Allowed?</label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <div class=\"border-checkbox-section\">\n                                                    <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                                        <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox5\" value=\"checkbox\" [checked]=\"isIsPrintinGLReport1 == true\" checked>\n                                                        <label class=\"border-checkbox-label\" for=\"checkbox5\">Is Print in\n                                                            GL Report ?</label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Percentage1\"\n                                                            value=\"{{ message.Percentage1 }}\" pattern=\"^[0-9]+$\"\n                                                            title=\"Input allowed only 0-9\"\n                                                            formControlName=\"Percentage1\">\n                                                        <label for=\"Percentage1\">Percentage</label>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"row\">\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"PercentageConsideration\"\n                                                            value=\"{{ message.PercentageConsideration }}\"\n                                                            formControlName=\"PercentageConsideration\">\n                                                        <label for=\"PercentageConsideration\">Percentage\n                                                            Consideration</label>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                                                <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                                <div class=\"col-12\">\n                                    <div class=\"table-responsive\">\n                                        <table datatable [dtOptions]=\"dtExportButtonOptions5\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngb-tab>\n\n\n\n                    <ngb-tab title=\"7.NIDHI\">\n                        <ng-template ngbTabContent>\n                            <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                                    <div class=\"card-block\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Code3\" required=\"\"\n                                                            value=\"{{ message.Code3 }}\" pattern=\"^[0-9]+$\"\n                                                            title=\"Input allowed only 0-9\" formControlName=\"Code3\">\n                                                        <label for=\"Code3\">Code<sub class=\"required\">* </sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Code3'].invalid && (angForm.controls['Code3'].dirty || angForm.controls['Code3'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Code3'].errors?.pattern || angForm.controls['Code3'].errors?.required\">\n                                                        This field is required and Input allowed only 0-9\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Name3\" required=\"\"\n                                                            value=\"{{ message.Name3 }}\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                                            title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                            formControlName=\"Name3\">\n                                                        <label for=\"Name3\">Name<sub class=\"required\">* </sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['Name3'].invalid && (angForm.controls['Name3'].dirty || angForm.controls['Name3'].touched)\" class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Name3'].errors?.pattern || angForm.controls['Name3'].errors?.required\">\n                                                        This field is required and Input allowed only A-Z a-z - / . (Space)\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"AC_TYPE\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"SerialNo3\"\n                                                            value=\"{{ message.SerialNo3 }}\" formControlName=\"SerialNo3\">\n                                                        <label for=\"SerialNo3\">Serial No.</label>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\">Add</button>\n                                                <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                                <div class=\"col-12\">\n                                    <div class=\"table-responsive\">\n                                        <table datatable [dtOptions]=\"dtExportButtonOptions6\" class=\"table table-striped table-bordered table-hover\">\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngb-tab>\n                </ngb-tabset>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GlReportMasterComponent } from './gl-report-master.component';\r\nimport { GlReportMasterRoutingModule } from './gl-report-master-routing.module'\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { glTypeService } from '../../../../shared/elements/gl-type.service';\r\nimport { SelectModule } from 'ng-select';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    GlReportMasterRoutingModule,\r\n    DataTablesModule,\r\n    NgbModule,\r\n    FormsModule, ReactiveFormsModule,\r\n    SelectModule\r\n  ],\r\n  declarations: [GlReportMasterComponent],\r\n  providers: [glTypeService]\r\n})\r\nexport class GlReportMasterModule { }\r\n"],"sourceRoot":"webpack:///"}