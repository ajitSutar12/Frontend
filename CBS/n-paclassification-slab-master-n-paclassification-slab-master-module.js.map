{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/elements/npcslab-master.service.ts","./src/app/theme/master/policy-settings/n-paclassification-slab-master/n-paclassification-slab-master-routing.module.ts","./src/app/theme/master/policy-settings/n-paclassification-slab-master/n-paclassification-slab-master.component.ts","./src/app/theme/master/policy-settings/n-paclassification-slab-master/n-paclassification-slab-master.component.html","./src/app/theme/master/policy-settings/n-paclassification-slab-master/n-paclassification-slab-master.module.ts"],"names":[],"mappings":"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","file":"n-paclassification-slab-master-n-paclassification-slab-master-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class npcslabMasterService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Standard'},\r\n    {value: '1', label: 'Sub Standard'},\r\n    {value: '2', label: 'Heading'},\r\n    {value: '3', label: 'Doubtful Assets'},\r\n    {value: '4', label: 'Loss Assets'}\r\n    \r\n  ];\r\n\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(npcslabMasterService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(npcslabMasterService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(npcslabMasterService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NPAClassificationSlabMasterComponent} from './n-paclassification-slab-master.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NPAClassificationSlabMasterComponent,\r\n    data: {\r\n      title: 'NPA Classification Slab Master',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NPAClassificationSlabMasterRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { npcslabMasterService } from '../../../../shared/elements/npcslab-master.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-n-paclassification-slab-master',\n  templateUrl: './n-paclassification-slab-master.component.html',\n  styleUrls: ['./n-paclassification-slab-master.component.scss']\n})\nexport class NPAClassificationSlabMasterComponent implements OnInit {\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n\n  //title select variables\n  simpleOption: Array<IOption> = this.npcslabMasterService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n  //variables for  add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  constructor(public npcslabMasterService: npcslabMasterService, private fb: FormBuilder) { this.createForm(); }\n  //object created to get data when row is clicked\n  message = {\n    EffectiveDate: \"\",\n    BaseDays: \"\"\n  };\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/npcslab_master.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          data: 'SerialNo',\n          title: 'Serial No'\n        },\n        {\n          data: 'NPAClass',\n          title: 'NPAClass'\n        },\n        {\n          data: 'SubClassNo',\n          title: 'SubClassNo'\n        },\n        {\n          data: 'NPAClassDescription',\n          title: 'NPA Class Description'\n        },\n        {\n          data: 'FromDays',\n          title: 'From Days'\n        },\n        {\n          data: 'FromMonths',\n          title: 'From Months'\n        },\n        {\n          data: 'ToDays',\n          title: 'To Days'\n        },\n        {\n          data: 'ToMonths',\n          title: 'To Months'\n        },\n\n        {\n          data: 'SecuredPercent',\n          title: 'Secured Percent'\n        },\n        {\n          data: 'UnSecuredPercent',\n          title: 'UnSecured Percent'\n        }\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n    this.runTimer();\n    this.dataSub = this.npcslabMasterService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      BaseDays: ['', [Validators.pattern]],\n      EffectiveDate:      ['', [Validators.required]],\n    });\n  }\n  submit() {\n    console.log(this.angForm.valid);\n\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  //function for edit button clicked\n  editClickHandler(info: any): void {\n    this.message.BaseDays = info.BaseDays;\n    this.message.EffectiveDate = info.EffectiveDate;\n    this.showButton = false;\n    this.updateShow = true;\n  }\n  //function toggle update to add button\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n  }\n  //function for delete button clicked\n  delClickHandler(info: any): void {\n    this.message.EffectiveDate = info.EffectiveDate;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Serial No.\" + this.message.EffectiveDate + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n\n  }\n\n\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>NPA Classification Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novaliEffectiveDate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"EffectiveDate\" class=\"form-control\" placeholder=\" \" required=\"\"\n                                        value=\"{{ message.EffectiveDate }}\" max=\"9999-12-31\" id=\"EffectiveDate\"\n                                        onfocus=\"(this.type='EffectiveDate')\" formControlName=\"EffectiveDate\">\n                                    <label for=\"EffectiveDate\">Effective EffectiveDate<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['EffectiveDate'].invalid && (angForm.controls['EffectiveDate'].dirty || angForm.controls['EffectiveDate'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['EffectiveDate'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\n                                        id=\"BaseDays\" value=\"{{ message.BaseDays }}\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"BaseDays\">\n                                    <label for=\"BaseDays\">Base Days</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['BaseDays'].invalid && (angForm.controls['BaseDays'].dirty || angForm.controls['BaseDays'].touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['BaseDays'].errors?.pattern\">\n                                    Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NPAClassificationSlabMasterComponent } from './n-paclassification-slab-master.component';\r\nimport { NPAClassificationSlabMasterRoutingModule } from './n-paclassification-slab-master-routing.module';\r\nimport { FormsModule,ReactiveFormsModule  }   from '@angular/forms';\r\n\r\nimport { npcslabMasterService} from '../../../../shared/elements/npcslab-master.service';\r\nimport {SelectModule} from 'ng-select';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NPAClassificationSlabMasterRoutingModule,\r\n    DataTablesModule,\r\n    SelectModule,\r\n    NgbModule,\r\n    FormsModule,ReactiveFormsModule\r\n   \r\n  ],\r\n  declarations: [NPAClassificationSlabMasterComponent],\r\n  providers: [npcslabMasterService]\r\n})\r\nexport class NPAClassificationSlabMasterModule { }\r\n"],"sourceRoot":"webpack:///"}