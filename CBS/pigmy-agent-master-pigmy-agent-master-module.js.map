{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/elements/branch.service.ts","./src/app/shared/elements/cast.service.ts","./src/app/shared/elements/citycode.service.ts","./src/app/shared/elements/customerid.service.ts","./src/app/shared/elements/scheme-code.service.ts","./src/app/shared/elements/title.service.ts","./src/app/theme/master/customer/pigmy-agent-master/pigmy-agent-master-routing.module.ts","./src/app/theme/master/customer/pigmy-agent-master/pigmy-agent-master.component.ts","./src/app/theme/master/customer/pigmy-agent-master/pigmy-agent-master.component.html","./src/app/theme/master/customer/pigmy-agent-master/pigmy-agent-master.module.ts"],"names":[],"mappings":"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","file":"pigmy-agent-master-pigmy-agent-master-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class BranchService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: 'branch1' },\r\n        { value: '1', label: 'branch2' },\r\n        { value: '2', label: 'branch1' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(BranchService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(BranchService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(BranchService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class CastService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: 'Hindu' },\r\n        { value: '1', label: 'Muslim' },\r\n        { value: '2', label: 'Jain' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(CastService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(CastService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(CastService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class CitycodeService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '219812' },\r\n        { value: '1', label: '434343' },\r\n        { value: '2', label: '344343' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(CitycodeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(CitycodeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(CitycodeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class CustomeridService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '10100' },\r\n        { value: '1', label: '20100' },\r\n        { value: '2', label: '20200' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(CustomeridService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(CustomeridService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(CustomeridService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class SchemeCodeService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '40100', label: '40100' },\r\n        { value: '40200', label: '40200' },\r\n        { value: '40300', label: '40300' },\r\n        { value: '40400', label: '40400' },\r\n        \r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(SchemeCodeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(SchemeCodeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(SchemeCodeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class TitleService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Mr.'},\r\n    {value: '1', label: 'Mrs.'},\r\n    {value: '2', label: 'Miss'}\r\n  ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(TitleService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(TitleService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(TitleService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { PigmyAgentMasterComponent } from './pigmy-agent-master.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  PigmyAgentMasterComponent,\r\n    data: {\r\n      title: 'Pigmy Agent Master',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class  PigmyAgentMasterRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { TitleService } from '../../../../shared/elements/title.service';\nimport { SchemeCodeService } from '../../../../shared/elements/scheme-code.service';\nimport { CustomeridService } from '../../../../shared/elements/customerid.service';\nimport { CitycodeService } from '../../../../shared/elements/citycode.service';\nimport { SchemeTypeService } from '../../../../shared/elements/scheme-type.service';\nimport { BranchService } from '../../../../shared/elements/branch.service';\nimport { CastService } from '../../../../shared/elements/cast.service';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-pigmy-agent-master',\n  templateUrl: './pigmy-agent-master.component.html',\n  styleUrls: ['./pigmy-agent-master.component.scss'],\n  animations: [\n    trigger('fadeInOutTranslate', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('400ms ease-in-out', style({ opacity: 1 }))\n      ]),\n      transition(':leave', [\n        style({ transform: 'translate(0)' }),\n        animate('400ms ease-in-out', style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\n\nexport class PigmyAgentMasterComponent implements OnInit {\n  angForm: FormGroup;\n\n  dtExportButtonOptions: any = {}; //Datatable variable for main form\n  dtnomineeOptions: any = {};         //Datatable variable for nominee tab\n\n  //display code according choice\n  NomineeTrue = false;\n\n  //Select option for title\n  titleOption: Array<IOption> = this.TitleService.getCharacters();\n  scheme: Array<IOption> = this.schemeCodeService.getCharacters();\n  CustomerID: Array<IOption> = this.customerIdService.getCharacters();\n  Cast: Array<IOption> = this.castService.getCharacters();\n  PimgyScheme: Array<IOption> = this.schemeTypeService.getCharacters();\n  City_Code: Array<IOption> = this.cityCodeService.getCharacters();\n  IScheme: Array<IOption> = this.schemeCodeService.getCharacters();\n  branch: Array<IOption> = this.branchService.getCharacters();\n  ncity: Array<IOption> = this.cityCodeService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n  private dataSub: Subscription = null;\n\n  //variables for  add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //object created to get data when row is clicked\n  message = {\n    Scheme: \"\",\n    AgentNo: \"\",\n    CommissionDate: \"\",\n    CustomerID: \"\",\n    Title: \"\",\n    Name: \"\",\n    FreezeStatus: \"\",\n    Acstatus: \"\",\n    LastTranDate: \"\",\n    LedgerBalance: \"\"\n  };\n\n  constructor(public TitleService: TitleService, public schemeCodeService: SchemeCodeService, public customerIdService: CustomeridService,\n    public cityCodeService: CitycodeService, public schemeTypeService: SchemeTypeService, public branchService: BranchService, public castService: CastService, private fb: FormBuilder) { this.createForm(); }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/pigmy-agent-master.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          data: 'Scheme',\n          title: 'Scheme'\n        },\n        {\n          data: 'AgentNo',\n          title: 'Agent No'\n        },\n        {\n          data: 'CustomerID',\n          title: 'Customer ID'\n        },\n        {\n          data: 'Title',\n          title: 'Title'\n        },\n        {\n          data: 'Name',\n          title: 'Name'\n        },\n        {\n          data: 'LastTranDate',\n          title: 'Last Tran. Date'\n        },\n        {\n          data: 'CommissionDate',\n          title: 'Commission Date '\n        },\n        {\n          data: 'FreezeStatus',\n          title: 'Freeze Status '\n        },\n        {\n          data: 'Acstatus',\n          title: 'A/c Status'\n        },\n        {\n          data: 'LedgerBalance',\n          title: 'Ledger Balance'\n        }\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n    this.dtnomineeOptions = {\n      ajax: 'fake-data/nominee.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          data: 'Name',\n          title: 'Code'\n        },\n        {\n          data: 'Relation',\n          title: 'Relation'\n        },\n        {\n          data: 'Age',\n          title: 'Age'\n        },\n        {\n          data: 'NominationDate',\n          title: 'Nomination Date'\n        },\n        {\n          data: 'Address1',\n          title: 'Address1'\n        },\n        {\n          data: 'Address2',\n          title: 'Address2'\n        },\n        {\n          data: 'Address3',\n          title: 'Address3'\n        },\n        {\n          data: 'City',\n          title: 'City'\n        },\n        {\n          data: 'Pin',\n          title: 'Pin'\n        },\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n\n    this.runTimer();\n    this.dataSub = this.TitleService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  OpenLink(val) {\n    if (val == 1) {\n      this.NomineeTrue = true;\n    }\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      Scheme: ['', [Validators.required]],\n      AgentNo: ['',],\n      CustomerID: ['', [Validators.required]],\n      Title: ['', [Validators.required]],\n      Name: ['', [Validators.pattern, Validators.required]],\n      LastTranDate: ['',],\n      CommissionDate: ['',],\n      FreezeStatus: ['',],\n      Acstatus: ['',],\n      Cast: ['',],\n      AppontiedOn: ['', [Validators.required]],\n      PimgyScheme: ['', [Validators.required]],\n      address1: ['', [Validators.pattern]],\n      address2: ['', [Validators.pattern]],\n      address3: ['', [Validators.pattern]],\n      Pin: ['', [Validators.pattern]],\n      R: ['', [Validators.pattern]],\n      O: ['', [Validators.pattern]],\n      Mobile: ['', [Validators.pattern]],\n      AC_Code: ['', [Validators.pattern]],\n      Age: ['', [Validators.pattern]],\n      naddress1: ['', [Validators.pattern]],\n      naddress2: ['', [Validators.pattern]],\n      naddress3: ['', [Validators.pattern]],\n      nPin: ['', [Validators.pattern]],\n      IName: ['', [Validators.pattern]],\n      City_Code: ['', [Validators.required]],\n      Nomination_Date: ['', [Validators.required]],\n      ncity: ['', [Validators.required]],\n      NName: ['', [Validators.required, Validators.pattern]],\n      Relation: ['', [Validators.required, Validators.pattern]],\n      Branch: [''],\n      IScheme: [''],\n      LedgerBalance: [''],\n    });\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  //function executes when edit button clicked\n  editClickHandler(info: any): void {\n    this.message.Scheme = info.Scheme;\n    this.message.AgentNo = info.AgentNo;\n    this.message.CommissionDate = info.CommissionDate;\n    this.message.CustomerID = info.CustomerID;\n    this.message.Title = info.Title;\n    this.message.Name = info.Name;\n    this.message.FreezeStatus = info.FreezeStatus;\n    this.message.Acstatus = info.Acstatus;\n    this.message.LastTranDate = info.LastTranDate;\n    this.message.LedgerBalance = info.LedgerBalance;\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  //function execute when delete button clicked\n  delClickHandler(info: any): void {\n    this.message.Scheme = info.Scheme;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Scheme.\" + this.message.Scheme + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  //function toggle update to add button\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n  }\n}\n","<!-- Pigmy Agent Master -->\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Pigmy Agent Master</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <div class=\"card-block\">\n                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"scheme\" [multiple]=\"false\"\n                                            placeholder=\"Scheme*\" formControlName=\"Scheme\">\n                                        </ng-select>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\n                                            This field is required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"AgentNo\" class=\"form-control\" placeholder=\" \"\n                                                id=\"AgentNo\" value=\"{{ message.AgentNo }}\" formControlName=\"AgentNo\">\n                                            <label for=\"AgentNo\">Agent No</label>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"CustomerID\" [multiple]=\"false\"\n                                            placeholder=\"Customer ID*\" formControlName=\"CustomerID\">\n                                        </ng-select>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['CustomerID'].invalid && (angForm.controls['CustomerID'].dirty || angForm.controls['CustomerID'].touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div *ngIf=\"angForm.controls['CustomerID'].errors?.required\">\n                                            This field is required\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-sm-2\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"titleOption\" [multiple]=\"false\"\n                                            placeholder=\"Title*\" required title=\"Compulsory Selection\"\n                                            formControlName=\"Title\">\n                                        </ng-select>\n                                        <label>{{ message.Title }}</label>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['Title'].invalid && (angForm.controls['Title'].dirty || angForm.controls['Title'].touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div *ngIf=\"angForm.controls['Title'].errors?.required\">\n                                            This field is required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-3\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"Name\" class=\"form-control\" placeholder=\" \"\n                                                id=\"Name\" required=\"\" value=\"{{ message.Name }}\"\n                                                pattern=\"^[A-Za-z\\./ -]+$\"\n                                                title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                formControlName=\"Name\">\n                                            <label for=\"Name\">Name<sub class=\"required\">* </sub></label>\n                                        </span>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['Name'].invalid && (angForm.controls['Name'].dirty || angForm.controls['Name'].touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div\n                                            *ngIf=\"angForm.controls['Name'].errors?.pattern || angForm.controls['Name'].errors?.required\">\n                                            This field is required and Input allowed only A-Z a-z - / . (Space)\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- Start of Tab forms -->\n                            <div class=\"row\">\n                                <div class=\"col-12\">\n                                    <ngb-tabset>\n                                        <!-- Start of Details Tab forms -->\n                                        <ngb-tab title=\"1.Details\">\n                                            <ng-template ngbTabContent>\n                                                <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <input type=\"text\" name=\"AppontiedOn\"\n                                                                        class=\"form-control\" placeholder=\" \"\n                                                                        id=\"AppontiedOn\" max=\"9999-12-31\"\n                                                                        onfocus=\"(this.type='date')\"\n                                                                        formControlName=\"AppontiedOn\" required>\n                                                                    <label for=\"AppontiedOn\">Appontied On</label>\n                                                                </span>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\"\n                                                                *ngIf=\"angForm.controls['AppontiedOn'].invalid && (angForm.controls['AppontiedOn'].dirty || angForm.controls['AppontiedOn'].touched)\"\n                                                                class=\"alert alert-danger\">\n                                                                <div\n                                                                    *ngIf=\"angForm.controls['AppontiedOn'].errors?.required\">\n                                                                    This field is required\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group form-primary form-static-label\">\n                                                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"Cast\"\n                                                                    [multiple]=\"false\" placeholder=\"Cast\"\n                                                                    formControlName=\"Cast\">\n                                                                </ng-select>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group form-primary form-static-label\">\n                                                                <ng-select [ngClass]=\"'ng-select'\"\n                                                                    [options]=\"PimgyScheme\" [multiple]=\"false\"\n                                                                    placeholder=\"Pimgy Scheme*\" required\n                                                                    title=\"Compulsory Selection\"\n                                                                    formControlName=\"PimgyScheme\">\n                                                                </ng-select>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\"\n                                                                *ngIf=\"angForm.controls['PimgyScheme'].invalid && (angForm.controls['PimgyScheme'].dirty || angForm.controls['PimgyScheme'].touched)\"\n                                                                class=\"alert alert-danger\">\n                                                                <div\n                                                                    *ngIf=\"angForm.controls['PimgyScheme'].errors?.required\">\n                                                                    This field is required\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm\">\n                                                            <h6 style=\"text-align: center;font-size: 16px;\">---------\n                                                                Permanent\n                                                                Address ---------</h6>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <label> </label>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <!-- <h6><span style=\"font-weight: bold;\">-----Temporory Address:-----</span></h6> -->\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <textarea type=\"text\" name=\"address1\"\n                                                                        class=\"form-control\" placeholder=\" \"\n                                                                        pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                        id=\"address1\"\n                                                                        formControlName=\"address1\"></textarea>\n                                                                    <label for=\"address1\">Address1</label>\n                                                                </span>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\"\n                                                                *ngIf=\"angForm.controls['address1'].invalid && (angForm.controls['address1'].dirty || angForm.controls['address1'].touched)\"\n                                                                class=\"alert alert-danger\">\n                                                                <div\n                                                                    *ngIf=\"angForm.controls['address1'].errors?.pattern\">\n                                                                    Input allowed only A-Z a-z - / . (Space)\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <textarea type=\"text\" name=\"address2\"\n                                                                        class=\"form-control\" placeholder=\" \"\n                                                                        pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                        id=\"address2\"\n                                                                        formControlName=\"address2\"></textarea>\n                                                                    <label for=\"address2\">Address2</label>\n                                                                </span>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\"\n                                                                *ngIf=\"angForm.controls['address2'].invalid && (angForm.controls['address2'].dirty || angForm.controls['address2'].touched)\"\n                                                                class=\"alert alert-danger\">\n                                                                <div\n                                                                    *ngIf=\"angForm.controls['address2'].errors?.pattern\">\n                                                                    Input allowed only A-Z a-z - / . (Space)\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <textarea type=\"text\" name=\"address3\"\n                                                                        class=\"form-control\" placeholder=\" \"\n                                                                        pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                        id=\"address3\"\n                                                                        formControlName=\"address3\"></textarea>\n                                                                    <label for=\"address3\">Address3</label>\n                                                                </span>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\"\n                                                                *ngIf=\"angForm.controls['address3'].invalid && (angForm.controls['address3'].dirty || angForm.controls['address3'].touched)\"\n                                                                class=\"alert alert-danger\">\n                                                                <div\n                                                                    *ngIf=\"angForm.controls['address3'].errors?.pattern\">\n                                                                    Input allowed only A-Z a-z - / . (Space)\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group form-primary form-static-label\">\n                                                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"City_Code\"\n                                                                    name=\"City_Code\" [multiple]=\"false\"\n                                                                    placeholder=\"City Code*\" required\n                                                                    title=\"Compulsory Selection\"\n                                                                    formControlName=\"City_Code\">\n                                                                </ng-select>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\"\n                                                                *ngIf=\"angForm.controls['City_Code'].invalid && (angForm.controls['City_Code'].dirty || angForm.controls['City_Code'].touched)\"\n                                                                class=\"alert alert-danger\">\n                                                                <div\n                                                                    *ngIf=\"angForm.controls['City_Code'].errors?.required\">\n                                                                    This field is required\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <input type=\"text\" name=\"Pin\" class=\"form-control\"\n                                                                        placeholder=\" \" id=\"Pin\"\n                                                                        value=\"{{ message.Pin }}\" pattern=\"^[0-9]+$\"\n                                                                        title=\"Input allowed only  0-9\"\n                                                                        formControlName=\"Pin\">\n                                                                    <label for=\"Pin\">Pin</label>\n                                                                </span>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\"\n                                                                *ngIf=\"angForm.controls['Pin'].invalid && (angForm.controls['Pin'].dirty || angForm.controls['Pin'].touched)\"\n                                                                class=\"alert alert-danger\">\n                                                                <div *ngIf=\"angForm.controls['Pin'].errors?.pattern\">\n                                                                    Input allowed only 0-9\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <input type=\"text\" name=\"R\" class=\"form-control\"\n                                                                        placeholder=\" \" id=\"R\" pattern=\"^[0-9]+$\"\n                                                                        title=\"Input allowed only  0-9\"\n                                                                        formControlName=\"R\">\n                                                                    <label for=\"R\">(R)</label>\n                                                                </span>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\"\n                                                                *ngIf=\"angForm.controls['R'].invalid && (angForm.controls['R'].dirty || angForm.controls['R'].touched)\"\n                                                                class=\"alert alert-danger\">\n                                                                <div *ngIf=\"angForm.controls['R'].errors?.pattern\">\n                                                                    Input allowed only 0-9\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <input type=\"text\" name=\"Pin\" class=\"form-control\"\n                                                                        placeholder=\" \" id=\"O\" pattern=\"^[0-9]+$\"\n                                                                        title=\"Input allowed only  0-9\"\n                                                                        formControlName=\"O\">\n                                                                    <label for=\"O\">(O)</label>\n                                                                </span>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\"\n                                                                *ngIf=\"angForm.controls['O'].invalid && (angForm.controls['O'].dirty || angForm.controls['O'].touched)\"\n                                                                class=\"alert alert-danger\">\n                                                                <div *ngIf=\"angForm.controls['O'].errors?.pattern\">\n                                                                    Input allowed only 0-9\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <input type=\"text\" name=\"Mobile\"\n                                                                        class=\"form-control\" placeholder=\" \" id=\"Mobile\"\n                                                                        pattern=\"^[0-9]+$\"\n                                                                        title=\"Input allowed only  0-9\"\n                                                                        formControlName=\"Mobile\">\n                                                                    <label for=\"Mobile\">(Mobile)</label>\n                                                                </span>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\"\n                                                                *ngIf=\"angForm.controls['Mobile'].invalid && (angForm.controls['Mobile'].dirty || angForm.controls['Mobile'].touched)\"\n                                                                class=\"alert alert-danger\">\n                                                                <div *ngIf=\"angForm.controls['Mobile'].errors?.pattern\">\n                                                                    Input allowed only 0-9\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm-2\">\n                                                            <button class=\"btn btn-primary ripple light\"\n                                                                *ngIf=\"showButton\"\n                                                                [disabled]=\"angForm.invalid\">Add</button>\n                                                            <button class=\"btn btn-primary ripple light\"\n                                                                (click)=\"updateData()\"\n                                                                *ngIf=\"updateShow\">Update</button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </ng-template>\n                                        </ngb-tab>\n                                        <!-- End of Details Tab forms -->\n                                        <!-- Start of Introducer / Nominee Tab forms -->\n                                        <ngb-tab title=\"2.Introducer / Nominee\">\n                                            <ng-template ngbTabContent>\n                                                <div [@fadeInOutTranslate] class=\"m-t-15\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm\">\n                                                            <h6 style=\"text-align: center;font-size: 16px;\">---------\n                                                                Introducer\n                                                                ---------</h6>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <label> </label>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group form-primary form-static-label\">\n                                                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"branch\"\n                                                                    [multiple]=\"false\" placeholder=\"Branch\"\n                                                                    formControlName=\"Branch\">\n                                                                </ng-select>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group form-primary form-static-label\">\n                                                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"IScheme\"\n                                                                    [multiple]=\"false\" placeholder=\"Scheme\"\n                                                                    formControlName=\"IScheme\">\n                                                                </ng-select>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <input type=\"text\" name=\"AC_Code\"\n                                                                        class=\"form-control\" placeholder=\" \"\n                                                                        id=\"AC_Code\" pattern=\"^[0-9]+$\"\n                                                                        title=\"Input allowed only  0-9\"\n                                                                        formControlName=\"AC_Code\">\n                                                                    <label for=\"AC_Code\">A/c Code</label>\n                                                                </span>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\"\n                                                                *ngIf=\"angForm.controls['AC_Code'].invalid && (angForm.controls['AC_Code'].dirty || angForm.controls['AC_Code'].touched)\"\n                                                                class=\"alert alert-danger\">\n                                                                <div\n                                                                    *ngIf=\"angForm.controls['AC_Code'].errors?.pattern\">\n                                                                    Input allowed only 0-9\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"form-group input-group\">\n                                                                <span class=\"border-lable-flt\">\n                                                                    <input type=\"text\" name=\"IName\" class=\"form-control\"\n                                                                        placeholder=\" \" id=\"IName\"\n                                                                        pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                        formControlName=\"IName\">\n                                                                    <label for=\"IName\">Name</label>\n                                                                </span>\n                                                            </div>\n                                                            <div class=\"form-group form-primary form-static-label\"\n                                                                *ngIf=\"angForm.controls['IName'].invalid && (angForm.controls['IName'].dirty || angForm.controls['IName'].touched)\"\n                                                                class=\"alert alert-danger\">\n                                                                <div *ngIf=\"angForm.controls['IName'].errors?.pattern\">\n                                                                    Input allowed only A-Z a-z - / . (Space)\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm-2\">\n                                                            <button class=\"btn btn-primary ripple light\"\n                                                                *ngIf=\"showButton\"\n                                                                [disabled]=\"angForm.invalid\">Add</button>\n                                                            <button class=\"btn btn-primary ripple light\"\n                                                                (click)=\"updateData()\"\n                                                                *ngIf=\"updateShow\">Update</button>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm\">\n                                                            <label [ngClass]=\"{'isActive': NomineeTrue}\">Nominee</label>\n                                                        </div>\n                                                        <div class=\"col-sm\">\n                                                            <h6> <a (click)=\"OpenLink(1)\" routerLinkActive=\"active\"\n                                                                    class=\"text-right f-w-600\" id=\"pointer\">Click Here\n                                                                    To Modify</a></h6>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm\">\n                                                            <div *ngIf=\"NomineeTrue\">\n                                                                <div class=\"row\">\n                                                                    <div class=\"col-sm\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <input type=\"text\" name=\"NName\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    id=\"NName\" required=\"\"\n                                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                                    formControlName=\"NName\">\n                                                                                <label for=\"NName\">Name<sub\n                                                                                        class=\"required\">*\n                                                                                    </sub></label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\"\n                                                                            *ngIf=\"angForm.controls['NName'].invalid && (angForm.controls['NName'].dirty || angForm.controls['NName'].touched)\"\n                                                                            class=\"alert alert-danger\">\n                                                                            <div\n                                                                                *ngIf=\"angForm.controls['NName'].errors?.pattern || angForm.controls['NName'].errors?.required\">\n                                                                                This field is required and Input allowed\n                                                                                only\n                                                                                A-Z a-z - / . (Space)\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-sm\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <input type=\"text\" name=\"Relation\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    id=\"Relation\" required=\"\"\n                                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                                    formControlName=\"Relation\">\n                                                                                <label for=\"Relation\">Relation<sub\n                                                                                        class=\"required\">*\n                                                                                    </sub></label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\"\n                                                                            *ngIf=\"angForm.controls['Relation'].invalid && (angForm.controls['Relation'].dirty || angForm.controls['Relation'].touched)\"\n                                                                            class=\"alert alert-danger\">\n                                                                            <div\n                                                                                *ngIf=\"angForm.controls['Relation'].errors?.pattern || angForm.controls['Relation'].errors?.required\">\n                                                                                This field is required and Input allowed\n                                                                                only\n                                                                                A-Z a-z - / . (Space)\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-sm\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <input type=\"text\"\n                                                                                    name=\"Nomination_Date\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    id=\"Nomination_Date\" required=\"\"\n                                                                                    max=\"9999-12-31\"\n                                                                                    onfocus=\"(this.type='date')\"\n                                                                                    formControlName=\"Nomination_Date\">\n                                                                                <label for=\"Nomination_Date\">Nomination\n                                                                                    Date<sub class=\"required\">*\n                                                                                    </sub></label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\"\n                                                                            *ngIf=\"angForm.controls['Nomination_Date'].invalid && (angForm.controls['Nomination_Date'].dirty || angForm.controls['Nomination_Date'].touched)\"\n                                                                            class=\"alert alert-danger\">\n                                                                            <div\n                                                                                *ngIf=\"angForm.controls['Nomination_Date'].errors?.required\">\n                                                                                This field is required\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"row\">\n                                                                    <div class=\"col-sm\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <input type=\"text\" name=\"Age\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    id=\"Age\" pattern=\"^[0-9]+$\"\n                                                                                    title=\"Input allowed only  0-9\"\n                                                                                    formControlName=\"Age\">\n                                                                                <label for=\"Age\">Age</label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\"\n                                                                            *ngIf=\"angForm.controls['Age'].invalid && (angForm.controls['Age'].dirty || angForm.controls['Age'].touched)\"\n                                                                            class=\"alert alert-danger\">\n                                                                            <div\n                                                                                *ngIf=\"angForm.controls['Age'].errors?.pattern\">\n                                                                                Input allowed only 0-9\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-sm\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <textarea type=\"text\" name=\"address\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                                    id=\"naddress1\"\n                                                                                    formControlName=\"naddress1\"></textarea>\n                                                                                <label for=\"naddress1\">Address1</label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\"\n                                                                            *ngIf=\"angForm.controls['naddress1'].invalid && (angForm.controls['naddress1'].dirty || angForm.controls['naddress1'].touched)\"\n                                                                            class=\"alert alert-danger\">\n                                                                            <div\n                                                                                *ngIf=\"angForm.controls['naddress1'].errors?.pattern\">\n                                                                                Input allowed only A-Z a-z - / . (Space)\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-sm\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <textarea type=\"text\" name=\"naddress2\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                                    id=\"naddress2\"\n                                                                                    formControlName=\"naddress2\"></textarea>\n                                                                                <label for=\"naddress2\">Address2</label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\"\n                                                                            *ngIf=\"angForm.controls['naddress2'].invalid && (angForm.controls['naddress2'].dirty || angForm.controls['naddress2'].touched)\"\n                                                                            class=\"alert alert-danger\">\n                                                                            <div\n                                                                                *ngIf=\"angForm.controls['naddress2'].errors?.pattern\">\n                                                                                Input allowed only A-Z a-z - / . (Space)\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"row\">\n                                                                    <div class=\"col-sm\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <textarea type=\"text\" name=\"naddress3\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    pattern=\"^[A-Za-z\\./ -]+$\"\n                                                                                    title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                                                                    id=\"naddress3\"\n                                                                                    formControlName=\"naddress3\"></textarea>\n                                                                                <label for=\"naddress3\">Address3</label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\"\n                                                                            *ngIf=\"angForm.controls['naddress3'].invalid && (angForm.controls['naddress3'].dirty || angForm.controls['naddress3'].touched)\"\n                                                                            class=\"alert alert-danger\">\n                                                                            <div\n                                                                                *ngIf=\"angForm.controls['naddress3'].errors?.pattern\">\n                                                                                Input allowed only A-Z a-z - / . (Space)\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-sm\">\n                                                                        <div\n                                                                            class=\"form-group form-primary form-static-label\">\n                                                                            <ng-select [ngClass]=\"'ng-select'\"\n                                                                                [options]=\"ncity\" [multiple]=\"false\"\n                                                                                placeholder=\"City*\"\n                                                                                formControlName=\"ncity\">\n                                                                            </ng-select>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\"\n                                                                            *ngIf=\"angForm.controls['ncity'].invalid && (angForm.controls['ncity'].dirty || angForm.controls['ncity'].touched)\"\n                                                                            class=\"alert alert-danger\">\n                                                                            <div\n                                                                                *ngIf=\"angForm.controls['ncity'].errors?.required\">\n                                                                                This field is required\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-sm\">\n                                                                        <div class=\"form-group input-group\">\n                                                                            <span class=\"border-lable-flt\">\n                                                                                <input type=\"text\" name=\"nPin\"\n                                                                                    class=\"form-control\" placeholder=\" \"\n                                                                                    id=\"nPin\" pattern=\"^[0-9]+$\"\n                                                                                    title=\"Input allowed only  0-9\"\n                                                                                    formControlName=\"nPin\">\n                                                                                <label for=\"nPin\">Pin</label>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div class=\"form-group form-primary form-static-label\"\n                                                                            *ngIf=\"angForm.controls['nPin'].invalid && (angForm.controls['nPin'].dirty || angForm.controls['nPin'].touched)\"\n                                                                            class=\"alert alert-danger\">\n                                                                            <div\n                                                                                *ngIf=\"angForm.controls['nPin'].errors?.pattern\">\n                                                                                Input allowed only 0-9\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class=\"col-sm-2\">\n                                                                        <button class=\"btn btn-primary ripple light\"\n                                                                            *ngIf=\"showButton\"\n                                                                            [disabled]=\"angForm.invalid\">Add</button>\n                                                                        <button class=\"btn btn-primary ripple light\"\n                                                                            (click)=\"updateData()\"\n                                                                            *ngIf=\"updateShow\">Update</button>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm\">\n                                                            <div class=\"table-responsive\">\n                                                                <table datatable [dtOptions]=\"dtnomineeOptions\"\n                                                                    class=\"table table-striped table-bordered table-hover\"\n                                                                    style=\"width: 100%;\">\n                                                                </table>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </ng-template>\n                                        </ngb-tab>\n                                        <!-- End of Introducer / Nominee Tab forms -->\n                                    </ngb-tabset>\n                                </div>\n                            </div>\n                            <!-- End of Tab forms -->\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"LastTranDate\" class=\"form-control\" placeholder=\" \"\n                                                id=\"LastTranDate\" disabled value=\"{{ message.LastTranDate }}\"\n                                                max=\"9999-12-31\" onfocus=\"(this.type='date')\"\n                                                formControlName=\"LastTranDate\">\n                                            <label for=\"LastTranDate\">Last Trans Date</label>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"CommissionDate\" class=\"form-control\"\n                                                placeholder=\" \" id=\"CommissionDate\" disabled\n                                                value=\"{{ message.CommissionDate }}\" max=\"9999-12-31\"\n                                                onfocus=\"(this.type='date')\" formControlName=\"CommissionDate\">\n                                            <label for=\"CommissionDate\">Commission Date</label>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"FreezeStatus\" class=\"form-control\" placeholder=\" \"\n                                                id=\"FreezeStatus\" disabled value=\"{{ message.FreezeStatus }}\"\n                                                formControlName=\"FreezeStatus\">\n                                            <label for=\"FreezeStatus\">Freeze Status</label>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"Acstatus\" class=\"form-control\" placeholder=\" \"\n                                                id=\"Acstatus\" disabled value=\"{{ message.Acstatus }}\"\n                                                formControlName=\"Acstatus\">\n                                            <label for=\"Acstatus\">A/c status</label>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"LedgerBalance\" class=\"form-control\" placeholder=\" \"\n                                                id=\"LedgerBalance\" disabled value=\"{{ message.LedgerBalance }}\"\n                                                formControlName=\"LedgerBalance\">\n                                            <label for=\"LedgerBalance\">Ledger Balance</label>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PigmyAgentMasterRoutingModule } from './pigmy-agent-master-routing.module';\r\nimport { PigmyAgentMasterComponent } from './pigmy-agent-master.component';\r\nimport { TitleService } from '../../../../shared/elements/title.service';\r\nimport { SchemeCodeService } from '../../../../shared/elements/scheme-code.service';\r\nimport { CustomeridService } from '../../../../shared/elements/customerid.service';\r\nimport { CitycodeService } from '../../../../shared/elements/citycode.service';\r\nimport { SchemeTypeService } from '../../../../shared/elements/scheme-type.service';\r\nimport { BranchService } from '../../../../shared/elements/branch.service';\r\nimport { CastService } from '../../../../shared/elements/cast.service';\r\nimport { SelectModule } from 'ng-select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PigmyAgentMasterRoutingModule,\r\n    DataTablesModule,\r\n    NgbModule,\r\n    SelectModule,\r\n    FormsModule, ReactiveFormsModule\r\n  ],\r\n  declarations: [PigmyAgentMasterComponent],\r\n  providers: [TitleService, SchemeCodeService, CustomeridService, CitycodeService, SchemeTypeService, BranchService, CastService]\r\n})\r\nexport class PigmyAgentMasterModule { }"],"sourceRoot":"webpack:///"}