{"version":3,"sources":["./src/app/shared/elements/acountno.service.ts","./src/app/shared/elements/exucute-on.service.ts","./src/app/shared/elements/freeze-account.service.ts","./src/app/shared/elements/frequency.service.ts","./src/app/shared/elements/reminder-instruction.service.ts","./src/app/shared/elements/revoke-interest.service.ts","./src/app/shared/elements/revoke-special.service.ts","./src/app/shared/elements/revoke-standing.service.ts","./src/app/shared/elements/scheme-code.service.ts","./src/app/shared/elements/user.service.ts","./src/app/theme/master/instruction/freeze-account/freeze-account.component.ts","./src/app/theme/master/instruction/freeze-account/freeze-account.component.html","./src/app/theme/master/instruction/instruction-routing.module.ts","./src/app/theme/master/instruction/instruction.component.ts","./src/app/theme/master/instruction/instruction.component.html","./src/app/theme/master/instruction/instruction.module.ts","./src/app/theme/master/instruction/interest-instruction/interest-instruction.component.ts","./src/app/theme/master/instruction/interest-instruction/interest-instruction.component.html","./src/app/theme/master/instruction/lien-mark-clear/lien-mark-clear.component.ts","./src/app/theme/master/instruction/lien-mark-clear/lien-mark-clear.component.html","./src/app/theme/master/instruction/over-draft/over-draft.component.ts","./src/app/theme/master/instruction/over-draft/over-draft.component.html","./src/app/theme/master/instruction/reminder-instruction/reminder-instruction.component.ts","./src/app/theme/master/instruction/reminder-instruction/reminder-instruction.component.html","./src/app/theme/master/instruction/revoke-interest-instruction/revoke-interest-instruction.component.ts","./src/app/theme/master/instruction/revoke-interest-instruction/revoke-interest-instruction.component.html","./src/app/theme/master/instruction/revoke-special-instruction/revoke-special-instruction.component.ts","./src/app/theme/master/instruction/revoke-special-instruction/revoke-special-instruction.component.html","./src/app/theme/master/instruction/revoke-standing-instructions/revoke-standing-instructions.component.ts","./src/app/theme/master/instruction/revoke-standing-instructions/revoke-standing-instructions.component.html","./src/app/theme/master/instruction/special/special.component.ts","./src/app/theme/master/instruction/special/special.component.html","./src/app/theme/master/instruction/standing-instruction/standing-instruction.component.ts","./src/app/theme/master/instruction/standing-instruction/standing-instruction.component.html"],"names":[],"mappings":"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","file":"instruction-instruction-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class AcountnoService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '12314142' },\r\n        { value: '1', label: '2142434' },\r\n        { value: '2', label: '2232323' },\r\n        { value: '3', label: '454545' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(AcountnoService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(AcountnoService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(AcountnoService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class ExucuteOnService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Every Entry'},\r\n    {value: '1', label: 'Debit Entry'},\r\n    {value: '2', label: 'Credit Entry'}\r\n  ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(ExucuteOnService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(ExucuteOnService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(ExucuteOnService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class freezeAccountService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: 'No Freeze' },\r\n        { value: '1', label: 'Total Amount' },\r\n        { value: '2', label: 'Only Withdrawal' },\r\n        { value: '3', label: 'Partial Amount' }       \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(freezeAccountService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(freezeAccountService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(freezeAccountService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class FrequencyService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Monthly'},\r\n    {value: '1', label: 'Quarterly'},\r\n    {value: '2', label: 'Fixed Quarterly'},\r\n    {value: '3', label: 'Half Yearly'},\r\n    {value: '4', label: 'Days'}\r\n  ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(FrequencyService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(FrequencyService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(FrequencyService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class reminderInstructionService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Monthly'},\r\n    {value: '1', label: 'Quarterly'},\r\n    {value: '2', label: 'Fixed Quarterly'},\r\n    {value: '3', label: 'Half Yearly'},\r\n    {value: '4', label: 'Days'}\r\n   \r\n    ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(reminderInstructionService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(reminderInstructionService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(reminderInstructionService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class revokeInterestService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Monthly'},\r\n    {value: '1', label: 'Quarterly'},\r\n    {value: '2', label: 'Fixed Quarterly'},\r\n    {value: '3', label: 'Half Yearly'},\r\n    {value: '4', label: 'Days'}\r\n   \r\n    ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(revokeInterestService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(revokeInterestService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(revokeInterestService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class revokeSpecialService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Every Entry'},\r\n    {value: '1', label: 'Debit Entry'},\r\n    {value: '2', label: 'Credit Entry'}\r\n   \r\n    ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(revokeSpecialService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(revokeSpecialService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(revokeSpecialService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class revokeStandingService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Monthly'},\r\n    {value: '1', label: 'Quarterly'},\r\n    {value: '2', label: 'Fixed Quarterly'},\r\n    {value: '3', label: 'Half Yearly'},\r\n    {value: '4', label: 'Days'}\r\n   \r\n    ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(revokeStandingService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(revokeStandingService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(revokeStandingService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class SchemeCodeService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '40100', label: '40100' },\r\n        { value: '40200', label: '40200' },\r\n        { value: '40300', label: '40300' },\r\n        { value: '40400', label: '40400' },\r\n        \r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(SchemeCodeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(SchemeCodeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(SchemeCodeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'a'},\r\n    {value: '1', label: 'b'},\r\n    {value: '2', label: 'c'}\r\n  ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(UserService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(UserService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(UserService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { freezeAccountService } from '../../../../shared/elements/freeze-account.service'\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-freeze-account',\n  templateUrl: './freeze-account.component.html',\n  styleUrls: ['./freeze-account.component.scss']\n})\nexport class FreezeAccountComponent implements OnInit {\n\n  angForm: FormGroup;\n\n  dtExportButtonOptions: any = {};\n\n  simpleOption: Array<IOption> = this.freezeAccountService.getCharacters();\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\n  b: Array<IOption> = this.AcountnoService.getCharacters();\n  c: Array<IOption> = this.AcountnoService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n\n  //variables for  add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n\n  //object created to get data when row is clicked\n  message = {\n    Scheme: \"\",\n    AccountNo: \"\",\n    CustomerID: \"\",\n    FreezeStatus: \"\",\n    FreezeAmount: \"\",\n    FreezeDate: \"\",\n    Remark: \"\",\n  };\n\n  constructor(private fb: FormBuilder, public freezeAccountService: freezeAccountService, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/freeze-account.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Scheme',\n          data: 'Scheme'\n        },\n        {\n          title: 'Account No',\n          data: 'AccountNo'\n        },\n        {\n          title: 'Customer ID',\n          data: 'CustomerID'\n        },\n        {\n          title: 'Freeze Status',\n          data: 'FreezeStatus'\n        },\n        {\n          title: 'Freeze Amount',\n          data: 'FreezeAmount'\n        },\n        {\n          title: 'Freeze Date',\n          data: 'FreezeDate'\n        },\n        {\n          title: 'Remark',\n          data: 'Remark'\n        }\n\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n    this.runTimer();\n    this.dataSub = this.freezeAccountService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      Scheme: ['', [Validators.required]],\n      AccountNo: ['', [Validators.required]],\n      CustomerID: ['',],\n      simpleOption: ['', [Validators.required]],\n      FreezeStatus: ['', [Validators.required]],\n      FreezeAmount: ['', [Validators.pattern]],\n      FreezeDate: ['', [Validators.required]],\n      Remark: ['', [Validators.pattern, Validators.required]]\n    });\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  //function for edit button clicked\n  editClickHandler(info: any): void {\n    this.message.Scheme = info.Scheme;\n    this.message.AccountNo = info.AccountNo;\n    this.message.CustomerID = info.CustomerID;\n    this.message.FreezeStatus = info.FreezeStatus;\n    this.message.FreezeAmount = info.FreezeAmount;\n    this.message.FreezeDate = info.FreezeDate;\n    this.message.Remark = info.Remark;\n\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  //function for delete button clicked\n  delClickHandler(info: any): void {\n    this.message.Scheme = info.Scheme;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Scheme.\" + this.message.Scheme + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  //function toggle update to add button\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Mark Freeze Account</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"Scheme*\" required title=\"Compulsory Selection\"\n                                    formControlName=\"Scheme\">\n                                </ng-select>\n                                <label>{{ message.Scheme }}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                    placeholder=\"Account No*\" required title=\"Compulsory Selection\"\n                                    formControlName=\"AccountNo\">\n                                </ng-select>\n                                <label>{{ message.AccountNo }}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AccountNo'].invalid && (angForm.controls['AccountNo'].dirty || angForm.controls['AccountNo'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['AccountNo'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"c\" [multiple]=\"false\"\n                                    placeholder=\"Customer ID\" formControlName=\"CustomerID\">\n                                </ng-select>\n                                <label>{{ message.CustomerID }}</label>\n                            </div>\n                        </div>\n                    </div>\n                   \n                        <div class=\"row\">\n                            <h6>Freeze Details</h6>\n                            <div class=\"col-sm\"> \n                                <div class=\"form-group form-primary form-static-label\">\n                                    <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" [multiple]=\"false\"\n                                        placeholder=\"Freeze Status *\" required title=\"Compulsory Selection\"\n                                        formControlName=\"FreezeStatus\">\n                                    </ng-select>\n                                    <label>{{ message.FreezeStatus }}</label>\n                                </div>\n                                <div class=\"form-group form-primary form-static-label\"\n                                    *ngIf=\"angForm.controls['FreezeStatus'].invalid && (angForm.controls['FreezeStatus'].dirty || angForm.controls['FreezeStatus'].touched)\"\n                                    class='alert alert-danger'>\n                                    <div *ngIf=\"angForm.controls['FreezeStatus'].errors?.required\">\n                                        This field is required\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm\">\n                                <div class=\"form-group input-group\">\n                                    <span class=\"border-lable-flt\">\n                                        <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                            id=\"FreezeAmount\" value=\"{{ message.FreezeAmount }}\" pattern=\"^[0-9]+$\"\n                                            title=\"Input allowed only  0-9\" formControlName=\"FreezeAmount\">\n                                        <label for=\"FreezeAmount\">Freeze Amount</label>\n                                    </span>\n                                </div>\n                                <div class=\"form-group form-primary form-static-label\"\n                                    *ngIf=\"angForm.controls['FreezeAmount'].invalid && (angForm.controls['FreezeAmount'].dirty || angForm.controls['FreezeAmount'].touched)\"\n                                    class=\"alert alert-danger\">\n                                    <div\n                                        *ngIf=\"angForm.controls['FreezeAmount'].errors?.pattern\">\n                                        Input allowed only 0-9\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm\">\n                                <div class=\"form-group input-group\">\n                                    <span class=\"border-lable-flt\">\n                                        <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"FreezeDate\"\n                                            required=\"\" max=\"9999-12-31\" formControlName=\"FreezeDate\"\n                                            value=\"{{ message.FreezeDate}}\" onfocus=\"(this.type='date')\" />\n                                        <label for=\"FreezeDate\">Freeze Date <sub class=\"required\">*</sub></label>\n                                    </span>\n                                </div>\n                                <div class=\"form-group form-primary form-static-label\"\n                                    *ngIf=\"angForm.controls['FreezeDate'].invalid && (angForm.controls['FreezeDate'].dirty || angForm.controls['FreezeDate'].touched)\"\n                                    class=\"alert alert-danger\">\n                                    <div\n                                        *ngIf=\"angForm.controls['FreezeDate'].errors?.pattern || angForm.controls['FreezeDate'].errors?.required\">\n                                        This field is required and Input allowed only 0-9\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                   \n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Remark\"\n                                        required=\"\" value=\"{{ message.Remark }}\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"Remark\">\n                                    <label for=\"Remark\">Remark <sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Remark'].invalid && (angForm.controls['Remark'].dirty || angForm.controls['Remark'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['Remark'].errors?.pattern || angForm.controls['Remark'].errors?.required\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n// import {InstructionComponent} from './instruction.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    // component: InstructionComponent,\r\n    data: {\r\n      title: 'Instruction',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: false\r\n    },\r\n    children: [\r\n      {\r\n        path: 'overDraft',\r\n        loadChildren: () => import('./over-draft/over-draft.module').then(m => m.OverDraftModule)\r\n      },\r\n      {\r\n        path: 'standingInstruction',\r\n        loadChildren: () => import('./standing-instruction/standing-instruction.module').then(m => m.StandingInstructionModule)\r\n      },\r\n      {\r\n        path: 'interestInstruction',\r\n        loadChildren: () => import('./interest-instruction/interest-instruction.module').then(m => m.InterestInstructionModule)\r\n      },\r\n      {\r\n        path: 'special',\r\n        loadChildren: () => import('./special/special.module').then(m => m.SpecialModule)\r\n      },\r\n      {\r\n        path: 'freezeAccount',\r\n        loadChildren: () => import('./freeze-account/freeze-account.module').then(m => m.FreezeAccountModule)\r\n      },\r\n      {\r\n        path: 'reminderInstruction',\r\n        loadChildren: () => import('./reminder-instruction/reminder-instruction.module').then(m => m.ReminderInstructionModule)\r\n      },\r\n      {\r\n        path: 'revokeStandingInstructions',\r\n        loadChildren: () => import('./revoke-standing-instructions/revoke-standing-instructions.module').then(m => m.RevokeStandingInstructionsModule)\r\n      },\r\n      {\r\n        path: 'revokeInterestInstruction',\r\n        loadChildren: () => import('./revoke-interest-instruction/revoke-interest-instruction.module').then(m => m.RevokeInterestInstructionModule)\r\n      },\r\n      {\r\n        path: 'revokeSpecialInstruction',\r\n        loadChildren: () => import('./revoke-special-instruction/revoke-special-instruction.module').then(m => m.RevokeSpecialInstructionModule)\r\n      },\r\n      {\r\n        path: 'lienMarkClear',\r\n        loadChildren: () => import('./lien-mark-clear/lien-mark-clear.module').then(m => m.LienMarkClearModule)\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InstructionRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-instruction',\n  templateUrl: './instruction.component.html',\n  styleUrls: ['./instruction.component.scss']\n})\nexport class InstructionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n\n  }\n\n}\n","<p>instruction works!</p>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { InstructionComponent } from './instruction.component';\r\nimport { InstructionRoutingModule } from './instruction-routing.module'\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport { OverDraftComponent } from './over-draft/over-draft.component';\r\nimport { StandingInstructionComponent } from './standing-instruction/standing-instruction.component';\r\nimport { InterestInstructionComponent } from './interest-instruction/interest-instruction.component';\r\nimport { SpecialComponent } from './special/special.component';\r\nimport { FreezeAccountComponent } from './freeze-account/freeze-account.component';\r\nimport { ReminderInstructionComponent } from './reminder-instruction/reminder-instruction.component';\r\nimport { RevokeStandingInstructionsComponent } from './revoke-standing-instructions/revoke-standing-instructions.component';\r\nimport { RevokeInterestInstructionComponent } from './revoke-interest-instruction/revoke-interest-instruction.component';\r\nimport { RevokeSpecialInstructionComponent } from './revoke-special-instruction/revoke-special-instruction.component';\r\nimport { LienMarkClearComponent } from './lien-mark-clear/lien-mark-clear.component';\r\nimport {SelectOptionService} from '../../../shared/elements/select-option.service'\r\nimport {SelectModule} from 'ng-select';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { FormsModule,ReactiveFormsModule  }   from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    InstructionRoutingModule,\r\n    SharedModule,\r\n    SelectModule,\r\n    DataTablesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule \r\n  ],\r\n  declarations: [InstructionComponent, OverDraftComponent, StandingInstructionComponent, InterestInstructionComponent, SpecialComponent, FreezeAccountComponent, ReminderInstructionComponent,  RevokeInterestInstructionComponent, RevokeSpecialInstructionComponent, LienMarkClearComponent, RevokeStandingInstructionsComponent],\r\n  providers: [SelectOptionService]\r\n})\r\nexport class InstructionModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { FrequencyService } from '../../../../shared/elements/frequency.service';\nimport { Observable } from 'rxjs/Observable';\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-interest-instruction',\n  templateUrl: './interest-instruction.component.html',\n  styleUrls: ['./interest-instruction.component.scss']\n})\n\nexport class InterestInstructionComponent implements OnInit {\n\n  angForm: FormGroup;\n\n  dtExportButtonOptions: any = {};\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\n  b: Array<IOption> = this.AcountnoService.getCharacters();\n  frequencyOption: Array<IOption> = this.FrequencyService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  //variable for checkbox and radio button \n  isIsDiscountedInterestApplicable: boolean = false;\n  isCash: boolean = true;\n\n  private dataSub: Subscription = null;\n\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  cash1True: boolean = true;\n  transfer1True: boolean = false;\n\n  message = {\n    Date: \"\",\n    StartFrom: \" \",\n    NextExecutionOn: \" \",\n    InstructionNo: \" \",\n    Cash: \"\",\n    Transfer: \"\",\n    LastExecutedOn: \" \",\n    StatementType: \" \",\n    Scheme: \" \",\n    AccountNo: \" \",\n    Particulars: \" \",\n    Scheme2: \" \",\n    AccountNo2: \" \",\n    AdviceNarration: \" \",\n    Particulars2: \" \",\n    RevokeDate: \" \",\n    IsDiscountedInterestApplicable: \" \",\n  };\n\n  constructor(private fb: FormBuilder, public FrequencyService: FrequencyService, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/intrest-instruction.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\"id=\"editbtn\">Edit</button>' + ' ' + '<button  id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n\n          }\n        },\n        {\n          title: 'Date',\n          data: 'Date'\n        },\n        {\n          title: 'Start From',\n          data: 'StartFrom'\n        },\n        {\n          title: 'Next Execution On',\n          data: 'NextExecutionOn'\n        },\n        {\n          title: 'Instruction No',\n          data: 'InstructionNo'\n        },\n        {\n          title: 'Cash',\n          data: 'Cash'\n        },\n        {\n          title: 'Transfer',\n          data: 'Transfer'\n        },\n        {\n          title: 'Last Executed On',\n          data: 'LastExecutedOn'\n        }, {\n          title: 'Statement Type',\n          data: 'StatementType'\n        },\n        {\n          title: 'Scheme',\n          data: 'Scheme'\n        }, {\n          title: 'Account No',\n          data: 'AccountNo'\n        }, {\n          title: 'Particulars',\n          data: 'Particulars'\n        }, {\n          title: 'Scheme',\n          data: 'Scheme2'\n        },\n        {\n          title: 'Account No',\n          data: 'AccountNo2'\n        }, {\n          title: 'Advice Narration',\n          data: 'AdviceNarration'\n        },\n        {\n          title: 'Particulars',\n          data: 'Particulars2'\n        },\n        {\n          title: 'Revoke Date',\n          data: 'RevokeDate'\n        },\n        {\n          title: 'Is Discounted Interest Applicable',\n          data: 'IsDiscountedInterestApplicable'\n        },],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n\n      /**\n* @rowCallback function for editClickHandler and delClickHandler to passes table data to there filds\n  @return row \n*/\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n    this.runTimer();\n    this.dataSub = this.FrequencyService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n\n  }\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  OpenLink(val) {\n    // debugger\n    if (val == 1) {\n      this.cash1True = true;\n      this.transfer1True = false;\n    }\n\n    if (val == 2) {\n      this.cash1True = false;\n      this.transfer1True = true;\n    }\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      Date: ['',],\n      StartFrom: ['', [Validators.required]],\n      NextExecutionOn: [''],\n      InstructionNo: [''],\n      TransactionNo: ['',],\n      Particulars: ['', [Validators.pattern, Validators.required]],\n      Particular: ['', [Validators.pattern, Validators.required]],\n      AdviceNarration: ['', [Validators.pattern, Validators.required]],\n      StatementType: ['', [Validators.required]],\n      LastExecutedOn: [''],\n      Scheme: ['', [Validators.required]],\n      RevokeDate: ['', [Validators.required]],\n      AccountNo: ['',]\n    });\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  /**\n* @editClickHandler function for edit button clicked\n*/\n\n  editClickHandler(info: any): void {\n    this.message.Date = info.Date;\n    this.message.StartFrom = info.StartFrom;\n    this.message.NextExecutionOn = info.NextExecutionOn;\n    this.message.InstructionNo = info.InstructionNo;\n    this.message.Cash = info.Cash;\n    this.message.Transfer = info.Transfer;\n    this.message.LastExecutedOn = info.LastExecutedOn;\n    this.message.StatementType = info.StatementType;\n    this.message.Scheme = info.Scheme;\n    this.message.AccountNo = info.AccountNo;\n    this.message.Particulars = info.Particulars;\n    this.message.Scheme2 = info.Scheme2;\n    this.message.AccountNo2 = info.AccountNo2;\n    this.message.AdviceNarration = info.AdviceNarration;\n    this.message.Particulars2 = info.Particulars2;\n    this.message.RevokeDate = info.RevokeDate;\n    this.message.IsDiscountedInterestApplicable = info.IsDiscountedInterestApplicable;\n\n    //code for chekbox\n    if (this.message.IsDiscountedInterestApplicable == \"Yes\") {\n      this.isIsDiscountedInterestApplicable = true;   //return boolean value and display checked checkbox\n    }\n    else {\n      this.isIsDiscountedInterestApplicable = false;   //return boolean value and display unchecked checkbox\n    }\n    //code for radio button\n    if (this.message.Cash == \"Yes\") {\n      this.isCash = true;      //return boolean value and display checked radio button\n    }\n    else {\n      this.isCash = false;   //return boolean value and display unchecked radio button\n    }\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  /**\n  * @updateData function for update data \n  */\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n    // this.form.reset();\n  }\n\n\n  /**\n  * @delClickHandler function for delete button \n    @Swal sweetalert2\n    @Swal.fire open a modal window to display message\n  */\n  delClickHandler(info: any): void {\n    this.message.Date = info.Date;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Date.\" + this.message.Date + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      /* run code if our result  isConfirmed function Swal.fire open a modal window to display message\n      else if result is dismiss then it cancel and open a modal window to display cancel message\n       */\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Interest Instructions </h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"Date\" max=\"9999-12-31\"\n                                        formControlName=\"Date\" value=\"{{ message.Date}}\" onfocus=\"(this.type='date')\" />\n                                    <label for=\"Date\">Date</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\" checked>\n                                        <i class=\"helper\"></i>Month Begin<span class=\"required\"> </span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\">\n                                        <i class=\"helper\"></i>Month End<span class=\"required\"> </span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\">\n                                        <i class=\"helper\"></i> Specific Day of Month<span class=\"required\"> </span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\">\n                                        <i class=\"helper\"></i>After Specific Days<span class=\"required\"> </span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"StartFrom\" required=\"\"\n                                        max=\"9999-12-31\" formControlName=\"StartFrom\" value=\"{{ message.StartFrom}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"StartFrom\">Start From<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['StartFrom'].invalid && (angForm.controls['StartFrom'].dirty || angForm.controls['StartFrom'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['StartFrom'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"NextExecutionOn\"\n                                        max=\"9999-12-31\" formControlName=\"NextExecutionOn\"\n                                        value=\"{{ message.NextExecutionOn}}\" onfocus=\"(this.type='date')\" />\n                                    <label for=\"NextExecutionOn\">Next Execution On</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"TotalAmount\" class=\"form-control\" placeholder=\" \"\n                                        id=\"InstructionNo\" value=\"{{ message.InstructionNo }}\"\n                                        formControlName=\"InstructionNo\">\n                                    <label for=\"InstructionNo\">Instruction No.</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"frequencyOption\" [multiple]=\"false\"\n                                    placeholder=\"Frequency *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"StatementType\">\n                                </ng-select>\n                                <label>{{message.StatementType}}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['StatementType'].invalid && (angForm.controls['StatementType'].dirty || angForm.controls['StatementType'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['StatementType'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <h6>Payment By:</h6>\n                        <div class=\"col-sm\">\n                            <a (click)=\"OpenLink(1)\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">\n                                <div class=\"form-radio\">\n                                    <div class=\"radio radio-inline\">\n                                        <label>\n                                            <input type=\"radio\" name=\"radio1\" ng-model=\"OD\" ng-change=\"change()\"\n                                                [checked]=\"isCash == true\" value=\"cash1\">\n                                            <i class=\"helper\"></i>Cash<span class=\"required\"> </span>\n                                        </label>\n                                    </div>\n                                </div>\n                            </a>\n                        </div>\n                        <div class=\"col-sm\">\n                            <a (click)=\"OpenLink(2)\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">\n                                <div class=\"form-radio\">\n                                    <div class=\"radio radio-inline\">\n                                        <label>\n                                            <input type=\"radio\" name=\"radio1\" ng-model=\"OD\" ng-change=\"change()\"\n                                                [checked]=\"isCash == false\" value=\"transfer1\">\n                                            <i class=\"helper\"></i>Transfer<span class=\"required\"> </span>\n                                        </label>\n                                    </div>\n                                </div>\n                            </a>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"LastExecutedOn\"\n                                        max=\"9999-12-31\" formControlName=\"LastExecutedOn\"\n                                        value=\"{{ message.LastExecutedOn}}\" onfocus=\"(this.type='date')\" />\n                                    <label for=\"LastExecutedOn\">Last Executed On</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"cash1True\">\n                        <h6>Interest Instruction Account Details</h6>\n                        <div class=\"card-block\">\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                            placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\n                                            formControlName=\"Scheme\">\n                                        </ng-select>\n                                        <label>{{ message.Scheme }}</label>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\n                                            This field is required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                            placeholder=\"Account No*\" required title=\"Compulsory Selection\"\n                                            formControlName=\"AccountNo\">\n                                        </ng-select>\n                                        <label>{{ message.AccountNo }}</label>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['AccountNo'].invalid && (angForm.controls['AccountNo'].dirty || angForm.controls['AccountNo'].touched)\"\n                                        class='alert alert-danger'>\n                                        <div *ngIf=\"angForm.controls['AccountNo'].errors?.required\">\n                                            This field is required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                                id=\"Particulars\" required=\"\" value=\"{{ message.Particulars }}\"\n                                                pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\n                                                formControlName=\"Particulars\">\n                                            <label for=\"Particulars\">Particulars<sub class=\"required\">*</sub></label>\n                                        </span>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['Particulars'].invalid && (angForm.controls['Particulars'].dirty || angForm.controls['Particulars'].touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div\n                                            *ngIf=\"angForm.controls['Particulars'].errors?.pattern || angForm.controls['Particulars'].errors?.required\">\n                                            This field is required and Input allowed only A-Za-z\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"transfer1True\">\n                        <h6>Interest Instruction Account Details</h6>\n                        <div class=\"card-block\">\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                            placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\n                                            formControlName=\"Scheme\">\n                                        </ng-select>\n                                        <label>{{ message.Scheme }}</label>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\n                                            This field is required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                            placeholder=\"Account No*\" required title=\"Compulsory Selection\"\n                                            formControlName=\"AccountNo\">\n                                        </ng-select>\n                                        <label>{{ message.AccountNo }}</label>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['AccountNo'].invalid && (angForm.controls['AccountNo'].dirty || angForm.controls['AccountNo'].touched)\"\n                                        class='alert alert-danger'>\n                                        <div *ngIf=\"angForm.controls['AccountNo'].errors?.required\">\n                                            This field is required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                                id=\"Particulars\" required=\"\" value=\"{{ message.Particulars }}\"\n                                                pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\n                                                formControlName=\"Particulars\">\n                                            <label for=\"Particulars\">Particulars<sub class=\"required\">*</sub></label>\n                                        </span>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['Particulars'].invalid && (angForm.controls['Particulars'].dirty || angForm.controls['Particulars'].touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div\n                                            *ngIf=\"angForm.controls['Particulars'].errors?.pattern || angForm.controls['Particulars'].errors?.required\">\n                                            This field is required and Input allowed only A-Za-z\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <h6>Credit Account Details</h6>\n                        <div class=\"card-block\">\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                            placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\n                                            formControlName=\"Scheme\">\n                                        </ng-select>\n                                        <label>{{ message.Scheme2 }}</label>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\n                                            This field is required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                            placeholder=\"Account No*\" required title=\"Compulsory Selection\"\n                                            formControlName=\"AccountNo\">\n                                        </ng-select>\n                                        <label>{{ message.AccountNo2 }}</label>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['AccountNo'].invalid && (angForm.controls['AccountNo'].dirty || angForm.controls['AccountNo'].touched)\"\n                                        class='alert alert-danger'>\n                                        <div *ngIf=\"angForm.controls['AccountNo'].errors?.required\">\n                                            This field is required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                                id=\"AdviceNarration\" required=\"\" value=\"{{ message.AdviceNarration }}\"\n                                                pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\n                                                formControlName=\"AdviceNarration\">\n                                            <label for=\"AdviceNarration\">Advice Narration <sub\n                                                    class=\"required\">*</sub></label>\n                                        </span>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['AdviceNarration'].invalid && (angForm.controls['AdviceNarration'].dirty || angForm.controls['AdviceNarration'].touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div\n                                            *ngIf=\"angForm.controls['AdviceNarration'].errors?.pattern || angForm.controls['AdviceNarration'].errors?.required\">\n                                            This field is required and Input allowed only A-Za-z\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                                id=\"Particulars2\" required=\"\" value=\"{{ message.Particulars2 }}\"\n                                                pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\n                                                formControlName=\"Particular\">\n                                            <label for=\"Particulars2\">Particulars<sub class=\"required\">*</sub></label>\n                                        </span>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['Particular'].invalid && (angForm.controls['Particular'].dirty || angForm.controls['Particular'].touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div\n                                            *ngIf=\"angForm.controls['Particular'].errors?.pattern || angForm.controls['Particular'].errors?.required\">\n                                            This field is required and Input allowed only A-Za-z\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"RevokeDate\"\n                                                required=\"\" max=\"9999-12-31\" formControlName=\"RevokeDate\"\n                                                value=\"{{ message.RevokeDate}}\" onfocus=\"(this.type='date')\" />\n                                            <label for=\"RevokeDate\">Revoke Date <sub class=\"required\">*</sub></label>\n                                        </span>\n                                    </div>\n                                    <div class=\"form-group form-primary form-static-label\"\n                                        *ngIf=\"angForm.controls['RevokeDate'].invalid && (angForm.controls['RevokeDate'].dirty || angForm.controls['RevokeDate'].touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div *ngIf=\"angForm.controls['RevokeDate'].errors?.required\">\n                                            This field is required\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"border-checkbox-section\">\n                                        <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                            <input class=\"border-checkbox\" type=\"checkbox\" name=\"DD_APPLICABLE\"\n                                                id=\"checkbox1\" [checked]=\"isIsDiscountedInterestApplicable == true\">\n                                            <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Discounted Interest\n                                                Applicable</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-lien-mark-clear',\n  templateUrl: './lien-mark-clear.component.html',\n  styleUrls: ['./lien-mark-clear.component.scss']\n})\nexport class LienMarkClearComponent implements OnInit {\n  angForm: FormGroup;\n\n  //Datatable\n  dtExportButtonOptions: any = {};\n\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\n  b: Array<IOption> = this.AcountnoService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n\n  //variables for  add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable for checkbox and radio button \n  isIsLienMarkClear: boolean = false;\n\n  //object created to get data when row is clicked\n  message = {\n    Scheme: \"\",\n    AccountNo: \"\",\n    SecurityCode: \"\",\n    LedgerBalance: \"\",\n    DepositAmount: \"\",\n    TDReceiptNo: \"\",\n    IsLienMarkClear: \"\",\n    LoanAcNo: \"\",\n    LoanOsBalance: \"\",\n    LoanExpiryDate: \"\"\n  };\n\n  constructor(private fb: FormBuilder, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\n\n  ngOnInit(): void {\n\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/lien-mark-clear.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Scheme',\n          data: 'Scheme'\n        },\n        {\n          title: 'Account No',\n          data: 'AccountNo'\n        },\n        {\n          title: 'Security Code',\n          data: 'SecurityCode'\n        },\n        {\n          title: 'Ledger Balance',\n          data: 'LedgerBalance'\n        },\n        {\n          title: 'Deposit Amount',\n          data: 'DepositAmount'\n        },\n        {\n          title: 'TD Receipt No',\n          data: 'TDReceiptNo'\n        },\n        {\n          title: 'IsLienMarkClear',\n          data: 'IsLienMarkClear'\n        },\n        {\n          title: 'Loan Ac No',\n          data: 'LoanAcNo'\n        },\n        {\n          title: 'Loan Os Balance',\n          data: 'LoanOsBalance'\n        },\n        {\n          title: 'Loan Expiry Date',\n          data: 'LoanExpiryDate'\n        }\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n\n\n\n    this.runTimer();\n\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      Scheme: ['', [Validators.required]],\n      AccountNo: ['', [Validators.required]],\n      SecurityCode: ['', [Validators.pattern, Validators.required]],\n      Date: ['', [Validators.required]]\n    });\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  //function for edit button clicked\n  editClickHandler(info: any): void {\n    this.message.Scheme = info.Scheme;\n    this.message.AccountNo = info.AccountNo;\n    this.message.SecurityCode = info.SecurityCode;\n    this.message.LedgerBalance = info.LedgerBalance;\n    this.message.DepositAmount = info.DepositAmount;\n    this.message.TDReceiptNo = info.TDReceiptNo;\n    this.message.IsLienMarkClear = info.IsLienMarkClear;\n    this.message.LoanAcNo = info.LoanAcNo;\n    this.message.LoanOsBalance = info.LoanOsBalance;\n    this.message.LoanExpiryDate = info.LoanExpiryDate;\n\n    //code for chekbox\n    if (this.message.IsLienMarkClear == \"Yes\") {\n      this.isIsLienMarkClear = true;   //return boolean value and display checked checkbox\n    }\n    else {\n      this.isIsLienMarkClear = false;   //return boolean value and display unchecked checkbox\n    }\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  //function for delete button clicked\n  delClickHandler(info: any): void {\n    this.message.Scheme = info.Scheme;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete scheme.\" + this.message.Scheme + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  //function toggle update to add button\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Lien Mark or Clear</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"Scheme*\" required title=\"Compulsory Selection\"\n                                    formControlName=\"Scheme\">\n                                </ng-select>\n                                <label>{{ message.Scheme }}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                    placeholder=\"Account No*\" required formControlName=\"AccountNo\">\n                                </ng-select>\n                                <label>{{ message.AccountNo }}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AccountNo'].invalid && (angForm.controls['AccountNo'].dirty || angForm.controls['AccountNo'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['AccountNo'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"SecurityCode\"\n                                        required=\"\" value=\"{{ message.SecurityCode }}\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"SecurityCode\">\n                                    <label for=\"SecurityCode\">Security Code <sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['SecurityCode'].invalid && (angForm.controls['SecurityCode'].dirty || angForm.controls['SecurityCode'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['SecurityCode'].errors?.pattern || angForm.controls['SecurityCode'].errors?.required\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"LedgerBalance\"\n                                        value=\"{{ message.LedgerBalance }}\">\n                                    <label for=\"LedgerBalance\">Ledger Balance</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"DepositAmount\"\n                                        value=\"{{ message.DepositAmount }}\">\n                                    <label for=\"DepositAmount\">Deposit Amount</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"TDReceiptNo\"\n                                        value=\"{{ message.TDReceiptNo }}\">\n                                    <label for=\"TDReceiptNo\">TD Receipt No.</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"border-checkbox-section\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\"\n                                        [checked]=\"isIsLienMarkClear == true\" required>\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Lien Mark Clear ?<span\n                                            class=\"required\"> *</span></label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <h6>Term Loan Details</h6>\n                    <div class=\"card-block\">\n                        <div class=\"row\">\n                            <div class=\"col-sm\">\n                                <div class=\"form-group input-group\">\n                                    <span class=\"border-lable-flt\">\n                                        <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"LoanAcNo\"\n                                            value=\"{{ message.LoanAcNo }}\">\n                                        <label for=\"LoanAcNo\">Loan A/c No.</label>\n                                    </span>\n                                </div>\n                            </div>\n                            <div class=\"col-sm\">\n                                <div class=\"form-group input-group\">\n                                    <span class=\"border-lable-flt\">\n                                        <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                            id=\"LoanOsBalance\" value=\"{{ message.LoanOsBalance }}\">\n                                        <label for=\"LoanOsBalance\">Loan O/s Balance</label>\n                                    </span>\n                                </div>\n                            </div>\n                            <div class=\"col-sm\">\n                                <div class=\"form-group input-group\">\n                                    <span class=\"border-lable-flt\">\n                                        <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\n                                            formControlName=\"Date\" value=\"{{ message.LoanExpiryDate}}\"\n                                            onfocus=\"(this.type='date')\" id=\"date\" />\n                                        <label for=\"date\">Loan Expiry Date </label>\n                                    </span>\n                                </div>\n                            </div>\n                            <div class=\"col-sm\">\n                                <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\n                                    [disabled]=\"angForm.invalid\">Add</button>\n                                <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                    *ngIf=\"updateShow\">Update</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SchemeCodeService } from '../../../../shared/elements/scheme-code.service';\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-over-draft',\n  templateUrl: './over-draft.component.html',\n  styleUrls: ['./over-draft.component.scss']\n})\nexport class OverDraftComponent implements OnInit {\n\n  angForm: FormGroup;\n  dtExportButtonOptions: any = {};\n  a: Array<IOption> = this.SchemeCodeService.getCharacters();\n  b: Array<IOption> = this.AcountnoService.getCharacters();\n\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n\n  PeriodicallyOverDraftTrue = true;\n  TemporaryOverDraftTrue = false;\n\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  message = {\n    SchemeCode: \" \",\n    AccountNo: \" \",\n  };\n\n\n  constructor(private fb: FormBuilder, public SchemeCodeService: SchemeCodeService, public AcountnoService: AcountnoService) { this.createForm(); }\n\n  ngOnInit(): void {\n\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/over-draft.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\"id=\"editbtn\">Edit</button>' + ' ' + '<button  id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Scheme Code',\n          data: 'SchemeCode'\n        }, {\n          title: 'Account No',\n          data: 'AccountNo'\n        }],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n\n      /**\n* @rowCallback function for editClickHandler and delClickHandler to passes table data to there filds\n  @return row \n*/\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n\n    this.dataSub = this.SchemeCodeService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      SchemeCode: ['', [Validators.required]],\n      AccountNo: ['', [Validators.required]],\n      Over: ['', [Validators.pattern, Validators.required]],\n      Over1: ['', [Validators.pattern, Validators.required]],\n      Over2: ['', [Validators.pattern, Validators.required]],\n      Date: ['', [Validators.required]]\n    });\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  //  editClickHandler function for edit button clicked\n  editClickHandler(info: any): void {\n    this.message.SchemeCode = info.SchemeCode;\n    this.message.AccountNo = info.AccountNo;\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  // updateData function for update data \n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n    // this.form.reset();\n  }\n\n  /**\n  * @delClickHandler function for delete button \n    @Swal sweetalert2\n    @Swal.fire open a modal window to display message\n  */\n  delClickHandler(info: any): void {\n    this.message.SchemeCode = info.SchemeCode;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Scheme Code.\" + this.message.SchemeCode + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      /* run code if our result  isConfirmed function Swal.fire open a modal window to display message\n      else if result is dismiss then it cancel and open a modal window to display cancel message\n       */\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  OpenLink(val) {\n    // debugger\n    if (val == 1) {\n      this.PeriodicallyOverDraftTrue = true;\n      this.TemporaryOverDraftTrue = false;\n    }\n    if (val == 2) {\n      this.PeriodicallyOverDraftTrue = false;\n      this.TemporaryOverDraftTrue = true;\n    }\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Over Draft</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <div class=\"card-block\">\n                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"Scheme Code *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"SchemeCode\">\n                                </ng-select>\n                                <label>{{ message.SchemeCode}}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['SchemeCode'].invalid && (angForm.controls['SchemeCode'].dirty || angForm.controls['SchemeCode'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['SchemeCode'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                    placeholder=\"Account No *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"AccountNo\">\n                                </ng-select>\n                                <label>{{ message.AccountNo }}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AccountNo'].invalid && (angForm.controls['AccountNo'].dirty || angForm.controls['AccountNo'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['AccountNo'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-block\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-3\">\n                                <ul class=\"basic-list\">\n                                    <li>\n                                        <h6>\n                                            <a (click)=\"OpenLink(1)\" routerLinkActive=\"active\"\n                                                class=\"text-right f-w-600\" id=\"pointer\">\n                                                <div class=\"form-radio\">\n                                                    <div class=\"radio radio-inline\">\n                                                        <label>\n                                                            <input type=\"radio\" name=\"radio\" ng-model=\"OD\"\n                                                                value=\"PeriodicallyOverDraft\" ng-change=\"change()\"\n                                                                checked>\n                                                            <i class=\"helper\"></i>Periodically Over Draft<span\n                                                                class=\"required\"> </span>\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </a>\n                                        </h6>\n                                    </li>\n                                    <li>\n                                        <h6>\n                                            <a (click)=\"OpenLink(2)\" routerLinkActive=\"active\"\n                                                class=\"text-right f-w-600\" id=\"pointer\">\n                                                <div class=\"form-radio\">\n                                                    <div class=\"radio radio-inline\">\n                                                        <label>\n                                                            <input type=\"radio\" name=\"radio\" ng-model=\"OD\"\n                                                                value=\"TemporaryOverDraft\" ng-change=\"change()\">\n                                                            <i class=\"helper\"></i>Temporary Over Draft<span\n                                                                class=\"required\"> </span>\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </a>\n                                        </h6>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div class=\"col-sm-9\">\n                                <div class=\"card-block\">\n                                    <div *ngIf=\"PeriodicallyOverDraftTrue\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"To\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Over\" required=\"\" pattern=\"^[0-9]+$\"\n                                                            title=\"Input allowed only  0-9\" formControlName=\"Over\">\n                                                        <label for=\"Over\">Over DRaft Amount<sub\n                                                                class=\"required\">*</sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\"\n                                                    *ngIf=\"angForm.controls['Over'].invalid && (angForm.controls['Over'].dirty || angForm.controls['Over'].touched)\"\n                                                    class='alert alert-danger'>\n                                                    <div\n                                                        *ngIf=\"angForm.controls['Over'].errors?.pattern || angForm.controls['Over'].errors?.required\">\n                                                        This field is required and Input allowed only 0-9\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" name=\"To\" class=\"form-control\"\n                                                            placeholder=\" \" id=\"Over1\" required=\"\" pattern=\"^[0-9]+$\"\n                                                            title=\"Input allowed only  0-9\" formControlName=\"Over1\">\n                                                        <label for=\"Over1\">OD period in days<sub\n                                                                class=\"required\">*</sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\"\n                                                    *ngIf=\"angForm.controls['Over1'].invalid && (angForm.controls['Over1'].dirty || angForm.controls['Over1'].touched)\"\n                                                    class=\"alert alert-danger\">\n                                                    <div\n                                                        *ngIf=\"angForm.controls['Over1'].errors?.pattern || angForm.controls['Over1'].errors?.required\">\n                                                        This field is required and Input allowed only 0-9\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-sm\">\n                                                <div class=\"form-group input-group\">\n                                                    <span class=\"border-lable-flt\">\n                                                        <input type=\"text\" class=\"form-control\" placeholder=\" \"\n                                                            id=\"Date\" required=\"\" max=\"9999-12-31\"\n                                                            formControlName=\"Date\" value=\"{{ message.TransactionDate}}\"\n                                                            onfocus=\"(this.type='date')\" />\n                                                        <label for=\"Date\">OD Till Date <sub\n                                                                class=\"required\">*</sub></label>\n                                                    </span>\n                                                </div>\n                                                <div class=\"form-group form-primary form-static-label\"\n                                                    *ngIf=\"angForm.controls['Date'].invalid && (angForm.controls['Date'].dirty || angForm.controls['Date'].touched)\"\n                                                    class=\"alert alert-danger\">\n                                                    <div *ngIf=\"angForm.controls['Date'].errors?.required\">\n                                                        This field is required\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"TemporaryOverDraftTrue\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-5\">\n                                            <div class=\"form-group input-group\">\n                                                <span class=\"border-lable-flt\">\n                                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                                        id=\"To\" required=\"\" pattern=\"^[0-9]+$\"\n                                                        title=\"Input allowed only  0-9\" formControlName=\"Over2\">\n                                                    <label for=\"To\">Over DRaft Amount <sub\n                                                            class=\"required\">*</sub></label>\n                                                </span>\n                                            </div>\n                                            <div class=\"form-group form-primary form-static-label\"\n                                                *ngIf=\"angForm.controls['Over2'].invalid && (angForm.controls['Over2'].dirty || angForm.controls['Over2'].touched)\"\n                                                class=\"alert alert-danger\">\n                                                <div\n                                                    *ngIf=\"angForm.controls['Over2'].errors?.pattern || angForm.controls['Over2'].errors?.required\">\n                                                    This field is required and Input allowed only 0-9\n                                                </div>\n                                            </div>\n                                            <!-- <div *ngIf=\"angForm.get('Over2').hasError('required') && myform.submitted\"\n                                                    class='alert alert-danger'>This field is required</div>  -->\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">update</button>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\">Close</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { reminderInstructionService } from '../../../../shared/elements/reminder-instruction.service';\nimport { UserService } from '../../../../shared/elements/user.service';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-reminder-instruction',\n  templateUrl: './reminder-instruction.component.html',\n  styleUrls: ['./reminder-instruction.component.scss']\n})\nexport class ReminderInstructionComponent implements OnInit {\n\n  angForm: FormGroup;\n\n  dtExportButtonOptions: any = {};\n\n  //title select variables\n  user: Array<IOption> = this.UserService.getCharacters();\n  simpleOption: Array<IOption> = this.reminderInstructionService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n\n  //variables for  add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //object created to get data when row is clicked\n  message = {\n    UserID: \"\",\n    Date: \"\",\n    EntryTime: \"\",\n    SrNo: \"\",\n    FromDate: \"\",\n    UpToDate: \"\",\n    Frequency: \"\",\n    Details: \"\",\n    NextExeuDate: \"\"\n  };\n\n  constructor(private fb: FormBuilder, public reminderInstructionService: reminderInstructionService, public UserService: UserService) { this.createForm(); }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/reminder-instruction.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'User ID',\n          data: 'UserID'\n        },\n        {\n          title: 'Date',\n          data: 'Date'\n        },\n        {\n          title: 'Entry Time',\n          data: 'EntryTime'\n        },\n        {\n          title: 'Sr No',\n          data: 'SrNo'\n        },\n        {\n          title: 'From Date',\n          data: 'FromDate'\n        },\n        {\n          title: 'Up To Date',\n          data: 'UpToDate'\n        },\n        {\n\n          title: 'Frequency',\n          data: 'Frequency'\n        },\n        {\n          title: 'Details',\n          data: 'Details'\n\n        },\n        {\n          title: 'Next ExeuDate',\n          data: 'NextExeuDate'\n        }\n\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n    this.runTimer();\n    this.dataSub = this.reminderInstructionService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n\n    this.runTimer();\n    this.dataSub = this.UserService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      UserID: ['', [Validators.required]],\n      Details: ['', [Validators.pattern, Validators.required]],\n      NextExeuDate: ['', [Validators.required]],\n    });\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  //function for edit button clicked\n  editClickHandler(info: any): void {\n    this.message.UserID = info.UserID;\n    this.message.Date = info.Date;\n    this.message.EntryTime = info.EntryTime;\n    this.message.SrNo = info.SrNo;\n    this.message.FromDate = info.FromDate;\n    this.message.Frequency = info.Frequency;\n    this.message.UpToDate = info.UpToDate;\n    this.message.Frequency = info.Frequency;\n    this.message.Details = info.Details;\n    this.message.NextExeuDate = info.NextExeuDate;\n\n    //return boolean value and toggle add to update button\n\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  //function for delete button clicked\n  delClickHandler(info: any): void {\n    this.message.UserID = info.UserID;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete User ID.\" + this.message.UserID + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  //function toggle update to add button\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Get Remind Instructions Details</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"user\" [multiple]=\"false\"\n                                    placeholder=\"User ID*\" formControlName=\"UserID\">\n                                </ng-select>\n                                <label>{{message.UserID}}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['UserID'].invalid && (angForm.controls['UserID'].dirty || angForm.controls['UserID'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['UserID'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"entryDate\" \n                                        max=\"9999-12-31\" value=\"{{ message.Date}}\" onfocus=\"(this.type='date')\" />\n                                    <label for=\"entryDate\">Entry Date</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"EntryTime\" \n                                        max=\"9999-12-31\"value=\"{{ message.EntryTime }}\">\n                                    <label for=\"EntryTime\">Entry Time</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                    <!-- <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"\" required=\"\"\n                                        max=\"9999-12-31\"value=\"{{ message.SrNo }}\">\n                                    <label for=\"\">Sr.No.</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"\" required=\"\"\n                                        max=\"9999-12-31\" formControlName=\"FromDate\" value=\"{{ message.FromDate}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"\">From Date *</label>\n                                </span>\n                            </div>\n                            <div *ngIf=\"angForm.get('FromDate').hasError('required') && myform.submitted\"\n                                class='alert alert-danger'>This field is required</div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"\" required=\"\"\n                                        max=\"9999-12-31\" formControlName=\"FromDate\" value=\"{{ message.UpToDate}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"\">Up To Date *</label>\n                                </span>\n                            </div>\n                            <div *ngIf=\"angForm.get('FromDate').hasError('required') && myform.submitted\"\n                                class='alert alert-danger'>This field is required</div>\n                        </div>\n                    </div> -->\n                    <!-- <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" [multiple]=\"false\"\n                                    placeholder=\"Frequency\">\n                                </ng-select>\n                                <label>{{message.Frequency}}</label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"\" required=\"\"\n                                        max=\"9999-12-31\"value=\"{{ message.Details }}\"\n                                        pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                        formControlName=\"Details\">\n                                    <label for=\"\">Details *</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Details'].invalid && (angForm.controls['Details'].dirty || angForm.controls['Details'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['Details'].errors?.pattern || angForm.controls['Details'].errors?.required\">\n                                    Input allowed only A-Z a-z - / . (Space)\n                                </div>\n\n                            </div>\n                            <div *ngIf=\"angForm.get('Details').hasError('required') && myform.submitted\"\n                                class='alert alert-danger'>This field is required</div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"\" required=\"\"\n                                        max=\"9999-12-31\" formControlName=\"NextExeuDate\"\n                                        value=\"{{ message.NextExeuDate}}\" onfocus=\"(this.type='date')\" />\n                                    <label for=\"\">Next Exeu.Date *</label>\n                                </span>\n                            </div>\n                            <div *ngIf=\"angForm.get('NextExeuDate').hasError('required') && myform.submitted\"\n                                class='alert alert-danger'>This field is required</div>\n                        </div>\n                    </div> -->\n                    <!-- <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div> -->\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { revokeInterestService } from '../../../../shared/elements/revoke-interest.service'\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-revoke-interest-instruction',\n  templateUrl: './revoke-interest-instruction.component.html',\n  styleUrls: ['./revoke-interest-instruction.component.scss']\n})\nexport class RevokeInterestInstructionComponent implements OnInit {\n\n  angForm: FormGroup;\n\n  dtExportButtonOptions: any = {};\n\n  //title select variables\n  simpleOption: Array<IOption> = this.revokeInterestService.getCharacters();\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\n  b: Array<IOption> = this.AcountnoService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n\n  //variables for  add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable for checkbox and radio button \n  isIsDiscountInterestApplicable: boolean = false;\n  isCash: boolean = true;\n  cash1True: boolean = true;\n  transfer1True: boolean = false;\n\n  //object created to get data when row is clicked\n  message = {\n    Date: \"\",\n    StartFrom: \"\",\n    InstructionNo: \"\",\n    NextExecutionOn: \"\",\n    Frequency: \"\",\n    LastExecutionOn: \"\",\n    Scheme: \"\",\n    AccountNo: \"\",\n    Particulars: \"\",\n    Scheme1: \"\",\n    AccountNo1: \"\",\n    AdviceNarration: \"\",\n    Particulars1: \"\",\n    RevokeDate: \"\",\n    IsDiscountInterestApplicable: \"\",\n    Cash: \"\",\n    Transfer: \"\",\n  };\n\n  constructor(private fb: FormBuilder, public revokeInterestService: revokeInterestService, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/revoke-interest.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Date',\n          data: 'Date'\n        },\n        {\n          title: 'Start From',\n          data: 'StartFrom'\n        },\n        {\n          title: 'Instruction No',\n          data: 'InstructionNo'\n        },\n        {\n          title: 'Next Execution On',\n          data: 'NextExecutionOn'\n        },\n        {\n          title: 'Frequency',\n          data: 'Frequency'\n        },\n        {\n\n          title: 'Cash',\n          data: 'Cash'\n        },\n        {\n          title: 'Transfer',\n          data: 'Transfer'\n\n        },\n        {\n          title: 'Last ExecutionOn',\n          data: 'LastExecutionOn'\n        },\n        {\n          title: 'Scheme',\n          data: 'Scheme'\n        },\n        {\n          title: 'Account No',\n          data: 'AccountNo'\n        },\n        {\n          title: 'Particulars',\n          data: 'Particulars'\n        },\n        {\n          title: 'Scheme1',\n          data: 'Scheme1'\n        },\n        {\n          title: 'Account No1',\n          data: 'AccountNo1'\n        },\n        {\n          title: 'Advice Narration',\n          data: 'AdviceNarration'\n        },\n        {\n          title: 'Particulars1',\n          data: 'Particulars1'\n        },\n        {\n          title: 'Revoke Date',\n          data: 'RevokeDate'\n        },\n        {\n          title: 'Is Discount Interest Applicable',\n          data: 'IsDiscountInterestApplicable'\n        }\n\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n    this.runTimer();\n    this.dataSub = this.revokeInterestService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      Date: ['',],\n      StartFrom: ['',],\n      NextExecutionOn: ['',],\n      LastExecutionOn: ['',],\n      StatementType: ['',],\n      Scheme: ['',],\n      RevokeDate: ['', [Validators.required]]\n    });\n  }\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n  //function for edit button clicked\n  editClickHandler(info: any): void {\n    this.message.Date = info.Date;\n    this.message.StartFrom = info.StartFrom;\n    this.message.InstructionNo = info.InstructionNo;\n    this.message.NextExecutionOn = info.NextExecutionOn;\n    this.message.Frequency = info.Frequency;\n    this.message.LastExecutionOn = info.LastExecutionOn;\n    this.message.Scheme = info.Scheme;\n    this.message.AccountNo = info.AccountNo;\n    this.message.Particulars = info.Particulars;\n    this.message.Scheme1 = info.Scheme1;\n    this.message.AccountNo1 = info.AccountNo1;\n    this.message.AdviceNarration = info.AdviceNarration;\n    this.message.Particulars1 = info.Particulars1;\n    this.message.RevokeDate = info.RevokeDate;\n    this.message.IsDiscountInterestApplicable = info.IsDiscountInterestApplicable;\n    this.message.Cash = info.Cash;\n    this.message.Transfer = info.Transfer;\n\n    //code for chekbox\n    if (this.message.IsDiscountInterestApplicable == \"Yes\") {\n      this.isIsDiscountInterestApplicable = true;   //return boolean value and display checked checkbox\n    }\n    else {\n      this.isIsDiscountInterestApplicable = false;   //return boolean value and display unchecked checkbox\n    }\n\n    //code for radio button\n    if (this.message.Cash == \"Yes\") {\n      this.isCash = true;      //return boolean value and display checked radio button\n    }\n    else {\n      this.isCash = false;   //return boolean value and display unchecked radio button\n    }\n\n    //return boolean value and toggle add to update button\n\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  //function for delete button clicked\n  delClickHandler(info: any): void {\n    this.message.Date = info.Date;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Date.\" + this.message.Date + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  //function toggle update to add button\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n  }\n\n  OpenLink(val) {\n    // debugger\n    if (val == 1) {\n      this.cash1True = true;\n      this.transfer1True = false;\n    }\n    if (val == 2) {\n      this.cash1True = false;\n      this.transfer1True = true;\n    }\n  }\n}","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Revoke Interest Instruction</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"Date\" max=\"9999-12-31\"\n                                        formControlName=\"Date\" value=\"{{ message.Date}}\" onfocus=\"(this.type='date')\" />\n                                    <label for=\"Date\">Date</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\" checked>\n                                        <i class=\"helper\"></i>Month Begin\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\">\n                                        <i class=\"helper\"></i>Month End\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\">\n                                        <i class=\"helper\"></i>Specific Day of Month\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\">\n                                        <i class=\"helper\"></i>After Specific Days\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"StartFrom\"\n                                        max=\"9999-12-31\" formControlName=\"StartFrom\" value=\"{{ message.StartFrom}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"StartFrom\">Start From</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"TotalAmount\" class=\"form-control\" placeholder=\" \"\n                                        id=\"InstructionNo\" value=\"{{ message.InstructionNo }}\">\n                                    <label for=\"InstructionNo\">Instruction No.</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"NextExecutionOn\"\n                                        max=\"9999-12-31\" formControlName=\"NextExecutionOn\"\n                                        value=\"{{ message.NextExecutionOn}}\" onfocus=\"(this.type='date')\" />\n                                    <label for=\"NextExecutionOn\">Next Execution On</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- DROPDOWN HERE -->\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" [multiple]=\"false\"\n                                    placeholder=\"Frequency\">\n                                </ng-select>\n                                <label>{{message.Frequency}}</label>\n                            </div>\n                        </div>\n                        <h6>Payment By</h6>\n                        <div class=\"col-sm\">\n                            <a (click)=\"OpenLink(1)\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">\n                                <div class=\"form-radio\">\n                                    <div class=\"radio radio-inline\">\n                                        <label>\n                                            <input type=\"radio\" name=\"radio1\" ng-model=\"OD\" ng-change=\"change()\"\n                                                [checked]=\"isCash == true\" value=\"cash1\">\n                                            <i class=\"helper\"></i>Cash\n                                        </label>\n                                    </div>\n                                </div>\n                            </a>\n                        </div>\n                        <div class=\"col-sm\">\n                            <a (click)=\"OpenLink(2)\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">\n                                <div class=\"form-radio\">\n                                    <div class=\"radio radio-inline\">\n                                        <label>\n                                            <input type=\"radio\" name=\"radio1\" ng-model=\"OD\" ng-change=\"change()\"\n                                                [checked]=\"isCash == false\" value=\"transfer1\">\n                                            <i class=\"helper\"></i>Transfer\n                                        </label>\n                                    </div>\n                                </div>\n                            </a>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"LastExecutionOn\"\n                                        max=\"9999-12-31\" formControlName=\"LastExecutionOn\"\n                                        value=\"{{ message.LastExecutionOn}}\" onfocus=\"(this.type='date')\" />\n                                    <label for=\"LastExecutionOn\">Last Executed On</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"cash1True\">\n                        <h6>Interest Instruction Account Details</h6>\n                        <div class=\"card-block\">\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                            placeholder=\"Scheme\" required title=\"Compulsory Selection\"\n                                            formControlName=\"Scheme\">\n                                        </ng-select>\n                                        <label>{{ message.Scheme }}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                            placeholder=\"Account No\" required>\n                                        </ng-select>\n                                        <label>{{ message.AccountNo }}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                                id=\"Particulars\" value=\"{{ message.Particulars }}\">\n                                            <label for=\"Particulars\">Particulars</label>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"transfer1True\">\n                        <h6>Interest Instruction Account Details</h6>\n                        <div class=\"card-block\">\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                            placeholder=\"Scheme\" required title=\"Compulsory Selection\"\n                                            formControlName=\"Scheme\">\n                                        </ng-select>\n                                        <label>{{ message.Scheme }}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                            placeholder=\"Account No\" required>\n                                        </ng-select>\n                                        <label>{{ message.AccountNo }}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                                id=\"Particulars\" value=\"{{ message.Particulars }}\">\n                                            <label for=\"Particulars\">Particulars</label>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <h6>Credit Account Details</h6>\n                        <div class=\"card-block\">\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                            placeholder=\"Scheme\" required title=\"Compulsory Selection\"\n                                            formControlName=\"Scheme\">\n                                        </ng-select>\n                                        <label>{{ message.Scheme1 }}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group form-primary form-static-label\">\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                            placeholder=\"Account No\" required>\n                                        </ng-select>\n                                        <label>{{ message.AccountNo1 }}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                                id=\"AdviceNarration\" value=\"{{ message.AdviceNarration }}\">\n                                            <label for=\"AdviceNarration\">Advice Narration</label>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <div class=\"form-group input-group\">\n                                        <span class=\"border-lable-flt\">\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                                id=\"Particulars1\" value=\"{{ message.Particulars1 }}\">\n                                            <label for=\"Particulars1\">Particulars</label>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"RevokeDate\" required=\"\"\n                                        max=\"9999-12-31\" formControlName=\"RevokeDate\" value=\"{{ message.RevokeDate}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"RevokeDate\">Revoke Date <sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['RevokeDate'].invalid && (angForm.controls['RevokeDate'].dirty || angForm.controls['RevokeDate'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['RevokeDate'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"border-checkbox-section\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\"\n                                        [checked]=\"isIsDiscountInterestApplicable == true\">\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Discount Interest\n                                        Applicable?<span class=\"required\"> </span></label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Update</button>\n                            <!-- <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button> -->\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { revokeSpecialService } from '../../../../shared/elements/revoke-special.service'\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-revoke-special-instruction',\n  templateUrl: './revoke-special-instruction.component.html',\n  styleUrls: ['./revoke-special-instruction.component.scss']\n})\nexport class RevokeSpecialInstructionComponent implements OnInit {\n\n  angForm: FormGroup;\n\n  dtExportButtonOptions: any = {};\n\n  //title select variables\n  simpleOption: Array<IOption> = this.revokeSpecialService.getCharacters();\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\n  b: Array<IOption> = this.AcountnoService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n\n  //variables for  add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable for checkbox and radio button \n  isIsRestrictTransactionEntry: boolean = false;\n\n  //object created to get data when row is clicked\n  message = {\n    InstructionNo: \"\",\n    Date: \"\",\n    Scheme: \"\",\n    AccountNo: \"\",\n    StartFrom: \"\",\n    UptoDate: \"\",\n    ExecuteOn: \"\",\n    IsRestrictTransactionEntry: \"\",\n    Details: \"\",\n    RevokeDate: \"\"\n  };\n\n  constructor(private fb: FormBuilder, public revokeSpecialService: revokeSpecialService, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/revoke-special.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Instruction No',\n          data: 'InstructionNo'\n        },\n        {\n          title: 'Date',\n          data: 'Date'\n        },\n        {\n          title: 'Scheme',\n          data: 'Scheme'\n        },\n        {\n          title: 'Account No',\n          data: 'AccountNo'\n        },\n        {\n          title: 'Start From',\n          data: 'StartFrom'\n        },\n        {\n          title: 'Upto Date',\n          data: 'UptoDate'\n        },\n        {\n          title: 'Execute On',\n          data: 'ExecuteOn'\n        },\n        {\n          title: 'Is Restrict Transaction Entry',\n          data: 'IsRestrictTransactionEntry'\n        },\n        {\n          title: 'Details',\n          data: 'Details'\n        },\n        {\n          title: 'Revoke Date',\n          data: 'RevokeDate'\n        }\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n    this.runTimer();\n    this.dataSub = this.revokeSpecialService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      Date: ['',],\n      StartFrom: ['',],\n      UptoDate: ['',],\n      Scheme: ['',],\n      RevokeDate: ['', [Validators.required]],\n    });\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  //function toggle update to add button\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n  }\n\n  //function for edit button clicked\n  editClickHandler(info: any): void {\n    this.message.InstructionNo = info.InstructionNo;\n    this.message.Date = info.Date;\n    this.message.Scheme = info.Scheme;\n    this.message.AccountNo = info.AccountNo;\n    this.message.StartFrom = info.StartFrom;\n    this.message.UptoDate = info.UptoDate;\n    this.message.ExecuteOn = info.ExecuteOn;\n    this.message.IsRestrictTransactionEntry = info.IsRestrictTransactionEntry;\n    this.message.Details = info.Details;\n    this.message.RevokeDate = info.RevokeDate;\n\n    //code for chekbox\n    if (this.message.IsRestrictTransactionEntry == \"Yes\") {\n      this.isIsRestrictTransactionEntry = true;   //return boolean value and display checked checkbox\n    }\n    else {\n      this.isIsRestrictTransactionEntry = false;   //return boolean value and display unchecked checkbox\n    }\n\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  //function for delete button clicked\n  delClickHandler(info: any): void {\n    this.message.InstructionNo = info.InstructionNo;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Instruction No.\" + this.message.InstructionNo + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n}\n\n\n\n\n\n\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Revoke Special Instruction</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"Instruction No.\" required>\n                                </ng-select>\n                                <label>{{ message.InstructionNo }}</label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"Date\" max=\"9999-12-31\"\n                                        formControlName=\"Date\" value=\"{{ message.Date}}\" onfocus=\"(this.type='date')\" />\n                                    <label for=\"Date\">Date</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\" placeholder=\"Scheme\"\n                                    required title=\"Compulsory Selection\" formControlName=\"Scheme\">\n                                </ng-select>\n                                <label>{{ message.Scheme }}</label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                    placeholder=\"Account No\" required>\n                                </ng-select>\n                                <label>{{ message.AccountNo }}</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"StartFrom\"\n                                        max=\"9999-12-31\" formControlName=\"StartFrom\" value=\"{{ message.StartFrom}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"StartFrom\">Start From</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"UptoDate\"\n                                        max=\"9999-12-31\" formControlName=\"UptoDate\" value=\"{{ message.UptoDate}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"UptoDate\">Upto Date</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <!-- DROPDOWN HERE -->\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" [multiple]=\"false\"\n                                    placeholder=\"Execute On\">\n                                </ng-select>\n                                <label>{{message.ExecuteOn}}</label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"border-checkbox-section\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\"\n                                        name=\"IS_RESTRICT\" [checked]=\"isIsRestrictTransactionEntry == true\">\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Restrict Transaction\n                                        Entry?<span class=\"required\"> </span></label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Details\"\n                                        value=\"{{ message.Details }}\">\n                                    <label for=\"Details\">Details</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"RevokeDate\" required=\"\"\n                                        max=\"9999-12-31\" formControlName=\"RevokeDate\" value=\"{{ message.RevokeDate}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"RevokeDate\">Revoke Date<sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['RevokeDate'].invalid && (angForm.controls['RevokeDate'].dirty || angForm.controls['RevokeDate'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['RevokeDate'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Update</button>\n                            <!-- <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button> -->\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { revokeStandingService } from '../../../../shared/elements/revoke-standing.service'\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-revoke-standing-instructions',\n  templateUrl: './revoke-standing-instructions.component.html',\n  styleUrls: ['./revoke-standing-instructions.component.scss']\n})\nexport class RevokeStandingInstructionsComponent implements OnInit {\n\n  angForm: FormGroup;\n\n  dtExportButtonOptions: any = {};\n\n  //title select variables\n  simpleOption: Array<IOption> = this.revokeStandingService.getCharacters();\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\n  b: Array<IOption> = this.AcountnoService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n\n  //variables for  add and update button\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable for checkbox and radio button \n  isIsAuto: boolean = false;\n\n  //object created to get data when row is clicked\n  message = {\n    Date: \"\",\n    StartFrom: \"\",\n    InstructionNo: \"\",\n    Day: \"\",\n    Frequency: \"\",\n    NextExecutionOn: \"\",\n    LastExecutionOn: \"\",\n    Scheme: \"\",\n    AccountNo: \"\",\n    DebitNarration: \"\",\n    Scheme1: \"\",\n    AccountNo1: \"\",\n    CreditNarration: \"\",\n    IsAuto: \"\",\n    TransactionAmount: \"\",\n    RevokeDate: \"\"\n  };\n\n  constructor(private fb: FormBuilder, public revokeStandingService: revokeStandingService, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/revoke-standing.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Date',\n          data: 'Date'\n        },\n        {\n          title: 'Start From',\n          data: 'StartFrom'\n        },\n        {\n          title: 'Instruction No',\n          data: 'InstructionNo'\n        },\n        {\n          title: 'Day',\n          data: 'Day'\n        },\n        {\n          title: 'Frequency',\n          data: 'Frequency'\n        },\n        {\n          title: 'Next Execution On',\n          data: 'NextExecutionOn'\n        },\n\n\n        {\n          title: 'Last Execution On',\n          data: 'LastExecutionOn'\n        },\n        {\n          title: 'Scheme',\n          data: 'Scheme'\n        },\n        {\n          title: 'Account No',\n          data: 'AccountNo'\n        },\n        {\n          title: 'DebitNarration',\n          data: 'DebitNarration'\n        },\n        {\n          title: 'Scheme1',\n          data: 'Scheme1'\n        },\n        {\n          title: 'Account No1',\n          data: 'AccountNo1'\n        },\n        {\n          title: 'Credit Narration',\n          data: 'CreditNarration'\n        },\n        {\n          title: 'Is Auto Balance Transfer Remaining this Minimum Balance :',\n          data: 'IsAuto'\n        },\n\n        {\n          title: 'Transaction Amount',\n          data: 'TransactionAmount'\n        },\n        {\n          title: 'Revoke Date',\n          data: 'RevokeDate'\n        }\n\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n    this.runTimer();\n    this.dataSub = this.revokeStandingService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      Date: ['',],\n      TransactionNo: ['',],\n      RevokeDate: ['', [Validators.required]],\n      Scheme: ['', [Validators.required]],\n    });\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  //function for edit button clicked\n  editClickHandler(info: any): void {\n    this.message.Date = info.Date;\n    this.message.StartFrom = info.StartFrom;\n    this.message.InstructionNo = info.InstructionNo;\n    this.message.Day = info.Day;\n    this.message.Frequency = info.Frequency;\n    this.message.NextExecutionOn = info.NextExecutionOn;\n    this.message.LastExecutionOn = info.LastExecutionOn;\n    this.message.Scheme = info.Scheme;\n    this.message.AccountNo = info.AccountNo;\n    this.message.DebitNarration = info.DebitNarration;\n    this.message.Scheme1 = info.Scheme1;\n    this.message.AccountNo1 = info.AccountNo1;\n    this.message.CreditNarration = info.CreditNarration;\n    this.message.IsAuto = info.IsAuto;\n    this.message.TransactionAmount = info.TransactionAmount;\n    this.message.RevokeDate = info.RevokeDate;\n\n    //code for chekbox\n    if (this.message.IsAuto == \"Yes\") {\n      this.isIsAuto = true;   //return boolean value and display checked checkbox\n    }\n    else {\n      this.isIsAuto = false;   //return boolean value and display unchecked checkbox\n    }\n\n    //return boolean value and toggle add to update button\n\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  //function for delete button clicked\n  delClickHandler(info: any): void {\n    this.message.Date = info.Date;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Date.\" + this.message.Date + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n\n  //function toggle update to add button\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Revoke Standing Instructions</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\n                                        formControlName=\"Date\" value=\"{{ message.Date}}\" onfocus=\"(this.type='date')\"\n                                        id=\"date\" />\n                                    <label for=\"date\">Date</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\" checked>\n                                        <i class=\"helper\"></i>Month Begin\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\">\n                                        <i class=\"helper\"></i>Month End\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\">\n                                        <i class=\"helper\"></i> Specific Day\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\n                                        formControlName=\"Date\" value=\"{{ message.StartFrom}}\"\n                                        onfocus=\"(this.type='date')\" id=\"StartFrom\" />\n                                    <label for=\"StartFrom\">Start From</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"Instruction No.\" title=\"Compulsory Selection\"\n                                    formControlName=\"TransactionNo\">\n                                </ng-select>\n                                <label>{{ message.InstructionNo }}</label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\n                                        formControlName=\"Date\" value=\"{{ message.Day}}\" onfocus=\"(this.type='date')\"\n                                        id=\"Day\" />\n                                    <label for=\"Day\">Day</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" [multiple]=\"false\"\n                                    placeholder=\"Frequency\" title=\"Compulsory Selection\"\n                                    formControlName=\"TransactionNo\">\n                                </ng-select>\n                                <label>{{message.Frequency}}</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"NextExecutionOn\"\n                                        max=\"9999-12-31\" formControlName=\"Date\" value=\"{{ message.NextExecutionOn}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"NextExecutionOn\">Next Execution On</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\n                                        formControlName=\"Date\" value=\"{{ message.LastExecutionOn}}\"\n                                        onfocus=\"(this.type='date')\" id=\"LastExecutionOn\" />\n                                    <label for=\"LastExecutionOn\">Last Execution On</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <h6>Debit Account Details</h6>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"Scheme \" required title=\"Compulsory Selection\"\n                                    formControlName=\"Scheme\">\n                                </ng-select>\n                                <label>{{ message.Scheme }}</label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                    placeholder=\"Account No\" required>\n                                </ng-select>\n                                <label>{{ message.AccountNo }}</label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                        id=\"DebitNarration\" value=\"{{ message.DebitNarration }}\">\n                                    <label for=\"DebitNarration\">Debit Narration</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <h6>Credit Account Details</h6>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"Scheme \" title=\"Compulsory Selection\" formControlName=\"Scheme\">\n                                </ng-select>\n                                <label>{{ message.Scheme1 }}</label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                    placeholder=\"Account No\">\n                                </ng-select>\n                                <label>{{ message.AccountNo1 }}</label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                        id=\"CreditNarration\" value=\"{{ message.CreditNarration }}\">\n                                    <label for=\"CreditNarration\">Credit Narration</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"border-checkbox-section\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\"\n                                        [checked]=\"isIsAuto == true\">\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Auto Balance Transfer\n                                        Remaining this Minimum Balance :<span class=\"required\"> </span></label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                        id=\"TransactionAmount\" value=\"{{ message.TransactionAmount }}\">\n                                    <label for=\"TransactionAmount\">Transaction Amount</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" required=\"\" max=\"9999-12-31\"\n                                        formControlName=\"RevokeDate\" value=\"{{ message.RevokeDate}}\"\n                                        onfocus=\"(this.type='date')\" id=\"RevokeDate\" />\n                                    <label for=\"RevokeDate\">Revoke Date <sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['RevokeDate'].invalid && (angForm.controls['RevokeDate'].dirty || angForm.controls['RevokeDate'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"angForm.controls['RevokeDate'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Update</button>\n                            <!-- <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button> -->\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ExucuteOnService } from '../../../../shared/elements/exucute-on.service';\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\nimport Swal from 'sweetalert2';\nimport { Observable } from 'rxjs/Observable';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-special',\n  templateUrl: './special.component.html',\n  styleUrls: ['./special.component.scss']\n})\nexport class SpecialComponent implements OnInit {\n  angForm: FormGroup;\n\n  //Datatable\n  dtExportButtonOptions: any = {};\n\n  excuteonOption: Array<IOption> = this.ExucuteOnService.getCharacters();\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\n  b: Array<IOption> = this.AcountnoService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n  showButton: boolean = true;\n  updateShow: boolean = false;\n  //variable for checkbox and radio button \n  isIsRestrictTransactionEntry: boolean = false;\n\n  message = {\n    InstructionNo: \" \",\n    Date: \"\",\n    Scheme: \" \",\n    AccountNo: \" \",\n    StartFrom: \" \",\n    UptoDate: \" \",\n    ExecuteOn: \" \",\n    Details: \" \",\n    Date2: \" \",\n    IsRestrictTransactionEntry: \" \",\n\n  };\n\n  constructor(private fb: FormBuilder, public ExucuteOnService: ExucuteOnService, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\n\n  ngOnInit(): void {\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/special.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\"id=\"editbtn\">Edit</button>' + ' ' + '<button  id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Instruction No',\n          data: 'InstructionNo'\n        }, {\n          title: 'Date',\n          data: 'Date'\n        },\n        {\n          title: 'Scheme',\n          data: 'Scheme'\n        }, {\n          title: 'Account No',\n          data: 'AccountNo'\n        },\n        {\n          title: 'Start From',\n          data: 'StartFrom'\n        },\n        {\n          title: 'Upto Date',\n          data: 'UptoDate'\n        },\n        {\n          title: 'Execute On',\n          data: 'ExecuteOn'\n        },\n        {\n          title: 'Is Restrict Transaction Entry',\n          data: 'IsRestrictTransactionEntry'\n        },\n\n        {\n          title: 'Details',\n          data: 'Details'\n        },\n        {\n          title: 'Date2',\n          data: 'Date2'\n        },\n\n      ],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n\n      /**\n* @rowCallback function for editClickHandler and delClickHandler to passes table data to there filds\n  @return row \n*/\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n\n\n    this.runTimer();\n    this.dataSub = this.ExucuteOnService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      Date: ['',],\n      Date2: ['',],\n      StartFrom: ['', [Validators.required]],\n      UptoDate: ['', [Validators.required]],\n      // ExecuteOn: ['', [Validators.required]], \n      InstructionNo: ['',],\n      Particulars: ['', [Validators.pattern, Validators.required]],\n      Scheme: ['', [Validators.required]],\n      ExecuteOn: ['', [Validators.required]],\n      RevokeDate: ['', [Validators.required]],\n      AccountNo: ['',]\n    });\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n  /**\n* @editClickHandler function for edit button clicked\n*/\n\n  editClickHandler(info: any): void {\n    this.message.InstructionNo = info.InstructionNo;\n    this.message.Date = info.Date;\n    this.message.Scheme = info.Scheme;\n    this.message.StartFrom = info.StartFrom;\n    this.message.UptoDate = info.UptoDate;\n    this.message.AccountNo = info.AccountNo;\n    this.message.ExecuteOn = info.ExecuteOn;\n    this.message.Details = info.Details;\n    this.message.Date2 = info.Date2;\n    this.message.IsRestrictTransactionEntry = info.IsRestrictTransactionEntry;\n\n    this.showButton = false;\n    this.updateShow = true;\n    //code for chekbox\n    if (this.message.IsRestrictTransactionEntry == \"Yes\") {\n      this.isIsRestrictTransactionEntry = true;   //return boolean value and display checked checkbox\n    }\n    else {\n      this.isIsRestrictTransactionEntry = false;   //return boolean value and display unchecked checkbox\n    }\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  /**\n  * @updateData function for update data \n  */\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n    // this.form.reset();\n  }\n\n  /**\n  * @delClickHandler function for delete button \n    @Swal sweetalert2\n    @Swal.fire open a modal window to display message\n  */\n  delClickHandler(info: any): void {\n    this.message.InstructionNo = info.InstructionNo;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Instruction No.\" + this.message.InstructionNo + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      /* run code if our result  isConfirmed function Swal.fire open a modal window to display message\n      else if result is dismiss then it cancel and open a modal window to display cancel message\n       */\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Special Instruction</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"TotalAmount\" class=\"form-control\" placeholder=\" \"\n                                        id=\"InstructionNo\" value=\"{{ message.InstructionNo }}\"\n                                        formControlName=\"InstructionNo\">\n                                    <label for=\"InstructionNo\">Instruction No.</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"Date\" required=\"\"\n                                        max=\"9999-12-31\" formControlName=\"Date\" value=\"{{ message.Date}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"Date\">Date</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"Scheme\">\n                                </ng-select>\n                                <label>{{ message.Scheme }}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                    placeholder=\"Account No*\" required title=\"Compulsory Selection\"\n                                    formControlName=\"AccountNo\">\n                                </ng-select>\n                                <label>{{ message.AccountNo }}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['AccountNo'].invalid && (angForm.controls['AccountNo'].dirty || angForm.controls['AccountNo'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['AccountNo'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"StartFrom\" required=\"\"\n                                        max=\"9999-12-31\" formControlName=\"StartFrom\" value=\"{{ message.StartFrom}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"StartFrom\">Start From<sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['StartFrom'].invalid && (angForm.controls['StartFrom'].dirty || angForm.controls['StartFrom'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['StartFrom'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"UptoDate\" required=\"\"\n                                        max=\"9999-12-31\" formControlName=\"UptoDate\" value=\"{{ message.UptoDate}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"UptoDate\">Upto Date</label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['UptoDate'].invalid && (angForm.controls['UptoDate'].dirty || angForm.controls['UptoDate'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['UptoDate'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <!-- DROPDOWN HERE -->\n                        <!-- <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"Execute On *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"ExecuteOn \">\n                                </ng-select>\n                                <label>{{ message.ExecuteOn }}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['ExecuteOn'].invalid && (angForm.controls['ExecuteOn'].dirty || angForm.controls['ExecuteOn'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['ExecuteOn'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div> -->\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"ExecuteOn *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"ExecuteOn\">\n                                </ng-select>\n                                <label>{{ message.ExecuteOn }}</label>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['ExecuteOn'].invalid && (angForm.controls['ExecuteOn'].dirty || angForm.controls['ExecuteOn'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['ExecuteOn'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"border-checkbox-section\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\"\n                                        [checked]=\"isIsRestrictTransactionEntry == true\">\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Restrict Transaction\n                                        Entry?<span class=\"required\"> </span></label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Particulars\"\n                                        required=\"\" value=\"{{ message.Details }}\" pattern=\"^[A-Za-z\\./ -]+$\"\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\n                                        formControlName=\"Particulars\">\n                                    <label for=\"Particulars\">Details <sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Particulars'].invalid && (angForm.controls['Particulars'].dirty || angForm.controls['Particulars'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['Particulars'].errors?.pattern || angForm.controls['Particulars'].errors?.required\">\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\n                                </div>\n                            </div>\n                        </div>\n                        <!-- <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"Date2\" required=\"\"\n                                        max=\"9999-12-31\" formControlName=\"Date2\" value=\"{{ message.Date2}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"Date2\">Revoke Date</label>\n                                </span>\n                            </div>\n                        </div> -->\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IOption } from 'ng-select';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-standing-instruction',\n  templateUrl: './standing-instruction.component.html',\n  styleUrls: ['./standing-instruction.component.scss']\n})\n\nexport class StandingInstructionComponent implements OnInit {\n  angForm: FormGroup;\n  //Datatable\n  dtExportButtonOptions: any = {};\n\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\n  b: Array<IOption> = this.AcountnoService.getCharacters();\n  selectedOption = '3';\n  isDisabled = true;\n  characters: Array<IOption>;\n  selectedCharacter = '3';\n  timeLeft = 5;\n\n  private dataSub: Subscription = null;\n\n  showButton: boolean = true;\n  updateShow: boolean = false;\n\n  //variable for checkbox and radio button \n  isIsAutoBalanceTransferRemainingthisMinimumBalance: boolean = false;\n\n  message = {\n    Date: \"\",\n    StartFrom: \"\",\n    InstructionNo: \" \",\n    NextExecutionOn: \"\",\n    LastExecutedOn: \"\",\n    Day: \" \",\n    TransactionAmount: \" \",\n    IsAutoBalanceTransferRemainingthisMinimumBalance: \" \",\n\n  };\n\n  constructor(private fb: FormBuilder, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\n\n  ngOnInit(): void {\n\n    this.dtExportButtonOptions = {\n      ajax: 'fake-data/standing-instruction.json',\n      columns: [\n        {\n          title: 'Action',\n          render: function (data: any, type: any, full: any) {\n            return '<button class=\"btn btn-outline-primary btn-sm\"id=\"editbtn\">Edit</button>' + ' ' + '<button  id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\n          }\n        },\n        {\n          title: 'Date',\n          data: 'Date'\n        },\n        {\n          title: 'Start From',\n          data: 'StartFrom'\n        },\n        {\n          title: 'Instruction No',\n          data: 'InstructionNo'\n        }, {\n          title: 'Next Execution On',\n          data: 'NextExecutionOn'\n        },\n        {\n          title: 'Last Executed On',\n          data: 'LastExecutedOn'\n        },\n        {\n          title: 'Day',\n          data: 'Day'\n        }, {\n          title: 'Transaction Amount',\n          data: 'TransactionAmount'\n        },\n        {\n          title: 'IsAutoBalanceTransferRemainingthisMinimumBalance',\n          data: 'IsAutoBalanceTransferRemainingthisMinimumBalance'\n        },],\n      dom: 'Bfrtip',\n      buttons: [\n        'copy',\n        'print',\n        'excel',\n        'csv'\n      ],\n      //row click handler code\n\n      /**\n* @rowCallback function for editClickHandler and delClickHandler to passes table data to there filds\n  @return row \n*/\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\n        const self = this;\n        $('td', row).off('click');\n        $('td', row).on('click', '#editbtn', () => {\n          self.editClickHandler(data);\n        });\n        $('td', row).on('click', '#delbtn', () => {\n          self.delClickHandler(data);\n        });\n        return row;\n      }\n    };\n\n\n\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\n      this.characters = options;\n    });\n  }\n\n  runTimer() {\n    const timer = setInterval(() => {\n      this.timeLeft -= 1;\n      if (this.timeLeft === 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      Date: [''],\n      StartFrom: ['', [Validators.required]],\n      InstructionNo: ['',],\n      NextExecutionOn: [''],\n      LastExecutedOn: [''],\n      Day: ['', [Validators.pattern, Validators.required]],\n      Scheme: ['', [Validators.required]],\n      creditScheme: ['', [Validators.required]],\n      AccountNo: ['', [Validators.required]],\n      creditAccountNo: ['', [Validators.required]],\n      Debit: ['', [Validators.pattern, Validators.required]],\n      Credit: ['', [Validators.pattern, Validators.required]],\n      TransactionAmount: ['', [Validators.pattern, Validators.required]],\n    });\n  }\n\n  submit() {\n    console.log(this.angForm.valid);\n    if (this.angForm.valid) {\n      console.log(this.angForm.value);\n    }\n  }\n\n  /**\n* @editClickHandler function for edit button clicked\n*/\n\n  editClickHandler(info: any): void {\n    this.message.Date = info.Date;\n    this.message.StartFrom = info.StartFrom;\n    this.message.InstructionNo = info.InstructionNo;\n    this.message.NextExecutionOn = info.NextExecutionOn;\n    this.message.LastExecutedOn = info.LastExecutedOn;\n    this.message.Day = info.Day;\n    this.message.TransactionAmount = info.TransactionAmount;\n    this.message.IsAutoBalanceTransferRemainingthisMinimumBalance = info.IsAutoBalanceTransferRemainingthisMinimumBalance;\n\n\n    //code for chekbox\n    if (this.message.IsAutoBalanceTransferRemainingthisMinimumBalance == \"Yes\") {\n      this.isIsAutoBalanceTransferRemainingthisMinimumBalance = true;   //return boolean value and display checked checkbox\n    }\n    else {\n      this.isIsAutoBalanceTransferRemainingthisMinimumBalance = false;   //return boolean value and display unchecked checkbox\n    }\n    this.showButton = false;\n    this.updateShow = true;\n  }\n\n  /**\n  * @updateData function for update data \n  */\n  updateData() {\n    this.showButton = true;\n    this.updateShow = false;\n    // this.form.reset();\n  }\n\n\n  /**\n  * @delClickHandler function for delete button \n    @Swal sweetalert2\n    @Swal.fire open a modal window to display message\n  */\n  delClickHandler(info: any): void {\n    this.message.Date = info.Date;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Do you want to delete Date.\" + this.message.Date + \"  data\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#229954',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      /* run code if our result  isConfirmed function Swal.fire open a modal window to display message\n      else if result is dismiss then it cancel and open a modal window to display cancel message\n       */\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your data has been deleted.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        Swal.fire(\n          'Cancelled',\n          'Your data is safe.',\n          'error'\n        )\n      }\n    })\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5>Standing Instruction</h5>\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\n            </div>\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\n                <div class=\"card-block\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\n                                        formControlName=\"Date\" value=\"{{ message.Date}}\" onfocus=\"(this.type='date')\"\n                                        id=\"date\" />\n                                    <label for=\"date\">Date</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-radio\">\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\" checked=\"checked\">\n                                        <i class=\"helper\"></i>Month Begin<span class=\"required\"> </span>\n                                    </label>\n                                </div>\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\">\n                                        <i class=\"helper\"></i>Month End<span class=\"required\"> </span>\n                                    </label>\n                                </div>\n                                <div class=\"radio radio-inline\">\n                                    <label>\n                                        <input type=\"radio\" name=\"radio\">\n                                        <i class=\"helper\"></i>Specific Day<span class=\"required\"> </span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"StartFrom\" required=\"\"\n                                        max=\"9999-12-31\" formControlName=\"StartFrom\" value=\"{{ message.StartFrom}}\"\n                                        onfocus=\"(this.type='date')\" />\n                                    <label for=\"StartFrom\">Start From <sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['StartFrom'].invalid && (angForm.controls['StartFrom'].dirty || angForm.controls['StartFrom'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['StartFrom'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"TotalAmount\" class=\"form-control\" placeholder=\" \"\n                                        id=\"InstructionNo\" value=\"{{ message.InstructionNo }}\"\n                                        formControlName=\"InstructionNo\">\n                                    <label for=\"InstructionNo\">Instruction No.</label>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"NextExecutionOn\"\n                                        max=\"9999-12-31\" formControlName=\"NextExecutionOn\"\n                                        value=\"{{ message.NextExecutionOn}}\" onfocus=\"(this.type='date')\" />\n                                    <label for=\"NextExecutionOn\">Next Execution On</label>\n                                </span>\n                            </div>\n                            <!-- <div class=\"form-group form-primary form-static-label\">\n                                <input value=\"{{ message.NextExecutionOn }}\" class=\"form-control\" type=\"text\" onfocus=\"(this.type='date')\"  id=\"date\" name=\"AC_NDATE\" required />\n                                <span class=\"form-bar\"></span>\n                                <label class=\"float-label\">Next Execution On</label>\n                            </div> -->\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\n                                        formControlName=\"LastExecutedOn\" value=\"{{ message.LastExecutedOn}}\"\n                                        onfocus=\"(this.type='date')\" id=\"LastExecutedOn\" />\n                                    <label for=\"LastExecutedOn\">Last Executed On</label>\n                                </span>\n                            </div>\n                            <!-- <div class=\"form-group form-primary form-static-label\">\n                                <input value=\"{{ message.LastExecutedOn }}\" class=\"form-control\" type=\"text\" onfocus=\"(this.type='date')\"  id=\"date\" name=\"AC_NDATE\" required />\n                                <span class=\"form-bar\"></span>\n                                <label class=\"float-label\">Last Executed On</label>\n                            </div> -->\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Day\"\n                                        required=\"\" value=\"{{ message.Day }}\" pattern=\"^[0-9]+$\"\n                                        title=\"Input allowed only  0-9\" formControlName=\"Day\">\n                                    <label for=\"Day\">Day<sub class=\"required\">*</sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Day'].invalid && (angForm.controls['Day'].dirty || angForm.controls['Day'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['Day'].errors?.pattern || angForm.controls['Day'].errors?.required\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                            <!-- <div *ngIf=\"angForm.get('Day').hasError('required') && myform.submitted\"\n                                class='alert alert-danger'>This field is required</div> -->\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <h6>Debit A/C Details</h6>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"Scheme\">\n                                </ng-select>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                    placeholder=\"Account No *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"AccountNo\">\n                                </ng-select>\n                                <div class=\"form-group form-primary form-static-label\"\n                                    *ngIf=\"angForm.controls['AccountNo'].invalid && (angForm.controls['AccountNo'].dirty || angForm.controls['AccountNo'].touched)\"\n                                    class='alert alert-danger'>\n                                    <div *ngIf=\"angForm.controls['AccountNo'].errors?.required\">\n                                        This field is required\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Debit\"\n                                        required=\"\" pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\n                                        formControlName=\"Debit\">\n                                    <label for=\"Debit\">Debit Narration<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Debit'].invalid && (angForm.controls['Debit'].dirty || angForm.controls['Debit'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['Debit'].errors?.pattern || angForm.controls['Debit'].errors?.required\">\n                                    Input allowed only A-Za-z\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <h6>Credit A/C Details</h6>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\n                                    placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"creditScheme\">\n                                </ng-select>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['creditScheme'].invalid && (angForm.controls['creditScheme'].dirty || angForm.controls['creditScheme'].touched)\"\n                                class='alert alert-danger'>\n                                <div *ngIf=\"angForm.controls['creditScheme'].errors?.required\">\n                                    This field is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group form-primary form-static-label\">\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\n                                    placeholder=\"Account No *\" required title=\"Compulsory Selection\"\n                                    formControlName=\"creditAccountNo\">\n                                </ng-select>\n                                <div class=\"form-group form-primary form-static-label\"\n                                    *ngIf=\"angForm.controls['creditAccountNo'].invalid && (angForm.controls['creditAccountNo'].dirty || angForm.controls['creditAccountNo'].touched)\"\n                                    class='alert alert-danger'>\n                                    <div *ngIf=\"angForm.controls['creditAccountNo'].errors?.required\">\n                                        This field is required\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Credit\"\n                                        required=\"\" pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\n                                        formControlName=\"Credit\">\n                                    <label for=\"Credit\">Credit Narration<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['Credit'].invalid && (angForm.controls['Credit'].dirty || angForm.controls['Credit'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['Credit'].errors?.pattern || angForm.controls['Credit'].errors?.required\">\n                                    Input allowed only A-Za-z\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <div class=\"form-group input-group\">\n                                <span class=\"border-lable-flt\">\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\n                                        id=\"TransactionAmount\" required=\"\" value=\"{{ message.TransactionAmount }}\"\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\n                                        formControlName=\"TransactionAmount\">\n                                    <label for=\"TransactionAmount\">Transaction Amount<sub class=\"required\">* </sub></label>\n                                </span>\n                            </div>\n                            <div class=\"form-group form-primary form-static-label\"\n                                *ngIf=\"angForm.controls['TransactionAmount'].invalid && (angForm.controls['TransactionAmount'].dirty || angForm.controls['TransactionAmount'].touched)\"\n                                class=\"alert alert-danger\">\n                                <div\n                                    *ngIf=\"angForm.controls['TransactionAmount'].errors?.pattern || angForm.controls['TransactionAmount'].errors?.required\">\n                                    This field is required and Input allowed only 0-9\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"border-checkbox-section\">\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\n                                    <input class=\"border-checkbox\" type=\"checkbox\" name=\"DD_APPLICABLE\" id=\"checkbox1\"\n                                        [checked]=\"isIsAutoBalanceTransferRemainingthisMinimumBalance == true\">\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Auto Balance Transfer\n                                        Remaining this Minimum Balance</label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\n                                [disabled]=\"angForm.invalid\">Add</button>\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\n                                *ngIf=\"updateShow\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}