{"version":3,"sources":["./node_modules/rxjs/add/observable/interval.js","./src/app/shared/dropdownService/ac-master-dropdown.service.ts","./src/app/shared/dropdownService/depriciation-category-master-dropdown.service.ts","./src/app/shared/dropdownService/membership-type-dropdown.service.ts","./src/app/shared/dropdownService/minimum-balance-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-type-dropdown.service.ts","./src/app/shared/dropdownService/sign-type-dropdown.service.ts","./src/app/shared/dropdownService/statement-code-dropdown.service.ts","./src/app/shared/dropdownService/subsalary-division-master-dropdown.service.ts","./src/app/shared/elements/a1.service.ts","./src/app/shared/elements/agent-code.service.ts","./src/app/shared/elements/branch.service.ts","./src/app/shared/elements/customerid.service.ts","./src/app/shared/elements/memberno.service.ts","./src/app/shared/elements/scheme-code.service.ts","./src/app/shared/elements/scheme-type.service.ts","./src/app/shared/elements/statement-type.service.ts","./src/app/shared/elements/statment-type.service.ts","./src/app/shared/elements/title.service.ts","./src/app/theme/master/customer/shares-master/shares-master.service.ts","./src/app/theme/master/customer/term-loan-master/term-loan-master.service.ts","./src/app/theme/master/policy-settings/information/bank-master/bank-master.service.ts","./src/app/theme/master/policy-settings/information/director-master/director-master.service.ts","./src/app/theme/master/policy-settings/information/document-master/document-master.service.ts","./src/app/theme/utility/scheme-parameters/shares-scheme/shares-scheme.service.ts","./src/app/theme/utility/user-defination/user-defination.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"rxjs-compat/add/observable/interval\");\n//# sourceMappingURL=interval.js.map","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class ACMasterDropdownService {\r\n\r\n    // // gl-account-master\"; \r\n    url = environment.base_url;\r\n    acMasterObject = new Array();\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getACMasterList() {\r\n        this.acMasterObject = [];\r\n        return this.http.get<any>(this.url + '/gl-account-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ',value: `${element.id}`};\r\n                    this.acMasterObject.push(obj)\r\n                });\r\n                return this.acMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"../../../environments/environment\";\r\n@Injectable()\r\nexport class DepriciationCatDropdownMasterService {\r\n    depriciationObject = new Array();\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getDepriciationMasterList() {\r\n        this.depriciationObject = []\r\n        return this.http.get<any>(this.url + '/depriciation-category-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.NAME, value: `${element.id}` };\r\n                    this.depriciationObject.push(obj)\r\n                });\r\n                return this.depriciationObject;\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n@Injectable()\r\nexport class MembershipTypeDropdownService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: 'Direct', label: 'Direct' },\r\n        { value: 'Transfer', label: 'Transfer' },\r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(MembershipTypeDropdownService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(MembershipTypeDropdownService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(MembershipTypeDropdownService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class MinimumBalanceMasterDropdownService {\r\n    minimumBalancrMasterObject = new Array();\r\n    // url = 'http://localhost:4000/minimum-balance-master';\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getMinimumBalanceMasterList() {\r\n        this.minimumBalancrMasterObject = []\r\n        return this.http.get<any>(this.url + '/minimum-balance-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.BC_NAME, value: `${element.id}` };\r\n                    this.minimumBalancrMasterObject.push(obj)\r\n                });\r\n                return this.minimumBalancrMasterObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n@Injectable()\r\nexport class SchemeTypeDropdownService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: 'AG', label: 'AG' },\r\n        { value: 'LN', label: 'LN' },\r\n        { value: 'CC', label: 'CC' },\r\n        { value: 'GS', label: 'GS' },\r\n        { value: 'CA', label: 'CA' },\r\n        { value: 'DS', label: 'DS' },\r\n        { value: 'GL', label: 'GL' },\r\n        { value: 'IV', label: 'IV' },\r\n        { value: 'LK', label: 'LK' },\r\n        { value: 'PG', label: 'PG' },\r\n        { value: 'SB', label: 'SB' },\r\n        { value: 'SH', label: 'SH' },\r\n        { value: 'TD', label: 'TD' },\r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(SchemeTypeDropdownService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(SchemeTypeDropdownService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(SchemeTypeDropdownService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n@Injectable()\r\nexport class SignTypeDropdownService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: 'Thumb', label: 'Thumb' },\r\n        { value: 'ShortEnglish', label: 'Short English' },\r\n        { value: 'FullEnglish', label: 'Full English' },\r\n        { value: 'ShortMarathi', label: 'Short Marathi' },\r\n        { value: 'FullMarathi', label: 'Full Marathi' },\r\n        { value: 'Kannada', label: 'Kannada' },\r\n        { value: 'Others', label: 'Others' },\r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(SignTypeDropdownService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(SignTypeDropdownService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(SignTypeDropdownService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport{ map} from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class StatementCodeDropdownService {\r\n    statementObject=new Array();\r\n// url ='http://localhost:4000/gl-statement-code';\r\nurl = environment.base_url;\r\n\r\nconstructor(private http: HttpClient) { }\r\n    public getStatementCodeList() {\r\n        return this.http.get<any>(this.url + '/gl-statement-code')\r\n        .pipe(map(ele => {\r\n            ele.forEach(element => {\r\n                let obj = {label:element.A_BALCODE + ' ' + element.A_ACHEAD, value:`${element.id}`};\r\n                this.statementObject.push(obj)\r\n            });\r\n        return this.statementObject;\r\n        }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SubSalaryDMasterdropdownService {\r\n    subSalaryObject = new Array();\r\n    // // salary-division-master\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getSubSalaryDMasterList() {\r\n        this.subSalaryObject = []\r\n        return this.http.get<any>(this.url + '/salary-division-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.NAME,value: `${element.id}`};\r\n                    this.subSalaryObject.push(obj)\r\n                });\r\n                return this.subSalaryObject;\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class A1Service {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '1' },\r\n        { value: '1', label: '2' },\r\n        { value: '2', label: '3' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(A1Service.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(A1Service.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(A1Service.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class AgentCodeService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '1', label: '1' },\r\n        { value: '2', label: '2' },\r\n        { value: '3', label: '3' },\r\n        { value: '4', label: '4' },\r\n        \r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(AgentCodeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(AgentCodeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(AgentCodeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class BranchService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: 'branch1' },\r\n        { value: '1', label: 'branch2' },\r\n        { value: '2', label: 'branch1' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(BranchService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(BranchService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(BranchService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class CustomeridService {\r\n    getFormData(id: any) {\r\n      throw new Error('Method not implemented.');\r\n    }\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '10100' },\r\n        { value: '1', label: '20100' },\r\n        { value: '2', label: '20200' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(CustomeridService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(CustomeridService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(CustomeridService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class MembernoService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '101' },\r\n        { value: '1', label: '101' },\r\n        { value: '2', label: '102' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(MembernoService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(MembernoService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(MembernoService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class SchemeCodeService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '40100', label: '40100' },\r\n        { value: '40200', label: '40200' },\r\n        { value: '40300', label: '40300' },\r\n        { value: '40400', label: '40400' },\r\n        \r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(SchemeCodeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(SchemeCodeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(SchemeCodeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n \r\n\r\n@Injectable()\r\nexport class SchemeTypeService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: 'AG', label: 'Pigmy Agent(AG)' },\r\n        { value: 'CA', label: 'Current Deposit(CA)' },\r\n        { value: 'CC', label: 'Cash Credit(CC)' },\r\n        { value: 'DS', label: 'Dispute Loan(DS)' },\r\n        { value: 'GS', label: 'Anamat Account(GS)' },\r\n        { value: 'GL', label: 'General Ledger(GL)' },\r\n        { value: 'IV', label: 'Investment Account(IV)' },\r\n        { value: 'LN', label: 'Term Loan(LN)' },\r\n        { value: 'PG', label: 'Pigmy Deposit(PG)' },\r\n        { value: 'SB', label: 'Savings Deposit(SB)' },\r\n        { value: 'SH', label: 'Shares(SH)' },\r\n        { value: 'TD', label: 'Term Deposit(TD)' },\r\n        { value: 'LK', label: 'Locker(LK)' }        \r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(SchemeTypeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(SchemeTypeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(SchemeTypeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class StatementTypeService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Income'},\r\n    {value: '1', label: 'Expenditure'},\r\n    {value: '2', label: 'Asset'},\r\n    {value: '3', label: 'Liability'}\r\n  ];\r\n\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(StatementTypeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(StatementTypeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(StatementTypeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class StatementTypeService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Shree'},\r\n    {value: '1', label: 'Sou'},\r\n    {value: '2', label: 'Miss'},\r\n    {value: '3', label: 'M/s'}\r\n  ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(StatementTypeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(StatementTypeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(StatementTypeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class TitleService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Mr.'},\r\n    {value: '1', label: 'Mrs.'},\r\n    {value: '2', label: 'Miss'}\r\n  ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(TitleService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(TitleService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(TitleService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../environments/environment'\r\n@Injectable()\r\nexport class ShareMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/share-master/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/share-master/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/share-master/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/share-master/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../environments/environment'\r\n@Injectable()\r\nexport class TermLoanService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/term-loan-master/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/term-loan-master/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/term-loan-master/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/term-loan-master/delete/' + id).pipe(catchError(this.handleError));\r\n    }  \r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment'; \r\n\r\n@Injectable()\r\nexport class BankService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n url = environment.base_url;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/bank-master/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/bank-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/bank-master/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/bank-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../../environments/environment'; \r\n\r\n@Injectable()\r\nexport class DirectorMasterService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  // // director-master\";\r\n  url = environment.base_url;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/director-master/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        Swal.fire('Please Input Proper Data!');\r\n        return throwError(error);\r\n      })\r\n    )\r\n  }\r\n\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/director-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/director-master/update', data);\r\n  }\r\n\r\n  getData(): Observable<any> {\r\n    return this.http.get(this.url + '/director-master');\r\n  }\r\n\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/director-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class DocumentMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    // // document-master\";\r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/document-master/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/document-master/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/document-master/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/document-master/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    getData() {\r\n        return this.http.get(this.url + '/document-master/').pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class SharesSchemeService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  // // shares-scheme\";\r\n  url = environment.base_url;\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/shares-scheme/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        let errorMessage = 'Please add valid length';\r\n        Swal.fire('Kindly Add Valid Length !');\r\n        return throwError(errorMessage);\r\n      })\r\n    )\r\n  }\r\n\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/shares-scheme/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/shares-scheme/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/shares-scheme/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getFormDataBySchemeCode(schemeCode: any): Observable<any> {\r\n    return this.http.get(this.url + '/shares-scheme/schemeCode/' + schemeCode).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../environments/environment'\r\n@Injectable()\r\nexport class UserDefinationService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  // url = \"http://localhost:4000/user-defination\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/user-defination/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        Swal.fire('Please Input Proper Data !');\r\n        return throwError(error);\r\n      })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/user-defination/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/user-defination/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/user-defination/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  //update Role and Branch\r\n  updateRoleBranch(data: any): Observable<any>{\r\n    return this.http.post(this.url+'/user-defination/updateRoleBranch',data).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  //get user list\r\n  getRoleList(): Observable<any> {\r\n    let array = new Array();\r\n    return this.http.post<any>(this.url + '/user-defination/roles',{})\r\n      .pipe(map(ele => {\r\n        ele.forEach(element => {\r\n          let obj = { label: element.NAME, value: element.id };\r\n          array.push(obj)\r\n        });\r\n        return array;\r\n      }));\r\n  }\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}