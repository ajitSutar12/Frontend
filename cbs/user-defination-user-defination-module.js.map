{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/user-defination-dropdown.service.ts","./src/app/theme/utility/user-defination/user-defination-routing.module.ts","./src/app/theme/utility/user-defination/user-defination.component.ts","./src/app/theme/utility/user-defination/user-defination.component.html","./src/app/theme/utility/user-defination/user-defination.module.ts"],"names":[],"mappings":"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","file":"user-defination-user-defination-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.NAME, value: `${element.id}` };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class UserdefinationServiceD{\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: 'Super Administrator' },\r\n        { value: '1', label: 'Administrator' },\r\n        { value: '2', label: 'Sub Administrator' },\r\n        { value: '3', label: 'Manager' },\r\n        { value: '4', label: 'Sub Manager' },\r\n        { value: '5', label: 'Clerk' },\r\n        { value: '6', label: 'Cashier' },\r\n        { value: '7', label: 'Guest' }\r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(UserdefinationServiceD.PLAYER_ONE);\r\n    }\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(UserdefinationServiceD.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(UserdefinationServiceD.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { UserDefinationComponent } from './user-defination.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserDefinationComponent,\n    data: {\n      title: 'User Defination',\n      icon: 'icon-home',\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserDefinationRoutingModule { }\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport { UserDefinationService } from './user-defination.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n// static dropdown\r\nimport { UserdefinationServiceD } from '../../../shared/dropdownService/user-defination-dropdown.service';\r\nimport { OwnbranchMasterService} from '../../../shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { first } from 'rxjs/operators';\r\nimport { environment} from '../../../../environments/environment';\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface userdefination {\r\n  //id:number\r\n  F_NAME: string;\r\n  L_NAME: String;\r\n  DOB: string;\r\n  MOB_NO: number;\r\n  EMAIL: string;\r\n  ROLE: string;\r\n  USER_NAME: string;\r\n  PASSWORD: string;\r\n  STATUS: boolean;\r\n  // USER_CREATED_AT:string;\r\n\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-user-defination',\r\n  templateUrl: './user-defination.component.html',\r\n  styleUrls: ['./user-defination.component.scss']\r\n})\r\nexport class UserDefinationComponent implements OnInit {\r\n\r\n\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  userdef: userdefination[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  updateID: number = 0;\r\n  url = environment.base_url;\r\n  companyCode: any;\r\n  schemeCode: any;\r\n\r\n  //for search functionality\r\n  filterData = {};\r\n  //Title\r\n  //  ROLE: Array<IOption> = this.userdefinationservice.getRoleList();\r\n  // ROLE: IOption[];\r\n  ROLE: any;\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n  barnchData:any;\r\n\r\n  private dataSub: Subscription = null;\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private userdefinationservice: UserDefinationService,\r\n    private UserdefinationServiceD: UserdefinationServiceD,\r\n    private _branchMasterServices : OwnbranchMasterService\r\n\r\n  ) {\r\n    this._branchMasterServices.getOwnbranchList().subscribe(data=>{\r\n      this.barnchData = data;\r\n    })\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.userdefinationservice.getRoleList().subscribe(data => {\r\n      this.ROLE = data;\r\n      console.log(this.ROLE);\r\n    });\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n        dataTableParameters.columns.forEach(element => {\r\n          if (element.search.value != '') {\r\n\r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          } else {\r\n\r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if (this.filterData.hasOwnProperty(element.data)) {\r\n              let value = this.filterData[getColumnName];\r\n              if (columnValue != undefined || value != undefined) {\r\n                delete this.filterData[element.data];\r\n              }\r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            this.url+'/user-defination',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.userdef = resp.data;\r\n            console.log(this.userdef);\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'First Name',\r\n          data: 'F_NAME',\r\n        },\r\n        {\r\n          title: 'Last Name',\r\n          data: 'L_NAME',\r\n        },\r\n        {\r\n          title: 'DOB',\r\n          data: 'DOB',\r\n        },\r\n        {\r\n          title: 'Mobile',\r\n          data: 'MOB_NO',\r\n        },\r\n        {\r\n          title: 'Email',\r\n          data: 'EMAIL',\r\n        },\r\n\r\n        {\r\n          title: 'Role',\r\n          data: 'ROLE',\r\n        },\r\n\r\n        {\r\n          title: 'User Name',\r\n          data: 'USER_NAME',\r\n        },\r\n        // {\r\n        //   title: 'Password',\r\n        //   data: 'PASSWORD',\r\n        // },\r\n        {\r\n          title: 'Status',\r\n          data: 'STATUS',\r\n        },\r\n        // {\r\n        //   title: 'User Created-at',\r\n        //   data: 'USER_CREATED_AT',\r\n        // }\r\n\r\n      ],\r\n      dom: 'Blrtip',\r\n    };\r\n    // this.UserdefinationServiceD.getuserdefinationList().pipe(first()).subscribe(data => {\r\n    //   this.userdef = data;\r\n    // })\r\n    this.runTimer();\r\n\r\n    this.dataSub = this.UserdefinationServiceD.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n  }\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n\r\n\r\n      F_NAME: ['', [Validators.required, Validators.pattern]],\r\n      L_NAME: ['', [Validators.pattern]],\r\n      DOB: [''],\r\n      MOB_NO: ['', [Validators.required, Validators.pattern]],\r\n      EMAIL: ['', [Validators.required, Validators.pattern]],\r\n      ROLE: ['', [Validators.required]],\r\n      USER_NAME: ['', [Validators.required, Validators.pattern]],\r\n      PASSWORD: ['', [Validators.required, Validators.pattern]],\r\n      STATUS: ['', [Validators.required]],\r\n      branchId: ['',[Validators.required]]\r\n      // USER_CREATED_AT: ['', [ Validators.pattern]],\r\n\r\n\r\n\r\n    });\r\n  }\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'F_NAME': formVal.F_NAME,\r\n      'L_NAME': formVal.L_NAME,\r\n      'DOB': formVal.DOB,\r\n      'MOB_NO': formVal.MOB_NO,\r\n      'EMAIL': formVal.EMAIL,\r\n      'roleId': formVal.ROLE,\r\n      'USER_NAME': formVal.USER_NAME,\r\n      'PASSWORD': formVal.PASSWORD,\r\n      'STATUS': formVal.STATUS,\r\n      'branchId':formVal.branchId\r\n      // 'USER_CREATED_AT': formVal.USER_CREATED_AT,\r\n    }\r\n    this.userdefinationservice.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n    //To clear form\r\n    this.angForm.reset();\r\n  }\r\n\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.userdefinationservice.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        'F_NAME': data.F_NAME,\r\n        'L_NAME': data.L_NAME,\r\n        'DOB': data.DOB,\r\n        'MOB_NO': data.MOB_NO,\r\n        'EMAIL': data.EMAIL,\r\n        'ROLE': data.ROLE,\r\n        'USER_NAME': data.USER_NAME,\r\n        'PASSWORD': data.PASSWORD,\r\n        'STATUS': data.STATUS,\r\n        // 'USER_CREATED_AT': data.USER_CREATED_AT,\r\n\r\n      })\r\n    })\r\n  }\r\n  //Method for update data \r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    this.userdefinationservice.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n      this.angForm.reset();\r\n    })\r\n  }\r\n\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete narration data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.userdefinationservice.deleteData(id).subscribe(data1 => {\r\n          this.userdef = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n          console.log(error)\r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          } else {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n  }\r\n}\r\n\r\n\r\n//   // For reloading angular datatable after CRUD operation\r\n  //   @ViewChild(DataTableDirective, { static: false })\r\n  //   dtElement: DataTableDirective;\r\n  //   dtOptions: DataTables.Settings = {};\r\n  //   dtTrigger: Subject<any> = new Subject();\r\n  //   // Store data from backend\r\n  //   userdefination: userdefination[];\r\n  //   // Created Form Group\r\n  //   angForm: FormGroup;\r\n  //   //Datatable variable\r\n  //   dtExportButtonOptions: DataTables.Settings = {};\r\n  //   Data: any;\r\n  //   //variables for pagination\r\n  //   page: number = 1;\r\n  //   passenger: any;\r\n  //   itemsPerPage = 10;\r\n  //   totalItems: any;\r\n  //   currentJustify = 'start';\r\n  //   active = 1;\r\n  //   activeKeep = 1;\r\n  //   // Variables for search \r\n  //   filterObject: { name: string; type: string; }[];\r\n  //   filter: any;\r\n  //   filterForm: FormGroup;\r\n  //   // Variables for hide/show add and update button\r\n  //   showButton: boolean = true;\r\n  //   updateShow: boolean = false;\r\n  //   //variable to get Id to update\r\n  //   updateID: number = 0;\r\n\r\n  //   //option for dropdown\r\n  // //userdef: any;\r\n\r\n  //   //Title select variables\r\n\r\n\r\n  //   private dataSub: Subscription = null\r\n  //   userdef: Array<IOption> = this.UserdefinationServiceD.getCharacters();\r\n  //   selectedOption1 = '3';\r\n  //   isDisabled1 = true;\r\n  //   characters1: Array<IOption>;\r\n  //   selectedCharacter1 = '3';\r\n  //   timeLeft1 = 5;\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>User Defination </h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"F_NAME\" maxlength=\"2000\" class=\"form-control\"\r\n                                        placeholder=\" \" id=\"label-name\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"F_NAME\">\r\n                                    <label for=\"label-name\">First Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['F_NAME'].invalid && (angForm.controls['F_NAME'].dirty || angForm.controls['F_NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['F_NAME'].errors?.pattern || angForm.controls['F_NAME'].errors?.required || angForm.controls['F_NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"L_NAME\" maxlength=\"2000\" class=\"form-control\"\r\n                                        placeholder=\" \" id=\"label-name\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"L_NAME\">\r\n                                    <label for=\"label-name\">Last Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['L_NAME'].invalid && (angForm.controls['L_NAME'].dirty || angForm.controls['L_NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['L_NAME'].errors?.pattern || angForm.controls['L_NAME'].errors?.required || angForm.controls['L_NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"DOB\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"DOB\" max=\"9999-12-31\" onfocus=\"(this.type='date')\"\r\n                                        formControlName=\"DOB\">\r\n                                    <label for=\"DOB\">Birth Date</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"MOB_NO\" class=\"form-control\" placeholder=\" \"\r\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\" id=\"MOB_NO\"\r\n                                        formControlName=\"MOB_NO\">\r\n                                    <label for=\"MOB_NO\">Mobile<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['MOB_NO'].invalid && (angForm.controls['MOB_NO'].dirty || angForm.controls['MOB_NO'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['MOB_NO'].errors?.pattern\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"EMAIL\" class=\"form-control\" placeholder=\" \"\r\n                                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" title=\"Enter valid Email\"\r\n                                        id=\"EMAIL\" formControlName=\"EMAIL\">\r\n                                    <label for=\"EMAIL\">Email<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['EMAIL'].invalid && (angForm.controls['EMAIL'].dirty || angForm.controls['EMAIL'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['EMAIL'].errors?.pattern\">\r\n                                    Enter valid Email\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"ROLE\" [multiple]=\"false\" placeholder=\"Role\" formControlName=\"ROLE\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['ROLE'].invalid && (angForm.controls['ROLE'].dirty || angForm.controls['ROLE'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['ROLE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"USER_NAME\" maxlength=\"2000\" class=\"form-control\"\r\n                                        placeholder=\" \" id=\"label-name\" required=\"\" pattern=\"^[A-Za-z\\./ -]+$\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\" formControlName=\"USER_NAME\">\r\n                                    <label for=\"USER_NAME\">User Name<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['USER_NAME'].invalid && (angForm.controls['USER_NAME'].dirty || angForm.controls['USER_NAME'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['USER_NAME'].errors?.pattern || angForm.controls['USER_NAME'].errors?.required || angForm.controls['USER_NAME'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"form-group input-group\">\r\n                                <!-- pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" -->\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"PASSWORD\" class=\"form-control\" placeholder=\" \" maxlength=\"12\" minlength=\"8\"\r\n                                         title=\"Enter password of minlength  and 8 maxlength 12 \"\r\n                                        id=\"PASSWORD\" formControlName=\"PASSWORD\">\r\n                                    <label for=\"PASSWORD\">Password</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['PASSWORD'].invalid && (angForm.controls['PASSWORD'].dirty || angForm.controls['PASSWORD'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['PASSWORD'].errors?.pattern\">\r\n                                    Enter valid password\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-1\">\r\n                            <label for=\"status\"> Status</label>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"STATUS\"\r\n                                            checked=\"checked\" value=\"active\"\r\n                                            formControlName=\"STATUS\">\r\n                                        <i class=\"helper\"></i>Active\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"STATUS\"\r\n                                            checked=\"checked\" value=\"inactive\"\r\n                                            formControlName=\"STATUS\">\r\n                                        <i class=\"helper\"></i>Inactive\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"col-md\">\r\n                                <div class=\"form-group form-primary form-static-label\" style=\"width: 108%;margin-left: -4%;\">\r\n                                    <ng-select [ngClass]=\"'ng-select'\" [options]=\"barnchData\" [multiple]=\"false\" placeholder=\"Branch\" formControlName=\"branchId\">\r\n                                    </ng-select>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['branchId'].invalid && (angForm.controls['branchId'].dirty || angForm.controls['branchId'].touched)\" class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"angForm.controls['branchId'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"userdef?.length != 0\">\r\n                                    <tr *ngFor=\"let data of userdef\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                            <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                                        </td>\r\n                                    \r\n                                        <td>{{ data.F_NAME }}</td>\r\n                                        <td>{{ data.L_NAME }}</td>\r\n                                        <td>{{ data.DOB }}</td>\r\n                                        <td>{{ data.MOB_NO }}</td>\r\n                                        <td>{{ data.EMAIL }}</td>\r\n                                        <td>{{ data.Role.NAME }}</td>\r\n                                        <td>{{ data.USER_NAME }}</td>\r\n                                        <!-- <td>{{ data.PASSWORD }}</td> -->\r\n                                        <td>{{ data.STATUS }}</td>\r\n                                        <!-- <td>{{ data.USER_CREATED_AT }}</td> -->\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"userdef?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search first nmae\" name=\"F_NAME\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Last Name\" name=\"L_NAME\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search DOB\" name=\"DOB\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search MOB_NO\" name=\"MOB_NO\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search EMAIL\" name=\"EMAIL\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search ROLE\" name=\"ROLE\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search USER_NAME\" name=\"USER_NAME\"></th>\r\n                                        <!-- <th><input type=\"text\" placeholder=\"Search PASSWORD\" name=\"PASSWORD\"></th> -->\r\n                                        <th><input type=\"text\" placeholder=\"Search STATUS\" name=\"STATUS\"></th>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UserDefinationComponent } from './user-defination.component';\r\nimport { UserDefinationRoutingModule } from './user-defination-routing.module';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport { UserdefinationServiceD} from '../../../shared/dropdownService/user-defination-dropdown.service';\r\nimport { OwnbranchMasterService } from '../../../shared/dropdownService/own-branch-master-dropdown.service';\r\nimport {UserDefinationService} from './user-defination.service'\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport {SelectModule} from 'ng-select';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UserDefinationRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DataTablesModule,\r\n    SelectModule\r\n\r\n  ],\r\n  declarations: [UserDefinationComponent],\r\n  providers:[UserdefinationServiceD,UserDefinationService,OwnbranchMasterService]\r\n})\r\nexport class UserDefinationModule { }\r\n"],"sourceRoot":"webpack:///"}