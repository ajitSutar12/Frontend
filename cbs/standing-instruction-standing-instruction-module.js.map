{"version":3,"sources":["./src/app/shared/elements/acountno.service.ts","./src/app/shared/elements/scheme1.service.ts","./src/app/theme/master/instruction/standing-instruction/standing-instruction-routing.module.ts","./src/app/theme/master/instruction/standing-instruction/standing-instruction.component.ts","./src/app/theme/master/instruction/standing-instruction/standing-instruction.component.html","./src/app/theme/master/instruction/standing-instruction/standing-instruction.module.ts"],"names":[],"mappings":"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","file":"standing-instruction-standing-instruction-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class AcountnoService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '12314142' },\r\n        { value: '1', label: '2142434' },\r\n        { value: '2', label: '2232323' },\r\n        { value: '3', label: '454545' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(AcountnoService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(AcountnoService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(AcountnoService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class Scheme1Service {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '111' },\r\n        { value: '1', label: '222' },\r\n        { value: '2', label: '333' },\r\n        { value: '3', label: 'NA' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(Scheme1Service.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(Scheme1Service.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(Scheme1Service.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { StandingInstructionComponent } from './standing-instruction.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StandingInstructionComponent,\r\n    data: {\r\n      title: 'Standing Instruction',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StandingInstructionRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\r\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-standing-instruction',\r\n  templateUrl: './standing-instruction.component.html',\r\n  styleUrls: ['./standing-instruction.component.scss']\r\n})\r\n\r\nexport class StandingInstructionComponent implements OnInit {\r\n  angForm: FormGroup;\r\n  //Datatable\r\n  dtExportButtonOptions: any = {};\r\n\r\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\r\n  b: Array<IOption> = this.AcountnoService.getCharacters();\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n\r\n  private dataSub: Subscription = null;\r\n\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n\r\n  //variable for checkbox and radio button \r\n  isIsAutoBalanceTransferRemainingthisMinimumBalance: boolean = false;\r\n\r\n  message = {\r\n    Date: \"\",\r\n    StartFrom: \"\",\r\n    InstructionNo: \" \",\r\n    NextExecutionOn: \"\",\r\n    LastExecutedOn: \"\",\r\n    Day: \" \",\r\n    TransactionAmount: \" \",\r\n    IsAutoBalanceTransferRemainingthisMinimumBalance: \" \",\r\n\r\n  };\r\n\r\n  constructor(private fb: FormBuilder, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.dtExportButtonOptions = {\r\n      ajax: 'fake-data/standing-instruction.json',\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"btn btn-outline-primary btn-sm\"id=\"editbtn\">Edit</button>' + ' ' + '<button  id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Date',\r\n          data: 'Date'\r\n        },\r\n        {\r\n          title: 'Start From',\r\n          data: 'StartFrom'\r\n        },\r\n        {\r\n          title: 'Instruction No',\r\n          data: 'InstructionNo'\r\n        }, {\r\n          title: 'Next Execution On',\r\n          data: 'NextExecutionOn'\r\n        },\r\n        {\r\n          title: 'Last Executed On',\r\n          data: 'LastExecutedOn'\r\n        },\r\n        {\r\n          title: 'Day',\r\n          data: 'Day'\r\n        }, {\r\n          title: 'Transaction Amount',\r\n          data: 'TransactionAmount'\r\n        },\r\n        {\r\n          title: 'IsAutoBalanceTransferRemainingthisMinimumBalance',\r\n          data: 'IsAutoBalanceTransferRemainingthisMinimumBalance'\r\n        },],\r\n      dom: 'Bfrtip',\r\n      buttons: [\r\n        'copy',\r\n        'print',\r\n        'excel',\r\n        'csv'\r\n      ],\r\n      //row click handler code\r\n\r\n      /**\r\n* @rowCallback function for editClickHandler and delClickHandler to passes table data to there filds\r\n  @return row \r\n*/\r\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\r\n        const self = this;\r\n        $('td', row).off('click');\r\n        $('td', row).on('click', '#editbtn', () => {\r\n          self.editClickHandler(data);\r\n        });\r\n        $('td', row).on('click', '#delbtn', () => {\r\n          self.delClickHandler(data);\r\n        });\r\n        return row;\r\n      }\r\n    };\r\n\r\n\r\n\r\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n  }\r\n\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      Date: [''],\r\n      StartFrom: ['', [Validators.required]],\r\n      InstructionNo: ['',],\r\n      NextExecutionOn: [''],\r\n      LastExecutedOn: [''],\r\n      Day: ['', [Validators.pattern, Validators.required]],\r\n      Scheme: ['', [Validators.required]],\r\n      creditScheme: ['', [Validators.required]],\r\n      AccountNo: ['', [Validators.required]],\r\n      creditAccountNo: ['', [Validators.required]],\r\n      Debit: ['', [Validators.pattern, Validators.required]],\r\n      Credit: ['', [Validators.pattern, Validators.required]],\r\n      TransactionAmount: ['', [Validators.pattern, Validators.required]],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.angForm.valid);\r\n    if (this.angForm.valid) {\r\n      console.log(this.angForm.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n* @editClickHandler function for edit button clicked\r\n*/\r\n\r\n  editClickHandler(info: any): void {\r\n    this.message.Date = info.Date;\r\n    this.message.StartFrom = info.StartFrom;\r\n    this.message.InstructionNo = info.InstructionNo;\r\n    this.message.NextExecutionOn = info.NextExecutionOn;\r\n    this.message.LastExecutedOn = info.LastExecutedOn;\r\n    this.message.Day = info.Day;\r\n    this.message.TransactionAmount = info.TransactionAmount;\r\n    this.message.IsAutoBalanceTransferRemainingthisMinimumBalance = info.IsAutoBalanceTransferRemainingthisMinimumBalance;\r\n\r\n\r\n    //code for chekbox\r\n    if (this.message.IsAutoBalanceTransferRemainingthisMinimumBalance == \"Yes\") {\r\n      this.isIsAutoBalanceTransferRemainingthisMinimumBalance = true;   //return boolean value and display checked checkbox\r\n    }\r\n    else {\r\n      this.isIsAutoBalanceTransferRemainingthisMinimumBalance = false;   //return boolean value and display unchecked checkbox\r\n    }\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n  }\r\n\r\n  /**\r\n  * @updateData function for update data \r\n  */\r\n  updateData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    // this.form.reset();\r\n  }\r\n\r\n\r\n  /**\r\n  * @delClickHandler function for delete button \r\n    @Swal sweetalert2\r\n    @Swal.fire open a modal window to display message\r\n  */\r\n  delClickHandler(info: any): void {\r\n    this.message.Date = info.Date;\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete Date.\" + this.message.Date + \"  data\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      /* run code if our result  isConfirmed function Swal.fire open a modal window to display message\r\n      else if result is dismiss then it cancel and open a modal window to display cancel message\r\n       */\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your data has been deleted.',\r\n          'success'\r\n        )\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Standing Instruction</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\r\n                                        formControlName=\"Date\" value=\"{{ message.Date}}\" onfocus=\"(this.type='date')\"\r\n                                        id=\"date\" />\r\n                                    <label for=\"date\">Date</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\" checked=\"checked\">\r\n                                        <i class=\"helper\"></i>Month Begin<span class=\"required\"> </span>\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\">\r\n                                        <i class=\"helper\"></i>Month End<span class=\"required\"> </span>\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\">\r\n                                        <i class=\"helper\"></i>Specific Day<span class=\"required\"> </span>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"StartFrom\" required=\"\"\r\n                                        max=\"9999-12-31\" formControlName=\"StartFrom\" value=\"{{ message.StartFrom}}\"\r\n                                        onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"StartFrom\">Start From <sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['StartFrom'].invalid && (angForm.controls['StartFrom'].dirty || angForm.controls['StartFrom'].touched)\"\r\n                                class='alert alert-danger'>\r\n                                <div *ngIf=\"angForm.controls['StartFrom'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"TotalAmount\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"InstructionNo\" value=\"{{ message.InstructionNo }}\"\r\n                                        formControlName=\"InstructionNo\">\r\n                                    <label for=\"InstructionNo\">Instruction No.</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"NextExecutionOn\"\r\n                                        max=\"9999-12-31\" formControlName=\"NextExecutionOn\"\r\n                                        value=\"{{ message.NextExecutionOn}}\" onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"NextExecutionOn\">Next Execution On</label>\r\n                                </span>\r\n                            </div>\r\n                            <!-- <div class=\"form-group form-primary form-static-label\">\r\n                                <input value=\"{{ message.NextExecutionOn }}\" class=\"form-control\" type=\"text\" onfocus=\"(this.type='date')\"  id=\"date\" name=\"AC_NDATE\" required />\r\n                                <span class=\"form-bar\"></span>\r\n                                <label class=\"float-label\">Next Execution On</label>\r\n                            </div> -->\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\r\n                                        formControlName=\"LastExecutedOn\" value=\"{{ message.LastExecutedOn}}\"\r\n                                        onfocus=\"(this.type='date')\" id=\"LastExecutedOn\" />\r\n                                    <label for=\"LastExecutedOn\">Last Executed On</label>\r\n                                </span>\r\n                            </div>\r\n                            <!-- <div class=\"form-group form-primary form-static-label\">\r\n                                <input value=\"{{ message.LastExecutedOn }}\" class=\"form-control\" type=\"text\" onfocus=\"(this.type='date')\"  id=\"date\" name=\"AC_NDATE\" required />\r\n                                <span class=\"form-bar\"></span>\r\n                                <label class=\"float-label\">Last Executed On</label>\r\n                            </div> -->\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Day\"\r\n                                        required=\"\" value=\"{{ message.Day }}\" pattern=\"^[0-9]+$\"\r\n                                        title=\"Input allowed only  0-9\" formControlName=\"Day\">\r\n                                    <label for=\"Day\">Day<sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Day'].invalid && (angForm.controls['Day'].dirty || angForm.controls['Day'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['Day'].errors?.pattern || angForm.controls['Day'].errors?.required\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div *ngIf=\"angForm.get('Day').hasError('required') && myform.submitted\"\r\n                                class='alert alert-danger'>This field is required</div> -->\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <h6>Debit A/C Details</h6>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                    placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"Scheme\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\r\n                                class='alert alert-danger'>\r\n                                <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                    placeholder=\"Account No *\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"AccountNo\">\r\n                                </ng-select>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"angForm.controls['AccountNo'].invalid && (angForm.controls['AccountNo'].dirty || angForm.controls['AccountNo'].touched)\"\r\n                                    class='alert alert-danger'>\r\n                                    <div *ngIf=\"angForm.controls['AccountNo'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Debit\"\r\n                                        required=\"\" pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\r\n                                        formControlName=\"Debit\">\r\n                                    <label for=\"Debit\">Debit Narration<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Debit'].invalid && (angForm.controls['Debit'].dirty || angForm.controls['Debit'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['Debit'].errors?.pattern || angForm.controls['Debit'].errors?.required\">\r\n                                    Input allowed only A-Za-z\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <h6>Credit A/C Details</h6>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                    placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"creditScheme\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['creditScheme'].invalid && (angForm.controls['creditScheme'].dirty || angForm.controls['creditScheme'].touched)\"\r\n                                class='alert alert-danger'>\r\n                                <div *ngIf=\"angForm.controls['creditScheme'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                    placeholder=\"Account No *\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"creditAccountNo\">\r\n                                </ng-select>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"angForm.controls['creditAccountNo'].invalid && (angForm.controls['creditAccountNo'].dirty || angForm.controls['creditAccountNo'].touched)\"\r\n                                    class='alert alert-danger'>\r\n                                    <div *ngIf=\"angForm.controls['creditAccountNo'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Credit\"\r\n                                        required=\"\" pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\r\n                                        formControlName=\"Credit\">\r\n                                    <label for=\"Credit\">Credit Narration<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Credit'].invalid && (angForm.controls['Credit'].dirty || angForm.controls['Credit'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['Credit'].errors?.pattern || angForm.controls['Credit'].errors?.required\">\r\n                                    Input allowed only A-Za-z\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"TransactionAmount\" required=\"\" value=\"{{ message.TransactionAmount }}\"\r\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\r\n                                        formControlName=\"TransactionAmount\">\r\n                                    <label for=\"TransactionAmount\">Transaction Amount<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['TransactionAmount'].invalid && (angForm.controls['TransactionAmount'].dirty || angForm.controls['TransactionAmount'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['TransactionAmount'].errors?.pattern || angForm.controls['TransactionAmount'].errors?.required\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"border-checkbox-section\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" name=\"DD_APPLICABLE\" id=\"checkbox1\"\r\n                                        [checked]=\"isIsAutoBalanceTransferRemainingthisMinimumBalance == true\">\r\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Auto Balance Transfer\r\n                                        Remaining this Minimum Balance</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\r\n                                [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\r\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StandingInstructionRoutingModule } from './standing-instruction-routing.module'\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { SelectModule } from 'ng-select'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\r\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { StandingInstructionComponent } from './standing-instruction.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DataTablesModule,\r\n    StandingInstructionRoutingModule,\r\n    SelectModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [StandingInstructionComponent],\r\n  providers: [Scheme1Service, AcountnoService]\r\n\r\n})\r\nexport class StandingInstructionModule { }\r\n"],"sourceRoot":"webpack:///"}