{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/elements/npcslab-master.service.ts","./src/app/theme/master/policy-settings/n-paclassification-slab-master/n-paclassification-slab-master-routing.module.ts","./src/app/theme/master/policy-settings/n-paclassification-slab-master/n-paclassification-slab-master.component.service.ts","./src/app/theme/master/policy-settings/n-paclassification-slab-master/n-paclassification-slab-master.component.ts","./src/app/theme/master/policy-settings/n-paclassification-slab-master/n-paclassification-slab-master.component.html","./src/app/theme/master/policy-settings/n-paclassification-slab-master/n-paclassification-slab-master.module.ts"],"names":[],"mappings":"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","file":"n-paclassification-slab-master-n-paclassification-slab-master-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class npcslabMasterService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Standard'},\r\n    {value: '1', label: 'Sub Standard'},\r\n    {value: '2', label: 'Heading'},\r\n    {value: '3', label: 'Doubtful Assets'},\r\n    {value: '4', label: 'Loss Assets'}\r\n    \r\n  ];\r\n\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(npcslabMasterService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(npcslabMasterService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(npcslabMasterService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NPAClassificationSlabMasterComponent} from './n-paclassification-slab-master.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NPAClassificationSlabMasterComponent,\r\n    data: {\r\n      title: 'NPA Classification Slab Master',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NPAClassificationSlabMasterRoutingModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { environment } from \"../../../../../environments/environment\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport Swal from \"sweetalert2\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReceiptService {\r\n  url = environment.base_url;\r\n  handleError:any;\r\n\r\n  constructor(private http: HttpClient) {}\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    console.log(data);\r\n    return this.http.post(this.url + \"/abc\", data).pipe(\r\n      map((res) => res),\r\n      catchError((error) => {\r\n        Swal.fire(\"Please Input Proper Data !\");\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n   // For append data\r\n   getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/xyz' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/pqr', data);\r\n  }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n      console.log(\"deleted\");\r\n      return this.http.delete(this.url + '/xyz' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { npcslabMasterService } from '../../../../shared/elements/npcslab-master.service';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs';\r\nimport{ReceiptService} from './n-paclassification-slab-master.component.service';\r\n\r\n\r\ninterface receiptinterface{\r\n  LastReceiptNo:string,\r\n  ReceiptType: number,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-n-paclassification-slab-master',\r\n  templateUrl: './n-paclassification-slab-master.component.html',\r\n  styleUrls: ['./n-paclassification-slab-master.component.scss']\r\n})\r\nexport class NPAClassificationSlabMasterComponent implements OnInit {\r\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\r\n\r\n  angForm: FormGroup;\r\n  dtExportButtonOptions: any = {};\r\n  dtElement: DataTableDirective;\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n\r\n  //title select variables\r\n  simpleOption: Array<IOption> = this.npcslabMasterService.getCharacters();\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n\r\n  private dataSub: Subscription = null;\r\n  //variables for  add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n\r\n  constructor(public npcslabMasterService: npcslabMasterService, private fb: FormBuilder, private npaservice :ReceiptService) { this.createForm(); }\r\n  //object created to get data when row is clicked\r\n  message = {\r\n    EffectiveDate: \"\",\r\n    BaseDays: \"\"\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    this.dtExportButtonOptions = {\r\n      ajax: 'fake-data/npcslab_master.json',\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\r\n          }\r\n        },\r\n        {\r\n          data: 'SerialNo',\r\n          title: 'Serial No'\r\n        },\r\n        {\r\n          data: 'NPAClass',\r\n          title: 'NPAClass'\r\n        },\r\n        {\r\n          data: 'SubClassNo',\r\n          title: 'SubClassNo'\r\n        },\r\n        {\r\n          data: 'NPAClassDescription',\r\n          title: 'NPA Class Description'\r\n        },\r\n        {\r\n          data: 'FromDays',\r\n          title: 'From Days'\r\n        },\r\n        {\r\n          data: 'FromMonths',\r\n          title: 'From Months'\r\n        },\r\n        {\r\n          data: 'ToDays',\r\n          title: 'To Days'\r\n        },\r\n        {\r\n          data: 'ToMonths',\r\n          title: 'To Months'\r\n        },\r\n\r\n        {\r\n          data: 'SecuredPercent',\r\n          title: 'Secured Percent'\r\n        },\r\n        {\r\n          data: 'UnSecuredPercent',\r\n          title: 'UnSecured Percent'\r\n        }\r\n      ],\r\n      dom: 'Bfrtip',\r\n      buttons: [\r\n        'copy',\r\n        'print',\r\n        'excel',\r\n        'csv'\r\n      ],\r\n      //row click handler code\r\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\r\n        const self = this;\r\n        $('td', row).off('click');\r\n        $('td', row).on('click', '#editbtn', () => {\r\n          self.editClickHandler(data);\r\n        });\r\n        $('td', row).on('click', '#delbtn', () => {\r\n          self.delClickHandler(data);\r\n        });\r\n        return row;\r\n      }\r\n    };\r\n    this.runTimer();\r\n    this.dataSub = this.npcslabMasterService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      BaseDays: ['', [Validators.pattern]],\r\n      EffectiveDate:      ['', [Validators.required]],\r\n    });\r\n  }\r\n  submit() {\r\n    console.log(this.angForm.valid);\r\n    if (this.angForm.valid) {\r\n      // console.log(this.angForm.value);\r\n    }\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'LastReceiptNo': formVal.LastReceiptNo,\r\n      'ReceiptType': formVal.ReceiptType,\r\n    };\r\n    // console.log(this.angForm.value);\r\n    this.npaservice.postData(dataToSend).subscribe(\r\n      (data1) => {\r\n        Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\r\n        // to reload after insertion of data\r\n        // this.rerender();\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  //function for edit button clicked\r\n  editClickHandler(info: any): void {\r\n    this.message.BaseDays = info.BaseDays;\r\n    this.message.EffectiveDate = info.EffectiveDate;\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n  }\r\n  //function toggle update to add button\r\n  updateData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n  }\r\n  //function for delete button clicked\r\n  delClickHandler(info: any): void {\r\n    this.message.EffectiveDate = info.EffectiveDate;\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete Serial No.\" + this.message.EffectiveDate + \"  data\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your data has been deleted.',\r\n          'success'\r\n        )\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.myInputField.nativeElement.focus();\r\n    \r\n  }\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>NPA Classification Master</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novaliEffectiveDate  #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"EffectiveDate\" class=\"form-control\" placeholder=\" \" required=\"\"\r\n                                    #autofocus  value=\"{{ message.EffectiveDate }}\" max=\"9999-12-31\" id=\"EffectiveDate\"\r\n                                        onfocus=\"(this.type='EffectiveDate')\" formControlName=\"EffectiveDate\">\r\n                                    <label for=\"EffectiveDate\">Effective EffectiveDate<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['EffectiveDate'].invalid && (angForm.controls['EffectiveDate'].dirty || angForm.controls['EffectiveDate'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['EffectiveDate'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"footer-email\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"BaseDays\" value=\"{{ message.BaseDays }}\" pattern=\"^[0-9]+$\"\r\n                                        title=\"Input allowed only  0-9\" formControlName=\"BaseDays\">\r\n                                    <label for=\"BaseDays\">Base Days</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['BaseDays'].invalid && (angForm.controls['BaseDays'].dirty || angForm.controls['BaseDays'].touched)\" class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BaseDays'].errors?.pattern\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\" [disabled]=\"angForm.invalid\"(click)=\"submit(angForm.value)\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NPAClassificationSlabMasterComponent } from './n-paclassification-slab-master.component';\r\nimport { NPAClassificationSlabMasterRoutingModule } from './n-paclassification-slab-master-routing.module';\r\nimport { FormsModule,ReactiveFormsModule  }   from '@angular/forms';\r\n\r\nimport { npcslabMasterService} from '../../../../shared/elements/npcslab-master.service';\r\nimport {SelectModule} from 'ng-select';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NPAClassificationSlabMasterRoutingModule,\r\n    DataTablesModule,\r\n    SelectModule,\r\n    NgbModule,\r\n    FormsModule,ReactiveFormsModule\r\n   \r\n  ],\r\n  declarations: [NPAClassificationSlabMasterComponent],\r\n  providers: [npcslabMasterService,{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },]\r\n})\r\nexport class NPAClassificationSlabMasterModule { }\r\n"],"sourceRoot":"webpack:///"}