{"version":3,"sources":["./src/app/shared/dropdownService/salary-division-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry-routing.module.ts","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry.component.ts","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry.component.html","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry.module.ts","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry.service.ts"],"names":[],"mappings":"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","file":"year-wise-unpaid-dividend-entry-year-wise-unpaid-dividend-entry-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SalaryDMasterdropdownService {\r\n    salaryObject = new Array();\r\n    // // salary-division-master\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getSalaryDMasterList() {\r\n        this.salaryObject = []\r\n        return this.http.get<any>(this.url + '/salary-division-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.NAME, value: `${element.NAME}` };\r\n                    this.salaryObject.push(obj)\r\n                });\r\n                return this.salaryObject;\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getSchemeCodeList() {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL+' '+element.S_NAME, value: `${element.id}` };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { YearWiseUnpaidDividendEntryComponent } from './year-wise-unpaid-dividend-entry.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: YearWiseUnpaidDividendEntryComponent,\r\n    data: {\r\n      title: 'Year Wise Unpaid Dividend Entry',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class YearWiseUnpaidDividendEntryRoutingModule { }\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n// Creating and maintaining form fields with validation \r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// Displaying Sweet Alert\r\nimport Swal from 'sweetalert2';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\n// Service File For Handling CRUD Operation\r\nimport { YearwiseunpaidService } from './year-wise-unpaid-dividend-entry.service';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n// dynamic dropdown\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SalaryDMasterdropdownService } from '../../../../shared/dropdownService/salary-division-master-dropdown.service';\r\n// import { ShareMasterDropdownService } from '../../../../shared/dropdownService/share-master-dropdown.service';\r\n\r\nimport { first } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\nimport { ShareMasterService } from '../../customer/shares-master/shares-master.service'\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n\r\n\r\n// For fetching values from backend\r\ninterface Yearwisedividend {\r\n  ID: number,\r\n  ACNOTYPE: string;\r\n  ACTYPE: string,\r\n  AC_SALARYDIVISION_CODE: number,\r\n  WARRENT_DATE: Date,\r\n  DIV_FROM_YEAR: number,\r\n  DIV_TO_YEAR: number,\r\n  AC_NO: number,\r\n  TOTAL_SHARES: number,\r\n  MEMBER_CLOSE_DATE: Date,\r\n  DIVIDEND_AMOUNT: number,\r\n  // AC_NAME:string,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-year-wise-unpaid-dividend-entry',\r\n  templateUrl: './year-wise-unpaid-dividend-entry.component.html',\r\n  styleUrls: ['./year-wise-unpaid-dividend-entry.component.scss']\r\n})\r\n\r\nexport class YearWiseUnpaidDividendEntryComponent implements AfterViewInit, OnDestroy, OnInit {\r\n  acType: string = \"\";\r\n\r\n  //api\r\n  url = environment.base_url;\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  yearwiseunpaid: Yearwisedividend[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  newbtnShow: boolean = false;\r\n\r\n  //variable to get Id to update\r\n  updateID: number = 0;\r\n\r\n  // column search variable\r\n  filterData = {};\r\n  SchemeCodeObject: any[];\r\n  SalaryDMasterObject: any;\r\n  ShareMasterObject: any[];\r\n  ShareMasterObjectB: any[];\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private YearwiseunpaidService: YearwiseunpaidService,\r\n    private SalaryDMasterdropdownService: SalaryDMasterdropdownService,\r\n    // private ShareMasterDropdownService: ShareMasterDropdownService,\r\n    private fb: FormBuilder,\r\n\r\n    private SchemeCodeDropdownService: SchemeCodeDropdownService,) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: \"full_numbers\",\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n\r\n        dataTableParameters.columns.forEach((element) => {\r\n          if (element.search.value != \"\") {\r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          } else {\r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if (this.filterData.hasOwnProperty(element.data)) {\r\n              let value = this.filterData[getColumnName];\r\n              if (columnValue != undefined || value != undefined) {\r\n                delete this.filterData[element.data];\r\n              }\r\n            }\r\n          }\r\n        });\r\n        dataTableParameters[\"filterData\"] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            this.url + \"/year-wise-unpaid-dividend-entry\",\r\n            dataTableParameters\r\n          )\r\n          .subscribe((resp) => {\r\n            this.yearwiseunpaid = resp.data;\r\n            console.log('fetch', this.yearwiseunpaid);\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: [],\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Scheme',\r\n          data: 'ACTYPE'\r\n        }, {\r\n          title: 'Salary Division',\r\n          data: 'AC_SALARYDIVISION_CODE'\r\n        }, {\r\n          title: 'Warrant Date',\r\n          data: 'WARRENT_DATE'\r\n        }, {\r\n          title: 'Dividend Year From',\r\n          data: 'DIV_FROM_YEAR'\r\n        }, {\r\n          title: 'To',\r\n          data: 'DIV_TO_YEAR'\r\n        }, {\r\n          title: 'Member From',\r\n          data: 'AC_NO'\r\n        }, {\r\n          title: 'Member To',\r\n          data: 'AC_NO'\r\n        }, {\r\n          title: 'Total Amount',\r\n          data: 'TOTAL_SHARES'\r\n        }, {\r\n          title: 'Member No',\r\n          data: 'AC_NO'\r\n        },\r\n        // {\r\n        //   title: 'Member Name',\r\n        //   data: 'AC_NAME'\r\n        // },\r\n        {\r\n          title: 'Dividend Amount',\r\n          data: 'DIVIDEND_AMOUNT'\r\n        }, {\r\n          title: 'Close Date',\r\n          data: 'MEMBER_CLOSE_DATE'\r\n        }],\r\n\r\n\r\n\r\n\r\n\r\n\r\n      dom: 'Blrtip',\r\n    };\r\n\r\n\r\n\r\n    this.SchemeCodeDropdownService.getSchemeCodeList().pipe(first()).subscribe(data => {\r\n      this.SchemeCodeObject = data;\r\n    })\r\n    this.SalaryDMasterdropdownService.getSalaryDMasterList().pipe(first()).subscribe(data => {\r\n      this.SalaryDMasterObject = data;\r\n    })\r\n    // this.ShareMasterDropdownService.getGLAccountMasterList().pipe(first()).subscribe(data => {\r\n    //   this.ShareMasterObject = data;\r\n    //   this.ShareMasterObjectB = data;\r\n    // })\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n\r\n      ACNOTYPE: ['SH'],\r\n      ACTYPE: [''],\r\n      AC_SALARYDIVISION_CODE: [''],\r\n      WARRENT_DATE: [''],\r\n      DIV_FROM_YEAR: [''],\r\n      DIV_TO_YEAR: [''],\r\n      AC_NO: [''],\r\n      TOTAL_SHARES: [''],\r\n      MEMBER_CLOSE_DATE: [''],\r\n      DIVIDEND_AMOUNT: [''],\r\n      // AC_NAME:[''],\r\n    });\r\n  }\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n\r\n      'ACNOTYPE': formVal.ACNOTYPE,\r\n      'ACTYPE': formVal.ACTYPE,\r\n      'AC_SALARYDIVISION_CODE': formVal.AC_SALARYDIVISION_CODE,\r\n      'WARRENT_DATE': formVal.WARRENT_DATE,\r\n      'DIV_FROM_YEAR': formVal.DIV_FROM_YEAR,\r\n      'DIV_TO_YEAR': formVal.DIV_TO_YEAR,\r\n      'AC_NO': formVal.AC_NO,\r\n      'TOTAL_SHARES': formVal.TOTAL_SHARES,\r\n      'MEMBER_CLOSE_DATE': formVal.MEMBER_CLOSE_DATE,\r\n      'DIVIDEND_AMOUNT': formVal.DIVIDEND_AMOUNT,\r\n      // 'AC_NAME':formVal.AC_NAME,\r\n    }\r\n    this.YearwiseunpaidService.postData(dataToSend).subscribe(data1 => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.rerender();\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n    //To clear form\r\n    this.resetForm();\r\n  }\r\n\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.newbtnShow = false;\r\n    this.YearwiseunpaidService.getFormData(id).subscribe(data => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        'ACNOTYPE': data.ACNOTYPE,\r\n        'ACTYPE': data.ACTYPE,\r\n        'AC_SALARYDIVISION_CODE': data.AC_SALARYDIVISION_CODE,\r\n        'WARRENT_DATE': data.WARRENT_DATE,\r\n        'DIV_FROM_YEAR': data.DIV_FROM_YEAR,\r\n        'DIV_TO_YEAR': data.DIV_TO_YEAR,\r\n        'AC_NO': data.AC_NO,\r\n        'TOTAL_SHARES': data.TOTAL_SHARES,\r\n        'MEMBER_CLOSE_DATE': data.MEMBER_CLOSE_DATE,\r\n        'DIVIDEND_AMOUNT': data.DIVIDEND_AMOUNT,\r\n        // 'AC_NAME':data.AC_NAME,\r\n      })\r\n    })\r\n  }\r\n  //Method for update data \r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    this.YearwiseunpaidService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.newbtnShow = false;\r\n      this.rerender();\r\n      this.resetForm();\r\n    })\r\n  }\r\n  addNewData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    this.newbtnShow = false;\r\n    this.resetForm();\r\n  }\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete narration data.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.YearwiseunpaidService.deleteData(id).subscribe(data1 => {\r\n          this.yearwiseunpaid = data1;\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n        }), (error) => {\r\n          console.log(error)\r\n        }\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          debugger\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          } else {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<!-- Year Wise Unpaid Dividend Opening Entry -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Year Wise Unpaid Dividend Opening Entry</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"ShareMasterObject\" [multiple]=\"false\"\r\n                                    placeholder=\"Scheme *\" required title=\"Compulsory Selection\" [(ngModel)]=\"acType\"  (selected)=\"acType\"\r\n                                    formControlName=\"ACTYPE\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['ACTYPE'].invalid && (angForm.controls['ACTYPE'].dirty || angForm.controls['ACTYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['ACTYPE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"SalaryDMasterObject\" [multiple]=\"false\"\r\n                                    placeholder=\"Salary Division\" formControlName=\"AC_SALARYDIVISION_CODE\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_SALARYDIVISION_CODE'].invalid && (angForm.controls['AC_SALARYDIVISION_CODE'].dirty || angForm.controls['AC_SALARYDIVISION_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_SALARYDIVISION_CODE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"WARRENT_DATE\" required=\"\"\r\n                                        max=\"9999-12-31\" formControlName=\"WARRENT_DATE\" value=\"\"\r\n                                        onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"WARRENT_DATE\">Div.Warrant Date <sub class=\"required\">*</sub> </label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['WARRENT_DATE'].invalid && (angForm.controls['WARRENT_DATE'].dirty || angForm.controls['WARRENT_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['WARRENT_DATE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"DIV_FROM_YEAR\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"DIV_FROM_YEAR\" required=\"\" value=\"\"\r\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only 0-9\"\r\n                                        formControlName=\"DIV_FROM_YEAR\" minlength=\"4\" maxlength=\"4\">\r\n                                    <label for=\"DIV_FROM_YEAR\">Dividend Year From <sub\r\n                                            class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['DIV_FROM_YEAR'].invalid && (angForm.controls['DIV_FROM_YEAR'].dirty || angForm.controls['DIV_FROM_YEAR'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['DIV_FROM_YEAR'].errors?.pattern || angForm.controls['DIV_FROM_YEAR'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"DIV_TO_YEAR\" class=\"form-control\" placeholder=\" \" id=\"DIV_TO_YEAR\"\r\n                                        required=\"\"  pattern=\"^[0-9]+$\"\r\n                                        title=\"Input allowed only 0-9\" minlength=\"4\" maxlength=\"4\" formControlName=\"DIV_TO_YEAR\">\r\n                                    <label for=\"DIV_TO_YEAR\">To *</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['DIV_TO_YEAR'].invalid && (angForm.controls['DIV_TO_YEAR'].dirty || angForm.controls['DIV_TO_YEAR'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['DIV_TO_YEAR'].errors?.pattern || angForm.controls['DIV_TO_YEAR'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        \r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"ShareMasterObject\" [multiple]=\"false\"\r\n                                    placeholder=\"Member From\" formControlName=\"AC_NO\">\r\n                                </ng-select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"ShareMasterObjectB\" [multiple]=\"false\"\r\n                                    placeholder=\"Member To \" formControlName=\"AC_NO\">\r\n                                </ng-select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"TOTAL_SHARES\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"TOTAL_SHARES\" \r\n                                        formControlName=\"TOTAL_SHARES\">\r\n                                    <label for=\"TOTAL_SHARES\">Total Amount</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                  \r\n                        \r\n\r\n                        <div class=\"row\">\r\n                            <table class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>Member no</th>\r\n                                        <th>Member name</th>\r\n                                        <th>Dividend Amount</th>\r\n                                        <th>Close Date</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td> \r\n                                            <input type=\"text\" name=\"AC_NO\" class=\"form-control\" placeholder=\" \" id=\"AC_NO\" pattern=\"^[0-9]+$\" title=\"Input allowed only 0-9\" formControlName=\"AC_NO\">\r\n                                        </td>\r\n                                        <td> <input type=\"text\" name=\"AC_NAME\" class=\"form-control\" placeholder=\" \" id=\"AC_NAME\" title=\"Input allowed only 0-9\" formControlName=\"AC_NAME\">\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"DIVIDEND_AMOUNT \" class=\"form-control\" placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"DIVIDEND_AMOUNT \" maxlength=\"20\" title=\"Input allowed only  0-9\" formControlName=\"DIVIDEND_AMOUNT \">\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"PENAL_INT_RATE\" class=\"form-control\" placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"PENAL_INT_RATE\" maxlength=\"20\" title=\"Input allowed only  0-9\" formControlName=\"PENAL_INT_RATE\">\r\n                                        </td>\r\n                                    </tr>\r\n    \r\n                                </tbody>\r\n                            </table>\r\n                           \r\n                        </div>\r\n                   \r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm\">\r\n                                <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\r\n                                    (click)=\"submit()\" [disabled]=\"angForm.invalid\">Add</button>\r\n                                <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\r\n                                [disabled]=\"angForm.invalid\"\r\n                                    *ngIf=\"updateShow\">Update</button>\r\n                            </div>\r\n                            <div class=\"col-sm-4\">\r\n                                <button class=\"btn btn-primary ripple light\" (click)=\"addNewData()\" *ngIf=\"newbtnShow\">New\r\n                                    </button>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    \r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"yearwiseunpaid?.length != 0\">\r\n                                    <tr *ngFor=\"let data of yearwiseunpaid\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button>\r\n                                        </td>\r\n                                        <td>{{ data.ACTYPE }}</td>\r\n                                        <td>{{ data.AC_SALARYDIVISION_CODE }}</td>\r\n                                        <td>{{ data.WARRENT_DATE }}</td>\r\n                                        <td>{{ data.DIV_FROM_YEAR }}</td>\r\n                                        <td>{{ data.DIV_TO_YEAR }}</td>\r\n                                        <td>{{ data.AC_NO }}</td>\r\n                                        <td>{{ data.TOTAL_SHARES }}</td>\r\n                                        <td>{{ data.MEMBER_CLOSE_DATE }}</td>\r\n                                        <td>{{ data.DIVIDEND_AMOUNT }}</td>\r\n                                      \r\n  \r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"yearwiseunpaid?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                  <tr>\r\n                                    <th></th>\r\n                                    \r\n                                    <th>\r\n                                      <input type=\"text\" placeholder=\"Search scheme\" name=\"ACTYPE\" />\r\n                                    </th>\r\n                                    <th>\r\n                                      <input type=\"text\" placeholder=\"Search salary division\" name=\"AC_SALARYDIVISION_CODE\" />\r\n                                    </th>\r\n                                    <th>\r\n                                      <input type=\"text\" placeholder=\"Search Warrantdate\" name=\"WARRENT_DATE\" />\r\n                                    </th>\r\n                                    <th>\r\n                                      <input type=\"text\" placeholder=\"Search from year\" name=\"DIV_FROM_YEAR\" />\r\n                                    </th>\r\n                                    <th>\r\n                                      <input type=\"text\" placeholder=\"Search ac no\" name=\"AC_NO\" />\r\n                                    </th>\r\n                                    <th>\r\n                                      <input type=\"text\" placeholder=\"Search total amt\" name=\"TOTAL_SHARES\" />\r\n                                    </th>\r\n                                    <th>\r\n                                      <input type=\"text\" placeholder=\"Search close date\" name=\"MEMBER_CLOSE_DATE\" />\r\n                                    </th>\r\n                                    <th>\r\n                                      <input type=\"text\" placeholder=\"Search dividend amt\" name=\"DIVIDEND_AMOUNT\" />\r\n                                    </th>\r\n                                    \r\n                                    \r\n                                  </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { YearWiseUnpaidDividendEntryRoutingModule } from './year-wise-unpaid-dividend-entry-routing.module';\r\nimport { YearWiseUnpaidDividendEntryComponent } from './year-wise-unpaid-dividend-entry.component';\r\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\r\nimport { MembernoService } from '../../../../shared/elements/memberno.service';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SelectModule } from 'ng-select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {YearwiseunpaidService} from './year-wise-unpaid-dividend-entry.service';\r\nimport{ SchemeCodeDropdownService} from '../../../../shared/dropdownService/scheme-code-dropdown.service';\r\nimport{ SalaryDMasterdropdownService} from '../../../../shared/dropdownService/salary-division-master-dropdown.service';\r\n// import{ ShareMasterDropdownService} from '../../../../shared/dropdownService/share-master-dropdown.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    YearWiseUnpaidDividendEntryRoutingModule,\r\n    DataTablesModule,\r\n    NgbModule,\r\n    SelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [YearWiseUnpaidDividendEntryComponent],\r\n  providers: [YearwiseunpaidService,\r\n     SchemeCodeDropdownService,\r\n     SalaryDMasterdropdownService,\r\n    //  ShareMasterDropdownService\r\n    ]\r\n\r\n})\r\nexport class YearWiseUnpaidDividendEntryModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../environments/environment';\r\nimport {ShareMasterService} from '../../../master/customer/shares-master/shares-master.service'\r\n\r\n@Injectable()\r\nexport class YearwiseunpaidService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  //url = \"http://localhost:4000/year-wise-unpaid-dividend-entry\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/year-wise-unpaid-dividend-entry/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/year-wise-unpaid-dividend-entry/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/year-wise-unpaid-dividend-entry/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/year-wise-unpaid-dividend-entry/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}