{"version":3,"sources":["./src/app/shared/dropdownService/salary-division-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/shared/dropdownService/share-master-dropdown.service.ts","./src/app/shared/dropdownService/share-scheme-dropdown.Service.ts","./src/app/theme/master/customer/customer-id/customer-id.service.ts","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry-routing.module.ts","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry.component.ts","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry.component.html","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry.module.ts","./src/app/theme/master/shares/year-wise-unpaid-dividend-entry/year-wise-unpaid-dividend-entry.service.ts"],"names":[],"mappings":"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","file":"year-wise-unpaid-dividend-entry-year-wise-unpaid-dividend-entry-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SalaryDMasterdropdownService {\r\n    salaryObject = new Array();\r\n    // // salary-division-master\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getSalaryDMasterList() {\r\n        this.salaryObject = []\r\n        return this.http.get<any>(this.url + '/salary-division-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE +' '+element.NAME, value: `${element.NAME}` };\r\n                    this.salaryObject.push(obj)\r\n                });\r\n                return this.salaryObject;\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: `${element.id}`, name: element.S_APPL };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_NAME, value: `${element.S_ACNOTYPE}` };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class ShareMasterDropdownService {\r\n    sharecodeObject = new Array();\r\n    // url = \"http://localhost:4000/share-master\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getGLAccountMasterList() {\r\n        this.sharecodeObject = []\r\n        return this.http.get<any>(this.url + '/share-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: `${element.id}` , name: element.AC_NAME};\r\n                    this.sharecodeObject.push(obj)\r\n                });\r\n                return this.sharecodeObject;\r\n            }));\r\n    }\r\n    public getGLAccountMasterNameList() {\r\n        this.sharecodeObject = []\r\n        return this.http.get<any>(this.url + '/share-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NAME + ' ' + element.AC_NAME + ' ', value: `${element.AC_NAME}` , name: element.AC_NAME};\r\n                    this.sharecodeObject.push(obj)\r\n                });\r\n                return this.sharecodeObject;\r\n            }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class ShareSchemeDropdownService {\r\n    ShareSchemeObject = new Array();\r\n    // url = \"http://localhost:4000/shares-scheme\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getShareschemelist() {\r\n        this.ShareSchemeObject = []\r\n        return this.http.get<any>(this.url + '/shares-scheme')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_APPL + ' ', value: `${element.id}` };\r\n                    this.ShareSchemeObject.push(obj)\r\n                });\r\n                return this.ShareSchemeObject;\r\n            }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../environments/environment'\r\n@Injectable()\r\nexport class CustomerIdService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    // // customer-id\";\r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/customer-id/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/customer-id/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/customer-id/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/customer-id/delete/' + id).pipe(catchError(this.handleError));\r\n    }  \r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { YearWiseUnpaidDividendEntryComponent } from './year-wise-unpaid-dividend-entry.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: YearWiseUnpaidDividendEntryComponent,\r\n    data: {\r\n      title: 'Year Wise Unpaid Dividend Entry',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class YearWiseUnpaidDividendEntryRoutingModule { }\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild, } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n// Creating and maintaining form fields with validation\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\n\r\n// Displaying Sweet Alert\r\nimport Swal from \"sweetalert2\";\r\n\r\n// Angular Datatable Directive\r\nimport { DataTableDirective } from \"angular-datatables\";\r\n\r\n// Used to Call API\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n\r\nimport { first } from \"rxjs/operators\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n// Service File For Handling CRUD Operation\r\nimport { YearwiseunpaidService } from \"./year-wise-unpaid-dividend-entry.service\";\r\n\r\n\r\n// dynamic dropdown\r\nimport { SchemeCodeDropdownService } from \"../../../../shared/dropdownService/scheme-code-dropdown.service\";\r\nimport { SalaryDMasterdropdownService } from \"../../../../shared/dropdownService/salary-division-master-dropdown.service\";\r\nimport { ShareMasterDropdownService } from \"../../../../shared/dropdownService/share-master-dropdown.service\";\r\nimport { ShareSchemeDropdownService } from \"../../../../shared/dropdownService/share-scheme-dropdown.Service\";\r\nimport { ShareMasterService } from \"../../customer/shares-master/shares-master.service\";\r\nimport { CustomerIdService } from \"../../customer/customer-id/customer-id.service\";\r\n\r\n\r\n\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// for fetching values from shmaster\r\ninterface Shareyearwisedividend {\r\n  AC_NO: string;\r\n  AC_NAME: string;\r\n  DIVIDEND_AMOUNT: string;\r\n  MEMBER_CLOSE_DATE: string;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface Yearwisedividend {\r\n  ID: number;\r\n  ACNOTYPE: string;\r\n  ACTYPE: string;\r\n  AC_SALARYDIVISION_CODE: number;\r\n  WARRENT_DATE: Date;\r\n  DIV_FROM_YEAR: number;\r\n  DIV_TO_YEAR: number;\r\n  AC_NO: number;\r\n  TOTAL_SHARES: number;\r\n  MEMBER_CLOSE_DATE: Date;\r\n  DIVIDEND_AMOUNT: number;\r\n  AC_NAME: string;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-year-wise-unpaid-dividend-entry\",\r\n  templateUrl: \"./year-wise-unpaid-dividend-entry.component.html\",\r\n  styleUrls: [\"./year-wise-unpaid-dividend-entry.component.scss\"],\r\n})\r\n\r\n\r\nexport class YearWiseUnpaidDividendEntryComponent implements AfterViewInit, OnDestroy, OnInit {\r\n  //api\r\n  url = environment.base_url;\r\n\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  //datatable for values from shmaster\r\n  dtexportshareOption: DataTables.Settings = {};\r\n  Data: any;\r\n\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = \"start\";\r\n  active = 1;\r\n  activeKeep = 1;\r\n\r\n  // Variables for search\r\n  filterObject: { name: string; type: string }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  newbtnShow: boolean = false;\r\n\r\n  //variable to get Id to update\r\n  updateID: number = 0;\r\n\r\n  //  filter variable\r\n  filterData = {};\r\n\r\n  // Store data from backend\r\n  yearwiseunpaid: Yearwisedividend[];\r\n  sharemember: Shareyearwisedividend[];\r\n\r\n\r\n  //Scheme type variable\r\n  schemeType: string = \"SH\";\r\n\r\n  // dropdown options\r\n  SchemeCodeObject: any[];//S_NAME from Schemedata\r\n  SalaryDMasterObject: any;//AC_SALARYDIVISION_CODE FROM SHMASTER\r\n  ShareMasterObject: any[];//AC_NO From SHMASTER -member from\r\n  ShareMasterObjectB: any[];//AC_NO From SHMASTER -member to\r\n  shareNameObject: any[];\r\n  acType: string = \"\";\r\n\r\n\r\n  //todays date\r\n  date = new Date();\r\n  // year: Date;\r\n  year =  new Date().getFullYear();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private YearwiseunpaidService: YearwiseunpaidService,\r\n    private fb: FormBuilder,\r\n    private SalaryDMasterdropdownService: SalaryDMasterdropdownService,\r\n    private ShareMasterDropdownService: ShareMasterDropdownService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private customerIdService: CustomerIdService,\r\n    private ShareSchemeDropdownService: ShareSchemeDropdownService,\r\n    private ShareMasterService: ShareMasterService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    // fetching records from SHmaster\r\n    this.dtexportshareOption = {\r\n      pagingType: \"full_numbers\",\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n\r\n        dataTableParameters.columns.forEach((element) => {\r\n          if (element.search.value != \"\") {\r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          } else {\r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if (this.filterData.hasOwnProperty(element.data)) {\r\n              let value = this.filterData[getColumnName];\r\n              if (columnValue != undefined || value != undefined) {\r\n                delete this.filterData[element.data];\r\n              }\r\n            }\r\n          }\r\n        });\r\n        dataTableParameters[\"filterData\"] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            this.url + \"/share-master\",\r\n            dataTableParameters\r\n          )\r\n          .subscribe((resp) => {\r\n            this.sharemember = resp.data;\r\n            console.log(\"fetch\", this.sharemember);\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: [],\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        // {\r\n        //   title: 'Action',\r\n        //   render: function (data: any, type: any, full: any) {\r\n        //     return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n        //   }\r\n        // },\r\n        {\r\n          title: \"Member no\",\r\n          data: \"AC_NO\",\r\n        },\r\n        {\r\n          title: \"Member name\",\r\n          data: \"AC_NAME\",\r\n        },\r\n        {\r\n          title: \"dividend amount\",\r\n          data: \"DIVIDEND_AMOUNT\",\r\n        },\r\n        {\r\n          title: \"close date\",\r\n          data: \"MEMBER_CLOSE_DATE\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: \"full_numbers\",\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n\r\n        dataTableParameters.columns.forEach((element) => {\r\n          if (element.search.value != \"\") {\r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          } else {\r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if (this.filterData.hasOwnProperty(element.data)) {\r\n              let value = this.filterData[getColumnName];\r\n              if (columnValue != undefined || value != undefined) {\r\n                delete this.filterData[element.data];\r\n              }\r\n            }\r\n          }\r\n        });\r\n        dataTableParameters[\"filterData\"] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            this.url + \"/year-wise-unpaid-dividend-entry\",\r\n            dataTableParameters\r\n          )\r\n          .subscribe((resp) => {\r\n            this.yearwiseunpaid = resp.data;\r\n            console.log(\"fetch\", this.yearwiseunpaid);\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: [],\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        {\r\n          title: \"Action\",\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          },\r\n        },\r\n        {\r\n          title: \"Scheme\",\r\n          data: \"ACTYPE\",\r\n        },\r\n        {\r\n          title: \"Salary Division\",\r\n          data: \"AC_SALARYDIVISION_CODE\",\r\n        },\r\n        {\r\n          title: \"Warrant Date\",\r\n          data: \"WARRENT_DATE\",\r\n        },\r\n        {\r\n          title: \"Dividend Year From\",\r\n          data: \"DIV_FROM_YEAR\",\r\n        },\r\n        {\r\n          title: \"To\",\r\n          data: \"DIV_TO_YEAR\",\r\n        },\r\n        {\r\n          title: \"Member From\",\r\n          data: \"AC_NO\",\r\n        },\r\n        {\r\n          title: \"Member To\",\r\n          data: \"AC_NO\",\r\n        },\r\n        {\r\n          title: \"Total Amount\",\r\n          data: \"TOTAL_SHARES\",\r\n        },\r\n        {\r\n          title: \"Member No\",\r\n          data: \"AC_NO\",\r\n        },\r\n        {\r\n          title: \"Member Name\",\r\n          data: \"AC_NAME\",\r\n        },\r\n        {\r\n          title: \"Dividend Amount\",\r\n          data: \"DIVIDEND_AMOUNT\",\r\n        },\r\n        {\r\n          title: \"Close Date\",\r\n          data: \"MEMBER_CLOSE_DATE\",\r\n        },\r\n      ],\r\n      dom: \"Blrtip\",\r\n    };\r\n\r\n    this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType)\r\n      .pipe(first())\r\n      .subscribe((data) => {\r\n        this.SchemeCodeObject = data;\r\n      });\r\n\r\n    this.SalaryDMasterdropdownService.getSalaryDMasterList()\r\n      .pipe(first())\r\n      .subscribe((data) => {\r\n        this.SalaryDMasterObject = data;\r\n      });\r\n\r\n    this.ShareMasterDropdownService.getGLAccountMasterList()\r\n      .pipe(first())\r\n      .subscribe((data) => {\r\n        this.ShareMasterObject = data;\r\n        this.ShareMasterObjectB = data;\r\n      });\r\n\r\n      this.ShareMasterDropdownService.getGLAccountMasterList()\r\n      .pipe(first())\r\n      .subscribe((data) => {\r\n        this.shareNameObject = data;\r\n      });\r\n  }\r\n\r\n  //get member name according member no\r\n  getIntroducerName(value: any) {\r\n    this.angForm.patchValue({\r\n      AC_INTRNAME: value.name\r\n    })\r\n  }\r\n //function to get existing customer data according selection\r\n getCustomer(id) {\r\n  this.customerIdService.getFormData(id).subscribe(data => {\r\n    this.angForm.patchValue({\r\n      AC_NAME: data.AC_NAME,\r\n      AC_MEMBNO: data.AC_MEMBNO,\r\n    })\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n  //formcontrols with validation\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      ACNOTYPE: [\"SH\"],\r\n      ACTYPE: [\"\"],\r\n      AC_SALARYDIVISION_CODE: [\"\"],\r\n      WARRENT_DATE: [\"\"],\r\n      DIV_FROM_YEAR: [\"\"],\r\n      DIV_TO_YEAR: [\"\"],\r\n      AC_NO: [\"\"],\r\n      TOTAL_SHARES: [\"\"],\r\n      MEMBER_CLOSE_DATE: [\"\"],\r\n      DIVIDEND_AMOUNT: [\"\"],\r\n      // AC_NAME:[''],\r\n    });\r\n  }\r\n\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'ACNOTYPE': formVal.ACNOTYPE,\r\n      'ACTYPE': formVal.ACTYPE,\r\n      'AC_SALARYDIVISION_CODE': formVal.AC_SALARYDIVISION_CODE,\r\n      'WARRENT_DATE': formVal.WARRENT_DATE,\r\n      'DIV_FROM_YEAR': formVal.DIV_FROM_YEAR,\r\n      'DIV_TO_YEAR': formVal.DIV_TO_YEAR,\r\n      'TOTAL_SHARES': formVal.TOTAL_SHARES,\r\n      'FieldData': this.sharemember,\r\n\r\n      // 'AC_NO': formVal.AC_NO,\r\n      // 'MEMBER_CLOSE_DATE': formVal.MEMBER_CLOSE_DATE,\r\n      // 'DIVIDEND_AMOUNT': formVal.DIVIDEND_AMOUNT,\r\n      // 'AC_NAME':formVal.AC_NAME,\r\n    };\r\n    this.YearwiseunpaidService.postData(dataToSend).subscribe(\r\n      (data1) => {\r\n        Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\r\n        // to reload after insertion of data\r\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n          dtInstance.ajax.reload();\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    //To clear form\r\n    this.resetForm();\r\n    this.sharemember = []\r\n  }\r\n\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.newbtnShow = false;\r\n    this.YearwiseunpaidService.getFormData(id).subscribe((data) => {\r\n      this.updateID = data.id;\r\n      //get nominee to edit\r\n      this.angForm.setValue({\r\n        ACNOTYPE: data.ACNOTYPE,\r\n        ACTYPE: data.ACTYPE,\r\n        AC_SALARYDIVISION_CODE: data.AC_SALARYDIVISION_CODE,\r\n        WARRENT_DATE: data.WARRENT_DATE,\r\n        DIV_FROM_YEAR: data.DIV_FROM_YEAR,\r\n        DIV_TO_YEAR: data.DIV_TO_YEAR,\r\n        AC_NO: data.AC_NO,\r\n        TOTAL_SHARES: data.TOTAL_SHARES,\r\n        MEMBER_CLOSE_DATE: data.MEMBER_CLOSE_DATE,\r\n        DIVIDEND_AMOUNT: data.DIVIDEND_AMOUNT,\r\n        // 'AC_NAME':data.AC_NAME,\r\n      });\r\n    });\r\n  }\r\n\r\n  //Method for update data\r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data[\"id\"] = this.updateID;\r\n    \r\n    data['FieldData'] = this.sharemember\r\n    this.YearwiseunpaidService.updateData(data).subscribe(() => {\r\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.newbtnShow = false;\r\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n        dtInstance.ajax.reload();\r\n      });\r\n\r\n      this.resetForm();\r\n    });\r\n  }\r\n\r\n  //reset function while update\r\n  addNewData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    this.newbtnShow = false;\r\n\r\n    this.resetForm();\r\n  }\r\n\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to delete narration data.\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#229954\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.YearwiseunpaidService.deleteData(id).subscribe((data1) => {\r\n          this.yearwiseunpaid = data1;\r\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\r\n        }),\r\n          (error) => {\r\n            console.log(error);\r\n          };\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $(\"input\", this.footer()).on(\"keyup change\", function () {\r\n          debugger;\r\n          if (this[\"value\"] != \"\") {\r\n            that.search(this[\"value\"]).draw();\r\n          } else {\r\n            that.search(this[\"value\"]).draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  };\r\n\r\n\r\n  // function for selecting only year format\r\n\r\n  // $('.date-own').datepicker({\r\n  //   minViewMode: 2,\r\n  //   format: 'yyyy'\r\n  // });\r\n  \r\n \r\n \r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n\r\n      <div class=\"card-header\">\r\n        <h5>Year Wise Unpaid Dividend Opening Entry</h5>\r\n        <h6 style=\"float: right\">\r\n          <sub class=\"required\">* </sub>: Required Fields\r\n        </h6>\r\n      </div>\r\n\r\n      <form\r\n        action=\"javascript:\"\r\n        [formGroup]=\"angForm\"\r\n        novalidate\r\n        #myform=\"ngForm\"\r\n      >\r\n        <div class=\"card-block\">\r\n          <div class=\"row\">\r\n\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group form-primary form-static-label\">\r\n                <ng-select\r\n                  [ngClass]=\"'ng-select'\"\r\n                  [options]=\"SchemeCodeObject\"\r\n                  [multiple]=\"false\"\r\n                  placeholder=\"Scheme *\"\r\n                  required\r\n                  title=\"Compulsory Selection\"\r\n                  [(ngModel)]=\"acType\"\r\n                  (selected)=\"(acType)\"\r\n                  formControlName=\"ACTYPE\"\r\n                >\r\n                </ng-select>\r\n              </div>\r\n              <div\r\n                class=\"form-group form-primary form-static-label\"\r\n                *ngIf=\"\r\n                  angForm.controls['ACTYPE'].invalid &&\r\n                  (angForm.controls['ACTYPE'].dirty ||\r\n                    angForm.controls['ACTYPE'].touched)\r\n                \"\r\n                class=\"alert alert-danger\"\r\n              >\r\n                <div *ngIf=\"angForm.controls['ACTYPE'].errors?.required\">\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group form-primary form-static-label\">\r\n                <ng-select\r\n                  [ngClass]=\"'ng-select'\"\r\n                  [options]=\"SalaryDMasterObject\"\r\n                  [multiple]=\"false\"\r\n                  placeholder=\"Salary Division\"\r\n                  formControlName=\"AC_SALARYDIVISION_CODE\"\r\n                >\r\n                </ng-select>\r\n              </div>\r\n              <div\r\n                class=\"form-group form-primary form-static-label\"\r\n                *ngIf=\"\r\n                  angForm.controls['AC_SALARYDIVISION_CODE'].invalid &&\r\n                  (angForm.controls['AC_SALARYDIVISION_CODE'].dirty ||\r\n                    angForm.controls['AC_SALARYDIVISION_CODE'].touched)\r\n                \"\r\n                class=\"alert alert-danger\"\r\n              >\r\n                <div\r\n                  *ngIf=\"\r\n                    angForm.controls['AC_SALARYDIVISION_CODE'].errors?.required\r\n                  \"\r\n                >\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\" \"\r\n                    id=\"WARRENT_DATE\"\r\n                    required=\"\"\r\n                    max=\"{{ date | date: 'yyyy-MM-dd' }}\"\r\n                    formControlName=\"WARRENT_DATE\"\r\n                    value=\"\"\r\n                    onfocus=\"(this.type='date')\"\r\n                  />\r\n                  <label for=\"WARRENT_DATE\"\r\n                    >Div.Warrant Date <sub class=\"required\">*</sub>\r\n                  </label>\r\n                </span>\r\n              </div>\r\n              <div\r\n                class=\"form-group form-primary form-static-label\"\r\n                *ngIf=\"\r\n                  angForm.controls['WARRENT_DATE'].invalid &&\r\n                  (angForm.controls['WARRENT_DATE'].dirty ||\r\n                    angForm.controls['WARRENT_DATE'].touched)\r\n                \"\r\n                class=\"alert alert-danger\"\r\n              >\r\n                <div *ngIf=\"angForm.controls['WARRENT_DATE'].errors?.required\">\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"date-own form-control\"\r\n                    placeholder=\" \"\r\n                    id=\"datepicker\"\r\n                    required=\"\"\r\n                    max=\"{{ date }}\"\r\n                    formControlName=\"DIV_FROM_YEAR\"\r\n                    value=\"\"\r\n                    onfocus=\"(this.type='date')\"\r\n                  />\r\n                  <label for=\"DIV_FROM_YEAR\"\r\n                    >Dividend Year From <sub class=\"required\">*</sub>\r\n                  </label>\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"DIV_FROM_YEAR\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"DIV_FROM_YEAR\" required=\"\" value=\"\" pattern=\"^[0-9]+$\"\r\n                                        title=\"Input allowed only 0-9\" formControlName=\"DIV_FROM_YEAR\" minlength=\"4\"\r\n                                        maxlength=\"4\">\r\n                                    <label for=\"DIV_FROM_YEAR\">Dividend Year From <sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['DIV_FROM_YEAR'].invalid && (angForm.controls['DIV_FROM_YEAR'].dirty || angForm.controls['DIV_FROM_YEAR'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['DIV_FROM_YEAR'].errors?.pattern || angForm.controls['DIV_FROM_YEAR'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n\r\n            <!-- <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"DIV_TO_YEAR\"\r\n                    class=\"form-control\"\r\n                    placeholder=\" \"\r\n                    id=\"DIV_TO_YEAR\"\r\n                    required=\"\"\r\n                    pattern=\"^[0-9]+$\"\r\n                    title=\"Input allowed only 0-9\"\r\n                    minlength=\"4\"\r\n                    maxlength=\"4\"\r\n                    formControlName=\"DIV_TO_YEAR\"\r\n                  />\r\n                  <label for=\"DIV_TO_YEAR\">To *</label>\r\n                </span>\r\n              </div>\r\n              <div\r\n                class=\"form-group form-primary form-static-label\"\r\n                *ngIf=\"\r\n                  angForm.controls['DIV_TO_YEAR'].invalid &&\r\n                  (angForm.controls['DIV_TO_YEAR'].dirty ||\r\n                    angForm.controls['DIV_TO_YEAR'].touched)\r\n                \"\r\n                class=\"alert alert-danger\"\r\n              >\r\n                <div\r\n                  *ngIf=\"\r\n                    angForm.controls['DIV_TO_YEAR'].errors?.pattern ||\r\n                    angForm.controls['DIV_TO_YEAR'].errors?.required\r\n                  \"\r\n                >\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div> -->\r\n\r\n            <div class=\"col-sm\">\r\n                <div class=\"form-group input-group\">\r\n                  <span class=\"border-lable-flt\">\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"date-own form-control\"\r\n                      placeholder=\" \"\r\n                      id=\"DIV_TO_YEAR\"\r\n                      required=\"\"\r\n                      max=\"{{ year }}\"\r\n                      formControlName=\"DIV_TO_YEAR\"\r\n                      value=\"\"\r\n                      onfocus=\"(this.type='date')\"\r\n                    />\r\n                    <label for=\"DIV_TO_YEAR\"\r\n                      >Dividend Year To <sub class=\"required\">*</sub>\r\n                    </label>\r\n                  </span>\r\n                </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group form-primary form-static-label\">\r\n                <ng-select\r\n                  [ngClass]=\"'ng-select'\"\r\n                  [options]=\"ShareMasterObject\"\r\n                  [multiple]=\"false\"\r\n                  placeholder=\"Member From\"\r\n                  formControlName=\"AC_NO\"\r\n                >\r\n                </ng-select>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group form-primary form-static-label\">\r\n                <ng-select\r\n                  [ngClass]=\"'ng-select'\"\r\n                  [options]=\"ShareMasterObjectB\"\r\n                  [multiple]=\"false\"\r\n                  placeholder=\"Member To \"\r\n                  formControlName=\"AC_NO\"\r\n                >\r\n                </ng-select>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"TOTAL_SHARES\"\r\n                    class=\"form-control\"\r\n                    placeholder=\" \"\r\n                    id=\"TOTAL_SHARES\"\r\n                    formControlName=\"TOTAL_SHARES\"\r\n                  />\r\n                  <label for=\"TOTAL_SHARES\">Total Amount</label>\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <div class=\"card\">\r\n                <div class=\"card-block\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                      <div class=\"table-responsive\">\r\n                        <table\r\n                          datatable\r\n                          [dtOptions]=\"dtexportshareOption\"\r\n                          [dtTrigger]=\"dtTrigger\"\r\n                          class=\"table table-striped table-bordered table-hover\"\r\n                        >\r\n                          <tbody *ngIf=\"sharemember?.length != 0\">\r\n                            <tr *ngFor=\"let data of sharemember\">\r\n                              <!-- <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\r\n                                                                    (click)=\"editClickHandler(data.id)\">Edit</button>\r\n                                                            </td> -->\r\n                              \r\n                              <td>{{ data.AC_NO}}</td>\r\n                              <td>{{ data.shareNameObject }}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"DIVIDEND_AMOUNT \"\r\n                                  class=\"form-control\"\r\n                                  placeholder=\" \"\r\n                                  pattern=\"\\d{1,20}(\\.\\d{2})?\"\r\n                                  id=\"DIVIDEND_AMOUNT \"\r\n                                  maxlength=\"20\"\r\n                                  title=\"Input allowed only  0-9\"\r\n                                  formControlName=\"DIVIDEND_AMOUNT \"\r\n                                />\r\n                              </td>\r\n                              <td>\r\n                                <div class=\"form-group input-group\">\r\n                                  <span class=\"border-lable-flt\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      class=\"form-control\"\r\n                                      placeholder=\" \"\r\n                                      id=\"MEMBER_CLOSE_DATE\"\r\n                                      max=\"9999-12-31\"\r\n                                      formControlName=\"MEMBER_CLOSE_DATE\"\r\n                                      value=\"\"\r\n                                      onfocus=\"(this.type='date')\"\r\n                                    />\r\n                                    <label for=\"MEMBER_CLOSE_DATE\"\r\n                                      >close date</label\r\n                                    >\r\n                                  </span>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                          <tbody *ngIf=\"sharemember?.length == 0\">\r\n                            <tr>\r\n                              <td colspan=\"6\" class=\"no-data-available\">\r\n                                No data!\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-sm\">\r\n              <button\r\n                class=\"btn btn-primary ripple light\"\r\n                *ngIf=\"showButton\"\r\n                (click)=\"submit()\"\r\n                [disabled]=\"angForm.invalid\"\r\n              >\r\n                Add\r\n              </button>\r\n              <button\r\n                class=\"btn btn-primary ripple light\"\r\n                (click)=\"updateData()\"\r\n                [disabled]=\"angForm.invalid\"\r\n                *ngIf=\"updateShow\"\r\n              >\r\n                Update\r\n              </button>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n              <button\r\n                class=\"btn btn-primary ripple light\"\r\n                (click)=\"addNewData()\"\r\n                *ngIf=\"newbtnShow\"\r\n              >\r\n                New\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"yearwiseunpaid?.length != 0\">\r\n                                    <tr *ngFor=\"let data of yearwiseunpaid\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                         \r\n                                        </td>\r\n                                        <td>{{ data.ACTYPE }}</td>\r\n                                        <td>{{ data.AC_SALARYDIVISION_CODE }}</td>\r\n                                        <td>{{ data.WARRENT_DATE }}</td>\r\n                                        <td>{{ data.DIV_FROM_YEAR }}</td>\r\n                                        <td>{{ data.DIV_TO_YEAR }}</td>\r\n                                        <td>{{ data.AC_NO }}</td>\r\n                                        <td>{{ data.TOTAL_SHARES }}</td>\r\n                                        <td>{{ data.MEMBER_CLOSE_DATE }}</td>\r\n                                        <td>{{ data.DIVIDEND_AMOUNT }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"yearwiseunpaid?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search scheme\" name=\"ACTYPE\" />\r\n                                        </th>\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search salary division\"\r\n                                                name=\"AC_SALARYDIVISION_CODE\" />\r\n                                        </th>\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search Warrantdate\" name=\"WARRENT_DATE\" />\r\n                                        </th>\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search from year\" name=\"DIV_FROM_YEAR\" />\r\n                                        </th>\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search ac no\" name=\"AC_NO\" />\r\n                                        </th>\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search total amt\" name=\"TOTAL_SHARES\" />\r\n                                        </th>\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search close date\"\r\n                                                name=\"MEMBER_CLOSE_DATE\" />\r\n                                        </th>\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search dividend amt\"\r\n                                                name=\"DIVIDEND_AMOUNT\" />\r\n                                        </th>\r\n\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { YearWiseUnpaidDividendEntryRoutingModule } from './year-wise-unpaid-dividend-entry-routing.module';\r\nimport { YearWiseUnpaidDividendEntryComponent } from './year-wise-unpaid-dividend-entry.component';\r\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\r\nimport { MembernoService } from '../../../../shared/elements/memberno.service';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SelectModule } from 'ng-select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {YearwiseunpaidService} from './year-wise-unpaid-dividend-entry.service';\r\nimport{ SchemeCodeDropdownService} from '../../../../shared/dropdownService/scheme-code-dropdown.service';\r\nimport{ SalaryDMasterdropdownService} from '../../../../shared/dropdownService/salary-division-master-dropdown.service';\r\n import{ ShareMasterDropdownService} from '../../../../shared/dropdownService/share-master-dropdown.service';\r\n\r\n import { ShareSchemeDropdownService } from '../../../../shared/dropdownService/share-scheme-dropdown.Service';\r\n\r\n import {ShareMasterService} from '../../customer/shares-master/shares-master.service';\r\n \r\nimport { CustomerIdService } from '../../customer/customer-id/customer-id.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    YearWiseUnpaidDividendEntryRoutingModule,\r\n    DataTablesModule,\r\n    NgbModule,\r\n    SelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [YearWiseUnpaidDividendEntryComponent],\r\n  providers: [YearwiseunpaidService,\r\n     SchemeCodeDropdownService,\r\n     SalaryDMasterdropdownService,\r\n     ShareMasterDropdownService,\r\n     ShareMasterService,\r\n     ShareSchemeDropdownService,\r\n     CustomerIdService\r\n    ]\r\n\r\n})\r\nexport class YearWiseUnpaidDividendEntryModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../environments/environment';\r\nimport {ShareMasterService} from '../../../master/customer/shares-master/shares-master.service'\r\n\r\n@Injectable()\r\nexport class YearwiseunpaidService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  //url = \"http://localhost:4000/year-wise-unpaid-dividend-entry\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/year-wise-unpaid-dividend-entry/insert', data).pipe(map((res) => res),\r\n    catchError((error) => {\r\n      Swal.fire('Please Input Proper Data !');\r\n      return throwError(error);\r\n    })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/year-wise-unpaid-dividend-entry/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/year-wise-unpaid-dividend-entry/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/year-wise-unpaid-dividend-entry/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}