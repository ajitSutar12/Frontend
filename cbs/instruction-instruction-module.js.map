{"version":3,"sources":["./src/app/shared/dropdownService/exucute-on.service.ts","./src/app/shared/dropdownService/freeze-account.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/shared/dropdownService/schemeAccountNo.service.ts","./src/app/shared/elements/frequency.service.ts","./src/app/shared/elements/reminder-instruction.service.ts","./src/app/shared/elements/revoke-interest.service.ts","./src/app/shared/elements/revoke-special.service.ts","./src/app/shared/elements/revoke-standing.service.ts","./src/app/shared/elements/user.service.ts","./src/app/theme/master/instruction/freeze-account/freeze-account.component.ts","./src/app/theme/master/instruction/freeze-account/freeze-account.component.html","./src/app/theme/master/instruction/freeze-account/freeze-account.service.ts","./src/app/theme/master/instruction/instruction-routing.module.ts","./src/app/theme/master/instruction/instruction.component.ts","./src/app/theme/master/instruction/instruction.component.html","./src/app/theme/master/instruction/instruction.module.ts","./src/app/theme/master/instruction/interest-instruction/interest-instruction.component.ts","./src/app/theme/master/instruction/interest-instruction/interest-instruction.component.html","./src/app/theme/master/instruction/lien-mark-clear/lien-mark-clear.component.ts","./src/app/theme/master/instruction/lien-mark-clear/lien-mark-clear.component.html","./src/app/theme/master/instruction/lien-mark-clear/lien-mark-clear.service.ts","./src/app/theme/master/instruction/over-draft/over-draft.component.ts","./src/app/theme/master/instruction/over-draft/over-draft.component.html","./src/app/theme/master/instruction/over-draft/over-draft.service.ts","./src/app/theme/master/instruction/reminder-instruction/reminder-instruction.component.ts","./src/app/theme/master/instruction/reminder-instruction/reminder-instruction.component.html","./src/app/theme/master/instruction/revoke-interest-instruction/revoke-interest-instruction.component.ts","./src/app/theme/master/instruction/revoke-interest-instruction/revoke-interest-instruction.component.html","./src/app/theme/master/instruction/revoke-special-instruction/revoke-special-instruction.component.ts","./src/app/theme/master/instruction/revoke-special-instruction/revoke-special-instruction.component.html","./src/app/theme/master/instruction/revoke-standing-instructions/revoke-standing-instructions.component.ts","./src/app/theme/master/instruction/revoke-standing-instructions/revoke-standing-instructions.component.html","./src/app/theme/master/instruction/special/special.component.ts","./src/app/theme/master/instruction/special/special.component.html","./src/app/theme/master/instruction/special/special.service.ts","./src/app/theme/master/instruction/standing-instruction/standing-instruction.component.ts","./src/app/theme/master/instruction/standing-instruction/standing-instruction.component.html"],"names":[],"mappings":"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","file":"instruction-instruction-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class ExucuteOnService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: 'EveryEntry', label: 'Every Entry' },\r\n        { value: 'DebitEntry', label: 'Debit Entry' },\r\n        { value: 'CreditEntry', label: 'Credit Entry' }\r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(ExucuteOnService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(ExucuteOnService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(ExucuteOnService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class freezeAccountService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: 'No Freeze', label: 'No Freeze' },\r\n        { value: 'Total Amount', label: 'Total Amount' },\r\n        { value: 'Only Withdrawal', label: 'Only Withdrawal' },\r\n        { value: 'Partial Amount', label: 'Partial Amount' }       \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(freezeAccountService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(freezeAccountService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(freezeAccountService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: `${element.id}`, name: element.S_APPL };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_NAME, value: `${element.S_ACNOTYPE}` };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeAccountNoService {\r\n    // savingSchemeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getSavingSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/saving-master/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NO, value: `${element.AC_NO}`, name: element.AC_NAME };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getShareSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/share-master/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NO, value: `${element.AC_NO}`, name: element.AC_NAME };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getCurrentAccountSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/current-account-master/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NO, value: `${element.AC_NO}`, name: element.AC_NAME };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermLoanSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/term-loan-master/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NO, value: `${element.AC_NO}`, name: element.AC_NAME };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/term-deposit-master/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NO, value: `${element.AC_NO}`, name: element.AC_NAME };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getDisputeLoanSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/dispute-loan-master/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NO, value: `${element.AC_NO}`, name: element.AC_NAME };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getCashCreditSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/cash-credit-master/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NO, value: `${element.AC_NO}`, name: element.AC_NAME };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAnamatSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/anamat-gsm/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NO, value: `${element.AC_NO}`, name: element.AC_NAME };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getPigmyAccountSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/pigmy-account-master/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NO, value: `${element.AC_NO}`, name: element.AC_NAME };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getPigmyAgentSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/pigmy-agent/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NO, value: `${element.AC_NO}`, name: element.AC_NAME };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getInvestmentSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/investment/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NO, value: `${element.AC_NO}`, name: element.AC_NAME };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n}","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class FrequencyService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Monthly'},\r\n    {value: '1', label: 'Quarterly'},\r\n    {value: '2', label: 'Fixed Quarterly'},\r\n    {value: '3', label: 'Half Yearly'},\r\n    {value: '4', label: 'Days'}\r\n  ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(FrequencyService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(FrequencyService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(FrequencyService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class reminderInstructionService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Monthly'},\r\n    {value: '1', label: 'Quarterly'},\r\n    {value: '2', label: 'Fixed Quarterly'},\r\n    {value: '3', label: 'Half Yearly'},\r\n    {value: '4', label: 'Days'}\r\n   \r\n    ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(reminderInstructionService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(reminderInstructionService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(reminderInstructionService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class revokeInterestService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Monthly'},\r\n    {value: '1', label: 'Quarterly'},\r\n    {value: '2', label: 'Fixed Quarterly'},\r\n    {value: '3', label: 'Half Yearly'},\r\n    {value: '4', label: 'Days'}\r\n   \r\n    ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(revokeInterestService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(revokeInterestService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(revokeInterestService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class revokeSpecialService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Every Entry'},\r\n    {value: '1', label: 'Debit Entry'},\r\n    {value: '2', label: 'Credit Entry'}\r\n   \r\n    ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(revokeSpecialService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(revokeSpecialService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(revokeSpecialService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class revokeStandingService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'Monthly'},\r\n    {value: '1', label: 'Quarterly'},\r\n    {value: '2', label: 'Fixed Quarterly'},\r\n    {value: '3', label: 'Half Yearly'},\r\n    {value: '4', label: 'Days'}\r\n   \r\n    ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(revokeStandingService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(revokeStandingService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(revokeStandingService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IOption} from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  public static readonly PLAYER_ONE: Array<IOption> = [\r\n    {value: '0', label: 'a'},\r\n    {value: '1', label: 'b'},\r\n    {value: '2', label: 'c'}\r\n  ];\r\n\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(UserService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(UserService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(UserService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n   \r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { freezeAccountService } from '../../../../shared/dropdownService/freeze-account.service'\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service';\r\nimport { FreezeAccountService } from './freeze-account.service'\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { environment } from '../../../../../environments/environment'\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs';\r\nimport { SchemeAccountNoService } from '../../../../shared/dropdownService/schemeAccountNo.service'\r\nimport { first } from 'rxjs/operators';\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n\r\n}\r\n// For fetching values from backend\r\ninterface FreezAccount {\r\n  AC_TYPE: string\r\n  AC_NO: number\r\n  // AC_CUSTID: string\r\n  AC_FREEZE_STATUS: string\r\n  AC_FREEZE_AMOUNT: number\r\n  AC_FREEZE_DATE: Date\r\n  AC_FREEZE_REASON: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-freeze-account',\r\n  templateUrl: './freeze-account.component.html',\r\n  styleUrls: ['./freeze-account.component.scss']\r\n})\r\nexport class FreezeAccountComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  //api \r\n  url = environment.base_url;\r\n  scheme\r\n  Cust_ID\r\n  acno\r\n  allScheme // all scheme\r\n  schemeACNo //account no \r\n  freezoption: Array<IOption> = this.freezeAccountService.getCharacters();\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n  private dataSub: Subscription = null;\r\n\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  // Store data from backend\r\n  freezAccount: FreezAccount[];\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  newbtnShow: boolean = false;\r\n  updateID: number = 0;\r\n\r\n  //todays date\r\n  date = new Date();\r\n  // column search\r\n  filterData = {};\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private freezeAccountService: freezeAccountService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private FreezeAccountService: FreezeAccountService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private http: HttpClient) { this.setdate() }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // this.dtExportButtonOptions = {\r\n    //   pagingType: 'full_numbers',\r\n    //   paging: true,\r\n    //   pageLength: 10,\r\n    //   serverSide: true,\r\n    //   processing: true,\r\n    //   ajax: (dataTableParameters: any, callback) => {\r\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n    //     dataTableParameters.maxNumber =\r\n    //       dataTableParameters.start + dataTableParameters.length;\r\n    //     let datatableRequestParam: any;\r\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\r\n    //     dataTableParameters['filterData'] = this.filterData;\r\n    //     this.http\r\n    //       .post<DataTableResponse>(\r\n    //         this.url + '/freez-account',\r\n    //         dataTableParameters\r\n    //       ).subscribe(resp => {\r\n    //         this.freezAccount = resp.data;\r\n    //         callback({\r\n    //           recordsTotal: resp.recordsTotal,\r\n    //           recordsFiltered: resp.recordsTotal,\r\n    //           data: resp.data\r\n    //         });\r\n    //       });\r\n    //   },\r\n    //   columnDefs: [{\r\n    //     targets: '_all',\r\n    //     defaultContent: \"\"\r\n    //   }],\r\n    //   columns: [\r\n    //     {\r\n    //       title: 'Action',\r\n    //     },\r\n    //     {\r\n    //       title: 'Scheme',\r\n    //       data: 'AC_TYPE'\r\n    //     },\r\n    //     {\r\n    //       title: 'Account No',\r\n    //       data: 'AC_NO'\r\n    //     },\r\n    //     // {\r\n    //     //   title: 'Customer ID',\r\n    //     //   data: 'AC_CUSTID'\r\n    //     // },\r\n    //     {\r\n    //       title: 'Freeze Status',\r\n    //       data: 'AC_FREEZE_STATUS'\r\n    //     },\r\n    //     {\r\n    //       title: 'Freeze Amount',\r\n    //       data: 'AC_FREEZE_AMOUNT'\r\n    //     },\r\n    //     {\r\n    //       title: 'Freeze Date',\r\n    //       data: 'AC_FREEZE_DATE'\r\n    //     },\r\n    //     {\r\n    //       title: 'Remark',\r\n    //       data: 'AC_FREEZE_REASON'\r\n    //     }\r\n\r\n    //   ],\r\n    //   dom: 'Blrtip',\r\n    // };\r\n    this.runTimer();\r\n    this.dataSub = this.freezeAccountService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      this.allScheme = data;\r\n    })\r\n  }\r\n\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      AC_TYPE: ['', [Validators.required]],\r\n      AC_NO: ['', [Validators.required]],\r\n      // AC_CUSTID: ['',],\r\n      AC_FREEZE_STATUS: ['', [Validators.required]],\r\n      AC_FREEZE_AMOUNT: ['', [Validators.pattern]],\r\n      AC_FREEZE_DATE: ['',],\r\n      AC_FREEZE_REASON: ['', [Validators.pattern]]\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      'AC_TYPE': formVal.AC_TYPE,\r\n      'AC_NO': formVal.AC_NO,\r\n      // 'AC_CUSTID': formVal.AC_CUSTID,\r\n      'AC_FREEZE_STATUS': formVal.AC_FREEZE_STATUS,\r\n      'AC_FREEZE_AMOUNT': formVal.AC_FREEZE_AMOUNT,\r\n      'AC_FREEZE_DATE': formVal.AC_FREEZE_DATE,\r\n      'AC_FREEZE_REASON': formVal.AC_FREEZE_REASON\r\n    }\r\n    this.FreezeAccountService.postData(dataToSend).subscribe(data => {\r\n      Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n      // to reload after insertion of data\r\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n        dtInstance.ajax.reload()\r\n      });\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n    //To clear form\r\n    this.resetForm();\r\n  }\r\n\r\n  //function for edit button clicked\r\n  editClickHandler(id): void {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.newbtnShow = true;\r\n    this.FreezeAccountService.getFormData(id).subscribe(data => {\r\n      this.angForm.setValue({\r\n        'AC_TYPE': data.AC_TYPE,\r\n        'AC_NO': data.AC_NO,\r\n        // 'AC_CUSTID': data.AC_CUSTID,\r\n        'AC_FREEZE_STATUS': data.AC_FREEZE_STATUS,\r\n        'AC_FREEZE_AMOUNT': data.AC_FREEZE_AMOUNT,\r\n        'AC_FREEZE_DATE': data.AC_FREEZE_DATE,\r\n        'AC_FREEZE_REASON': data.AC_FREEZE_REASON\r\n      })\r\n    })\r\n  }\r\n\r\n  //get account no according scheme \r\n  getSchemeAcNO(acno) {\r\n    switch (acno) {\r\n      case 'SB':\r\n        console.log(\"saving\");\r\n        this.schemeAccountNoService.getSavingSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'SH':\r\n        console.log(\"Share\");\r\n        this.schemeAccountNoService.getShareSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'CA':\r\n        console.log(\"Current account\");\r\n        this.schemeAccountNoService.getCurrentAccountSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'LN':\r\n        console.log(\"Term Loan\");\r\n        this.schemeAccountNoService.getTermLoanSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'TD':\r\n        console.log(\"Term Deposit\");\r\n        this.schemeAccountNoService.getTermDepositSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'DS':\r\n        console.log(\"Dispute Loan\");\r\n        this.schemeAccountNoService.getDisputeLoanSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'CC':\r\n        console.log(\"Cash Credit Loan\");\r\n        this.schemeAccountNoService.getCashCreditSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'GS':\r\n        console.log(\"anamat\");\r\n        this.schemeAccountNoService.getAnamatSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'PG':\r\n        console.log(\"Pigmy account\");\r\n        this.schemeAccountNoService.getPigmyAccountSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'AG':\r\n        console.log(\"Pigmy agent\");\r\n        this.schemeAccountNoService.getPigmyAgentSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'IV':\r\n        console.log(\"Investment\");\r\n        this.schemeAccountNoService.getInvestmentSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  datemin: any;//setting max date\r\n  //set date 18 years before current date\r\n  setdate() {\r\n    const d = new Date();\r\n    let day = d.getDate();\r\n    const m = new Date().getMonth()\r\n    const year = new Date().getFullYear()\r\n    this.datemin = year + \"-\" + m + \"-\" + day;\r\n  }\r\n\r\n  //set date on keyup event\r\n  keyupdate(date: any) {\r\n    const d = new Date();\r\n    let day = d.getDate();\r\n    const m = new Date().getMonth()\r\n    const year = new Date().getFullYear();\r\n    this.datemin = year + \"-\" + m + \"-\" + day;\r\n    if (date != \"\") {\r\n      if (date < this.datemin) {\r\n        Swal.fire(\"Cancelled\", \"please input date below\" + this.datemin, \"error\");\r\n        this.angForm.controls['AC_FREEZE_DATE'].reset()\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  //function for delete button clicked\r\n  delClickHandler(): void {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete freez account data\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your data has been deleted.',\r\n          'success'\r\n        )\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  //function toggle update to add button\r\n  updateData() {\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    this.FreezeAccountService.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.newbtnShow = false;\r\n      // to reload after delete of data\r\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n        dtInstance.ajax.reload()\r\n      });\r\n      this.resetForm();\r\n    })\r\n  }\r\n\r\n  addNewData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    this.newbtnShow = false;\r\n    this.resetForm();\r\n  }\r\n  freezStatus\r\n  freezDeatils(freezStatus) {\r\n    if (freezStatus == 'No Freeze') {\r\n      this.angForm.controls['AC_FREEZE_AMOUNT'].disable()\r\n      this.angForm.controls['AC_FREEZE_AMOUNT'].reset()\r\n      this.angForm.controls['AC_FREEZE_DATE'].disable()\r\n      this.angForm.controls['AC_FREEZE_DATE'].reset()\r\n      this.angForm.controls['AC_FREEZE_REASON'].disable()\r\n      this.angForm.controls['AC_FREEZE_REASON'].reset()\r\n    }\r\n    else if (freezStatus == 'Total Amount') {\r\n      this.angForm.controls['AC_FREEZE_AMOUNT'].disable()\r\n      this.angForm.controls['AC_FREEZE_AMOUNT'].reset()\r\n    }\r\n    else if (freezStatus == 'Only Withdrawal') {\r\n      this.angForm.controls['AC_FREEZE_AMOUNT'].disable()\r\n      this.angForm.controls['AC_FREEZE_AMOUNT'].reset()\r\n    }\r\n    else {\r\n      this.angForm.controls['AC_FREEZE_AMOUNT'].enable()\r\n      this.angForm.controls['AC_FREEZE_DATE'].enable()\r\n      this.angForm.controls['AC_FREEZE_REASON'].enable()\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // this.dtTrigger.next();\r\n    // this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n    //   dtInstance.columns().every(function () {\r\n    //     const that = this;\r\n    //     $('input', this.footer()).on('keyup change', function () {\r\n    //       if (this['value'] != '') {\r\n    //         that\r\n    //           .search(this['value'])\r\n    //           .draw();\r\n    //       } else {\r\n    //         that\r\n    //           .search(this['value'])\r\n    //           .draw();\r\n    //       }\r\n    //     });\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Mark Freeze Account</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"allScheme\" [multiple]=\"false\"\r\n                                    placeholder=\"Scheme*\" formControlName=\"AC_TYPE\" [(ngModel)]=\"acno\"\r\n                                    (selected)=\"getSchemeAcNO(acno)\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"schemeACNo\" [multiple]=\"false\"\r\n                                    placeholder=\"Account No*\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"AC_NO\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_NO'].invalid && (angForm.controls['AC_NO'].dirty || angForm.controls['AC_NO'].touched)\"\r\n                                class='alert alert-danger'>\r\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"Cust_ID\" [multiple]=\"false\"\r\n                                    placeholder=\"Customer ID\" formControlName=\"AC_CUSTID\">\r\n                                </ng-select>\r\n                            </div>\r\n                        </div> -->\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-2\">\r\n                            <h6>Freeze Details</h6>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"freezoption\" [multiple]=\"false\"\r\n                                    placeholder=\"Freeze Status *\" required title=\"Compulsory Selection\"\r\n                                    [(ngModel)]=\"freezStatus\" (ngModelChange)=\"freezDeatils(freezStatus)\"\r\n                                    formControlName=\"AC_FREEZE_STATUS\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_FREEZE_STATUS'].invalid && (angForm.controls['AC_FREEZE_STATUS'].dirty || angForm.controls['AC_FREEZE_STATUS'].touched)\"\r\n                                class='alert alert-danger'>\r\n                                <div *ngIf=\"angForm.controls['AC_FREEZE_STATUS'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_FREEZE_AMOUNT\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"AC_FREEZE_AMOUNT\" pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\r\n                                        formControlName=\"AC_FREEZE_AMOUNT\">\r\n                                    <label for=\"AC_FREEZE_AMOUNT\">Freeze Amount</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_FREEZE_AMOUNT'].invalid && (angForm.controls['AC_FREEZE_AMOUNT'].dirty || angForm.controls['AC_FREEZE_AMOUNT'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_FREEZE_AMOUNT'].errors?.pattern\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"AC_FREEZE_DATE\"\r\n                                        min=\"{{datemin | date:'yyyy-MM-dd'}}\" max=\"9999-12-31\" #date\r\n                                        formControlName=\"AC_FREEZE_DATE\" onfocus=\"(this.type='date')\"\r\n                                        (keyup)=\"keyupdate(date.value)\" />\r\n                                    <label for=\"AC_FREEZE_DATE\">Freeze Date <sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_FREEZE_DATE'].invalid && (angForm.controls['AC_FREEZE_DATE'].dirty || angForm.controls['AC_FREEZE_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['AC_FREEZE_DATE'].errors?.pattern || angForm.controls['AC_FREEZE_DATE'].errors?.required\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-5\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"AC_FREEZE_REASON\" pattern=\"^[A-Za-z\\./ -]+$\" maxlength=\"4000\"\r\n                                        title=\"Input allowed only  A-Z a-z  - / . (Space)\"\r\n                                        formControlName=\"AC_FREEZE_REASON\">\r\n                                    <label for=\"AC_FREEZE_REASON\">Remark <sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_FREEZE_REASON'].invalid && (angForm.controls['AC_FREEZE_REASON'].dirty || angForm.controls['AC_FREEZE_REASON'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['AC_FREEZE_REASON'].errors?.pattern || angForm.controls['AC_FREEZE_REASON'].errors?.maxlength || angForm.controls['AC_FREEZE_REASON'].errors?.required\">\r\n                                    This field is required and Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" [disabled]=\"angForm.invalid\"\r\n                                *ngIf=\"showButton\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button>&nbsp;\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"addNewData()\"\r\n                                *ngIf=\"newbtnShow\">New</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\r\n                                class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"freezAccount?.length != 0\">\r\n                                    <tr *ngFor=\"let data of freezAccount\">\r\n                                        <td><button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\r\n                                                (click)=\"editClickHandler(data.id)\">Edit</button> &nbsp;\r\n                                        </td>\r\n                                        <td>{{ data.AC_TYPE }}</td>\r\n                                        <td>{{ data.AC_NO }}</td>\r\n                                        <td>{{ data.AC_FREEZE_STATUS}}</td>\r\n                                        <td>{{ data.AC_FREEZE_AMOUNT}}</td>\r\n                                        <td>{{ data.AC_FREEZE_DATE }}</td>\r\n                                        <td>{{ data.AC_FREEZE_REASON}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"freezAccount?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"3\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Scheme\" name=\"AC_TYPE\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Account No\" name=\"AC_NO\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Freeze Status\"\r\n                                                name=\"AC_FREEZE_STATUS\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Freeze Amount\"\r\n                                                name=\"AC_FREEZE_AMOUNT\"></th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Freeze Date\" name=\"AC_FREEZE_DATE\">\r\n                                        </th>\r\n                                        <th><input type=\"text\" placeholder=\"Search Remark\" name=\"AC_FREEZE_REASON\"></th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->","\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class FreezeAccountService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/freez-account/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data !');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/freez-account/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n\r\n        return this.http.put(this.url + '/freez-account/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/freez-account/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n// import {InstructionComponent} from './instruction.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    // component: InstructionComponent,\r\n    data: {\r\n      title: 'Instruction',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: false\r\n    },\r\n    children: [\r\n      {\r\n        path: 'overDraft',\r\n        loadChildren: () => import('./over-draft/over-draft.module').then(m => m.OverDraftModule)\r\n      },\r\n      {\r\n        path: 'standingInstruction',\r\n        loadChildren: () => import('./standing-instruction/standing-instruction.module').then(m => m.StandingInstructionModule)\r\n      },\r\n      {\r\n        path: 'interestInstruction',\r\n        loadChildren: () => import('./interest-instruction/interest-instruction.module').then(m => m.InterestInstructionModule)\r\n      },\r\n      {\r\n        path: 'special',\r\n        loadChildren: () => import('./special/special.module').then(m => m.SpecialModule)\r\n      },\r\n      {\r\n        path: 'freezeAccount',\r\n        loadChildren: () => import('./freeze-account/freeze-account.module').then(m => m.FreezeAccountModule)\r\n      },\r\n      {\r\n        path: 'reminderInstruction',\r\n        loadChildren: () => import('./reminder-instruction/reminder-instruction.module').then(m => m.ReminderInstructionModule)\r\n      },\r\n      {\r\n        path: 'revokeStandingInstructions',\r\n        loadChildren: () => import('./revoke-standing-instructions/revoke-standing-instructions.module').then(m => m.RevokeStandingInstructionsModule)\r\n      },\r\n      {\r\n        path: 'revokeInterestInstruction',\r\n        loadChildren: () => import('./revoke-interest-instruction/revoke-interest-instruction.module').then(m => m.RevokeInterestInstructionModule)\r\n      },\r\n      {\r\n        path: 'revokeSpecialInstruction',\r\n        loadChildren: () => import('./revoke-special-instruction/revoke-special-instruction.module').then(m => m.RevokeSpecialInstructionModule)\r\n      },\r\n      {\r\n        path: 'lienMarkClear',\r\n        loadChildren: () => import('./lien-mark-clear/lien-mark-clear.module').then(m => m.LienMarkClearModule)\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InstructionRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-instruction',\r\n  templateUrl: './instruction.component.html',\r\n  styleUrls: ['./instruction.component.scss']\r\n})\r\nexport class InstructionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n\r\n}\r\n","<p>instruction works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { InstructionComponent } from './instruction.component';\r\nimport { InstructionRoutingModule } from './instruction-routing.module'\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport { OverDraftComponent } from './over-draft/over-draft.component';\r\nimport { StandingInstructionComponent } from './standing-instruction/standing-instruction.component';\r\nimport { InterestInstructionComponent } from './interest-instruction/interest-instruction.component';\r\nimport { SpecialComponent } from './special/special.component';\r\nimport { FreezeAccountComponent } from './freeze-account/freeze-account.component';\r\nimport { ReminderInstructionComponent } from './reminder-instruction/reminder-instruction.component';\r\nimport { RevokeStandingInstructionsComponent } from './revoke-standing-instructions/revoke-standing-instructions.component';\r\nimport { RevokeInterestInstructionComponent } from './revoke-interest-instruction/revoke-interest-instruction.component';\r\nimport { RevokeSpecialInstructionComponent } from './revoke-special-instruction/revoke-special-instruction.component';\r\nimport { LienMarkClearComponent } from './lien-mark-clear/lien-mark-clear.component';\r\nimport {SelectOptionService} from '../../../shared/elements/select-option.service'\r\nimport {SelectModule} from 'ng-select';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { FormsModule,ReactiveFormsModule  }   from '@angular/forms';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor'\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    InstructionRoutingModule,\r\n    SharedModule,\r\n    SelectModule,\r\n    DataTablesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule \r\n  ],\r\n  declarations: [InstructionComponent, OverDraftComponent, StandingInstructionComponent, InterestInstructionComponent, SpecialComponent, FreezeAccountComponent, ReminderInstructionComponent,  RevokeInterestInstructionComponent, RevokeSpecialInstructionComponent, LienMarkClearComponent, RevokeStandingInstructionsComponent],\r\n  providers: [SelectOptionService,{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },]\r\n})\r\nexport class InstructionModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { FrequencyService } from '../../../../shared/elements/frequency.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\r\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-interest-instruction',\r\n  templateUrl: './interest-instruction.component.html',\r\n  styleUrls: ['./interest-instruction.component.scss']\r\n})\r\n\r\nexport class InterestInstructionComponent implements OnInit {\r\n\r\n  angForm: FormGroup;\r\n\r\n  dtExportButtonOptions: any = {};\r\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\r\n  b: Array<IOption> = this.AcountnoService.getCharacters();\r\n  frequencyOption: Array<IOption> = this.FrequencyService.getCharacters();\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n\r\n  //variable for checkbox and radio button \r\n  isIsDiscountedInterestApplicable: boolean = false;\r\n  isCash: boolean = true;\r\n\r\n  private dataSub: Subscription = null;\r\n\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n\r\n  cash1True: boolean = true;\r\n  transfer1True: boolean = false;\r\n\r\n  message = {\r\n    Date: \"\",\r\n    StartFrom: \" \",\r\n    NextExecutionOn: \" \",\r\n    InstructionNo: \" \",\r\n    Cash: \"\",\r\n    Transfer: \"\",\r\n    LastExecutedOn: \" \",\r\n    StatementType: \" \",\r\n    Scheme: \" \",\r\n    AccountNo: \" \",\r\n    Particulars: \" \",\r\n    Scheme2: \" \",\r\n    AccountNo2: \" \",\r\n    AdviceNarration: \" \",\r\n    Particulars2: \" \",\r\n    RevokeDate: \" \",\r\n    IsDiscountedInterestApplicable: \" \",\r\n  };\r\n\r\n  constructor(private fb: FormBuilder, public FrequencyService: FrequencyService, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\r\n\r\n  ngOnInit(): void {\r\n    this.dtExportButtonOptions = {\r\n      ajax: 'fake-data/intrest-instruction.json',\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"btn btn-outline-primary btn-sm\"id=\"editbtn\">Edit</button>' + ' ' + '<button  id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\r\n\r\n          }\r\n        },\r\n        {\r\n          title: 'Date',\r\n          data: 'Date'\r\n        },\r\n        {\r\n          title: 'Start From',\r\n          data: 'StartFrom'\r\n        },\r\n        {\r\n          title: 'Next Execution On',\r\n          data: 'NextExecutionOn'\r\n        },\r\n        {\r\n          title: 'Instruction No',\r\n          data: 'InstructionNo'\r\n        },\r\n        {\r\n          title: 'Cash',\r\n          data: 'Cash'\r\n        },\r\n        {\r\n          title: 'Transfer',\r\n          data: 'Transfer'\r\n        },\r\n        {\r\n          title: 'Last Executed On',\r\n          data: 'LastExecutedOn'\r\n        }, {\r\n          title: 'Statement Type',\r\n          data: 'StatementType'\r\n        },\r\n        {\r\n          title: 'Scheme',\r\n          data: 'Scheme'\r\n        }, {\r\n          title: 'Account No',\r\n          data: 'AccountNo'\r\n        }, {\r\n          title: 'Particulars',\r\n          data: 'Particulars'\r\n        }, {\r\n          title: 'Scheme',\r\n          data: 'Scheme2'\r\n        },\r\n        {\r\n          title: 'Account No',\r\n          data: 'AccountNo2'\r\n        }, {\r\n          title: 'Advice Narration',\r\n          data: 'AdviceNarration'\r\n        },\r\n        {\r\n          title: 'Particulars',\r\n          data: 'Particulars2'\r\n        },\r\n        {\r\n          title: 'Revoke Date',\r\n          data: 'RevokeDate'\r\n        },\r\n        {\r\n          title: 'Is Discounted Interest Applicable',\r\n          data: 'IsDiscountedInterestApplicable'\r\n        },],\r\n      dom: 'Bfrtip',\r\n      buttons: [\r\n        'copy',\r\n        'print',\r\n        'excel',\r\n        'csv'\r\n      ],\r\n      //row click handler code\r\n\r\n      /**\r\n* @rowCallback function for editClickHandler and delClickHandler to passes table data to there filds\r\n  @return row \r\n*/\r\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\r\n        const self = this;\r\n        $('td', row).off('click');\r\n        $('td', row).on('click', '#editbtn', () => {\r\n          self.editClickHandler(data);\r\n        });\r\n        $('td', row).on('click', '#delbtn', () => {\r\n          self.delClickHandler(data);\r\n        });\r\n        return row;\r\n      }\r\n    };\r\n    this.runTimer();\r\n    this.dataSub = this.FrequencyService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n\r\n  }\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  OpenLink(val) {\r\n    // \r\n    if (val == 1) {\r\n      this.cash1True = true;\r\n      this.transfer1True = false;\r\n    }\r\n\r\n    if (val == 2) {\r\n      this.cash1True = false;\r\n      this.transfer1True = true;\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      Date: ['',],\r\n      StartFrom: ['', [Validators.required]],\r\n      NextExecutionOn: [''],\r\n      InstructionNo: [''],\r\n      TransactionNo: ['',],\r\n      Particulars: ['', [Validators.pattern, Validators.required]],\r\n      Particular: ['', [Validators.pattern, Validators.required]],\r\n      AdviceNarration: ['', [Validators.pattern, Validators.required]],\r\n      StatementType: ['', [Validators.required]],\r\n      LastExecutedOn: [''],\r\n      Scheme: ['', [Validators.required]],\r\n      RevokeDate: ['', [Validators.required]],\r\n      AccountNo: ['',]\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.angForm.valid);\r\n    if (this.angForm.valid) {\r\n      console.log(this.angForm.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n* @editClickHandler function for edit button clicked\r\n*/\r\n\r\n  editClickHandler(info: any): void {\r\n    this.message.Date = info.Date;\r\n    this.message.StartFrom = info.StartFrom;\r\n    this.message.NextExecutionOn = info.NextExecutionOn;\r\n    this.message.InstructionNo = info.InstructionNo;\r\n    this.message.Cash = info.Cash;\r\n    this.message.Transfer = info.Transfer;\r\n    this.message.LastExecutedOn = info.LastExecutedOn;\r\n    this.message.StatementType = info.StatementType;\r\n    this.message.Scheme = info.Scheme;\r\n    this.message.AccountNo = info.AccountNo;\r\n    this.message.Particulars = info.Particulars;\r\n    this.message.Scheme2 = info.Scheme2;\r\n    this.message.AccountNo2 = info.AccountNo2;\r\n    this.message.AdviceNarration = info.AdviceNarration;\r\n    this.message.Particulars2 = info.Particulars2;\r\n    this.message.RevokeDate = info.RevokeDate;\r\n    this.message.IsDiscountedInterestApplicable = info.IsDiscountedInterestApplicable;\r\n\r\n    //code for chekbox\r\n    if (this.message.IsDiscountedInterestApplicable == \"Yes\") {\r\n      this.isIsDiscountedInterestApplicable = true;   //return boolean value and display checked checkbox\r\n    }\r\n    else {\r\n      this.isIsDiscountedInterestApplicable = false;   //return boolean value and display unchecked checkbox\r\n    }\r\n    //code for radio button\r\n    if (this.message.Cash == \"Yes\") {\r\n      this.isCash = true;      //return boolean value and display checked radio button\r\n    }\r\n    else {\r\n      this.isCash = false;   //return boolean value and display unchecked radio button\r\n    }\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n  }\r\n\r\n  /**\r\n  * @updateData function for update data \r\n  */\r\n  updateData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    // this.form.reset();\r\n  }\r\n\r\n\r\n  /**\r\n  * @delClickHandler function for delete button \r\n    @Swal sweetalert2\r\n    @Swal.fire open a modal window to display message\r\n  */\r\n  delClickHandler(info: any): void {\r\n    this.message.Date = info.Date;\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete Date.\" + this.message.Date + \"  data\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      /* run code if our result  isConfirmed function Swal.fire open a modal window to display message\r\n      else if result is dismiss then it cancel and open a modal window to display cancel message\r\n       */\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your data has been deleted.',\r\n          'success'\r\n        )\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Interest Instructions </h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"Date\" max=\"9999-12-31\"\r\n                                        formControlName=\"Date\" value=\"{{ message.Date}}\" onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"Date\">Date</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\" checked>\r\n                                        <i class=\"helper\"></i>Month Begin<span class=\"required\"> </span>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\">\r\n                                        <i class=\"helper\"></i>Month End<span class=\"required\"> </span>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\">\r\n                                        <i class=\"helper\"></i> Specific Day of Month<span class=\"required\"> </span>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\">\r\n                                        <i class=\"helper\"></i>After Specific Days<span class=\"required\"> </span>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"StartFrom\" required=\"\"\r\n                                        max=\"9999-12-31\" formControlName=\"StartFrom\" value=\"{{ message.StartFrom}}\"\r\n                                        onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"StartFrom\">Start From<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['StartFrom'].invalid && (angForm.controls['StartFrom'].dirty || angForm.controls['StartFrom'].touched)\"\r\n                                class='alert alert-danger'>\r\n                                <div *ngIf=\"angForm.controls['StartFrom'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"NextExecutionOn\"\r\n                                        max=\"9999-12-31\" formControlName=\"NextExecutionOn\"\r\n                                        value=\"{{ message.NextExecutionOn}}\" onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"NextExecutionOn\">Next Execution On</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"TotalAmount\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"InstructionNo\" value=\"{{ message.InstructionNo }}\"\r\n                                        formControlName=\"InstructionNo\">\r\n                                    <label for=\"InstructionNo\">Instruction No.</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"frequencyOption\" [multiple]=\"false\"\r\n                                    placeholder=\"Frequency *\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"StatementType\">\r\n                                </ng-select>\r\n                                <label>{{message.StatementType}}</label>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['StatementType'].invalid && (angForm.controls['StatementType'].dirty || angForm.controls['StatementType'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['StatementType'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <h6>Payment By:</h6>\r\n                        <div class=\"col-sm\">\r\n                            <a (click)=\"OpenLink(1)\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">\r\n                                <div class=\"form-radio\">\r\n                                    <div class=\"radio radio-inline\">\r\n                                        <label>\r\n                                            <input type=\"radio\" name=\"radio1\" ng-model=\"OD\" ng-change=\"change()\"\r\n                                                [checked]=\"isCash == true\" value=\"cash1\">\r\n                                            <i class=\"helper\"></i>Cash<span class=\"required\"> </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <a (click)=\"OpenLink(2)\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">\r\n                                <div class=\"form-radio\">\r\n                                    <div class=\"radio radio-inline\">\r\n                                        <label>\r\n                                            <input type=\"radio\" name=\"radio1\" ng-model=\"OD\" ng-change=\"change()\"\r\n                                                [checked]=\"isCash == false\" value=\"transfer1\">\r\n                                            <i class=\"helper\"></i>Transfer<span class=\"required\"> </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"LastExecutedOn\"\r\n                                        max=\"9999-12-31\" formControlName=\"LastExecutedOn\"\r\n                                        value=\"{{ message.LastExecutedOn}}\" onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"LastExecutedOn\">Last Executed On</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"cash1True\">\r\n                        <h6>Interest Instruction Account Details</h6>\r\n                        <div class=\"card-block\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm\">\r\n\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                            placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\r\n                                            formControlName=\"Scheme\">\r\n                                        </ng-select>\r\n                                        <label>{{ message.Scheme }}</label>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                            placeholder=\"Account No*\" required title=\"Compulsory Selection\"\r\n                                            formControlName=\"AccountNo\">\r\n                                        </ng-select>\r\n                                        <label>{{ message.AccountNo }}</label>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"angForm.controls['AccountNo'].invalid && (angForm.controls['AccountNo'].dirty || angForm.controls['AccountNo'].touched)\"\r\n                                        class='alert alert-danger'>\r\n                                        <div *ngIf=\"angForm.controls['AccountNo'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                                id=\"Particulars\" required=\"\" value=\"{{ message.Particulars }}\"\r\n                                                pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\r\n                                                formControlName=\"Particulars\">\r\n                                            <label for=\"Particulars\">Particulars<sub class=\"required\">*</sub></label>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"angForm.controls['Particulars'].invalid && (angForm.controls['Particulars'].dirty || angForm.controls['Particulars'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div\r\n                                            *ngIf=\"angForm.controls['Particulars'].errors?.pattern || angForm.controls['Particulars'].errors?.required\">\r\n                                            This field is required and Input allowed only A-Za-z\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"transfer1True\">\r\n                        <h6>Interest Instruction Account Details</h6>\r\n                        <div class=\"card-block\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                            placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\r\n                                            formControlName=\"Scheme\">\r\n                                        </ng-select>\r\n                                        <label>{{ message.Scheme }}</label>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                            placeholder=\"Account No*\" required title=\"Compulsory Selection\"\r\n                                            formControlName=\"AccountNo\">\r\n                                        </ng-select>\r\n                                        <label>{{ message.AccountNo }}</label>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"angForm.controls['AccountNo'].invalid && (angForm.controls['AccountNo'].dirty || angForm.controls['AccountNo'].touched)\"\r\n                                        class='alert alert-danger'>\r\n                                        <div *ngIf=\"angForm.controls['AccountNo'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                                id=\"Particulars\" required=\"\" value=\"{{ message.Particulars }}\"\r\n                                                pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\r\n                                                formControlName=\"Particulars\">\r\n                                            <label for=\"Particulars\">Particulars<sub class=\"required\">*</sub></label>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"angForm.controls['Particulars'].invalid && (angForm.controls['Particulars'].dirty || angForm.controls['Particulars'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div\r\n                                            *ngIf=\"angForm.controls['Particulars'].errors?.pattern || angForm.controls['Particulars'].errors?.required\">\r\n                                            This field is required and Input allowed only A-Za-z\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <h6>Credit Account Details</h6>\r\n                        <div class=\"card-block\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                            placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\r\n                                            formControlName=\"Scheme\">\r\n                                        </ng-select>\r\n                                        <label>{{ message.Scheme2 }}</label>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                            placeholder=\"Account No*\" required title=\"Compulsory Selection\"\r\n                                            formControlName=\"AccountNo\">\r\n                                        </ng-select>\r\n                                        <label>{{ message.AccountNo2 }}</label>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"angForm.controls['AccountNo'].invalid && (angForm.controls['AccountNo'].dirty || angForm.controls['AccountNo'].touched)\"\r\n                                        class='alert alert-danger'>\r\n                                        <div *ngIf=\"angForm.controls['AccountNo'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                                id=\"AdviceNarration\" required=\"\" value=\"{{ message.AdviceNarration }}\"\r\n                                                pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\r\n                                                formControlName=\"AdviceNarration\">\r\n                                            <label for=\"AdviceNarration\">Advice Narration <sub\r\n                                                    class=\"required\">*</sub></label>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"angForm.controls['AdviceNarration'].invalid && (angForm.controls['AdviceNarration'].dirty || angForm.controls['AdviceNarration'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div\r\n                                            *ngIf=\"angForm.controls['AdviceNarration'].errors?.pattern || angForm.controls['AdviceNarration'].errors?.required\">\r\n                                            This field is required and Input allowed only A-Za-z\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                                id=\"Particulars2\" required=\"\" value=\"{{ message.Particulars2 }}\"\r\n                                                pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\r\n                                                formControlName=\"Particular\">\r\n                                            <label for=\"Particulars2\">Particulars<sub class=\"required\">*</sub></label>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"angForm.controls['Particular'].invalid && (angForm.controls['Particular'].dirty || angForm.controls['Particular'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div\r\n                                            *ngIf=\"angForm.controls['Particular'].errors?.pattern || angForm.controls['Particular'].errors?.required\">\r\n                                            This field is required and Input allowed only A-Za-z\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"RevokeDate\"\r\n                                                required=\"\" max=\"9999-12-31\" formControlName=\"RevokeDate\"\r\n                                                value=\"{{ message.RevokeDate}}\" onfocus=\"(this.type='date')\" />\r\n                                            <label for=\"RevokeDate\">Revoke Date <sub class=\"required\">*</sub></label>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary form-static-label\"\r\n                                        *ngIf=\"angForm.controls['RevokeDate'].invalid && (angForm.controls['RevokeDate'].dirty || angForm.controls['RevokeDate'].touched)\"\r\n                                        class=\"alert alert-danger\">\r\n                                        <div *ngIf=\"angForm.controls['RevokeDate'].errors?.required\">\r\n                                            This field is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"border-checkbox-section\">\r\n                                        <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                            <input class=\"border-checkbox\" type=\"checkbox\" name=\"DD_APPLICABLE\"\r\n                                                id=\"checkbox1\" [checked]=\"isIsDiscountedInterestApplicable == true\">\r\n                                            <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Discounted Interest\r\n                                                Applicable</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\r\n                                [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\r\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild, } from \"@angular/core\";\r\n// Used to Call API\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from '../../../../shared/dropdownService/schemeAccountNo.service'\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { lienService } from './lien-mark-clear.service'\r\n// Angular Datatable Directive\r\nimport { DataTableDirective } from \"angular-datatables\";\r\nimport { Subject } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { first } from 'rxjs/operators';\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n// For fetching values from backend\r\ninterface LienMaster {\r\n  AC_NO: number\r\n  DEPO_AC_TYPE: string;\r\n  DEPO_AC_NO: number;\r\n  // SECU_CODE: number;\r\n  LEDGER_BAL: number;\r\n  DEPOSIT_AMT: number;\r\n  RECEIPT_NO: number;\r\n  IS_LIEN_MARK_CLEAR: number;\r\n  AC_TYPE: string;\r\n  BALANCE_OF_LOAN_ACCOUNT: number;\r\n  AC_EXPIRE_DATE: Date;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-lien-mark-clear',\r\n  templateUrl: './lien-mark-clear.component.html',\r\n  styleUrls: ['./lien-mark-clear.component.scss']\r\n})\r\nexport class LienMarkClearComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  //api \r\n  url = environment.base_url;\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  lienMaster: LienMaster[];\r\n  angForm: FormGroup;\r\n\r\n  //Datatable\r\n  dtExportButtonOptions: any = {};\r\n  acno\r\n  allScheme // all scheme\r\n  schemeACNo //account no \r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n\r\n  private dataSub: Subscription = null;\r\n\r\n  //variables for  add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n\r\n  //variable for checkbox and radio button \r\n  isIsLienMarkClear: boolean = false;\r\n  //variable to get ID to update\r\n  updateID: number = 0;\r\n\r\n  //filter variable\r\n  filterData = {};\r\n  page: number;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService, private http: HttpClient, private _lien: lienService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: \"full_numbers\",\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n\r\n        dataTableParameters.columns.forEach((element) => {\r\n          if (element.search.value != \"\") {\r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          } else {\r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if (this.filterData.hasOwnProperty(element.data)) {\r\n              let value = this.filterData[getColumnName];\r\n              if (columnValue != undefined || value != undefined) {\r\n                delete this.filterData[element.data];\r\n              }\r\n            }\r\n          }\r\n        });\r\n        dataTableParameters[\"filterData\"] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            this.url + '/lien-mark-clear',\r\n            dataTableParameters\r\n          )\r\n          .subscribe((resp) => {\r\n            this.lienMaster = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: [],\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        {\r\n          title: \"Action\",\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          },\r\n        },\r\n        {\r\n          title: 'Scheme',\r\n          data: 'DEPO_AC_TYPE'\r\n        },\r\n        {\r\n          title: 'Account No',\r\n          data: 'DEPO_AC_NO'\r\n        },\r\n        // {\r\n        //   title: 'Security Code',\r\n        //   data: 'SECU_CODE'\r\n        // },\r\n        {\r\n          title: 'Ledger Balance',\r\n          data: 'LEDGER_BAL'\r\n        },\r\n        {\r\n          title: 'Deposit Amount',\r\n          data: 'DEPOSIT_AMT'\r\n        },\r\n        {\r\n          title: 'TD Receipt No',\r\n          data: 'RECEIPT_NO'\r\n        },\r\n        {\r\n          title: 'IsLienMarkClear',\r\n          data: 'IS_LIEN_MARK_CLEAR'\r\n        },\r\n        {\r\n          title: 'Loan Ac No',\r\n          data: 'AC_TYPE'\r\n        },\r\n        {\r\n          title: 'Loan Os Balance',\r\n          data: 'BALANCE_OF_LOAN_ACCOUNT'\r\n        },\r\n        {\r\n          title: 'Loan Expiry Date',\r\n          data: 'AC_EXPIRE_DATE'\r\n        }\r\n      ],\r\n      dom: 'Blrtip',\r\n    };\r\n\r\n    this.runTimer();\r\n\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      var filtered = data.filter(function (scheme) {\r\n        return (scheme.value == 'TD' || scheme.value == 'PG' || scheme.value == 'SB');\r\n      });\r\n      this.allScheme = filtered;\r\n    })\r\n  }\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      DEPO_AC_TYPE: ['',],\r\n      DEPO_AC_NO: ['',],\r\n      // SECU_CODE: ['', [Validators.pattern, Validators.required]],\r\n      LEDGER_BAL: [''],\r\n      DEPOSIT_AMT: [''],\r\n      RECEIPT_NO: [''],\r\n      IS_LIEN_MARK_CLEAR: [''],\r\n      AC_TYPE: [''],\r\n      BALANCE_OF_LOAN_ACCOUNT: [''],\r\n      AC_EXPIRE_DATE: [''],\r\n    });\r\n  }\r\n\r\n  //get account no according scheme \r\n  getSchemeAcNO(acno) {\r\n    switch (acno) {\r\n      case 'SB':\r\n        this.schemeAccountNoService.getSavingSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n      case 'TD':\r\n        console.log(\"Term Deposit\");\r\n        this.schemeAccountNoService.getTermDepositSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'PG':\r\n        console.log(\"Pigmy account\");\r\n        this.schemeAccountNoService.getPigmyAccountSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n    }\r\n  }\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      DEPO_AC_TYPE: formVal.DEPO_AC_TYPE,\r\n      DEPO_AC_NO: formVal.DEPO_AC_NO,\r\n      // SECU_CODE: formVal.SECU_CODE,\r\n      LEDGER_BAL: formVal.LEDGER_BAL,\r\n      DEPOSIT_AMT: formVal.DEPOSIT_AMT,\r\n      RECEIPT_NO: formVal.RECEIPT_NO,\r\n      IS_LIEN_MARK_CLEAR: formVal.IS_LIEN_MARK_CLEAR,\r\n      AC_TYPE: formVal.AC_TYPE,\r\n      BALANCE_OF_LOAN_ACCOUNT: formVal.BALANCE_OF_LOAN_ACCOUNT,\r\n      AC_EXPIRE_DATE: formVal.AC_EXPIRE_DATE,\r\n\r\n    };\r\n    this._lien.postData(dataToSend).subscribe(\r\n      (data1) => {\r\n        Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\r\n        // to reload after insertion of data\r\n        this.rerender();\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    //To clear form\r\n    this.resetForm();\r\n\r\n  }\r\n\r\n  //function for edit button clicked\r\n  editClickHandler(id: any): void {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this._lien.getFormData(id).subscribe((data) => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        DEPO_AC_TYPE: data.DEPO_AC_TYPE,\r\n        DEPO_AC_NO: data.DEPO_AC_NO.toString(),\r\n        // SECU_CODE: data.SECU_CODE,\r\n        LEDGER_BAL: data.LEDGER_BAL,\r\n        DEPOSIT_AMT: data.DEPOSIT_AMT,\r\n        RECEIPT_NO: data.RECEIPT_NO,\r\n        IS_LIEN_MARK_CLEAR: data.IS_LIEN_MARK_CLEAR,\r\n        AC_TYPE: data.AC_TYPE,\r\n        BALANCE_OF_LOAN_ACCOUNT: data.BALANCE_OF_LOAN_ACCOUNT,\r\n        AC_EXPIRE_DATE: data.AC_EXPIRE_DATE,\r\n\r\n      });\r\n    });\r\n  }\r\n\r\n  //function for delete button clicked\r\n  delClickHandler(id: any): void {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete Lien Mark data\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this._lien.deleteData(id).subscribe((data1) => {\r\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\r\n        }),\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  //function toggle update to add button\r\n  updateData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    let data = this.angForm.value;\r\n    data[\"id\"] = this.updateID;\r\n    this._lien.updateData(data).subscribe(() => {\r\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.rerender();\r\n      this.resetForm();\r\n    });\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $(\"input\", this.footer()).on(\"keyup change\", function () {\r\n          if (this[\"value\"] != \"\") {\r\n            that.search(this[\"value\"]).draw();\r\n          } else {\r\n            that.search(this[\"value\"]).draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h5>Lien Mark or Clear</h5>\r\n        <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n      </div>\r\n\r\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n        <div class=\"card-block\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input type=\"text\" name=\"DEPO_AC_TYPE\" class=\"form-control\" placeholder=\" \" id=\"DEPO_AC_TYPE\"\r\n                    formControlName=\"DEPO_AC_TYPE\" disabled>\r\n                  <label for=\"DEPO_AC_TYPE\">Scheme</label>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"col-sm\">\r\n              <div class=\"form-group form-primary form-static-label\">\r\n                <ng-select [ngClass]=\"'ng-select'\" [options]=\"allScheme\" [multiple]=\"false\" placeholder=\"Scheme*\"\r\n                  required title=\"Compulsory Selection\" formControlName=\"DEPO_AC_TYPE\" [(ngModel)]=\"acno\"\r\n                  (selected)=\"getSchemeAcNO(acno)\">\r\n                </ng-select>\r\n              </div>\r\n              <div class=\"form-group form-primary form-static-label\"\r\n                *ngIf=\"angForm.controls['DEPO_AC_TYPE'].invalid && (angForm.controls['DEPO_AC_TYPE'].dirty || angForm.controls['DEPO_AC_TYPE'].touched)\"\r\n                class=\"alert alert-danger\">\r\n                <div *ngIf=\"angForm.controls['DEPO_AC_TYPE'].errors?.required\">\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div> -->\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input type=\"text\" name=\"DEPO_AC_NO\" class=\"form-control\" placeholder=\" \" id=\"DEPO_AC_NO\"\r\n                    formControlName=\"DEPO_AC_NO\" disabled>\r\n                  <label for=\"DEPO_AC_NO\">Account No</label>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"col-sm\">\r\n              <div class=\"form-group form-primary form-static-label\">\r\n                <ng-select [ngClass]=\"'ng-select'\" [options]=\"schemeACNo\" [multiple]=\"false\" placeholder=\"Account No*\"\r\n                  required formControlName=\"DEPO_AC_NO\">\r\n                </ng-select>\r\n              </div>\r\n              <div class=\"form-group form-primary form-static-label\"\r\n                *ngIf=\"angForm.controls['DEPO_AC_NO'].invalid && (angForm.controls['DEPO_AC_NO'].dirty || angForm.controls['DEPO_AC_NO'].touched)\"\r\n                class='alert alert-danger'>\r\n                <div *ngIf=\"angForm.controls['DEPO_AC_NO'].errors?.required\">\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div> -->\r\n            <!-- <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"SecurityCode\"\r\n                                        required=\"\" pattern=\"^[0-9]+$\"\r\n                                        maxlength=\"4\"\r\n                                        title=\"Input allowed only  0-9\" formControlName=\"SECU_CODE\">\r\n                                    <label for=\"SecurityCode\">Security Code <sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['SECU_CODE'].invalid && (angForm.controls['SECU_CODE'].dirty || angForm.controls['SECU_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['SECU_CODE'].errors?.pattern || angForm.controls['SECU_CODE'].errors?.required\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"LedgerBalance\"\r\n                    formControlName=\"LEDGER_BAL\" disabled>\r\n                  <label for=\"LedgerBalance\">Ledger Balance</label>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"DepositAmount\"\r\n                    pattern=\"\\d{1,20}(\\.\\d{2})?\" formControlName=\"DEPOSIT_AMT\" disabled>\r\n                  <label for=\"DepositAmount\">Deposit Amount</label>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"TDReceiptNo\"\r\n                    formControlName=\"RECEIPT_NO\" disabled>\r\n                  <label for=\"TDReceiptNo\">TD Receipt No.</label>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"border-checkbox-section\">\r\n                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                  <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\"\r\n                    [checked]=\"isIsLienMarkClear == true\" formControlName=\"IS_LIEN_MARK_CLEAR\">\r\n                  <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Lien Mark Clear ?<span class=\"required\">\r\n                      *</span></label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h6>Term Loan Details</h6>\r\n          <div class=\"card-block\">\r\n            <div class=\"row\">\r\n              <div class=\"col-sm\">\r\n                <div class=\"form-group input-group\">\r\n                  <span class=\"border-lable-flt\">\r\n                    <input type=\"text\" name=\"To\" class=\"form-control\" formControlName=\"AC_TYPE\" placeholder=\" \"\r\n                      id=\"LoanAcNo\" disabled>\r\n                    <label for=\"LoanAcNo\">Loan A/c No.</label>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm\">\r\n                <div class=\"form-group input-group\">\r\n                  <span class=\"border-lable-flt\">\r\n                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                      formControlName=\"BALANCE_OF_LOAN_ACCOUNT\" id=\"LoanOsBalance\" disabled>\r\n                    <label for=\"LoanOsBalance\">Loan O/s Balance</label>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm\">\r\n                <div class=\"form-group input-group\">\r\n                  <span class=\"border-lable-flt\">\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\r\n                      formControlName=\"AC_EXPIRE_DATE\" onfocus=\"(this.type='date')\" id=\"date\" disabled />\r\n                    <label for=\"date\">Loan Expiry Date </label>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm\">\r\n                <!-- <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" *ngIf=\"showButton\"\r\n                  [disabled]=\"angForm.invalid\">Add</button> -->\r\n                <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\" *ngIf=\"updateShow\">Update</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-block\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm\">\r\n            <div class=\"table-responsive\">\r\n              <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\r\n                class=\"table table-striped table-bordered table-hover\">\r\n                <tbody *ngIf=\"lienMaster?.length != 0\">\r\n                  <tr *ngFor=\"let data of lienMaster\">\r\n                    <td>\r\n                      <button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">\r\n                        Edit\r\n                      </button>\r\n\r\n                      <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                    </td>\r\n\r\n                    <td>{{ data.DEPO_AC_TYPE }}</td>\r\n                    <td>{{ data.DEPO_AC_NO }}</td>\r\n                    <!-- <td>{{ data.SECU_CODE }}</td> -->\r\n                    <td>{{ data.LEDGER_BAL }}</td>\r\n                    <td>{{ data.DEPOSIT_AMT }}</td>\r\n                    <td>{{ data.RECEIPT_NO }}</td>\r\n                    <td>{{ data.IS_LIEN_MARK_CLEAR }}</td>\r\n                    <td>{{ data.AC_TYPE }}</td>\r\n                    <td>{{ data.BALANCE_OF_LOAN_ACCOUNT }}</td>\r\n                    <td>{{ data.AC_EXPIRE_DATE }}</td>\r\n\r\n\r\n\r\n\r\n                  </tr>\r\n                </tbody>\r\n                <tbody *ngIf=\"lienMaster?.length == 0\">\r\n                  <tr>\r\n                    <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                  </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr>\r\n                    <th></th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Scheme\" name=\"DEPO_AC_TYPE\" />\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Account No\" name=\"DEPO_AC_NO\" />\r\n                    </th>\r\n                    <!-- <th>\r\n                      <input type=\"text\" placeholder=\"Search Security Code\" name=\"SECU_CODE\" />\r\n                    </th> -->\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Ledger Balance\" name=\"LEDGER_BAL\" />\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Deposit Amount\" name=\"DEPOSIT_AMT\" />\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search TD Receipt No.\" name=\"RECEIPT_NO\" />\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search s Lien Mark Clear ?\" name=\"IS_LIEN_MARK_CLEAR\" />\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Loan A/c No.\" name=\"AC_TYPE\" />\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search oan O/s Balance\" name=\"BALANCE_OF_LOAN_ACCOUNT\" />\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Loan Expiry Date\" name=\"AC_EXPIRE_DATE\" />\r\n                    </th>\r\n\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport \"rxjs/Rx\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport Swal from \"sweetalert2\";\r\nimport { environment } from \"../../../../../environments/environment\";\r\n@Injectable()\r\nexport class lienService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API\r\n  url = environment.base_url;\r\n\r\n  constructor(private http: HttpClient) { }\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/lien-mark-clear/insert', data).pipe(\r\n      map((res) => res),\r\n      catchError((error) => {\r\n        Swal.fire(\"Please Input Proper Data !\");\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/lien-mark-clear/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/lien-mark-clear/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/lien-mark-clear/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild, } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { IOption } from \"ng-select\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service';\r\nimport { overdraftservice } from './over-draft.service';\r\nimport { SchemeAccountNoService } from '../../../../shared/dropdownService/schemeAccountNo.service'\r\nimport Swal from \"sweetalert2\";\r\nimport { FormGroup, FormBuilder, Validators, FormControl, } from \"@angular/forms\";\r\n\r\n// Angular Datatable Directive\r\nimport { DataTableDirective } from \"angular-datatables\";\r\nimport { Subject } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { first } from 'rxjs/operators';\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n// For fetching values from backend\r\ninterface OverMaster {\r\n  AC_TYPE: string;\r\n  AC_NO: number;\r\n  AC_SODAMT: string;\r\n  AC_ODAMT: number;\r\n  AC_ODDAYS: number;\r\n  AC_ODDATE: Date;\r\n}\r\n@Component({\r\n  selector: \"app-over-draft\",\r\n  templateUrl: \"./over-draft.component.html\",\r\n  styleUrls: [\"./over-draft.component.scss\"],\r\n})\r\nexport class OverDraftComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  //api\r\n  url = environment.base_url;\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  overMaster: OverMaster[];\r\n\r\n  //variable to get ID to update\r\n  updateID: number = 0;\r\n\r\n  //filter variable\r\n  filterData = {};\r\n\r\n  angForm: FormGroup;\r\n  dtExportButtonOptions: any = {};\r\n  acno\r\n  allScheme // all scheme\r\n  schemeACNo //account no \r\n\r\n  selectedOption = \"3\";\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = \"3\";\r\n  timeLeft = 5;\r\n\r\n  private dataSub: Subscription = null;\r\n\r\n  PeriodicallyOverDraftTrue = true;\r\n  TemporaryOverDraftTrue = false;\r\n  periodoverdraft: boolean = false\r\n\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  newbtnShow: boolean = false;\r\n  page: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private _overdraft: overdraftservice,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n\r\n    // this.dtExportButtonOptions = {\r\n    //   pagingType: \"full_numbers\",\r\n    //   paging: true,\r\n    //   pageLength: 10,\r\n    //   serverSide: true,\r\n    //   processing: true,\r\n    //   ajax: (dataTableParameters: any, callback) => {\r\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n    //     dataTableParameters.maxNumber =\r\n    //       dataTableParameters.start + dataTableParameters.length;\r\n    //     let datatableRequestParam: any;\r\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\r\n\r\n    //     dataTableParameters.columns.forEach((element) => {\r\n    //       if (element.search.value != \"\") {\r\n    //         let string = element.search.value;\r\n    //         this.filterData[element.data] = string;\r\n    //       } else {\r\n    //         let getColumnName = element.data;\r\n    //         let columnValue = element.value;\r\n    //         if (this.filterData.hasOwnProperty(element.data)) {\r\n    //           let value = this.filterData[getColumnName];\r\n    //           if (columnValue != undefined || value != undefined) {\r\n    //             delete this.filterData[element.data];\r\n    //           }\r\n    //         }\r\n    //       }\r\n    //     });\r\n    //     dataTableParameters[\"filterData\"] = this.filterData;\r\n    //     this.http\r\n    //       .post<DataTableResponse>(\r\n    //         this.url + \"/over-draft\",\r\n    //         dataTableParameters\r\n    //       )\r\n    //       .subscribe((resp) => {\r\n    //         this.overMaster = resp.data;\r\n    //         callback({\r\n    //           recordsTotal: resp.recordsTotal,\r\n    //           recordsFiltered: resp.recordsTotal,\r\n    //           data: [],\r\n    //         });\r\n    //       });\r\n    //   },\r\n    //   columns: [\r\n    //     {\r\n    //       title: \"Action\",\r\n    //       render: function (data: any, type: any, full: any) {\r\n    //         return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n    //       },\r\n    //     },\r\n    //     {\r\n    //       title: \"Scheme Code\",\r\n    //       data: \"AC_TYPE\",\r\n    //     },\r\n    //     {\r\n    //       title: \"Account No\",\r\n    //       data: \"AC_NO\",\r\n    //     },\r\n    //     {\r\n    //       title: \"Account No\",\r\n    //       data: \"AC_NO\",\r\n    //     },\r\n    //   ],\r\n    //   dom: \"Blrtip\",\r\n    // };\r\n\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      var filtered = data.filter(function (scheme) {\r\n        return (scheme.value == 'CA' || scheme.value == 'PG' || scheme.value == 'SB' || scheme.value == 'LN' || scheme.value == 'CC');\r\n      });\r\n      this.allScheme = filtered;\r\n    })\r\n  }\r\n\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      AC_TYPE: [\"\", [Validators.required]],\r\n      AC_NO: [\"\", [Validators.required]],\r\n      AC_SODAMT: [\"\"],\r\n      AC_ODAMT: [\"\", [Validators.pattern,]],\r\n      AC_ODDAYS: [\"\", [Validators.pattern,]],\r\n      AC_ODDATE: [\"\", []],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      AC_TYPE: formVal.AC_TYPE,\r\n      AC_NO: formVal.AC_NO,\r\n      AC_SODAMT: formVal.AC_SODAMT,\r\n      AC_ODAMT: formVal.AC_ODAMT,\r\n      AC_ODDAYS: formVal.AC_ODDAYS,\r\n      AC_ODDATE: formVal.AC_ODDATE,\r\n    };\r\n    this._overdraft.postData(dataToSend).subscribe(\r\n      (data1) => {\r\n        Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\r\n        // to reload after insertion of data\r\n        // this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n        //   dtInstance.ajax.reload()\r\n        // });\r\n        // this.rerender()\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    //To clear form\r\n    this.resetForm();\r\n  }\r\n\r\n  //  editClickHandler function for edit button clicked\r\n  editClickHandler(id: any): void {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.newbtnShow = true;\r\n    this._overdraft.getFormData(id).subscribe((data) => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        AC_TYPE: data.AC_TYPE,\r\n        AC_NO: data.AC_NO,\r\n        AC_SODAMT: data.AC_SODAMT,\r\n        AC_ODAMT: data.AC_ODAMT,\r\n        AC_ODDAYS: data.AC_ODDAYS,\r\n        AC_ODDATE: data.AC_ODDATE,\r\n      });\r\n    });\r\n  }\r\n\r\n  // updateData function for update data\r\n  updateData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    this.newbtnShow = false;\r\n    let data = this.angForm.value;\r\n    data[\"id\"] = this.updateID;\r\n    this._overdraft.updateData(data).subscribe(() => {\r\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.newbtnShow = false;\r\n      this.rerender();\r\n      this.resetForm();\r\n    });\r\n  }\r\n\r\n  //get account no according scheme \r\n  getSchemeAcNO(acno) {\r\n    switch (acno) {\r\n      case 'SB':\r\n        this.schemeAccountNoService.getSavingSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'CA':\r\n        this.schemeAccountNoService.getCurrentAccountSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'LN':\r\n        this.schemeAccountNoService.getTermLoanSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'CC':\r\n        this.schemeAccountNoService.getCashCreditSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'PG':\r\n        this.schemeAccountNoService.getPigmyAccountSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @delClickHandler function for delete button \r\n    @Swal sweetalert2\r\n    @Swal.fire open a modal window to display message\r\n  */\r\n  delClickHandler(id: any): void {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to delete Over Draft data\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#229954\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      /* run code if our result  isConfirmed function Swal.fire open a modal window to display message\r\n      else if result is dismiss then it cancel and open a modal window to display cancel message\r\n       */\r\n      if (result.isConfirmed) {\r\n        this._overdraft.deleteData(id).subscribe((data1) => {\r\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\r\n        }),\r\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\r\n      }\r\n    });\r\n  }\r\n  ngAfterViewInit(): void {\r\n    // this.dtTrigger.next();\r\n    // this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n    //   dtInstance.columns().every(function () {\r\n    //     const that = this;\r\n    //     $(\"input\", this.footer()).on(\"keyup change\", function () {\r\n    //       if (this[\"value\"] != \"\") {\r\n    //         that.search(this[\"value\"]).draw();\r\n    //       } else {\r\n    //         that.search(this[\"value\"]).draw();\r\n    //       }\r\n    //     });\r\n    //   });\r\n    // });\r\n  }\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n\r\n  OpenLink(val) {\r\n    if (val == 1) {\r\n      this.PeriodicallyOverDraftTrue = true;\r\n      this.periodoverdraft = true\r\n      this.TemporaryOverDraftTrue = false;\r\n    }\r\n    if (val == 2) {\r\n      this.PeriodicallyOverDraftTrue = false;\r\n      this.periodoverdraft = false\r\n      this.TemporaryOverDraftTrue = true;\r\n      this.angForm.controls['AC_ODDAYS'].reset()\r\n      this.angForm.controls['AC_ODDATE'].reset()\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Over Draft</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <div class=\"card-block\">\r\n                <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"allScheme\" [multiple]=\"false\"\r\n                                    placeholder=\"Scheme*\" formControlName=\"AC_TYPE\" [(ngModel)]=\"acno\"\r\n                                    (selected)=\"getSchemeAcNO(acno)\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class='alert alert-danger'>\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"schemeACNo\" [multiple]=\"false\"\r\n                                    placeholder=\"Account No*\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"AC_NO\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_NO'].invalid && (angForm.controls['AC_NO'].dirty || angForm.controls['AC_NO'].touched)\"\r\n                                class='alert alert-danger'>\r\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-block\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                                <ul class=\"basic-list\">\r\n                                    <li>\r\n                                        <h6>\r\n                                            <a (click)=\"OpenLink(1)\" routerLinkActive=\"active\"\r\n                                                class=\"text-right f-w-600\" id=\"pointer\">\r\n\r\n                                                <div class=\"form-radio\">\r\n                                                    <div class=\"radio radio-inline\">\r\n                                                        <label>\r\n                                                            <input type=\"radio\" name=\"AC_SODAMT\"\r\n                                                                formControlName=\"AC_SODAMT\"\r\n                                                                value=\"PeriodicallyOverDraft\" checked=\"true\">\r\n                                                            <i class=\"helper\"></i>Periodically Over Draft\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </a>\r\n                                        </h6>\r\n                                    </li>\r\n                                    <li>\r\n                                        <h6>\r\n                                            <a (click)=\"OpenLink(2)\" routerLinkActive=\"active\"\r\n                                                class=\"text-right f-w-600\" id=\"pointer\">\r\n                                                <div class=\"form-radio\">\r\n                                                    <div class=\"radio radio-inline\">\r\n                                                        <label>\r\n                                                            <input type=\"radio\" name=\"AC_SODAMT\"\r\n                                                                formControlName=\"AC_SODAMT\" value=\"TemporaryOverDraft\">\r\n                                                            <i class=\"helper\"></i>Temporary Over Draft\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </a>\r\n                                        </h6>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"col-sm-9\">\r\n                                <div class=\"card-block\">\r\n                                    <div *ngIf=\"PeriodicallyOverDraftTrue\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm\">\r\n                                                <div class=\"form-group input-group\">\r\n                                                    <span class=\"border-lable-flt\">\r\n                                                        <input type=\"text\" name=\"To\" class=\"form-control\"\r\n                                                            placeholder=\" \" id=\"Over\" pattern=\"\\d{1,7}(\\.\\d{2})?\"\r\n                                                            title=\"Input allowed only  0-9\" formControlName=\"AC_ODAMT\"\r\n                                                            [required]=\"periodoverdraft\">\r\n                                                        <label for=\"Over\">Over DRaft Amount<sub\r\n                                                                class=\"required\">*</sub></label>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div class=\"form-group form-primary form-static-label\"\r\n                                                    *ngIf=\"angForm.controls['AC_ODAMT'].invalid && (angForm.controls['AC_ODAMT'].dirty || angForm.controls['AC_ODAMT'].touched)\"\r\n                                                    class='alert alert-danger'>\r\n                                                    <div\r\n                                                        *ngIf=\"angForm.controls['AC_ODAMT'].errors?.pattern || angForm.controls['AC_ODAMT'].errors?.required\">\r\n                                                        This field is required and Input allowed only 0-9\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm\">\r\n                                                <div class=\"form-group input-group\">\r\n                                                    <span class=\"border-lable-flt\">\r\n                                                        <input type=\"text\" name=\"To\" class=\"form-control\"\r\n                                                            placeholder=\" \" id=\"Over1\" pattern=\"^[0-9]+$\" maxlength=\"3\"\r\n                                                            title=\"Input allowed only  0-9\" formControlName=\"AC_ODDAYS\"\r\n                                                            [required]=\"periodoverdraft\">\r\n                                                        <label for=\"Over1\">OD period in days<sub\r\n                                                                class=\"required\">*</sub></label>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div class=\"form-group form-primary form-static-label\"\r\n                                                    *ngIf=\"angForm.controls['AC_ODDAYS'].invalid && (angForm.controls['AC_ODDAYS'].dirty || angForm.controls['AC_ODDAYS'].touched)\"\r\n                                                    class=\"alert alert-danger\">\r\n                                                    <div\r\n                                                        *ngIf=\"angForm.controls['AC_ODDAYS'].errors?.pattern || angForm.controls['AC_ODDAYS'].errors?.required\">\r\n                                                        This field is required and Input allowed only 0-9\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm\">\r\n                                                <div class=\"form-group input-group\">\r\n                                                    <span class=\"border-lable-flt\">\r\n                                                        <input type=\"text\" class=\"form-control\" placeholder=\" \"\r\n                                                            id=\"Date\" max=\"9999-12-31\" formControlName=\"AC_ODDATE\"\r\n                                                            onfocus=\"(this.type='date')\" [required]=\"periodoverdraft\" />\r\n                                                        <label for=\"Date\">OD Till Date <sub\r\n                                                                class=\"required\">*</sub></label>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div class=\"form-group form-primary form-static-label\"\r\n                                                    *ngIf=\"angForm.controls['AC_ODDATE'].invalid && (angForm.controls['AC_ODDATE'].dirty || angForm.controls['AC_ODDATE'].touched)\"\r\n                                                    class=\"alert alert-danger\">\r\n                                                    <div *ngIf=\"angForm.controls['AC_ODDATE'].errors?.required\">\r\n                                                        This field is required\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf=\"TemporaryOverDraftTrue\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-5\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                                        id=\"To\" pattern=\"\\d{1,7}(\\.\\d{2})?\"\r\n                                                        title=\"Input allowed only  0-9\" formControlName=\"AC_ODAMT\">\r\n                                                    <label for=\"To\">Over Draft Amount <sub\r\n                                                            class=\"required\">*</sub></label>\r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['AC_ODAMT'].invalid && (angForm.controls['AC_ODAMT'].dirty || angForm.controls['AC_ODAMT'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div\r\n                                                    *ngIf=\"angForm.controls['AC_ODAMT'].errors?.pattern || angForm.controls['AC_ODAMT'].errors?.required\">\r\n                                                    This field is required and Input allowed only 0-9\r\n                                                </div>\r\n                                            </div>\r\n                                            <!-- <div *ngIf=\"angForm.get('Over2').hasError('required') && myform.submitted\"\r\n                                                    class='alert alert-danger'>This field is required</div>  -->\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" [disabled]=\"angForm.invalid\"\r\n                            *ngIf=\"showButton\">Add</button>\r\n                        <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\r\n                            *ngIf=\"updateShow\">Update</button>&nbsp;\r\n                        <button class=\"btn btn-primary ripple light\" (click)=\"addNewData()\"\r\n                            *ngIf=\"newbtnShow\">New</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\r\n                                class=\"table table-striped table-bordered table-hover\">\r\n                                <tbody *ngIf=\"overMaster?.length != 0\">\r\n                                    <tr *ngFor=\"let data of overMaster\">\r\n                                        <td>\r\n                                            <button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\"\r\n                                                (click)=\"editClickHandler(data.id)\">\r\n                                                Edit\r\n                                            </button>\r\n\r\n                                             </td>\r\n\r\n                                        <td>{{ data.AC_TYPE }}</td>\r\n                                        <td>{{ data.AC_NO }}</td>\r\n                                        <td>{{ data.AC_SODAMT }}</td>\r\n                                        <td>{{ data.AC_ODAMT }}</td>\r\n                                        <td>{{ data.AC_ODDAYS }}</td>\r\n                                        <td>{{ data.AC_ODDATE }}</td>\r\n\r\n\r\n\r\n\r\n\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"overMaster?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search Scheme Code\" name=\"AC_TYPE\" />\r\n                                        </th>\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search Account No\" name=\"AC_NO\" />\r\n                                        </th>\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search Periodically Over Draft\"\r\n                                                name=\"AC_SODAMT\" />\r\n                                        </th>\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search Over DRaft Amount\" name=\"AC_ODAMT\" />\r\n                                        </th>\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search OD period in days\"\r\n                                                name=\"AC_ODDAYS\" />\r\n                                        </th>\r\n                                        <th>\r\n                                            <input type=\"text\" placeholder=\"Search OD Till Date\" name=\"AC_ODDATE\" />\r\n                                        </th>\r\n\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->","import { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport \"rxjs/Rx\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport Swal from \"sweetalert2\";\r\nimport { environment } from \"../../../../../environments/environment\";\r\n@Injectable()\r\nexport class overdraftservice {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API\r\n  url = environment.base_url;\r\n\r\n  constructor(private http: HttpClient) { }\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + \"/over-draft/insert\", data).pipe(\r\n      map((res) => res),\r\n      catchError((error) => {\r\n        Swal.fire(\"Please Input Proper Data !\");\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http\r\n      .get(this.url + \"/over-draft/\" + id)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + \"/over-draft/update\", data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http\r\n      .delete(this.url + \"/over-draft/delete/\" + id)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { reminderInstructionService } from '../../../../shared/elements/reminder-instruction.service';\r\nimport { UserService } from '../../../../shared/elements/user.service';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-reminder-instruction',\r\n  templateUrl: './reminder-instruction.component.html',\r\n  styleUrls: ['./reminder-instruction.component.scss']\r\n})\r\nexport class ReminderInstructionComponent implements OnInit {\r\n\r\n  angForm: FormGroup;\r\n\r\n  dtExportButtonOptions: any = {};\r\n\r\n  //title select variables\r\n  user: Array<IOption> = this.UserService.getCharacters();\r\n  simpleOption: Array<IOption> = this.reminderInstructionService.getCharacters();\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n\r\n  private dataSub: Subscription = null;\r\n\r\n  //variables for  add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n\r\n  //object created to get data when row is clicked\r\n  message = {\r\n    UserID: \"\",\r\n    Date: \"\",\r\n    EntryTime: \"\",\r\n    SrNo: \"\",\r\n    FromDate: \"\",\r\n    UpToDate: \"\",\r\n    Frequency: \"\",\r\n    Details: \"\",\r\n    NextExeuDate: \"\"\r\n  };\r\n\r\n  constructor(private fb: FormBuilder, public reminderInstructionService: reminderInstructionService, public UserService: UserService) { this.createForm(); }\r\n\r\n  ngOnInit(): void {\r\n    this.dtExportButtonOptions = {\r\n      ajax: 'fake-data/reminder-instruction.json',\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'User ID',\r\n          data: 'UserID'\r\n        },\r\n        {\r\n          title: 'Date',\r\n          data: 'Date'\r\n        },\r\n        {\r\n          title: 'Entry Time',\r\n          data: 'EntryTime'\r\n        },\r\n        {\r\n          title: 'Sr No',\r\n          data: 'SrNo'\r\n        },\r\n        {\r\n          title: 'From Date',\r\n          data: 'FromDate'\r\n        },\r\n        {\r\n          title: 'Up To Date',\r\n          data: 'UpToDate'\r\n        },\r\n        {\r\n\r\n          title: 'Frequency',\r\n          data: 'Frequency'\r\n        },\r\n        {\r\n          title: 'Details',\r\n          data: 'Details'\r\n\r\n        },\r\n        {\r\n          title: 'Next ExeuDate',\r\n          data: 'NextExeuDate'\r\n        }\r\n\r\n      ],\r\n      dom: 'Bfrtip',\r\n      buttons: [\r\n        'copy',\r\n        'print',\r\n        'excel',\r\n        'csv'\r\n      ],\r\n      //row click handler code\r\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\r\n        const self = this;\r\n        $('td', row).off('click');\r\n        $('td', row).on('click', '#editbtn', () => {\r\n          self.editClickHandler(data);\r\n        });\r\n        $('td', row).on('click', '#delbtn', () => {\r\n          self.delClickHandler(data);\r\n        });\r\n        return row;\r\n      }\r\n    };\r\n    this.runTimer();\r\n    this.dataSub = this.reminderInstructionService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n\r\n    this.runTimer();\r\n    this.dataSub = this.UserService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n\r\n  }\r\n\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      UserID: ['', [Validators.required]],\r\n      Details: ['', [Validators.pattern, Validators.required]],\r\n      NextExeuDate: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.angForm.valid);\r\n    if (this.angForm.valid) {\r\n      console.log(this.angForm.value);\r\n    }\r\n  }\r\n\r\n  //function for edit button clicked\r\n  editClickHandler(info: any): void {\r\n    this.message.UserID = info.UserID;\r\n    this.message.Date = info.Date;\r\n    this.message.EntryTime = info.EntryTime;\r\n    this.message.SrNo = info.SrNo;\r\n    this.message.FromDate = info.FromDate;\r\n    this.message.Frequency = info.Frequency;\r\n    this.message.UpToDate = info.UpToDate;\r\n    this.message.Frequency = info.Frequency;\r\n    this.message.Details = info.Details;\r\n    this.message.NextExeuDate = info.NextExeuDate;\r\n\r\n    //return boolean value and toggle add to update button\r\n\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n  }\r\n\r\n  //function for delete button clicked\r\n  delClickHandler(info: any): void {\r\n    this.message.UserID = info.UserID;\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete User ID.\" + this.message.UserID + \"  data\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your data has been deleted.',\r\n          'success'\r\n        )\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  //function toggle update to add button\r\n  updateData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Get Remind Instructions Details</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"user\" [multiple]=\"false\"\r\n                                    placeholder=\"User ID*\" formControlName=\"UserID\">\r\n                                </ng-select>\r\n                                <label>{{message.UserID}}</label>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['UserID'].invalid && (angForm.controls['UserID'].dirty || angForm.controls['UserID'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['UserID'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"entryDate\" \r\n                                        max=\"9999-12-31\" value=\"{{ message.Date}}\" onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"entryDate\">Entry Date</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"EntryTime\" \r\n                                        max=\"9999-12-31\"value=\"{{ message.EntryTime }}\">\r\n                                    <label for=\"EntryTime\">Entry Time</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\r\n                                [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"\" required=\"\"\r\n                                        max=\"9999-12-31\"value=\"{{ message.SrNo }}\">\r\n                                    <label for=\"\">Sr.No.</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"\" required=\"\"\r\n                                        max=\"9999-12-31\" formControlName=\"FromDate\" value=\"{{ message.FromDate}}\"\r\n                                        onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"\">From Date *</label>\r\n                                </span>\r\n                            </div>\r\n                            <div *ngIf=\"angForm.get('FromDate').hasError('required') && myform.submitted\"\r\n                                class='alert alert-danger'>This field is required</div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"\" required=\"\"\r\n                                        max=\"9999-12-31\" formControlName=\"FromDate\" value=\"{{ message.UpToDate}}\"\r\n                                        onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"\">Up To Date *</label>\r\n                                </span>\r\n                            </div>\r\n                            <div *ngIf=\"angForm.get('FromDate').hasError('required') && myform.submitted\"\r\n                                class='alert alert-danger'>This field is required</div>\r\n                        </div>\r\n                    </div> -->\r\n                    <!-- <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" [multiple]=\"false\"\r\n                                    placeholder=\"Frequency\">\r\n                                </ng-select>\r\n                                <label>{{message.Frequency}}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"\" required=\"\"\r\n                                        max=\"9999-12-31\"value=\"{{ message.Details }}\"\r\n                                        pattern=\"^[A-Za-z\\./ -]+$\" title=\"Input allowed only  A-Z a-z  - / . (Space)\"\r\n                                        formControlName=\"Details\">\r\n                                    <label for=\"\">Details *</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Details'].invalid && (angForm.controls['Details'].dirty || angForm.controls['Details'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['Details'].errors?.pattern || angForm.controls['Details'].errors?.required\">\r\n                                    Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div *ngIf=\"angForm.get('Details').hasError('required') && myform.submitted\"\r\n                                class='alert alert-danger'>This field is required</div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"\" required=\"\"\r\n                                        max=\"9999-12-31\" formControlName=\"NextExeuDate\"\r\n                                        value=\"{{ message.NextExeuDate}}\" onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"\">Next Exeu.Date *</label>\r\n                                </span>\r\n                            </div>\r\n                            <div *ngIf=\"angForm.get('NextExeuDate').hasError('required') && myform.submitted\"\r\n                                class='alert alert-danger'>This field is required</div>\r\n                        </div>\r\n                    </div> -->\r\n                    <!-- <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\r\n                                [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div> -->\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\r\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { revokeInterestService } from '../../../../shared/elements/revoke-interest.service'\r\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\r\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-revoke-interest-instruction',\r\n  templateUrl: './revoke-interest-instruction.component.html',\r\n  styleUrls: ['./revoke-interest-instruction.component.scss']\r\n})\r\nexport class RevokeInterestInstructionComponent implements OnInit {\r\n\r\n  angForm: FormGroup;\r\n\r\n  dtExportButtonOptions: any = {};\r\n\r\n  //title select variables\r\n  simpleOption: Array<IOption> = this.revokeInterestService.getCharacters();\r\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\r\n  b: Array<IOption> = this.AcountnoService.getCharacters();\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n\r\n  private dataSub: Subscription = null;\r\n\r\n  //variables for  add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n\r\n  //variable for checkbox and radio button \r\n  isIsDiscountInterestApplicable: boolean = false;\r\n  isCash: boolean = true;\r\n  cash1True: boolean = true;\r\n  transfer1True: boolean = false;\r\n\r\n  //object created to get data when row is clicked\r\n  message = {\r\n    Date: \"\",\r\n    StartFrom: \"\",\r\n    InstructionNo: \"\",\r\n    NextExecutionOn: \"\",\r\n    Frequency: \"\",\r\n    LastExecutionOn: \"\",\r\n    Scheme: \"\",\r\n    AccountNo: \"\",\r\n    Particulars: \"\",\r\n    Scheme1: \"\",\r\n    AccountNo1: \"\",\r\n    AdviceNarration: \"\",\r\n    Particulars1: \"\",\r\n    RevokeDate: \"\",\r\n    IsDiscountInterestApplicable: \"\",\r\n    Cash: \"\",\r\n    Transfer: \"\",\r\n  };\r\n\r\n  constructor(private fb: FormBuilder, public revokeInterestService: revokeInterestService, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\r\n\r\n  ngOnInit(): void {\r\n    this.dtExportButtonOptions = {\r\n      ajax: 'fake-data/revoke-interest.json',\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Date',\r\n          data: 'Date'\r\n        },\r\n        {\r\n          title: 'Start From',\r\n          data: 'StartFrom'\r\n        },\r\n        {\r\n          title: 'Instruction No',\r\n          data: 'InstructionNo'\r\n        },\r\n        {\r\n          title: 'Next Execution On',\r\n          data: 'NextExecutionOn'\r\n        },\r\n        {\r\n          title: 'Frequency',\r\n          data: 'Frequency'\r\n        },\r\n        {\r\n\r\n          title: 'Cash',\r\n          data: 'Cash'\r\n        },\r\n        {\r\n          title: 'Transfer',\r\n          data: 'Transfer'\r\n\r\n        },\r\n        {\r\n          title: 'Last ExecutionOn',\r\n          data: 'LastExecutionOn'\r\n        },\r\n        {\r\n          title: 'Scheme',\r\n          data: 'Scheme'\r\n        },\r\n        {\r\n          title: 'Account No',\r\n          data: 'AccountNo'\r\n        },\r\n        {\r\n          title: 'Particulars',\r\n          data: 'Particulars'\r\n        },\r\n        {\r\n          title: 'Scheme1',\r\n          data: 'Scheme1'\r\n        },\r\n        {\r\n          title: 'Account No1',\r\n          data: 'AccountNo1'\r\n        },\r\n        {\r\n          title: 'Advice Narration',\r\n          data: 'AdviceNarration'\r\n        },\r\n        {\r\n          title: 'Particulars1',\r\n          data: 'Particulars1'\r\n        },\r\n        {\r\n          title: 'Revoke Date',\r\n          data: 'RevokeDate'\r\n        },\r\n        {\r\n          title: 'Is Discount Interest Applicable',\r\n          data: 'IsDiscountInterestApplicable'\r\n        }\r\n\r\n      ],\r\n      dom: 'Bfrtip',\r\n      buttons: [\r\n        'copy',\r\n        'print',\r\n        'excel',\r\n        'csv'\r\n      ],\r\n      //row click handler code\r\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\r\n        const self = this;\r\n        $('td', row).off('click');\r\n        $('td', row).on('click', '#editbtn', () => {\r\n          self.editClickHandler(data);\r\n        });\r\n        $('td', row).on('click', '#delbtn', () => {\r\n          self.delClickHandler(data);\r\n        });\r\n        return row;\r\n      }\r\n    };\r\n    this.runTimer();\r\n    this.dataSub = this.revokeInterestService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n  }\r\n\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      Date: ['',],\r\n      StartFrom: ['',],\r\n      NextExecutionOn: ['',],\r\n      LastExecutionOn: ['',],\r\n      StatementType: ['',],\r\n      Scheme: ['',],\r\n      RevokeDate: ['', [Validators.required]]\r\n    });\r\n  }\r\n  submit() {\r\n    console.log(this.angForm.valid);\r\n    if (this.angForm.valid) {\r\n      console.log(this.angForm.value);\r\n    }\r\n  }\r\n  //function for edit button clicked\r\n  editClickHandler(info: any): void {\r\n    this.message.Date = info.Date;\r\n    this.message.StartFrom = info.StartFrom;\r\n    this.message.InstructionNo = info.InstructionNo;\r\n    this.message.NextExecutionOn = info.NextExecutionOn;\r\n    this.message.Frequency = info.Frequency;\r\n    this.message.LastExecutionOn = info.LastExecutionOn;\r\n    this.message.Scheme = info.Scheme;\r\n    this.message.AccountNo = info.AccountNo;\r\n    this.message.Particulars = info.Particulars;\r\n    this.message.Scheme1 = info.Scheme1;\r\n    this.message.AccountNo1 = info.AccountNo1;\r\n    this.message.AdviceNarration = info.AdviceNarration;\r\n    this.message.Particulars1 = info.Particulars1;\r\n    this.message.RevokeDate = info.RevokeDate;\r\n    this.message.IsDiscountInterestApplicable = info.IsDiscountInterestApplicable;\r\n    this.message.Cash = info.Cash;\r\n    this.message.Transfer = info.Transfer;\r\n\r\n    //code for chekbox\r\n    if (this.message.IsDiscountInterestApplicable == \"Yes\") {\r\n      this.isIsDiscountInterestApplicable = true;   //return boolean value and display checked checkbox\r\n    }\r\n    else {\r\n      this.isIsDiscountInterestApplicable = false;   //return boolean value and display unchecked checkbox\r\n    }\r\n\r\n    //code for radio button\r\n    if (this.message.Cash == \"Yes\") {\r\n      this.isCash = true;      //return boolean value and display checked radio button\r\n    }\r\n    else {\r\n      this.isCash = false;   //return boolean value and display unchecked radio button\r\n    }\r\n\r\n    //return boolean value and toggle add to update button\r\n\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n  }\r\n\r\n  //function for delete button clicked\r\n  delClickHandler(info: any): void {\r\n    this.message.Date = info.Date;\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete Date.\" + this.message.Date + \"  data\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your data has been deleted.',\r\n          'success'\r\n        )\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  //function toggle update to add button\r\n  updateData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n  }\r\n\r\n  OpenLink(val) {\r\n    // \r\n    if (val == 1) {\r\n      this.cash1True = true;\r\n      this.transfer1True = false;\r\n    }\r\n    if (val == 2) {\r\n      this.cash1True = false;\r\n      this.transfer1True = true;\r\n    }\r\n  }\r\n}","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Revoke Interest Instruction</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"Date\" max=\"9999-12-31\"\r\n                                        formControlName=\"Date\" value=\"{{ message.Date}}\" onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"Date\">Date</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\" checked>\r\n                                        <i class=\"helper\"></i>Month Begin\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\">\r\n                                        <i class=\"helper\"></i>Month End\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\">\r\n                                        <i class=\"helper\"></i>Specific Day of Month\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\">\r\n                                        <i class=\"helper\"></i>After Specific Days\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"StartFrom\"\r\n                                        max=\"9999-12-31\" formControlName=\"StartFrom\" value=\"{{ message.StartFrom}}\"\r\n                                        onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"StartFrom\">Start From</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"TotalAmount\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"InstructionNo\" value=\"{{ message.InstructionNo }}\">\r\n                                    <label for=\"InstructionNo\">Instruction No.</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"NextExecutionOn\"\r\n                                        max=\"9999-12-31\" formControlName=\"NextExecutionOn\"\r\n                                        value=\"{{ message.NextExecutionOn}}\" onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"NextExecutionOn\">Next Execution On</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- DROPDOWN HERE -->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" [multiple]=\"false\"\r\n                                    placeholder=\"Frequency\">\r\n                                </ng-select>\r\n                                <label>{{message.Frequency}}</label>\r\n                            </div>\r\n                        </div>\r\n                        <h6>Payment By</h6>\r\n                        <div class=\"col-sm\">\r\n                            <a (click)=\"OpenLink(1)\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">\r\n                                <div class=\"form-radio\">\r\n                                    <div class=\"radio radio-inline\">\r\n                                        <label>\r\n                                            <input type=\"radio\" name=\"radio1\" ng-model=\"OD\" ng-change=\"change()\"\r\n                                                [checked]=\"isCash == true\" value=\"cash1\">\r\n                                            <i class=\"helper\"></i>Cash\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <a (click)=\"OpenLink(2)\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">\r\n                                <div class=\"form-radio\">\r\n                                    <div class=\"radio radio-inline\">\r\n                                        <label>\r\n                                            <input type=\"radio\" name=\"radio1\" ng-model=\"OD\" ng-change=\"change()\"\r\n                                                [checked]=\"isCash == false\" value=\"transfer1\">\r\n                                            <i class=\"helper\"></i>Transfer\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"LastExecutionOn\"\r\n                                        max=\"9999-12-31\" formControlName=\"LastExecutionOn\"\r\n                                        value=\"{{ message.LastExecutionOn}}\" onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"LastExecutionOn\">Last Executed On</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"cash1True\">\r\n                        <h6>Interest Instruction Account Details</h6>\r\n                        <div class=\"card-block\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                            placeholder=\"Scheme\" required title=\"Compulsory Selection\"\r\n                                            formControlName=\"Scheme\">\r\n                                        </ng-select>\r\n                                        <label>{{ message.Scheme }}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                            placeholder=\"Account No\" required>\r\n                                        </ng-select>\r\n                                        <label>{{ message.AccountNo }}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                                id=\"Particulars\" value=\"{{ message.Particulars }}\">\r\n                                            <label for=\"Particulars\">Particulars</label>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"transfer1True\">\r\n                        <h6>Interest Instruction Account Details</h6>\r\n                        <div class=\"card-block\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                            placeholder=\"Scheme\" required title=\"Compulsory Selection\"\r\n                                            formControlName=\"Scheme\">\r\n                                        </ng-select>\r\n                                        <label>{{ message.Scheme }}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                            placeholder=\"Account No\" required>\r\n                                        </ng-select>\r\n                                        <label>{{ message.AccountNo }}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                                id=\"Particulars\" value=\"{{ message.Particulars }}\">\r\n                                            <label for=\"Particulars\">Particulars</label>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <h6>Credit Account Details</h6>\r\n                        <div class=\"card-block\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                            placeholder=\"Scheme\" required title=\"Compulsory Selection\"\r\n                                            formControlName=\"Scheme\">\r\n                                        </ng-select>\r\n                                        <label>{{ message.Scheme1 }}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group form-primary form-static-label\">\r\n                                        <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                            placeholder=\"Account No\" required>\r\n                                        </ng-select>\r\n                                        <label>{{ message.AccountNo1 }}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                                id=\"AdviceNarration\" value=\"{{ message.AdviceNarration }}\">\r\n                                            <label for=\"AdviceNarration\">Advice Narration</label>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm\">\r\n                                    <div class=\"form-group input-group\">\r\n                                        <span class=\"border-lable-flt\">\r\n                                            <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                                id=\"Particulars1\" value=\"{{ message.Particulars1 }}\">\r\n                                            <label for=\"Particulars1\">Particulars</label>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"RevokeDate\" required=\"\"\r\n                                        max=\"9999-12-31\" formControlName=\"RevokeDate\" value=\"{{ message.RevokeDate}}\"\r\n                                        onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"RevokeDate\">Revoke Date <sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['RevokeDate'].invalid && (angForm.controls['RevokeDate'].dirty || angForm.controls['RevokeDate'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['RevokeDate'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"border-checkbox-section\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\"\r\n                                        [checked]=\"isIsDiscountInterestApplicable == true\">\r\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Discount Interest\r\n                                        Applicable?<span class=\"required\"> </span></label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\r\n                                [disabled]=\"angForm.invalid\">Update</button>\r\n                            <!-- <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\r\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { revokeSpecialService } from '../../../../shared/elements/revoke-special.service'\r\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\r\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-revoke-special-instruction',\r\n  templateUrl: './revoke-special-instruction.component.html',\r\n  styleUrls: ['./revoke-special-instruction.component.scss']\r\n})\r\nexport class RevokeSpecialInstructionComponent implements OnInit {\r\n\r\n  angForm: FormGroup;\r\n\r\n  dtExportButtonOptions: any = {};\r\n\r\n  //title select variables\r\n  simpleOption: Array<IOption> = this.revokeSpecialService.getCharacters();\r\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\r\n  b: Array<IOption> = this.AcountnoService.getCharacters();\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n\r\n  private dataSub: Subscription = null;\r\n\r\n  //variables for  add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n\r\n  //variable for checkbox and radio button \r\n  isIsRestrictTransactionEntry: boolean = false;\r\n\r\n  //object created to get data when row is clicked\r\n  message = {\r\n    InstructionNo: \"\",\r\n    Date: \"\",\r\n    Scheme: \"\",\r\n    AccountNo: \"\",\r\n    StartFrom: \"\",\r\n    UptoDate: \"\",\r\n    ExecuteOn: \"\",\r\n    IsRestrictTransactionEntry: \"\",\r\n    Details: \"\",\r\n    RevokeDate: \"\"\r\n  };\r\n\r\n  constructor(private fb: FormBuilder, public revokeSpecialService: revokeSpecialService, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\r\n\r\n  ngOnInit(): void {\r\n    this.dtExportButtonOptions = {\r\n      ajax: 'fake-data/revoke-special.json',\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Instruction No',\r\n          data: 'InstructionNo'\r\n        },\r\n        {\r\n          title: 'Date',\r\n          data: 'Date'\r\n        },\r\n        {\r\n          title: 'Scheme',\r\n          data: 'Scheme'\r\n        },\r\n        {\r\n          title: 'Account No',\r\n          data: 'AccountNo'\r\n        },\r\n        {\r\n          title: 'Start From',\r\n          data: 'StartFrom'\r\n        },\r\n        {\r\n          title: 'Upto Date',\r\n          data: 'UptoDate'\r\n        },\r\n        {\r\n          title: 'Execute On',\r\n          data: 'ExecuteOn'\r\n        },\r\n        {\r\n          title: 'Is Restrict Transaction Entry',\r\n          data: 'IsRestrictTransactionEntry'\r\n        },\r\n        {\r\n          title: 'Details',\r\n          data: 'Details'\r\n        },\r\n        {\r\n          title: 'Revoke Date',\r\n          data: 'RevokeDate'\r\n        }\r\n      ],\r\n      dom: 'Bfrtip',\r\n      buttons: [\r\n        'copy',\r\n        'print',\r\n        'excel',\r\n        'csv'\r\n      ],\r\n      //row click handler code\r\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\r\n        const self = this;\r\n        $('td', row).off('click');\r\n        $('td', row).on('click', '#editbtn', () => {\r\n          self.editClickHandler(data);\r\n        });\r\n        $('td', row).on('click', '#delbtn', () => {\r\n          self.delClickHandler(data);\r\n        });\r\n        return row;\r\n      }\r\n    };\r\n    this.runTimer();\r\n    this.dataSub = this.revokeSpecialService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n  }\r\n\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      Date: ['',],\r\n      StartFrom: ['',],\r\n      UptoDate: ['',],\r\n      Scheme: ['',],\r\n      RevokeDate: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.angForm.valid);\r\n    if (this.angForm.valid) {\r\n      console.log(this.angForm.value);\r\n    }\r\n  }\r\n\r\n  //function toggle update to add button\r\n  updateData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n  }\r\n\r\n  //function for edit button clicked\r\n  editClickHandler(info: any): void {\r\n    this.message.InstructionNo = info.InstructionNo;\r\n    this.message.Date = info.Date;\r\n    this.message.Scheme = info.Scheme;\r\n    this.message.AccountNo = info.AccountNo;\r\n    this.message.StartFrom = info.StartFrom;\r\n    this.message.UptoDate = info.UptoDate;\r\n    this.message.ExecuteOn = info.ExecuteOn;\r\n    this.message.IsRestrictTransactionEntry = info.IsRestrictTransactionEntry;\r\n    this.message.Details = info.Details;\r\n    this.message.RevokeDate = info.RevokeDate;\r\n\r\n    //code for chekbox\r\n    if (this.message.IsRestrictTransactionEntry == \"Yes\") {\r\n      this.isIsRestrictTransactionEntry = true;   //return boolean value and display checked checkbox\r\n    }\r\n    else {\r\n      this.isIsRestrictTransactionEntry = false;   //return boolean value and display unchecked checkbox\r\n    }\r\n\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n  }\r\n\r\n  //function for delete button clicked\r\n  delClickHandler(info: any): void {\r\n    this.message.InstructionNo = info.InstructionNo;\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete Instruction No.\" + this.message.InstructionNo + \"  data\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your data has been deleted.',\r\n          'success'\r\n        )\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Revoke Special Instruction</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                    placeholder=\"Instruction No.\" required>\r\n                                </ng-select>\r\n                                <label>{{ message.InstructionNo }}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"Date\" max=\"9999-12-31\"\r\n                                        formControlName=\"Date\" value=\"{{ message.Date}}\" onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"Date\">Date</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\" placeholder=\"Scheme\"\r\n                                    required title=\"Compulsory Selection\" formControlName=\"Scheme\">\r\n                                </ng-select>\r\n                                <label>{{ message.Scheme }}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                    placeholder=\"Account No\" required>\r\n                                </ng-select>\r\n                                <label>{{ message.AccountNo }}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"StartFrom\"\r\n                                        max=\"9999-12-31\" formControlName=\"StartFrom\" value=\"{{ message.StartFrom}}\"\r\n                                        onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"StartFrom\">Start From</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"UptoDate\"\r\n                                        max=\"9999-12-31\" formControlName=\"UptoDate\" value=\"{{ message.UptoDate}}\"\r\n                                        onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"UptoDate\">Upto Date</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <!-- DROPDOWN HERE -->\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" [multiple]=\"false\"\r\n                                    placeholder=\"Execute On\">\r\n                                </ng-select>\r\n                                <label>{{message.ExecuteOn}}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"border-checkbox-section\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\"\r\n                                        name=\"IS_RESTRICT\" [checked]=\"isIsRestrictTransactionEntry == true\">\r\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Restrict Transaction\r\n                                        Entry?<span class=\"required\"> </span></label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Details\"\r\n                                        value=\"{{ message.Details }}\">\r\n                                    <label for=\"Details\">Details</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"RevokeDate\" required=\"\"\r\n                                        max=\"9999-12-31\" formControlName=\"RevokeDate\" value=\"{{ message.RevokeDate}}\"\r\n                                        onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"RevokeDate\">Revoke Date<sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['RevokeDate'].invalid && (angForm.controls['RevokeDate'].dirty || angForm.controls['RevokeDate'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['RevokeDate'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\r\n                                [disabled]=\"angForm.invalid\">Update</button>\r\n                            <!-- <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\r\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { revokeStandingService } from '../../../../shared/elements/revoke-standing.service'\r\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\r\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-revoke-standing-instructions',\r\n  templateUrl: './revoke-standing-instructions.component.html',\r\n  styleUrls: ['./revoke-standing-instructions.component.scss']\r\n})\r\nexport class RevokeStandingInstructionsComponent implements OnInit {\r\n\r\n  angForm: FormGroup;\r\n\r\n  dtExportButtonOptions: any = {};\r\n\r\n  //title select variables\r\n  simpleOption: Array<IOption> = this.revokeStandingService.getCharacters();\r\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\r\n  b: Array<IOption> = this.AcountnoService.getCharacters();\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n\r\n  private dataSub: Subscription = null;\r\n\r\n  //variables for  add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n\r\n  //variable for checkbox and radio button \r\n  isIsAuto: boolean = false;\r\n\r\n  //object created to get data when row is clicked\r\n  message = {\r\n    Date: \"\",\r\n    StartFrom: \"\",\r\n    InstructionNo: \"\",\r\n    Day: \"\",\r\n    Frequency: \"\",\r\n    NextExecutionOn: \"\",\r\n    LastExecutionOn: \"\",\r\n    Scheme: \"\",\r\n    AccountNo: \"\",\r\n    DebitNarration: \"\",\r\n    Scheme1: \"\",\r\n    AccountNo1: \"\",\r\n    CreditNarration: \"\",\r\n    IsAuto: \"\",\r\n    TransactionAmount: \"\",\r\n    RevokeDate: \"\"\r\n  };\r\n\r\n  constructor(private fb: FormBuilder, public revokeStandingService: revokeStandingService, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\r\n\r\n  ngOnInit(): void {\r\n    this.dtExportButtonOptions = {\r\n      ajax: 'fake-data/revoke-standing.json',\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>' + ' ' + '<button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Date',\r\n          data: 'Date'\r\n        },\r\n        {\r\n          title: 'Start From',\r\n          data: 'StartFrom'\r\n        },\r\n        {\r\n          title: 'Instruction No',\r\n          data: 'InstructionNo'\r\n        },\r\n        {\r\n          title: 'Day',\r\n          data: 'Day'\r\n        },\r\n        {\r\n          title: 'Frequency',\r\n          data: 'Frequency'\r\n        },\r\n        {\r\n          title: 'Next Execution On',\r\n          data: 'NextExecutionOn'\r\n        },\r\n\r\n\r\n        {\r\n          title: 'Last Execution On',\r\n          data: 'LastExecutionOn'\r\n        },\r\n        {\r\n          title: 'Scheme',\r\n          data: 'Scheme'\r\n        },\r\n        {\r\n          title: 'Account No',\r\n          data: 'AccountNo'\r\n        },\r\n        {\r\n          title: 'DebitNarration',\r\n          data: 'DebitNarration'\r\n        },\r\n        {\r\n          title: 'Scheme1',\r\n          data: 'Scheme1'\r\n        },\r\n        {\r\n          title: 'Account No1',\r\n          data: 'AccountNo1'\r\n        },\r\n        {\r\n          title: 'Credit Narration',\r\n          data: 'CreditNarration'\r\n        },\r\n        {\r\n          title: 'Is Auto Balance Transfer Remaining this Minimum Balance :',\r\n          data: 'IsAuto'\r\n        },\r\n\r\n        {\r\n          title: 'Transaction Amount',\r\n          data: 'TransactionAmount'\r\n        },\r\n        {\r\n          title: 'Revoke Date',\r\n          data: 'RevokeDate'\r\n        }\r\n\r\n      ],\r\n      dom: 'Bfrtip',\r\n      buttons: [\r\n        'copy',\r\n        'print',\r\n        'excel',\r\n        'csv'\r\n      ],\r\n      //row click handler code\r\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\r\n        const self = this;\r\n        $('td', row).off('click');\r\n        $('td', row).on('click', '#editbtn', () => {\r\n          self.editClickHandler(data);\r\n        });\r\n        $('td', row).on('click', '#delbtn', () => {\r\n          self.delClickHandler(data);\r\n        });\r\n        return row;\r\n      }\r\n    };\r\n    this.runTimer();\r\n    this.dataSub = this.revokeStandingService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n  }\r\n\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      Date: ['',],\r\n      TransactionNo: ['',],\r\n      RevokeDate: ['', [Validators.required]],\r\n      Scheme: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.angForm.valid);\r\n    if (this.angForm.valid) {\r\n      console.log(this.angForm.value);\r\n    }\r\n  }\r\n\r\n  //function for edit button clicked\r\n  editClickHandler(info: any): void {\r\n    this.message.Date = info.Date;\r\n    this.message.StartFrom = info.StartFrom;\r\n    this.message.InstructionNo = info.InstructionNo;\r\n    this.message.Day = info.Day;\r\n    this.message.Frequency = info.Frequency;\r\n    this.message.NextExecutionOn = info.NextExecutionOn;\r\n    this.message.LastExecutionOn = info.LastExecutionOn;\r\n    this.message.Scheme = info.Scheme;\r\n    this.message.AccountNo = info.AccountNo;\r\n    this.message.DebitNarration = info.DebitNarration;\r\n    this.message.Scheme1 = info.Scheme1;\r\n    this.message.AccountNo1 = info.AccountNo1;\r\n    this.message.CreditNarration = info.CreditNarration;\r\n    this.message.IsAuto = info.IsAuto;\r\n    this.message.TransactionAmount = info.TransactionAmount;\r\n    this.message.RevokeDate = info.RevokeDate;\r\n\r\n    //code for chekbox\r\n    if (this.message.IsAuto == \"Yes\") {\r\n      this.isIsAuto = true;   //return boolean value and display checked checkbox\r\n    }\r\n    else {\r\n      this.isIsAuto = false;   //return boolean value and display unchecked checkbox\r\n    }\r\n\r\n    //return boolean value and toggle add to update button\r\n\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n  }\r\n\r\n  //function for delete button clicked\r\n  delClickHandler(info: any): void {\r\n    this.message.Date = info.Date;\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete Date.\" + this.message.Date + \"  data\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your data has been deleted.',\r\n          'success'\r\n        )\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  //function toggle update to add button\r\n  updateData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Revoke Standing Instructions</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\r\n                                        formControlName=\"Date\" value=\"{{ message.Date}}\" onfocus=\"(this.type='date')\"\r\n                                        id=\"date\" />\r\n                                    <label for=\"date\">Date</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\" checked>\r\n                                        <i class=\"helper\"></i>Month Begin\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\">\r\n                                        <i class=\"helper\"></i>Month End\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\">\r\n                                        <i class=\"helper\"></i> Specific Day\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\r\n                                        formControlName=\"Date\" value=\"{{ message.StartFrom}}\"\r\n                                        onfocus=\"(this.type='date')\" id=\"StartFrom\" />\r\n                                    <label for=\"StartFrom\">Start From</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                    placeholder=\"Instruction No.\" title=\"Compulsory Selection\"\r\n                                    formControlName=\"TransactionNo\">\r\n                                </ng-select>\r\n                                <label>{{ message.InstructionNo }}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\r\n                                        formControlName=\"Date\" value=\"{{ message.Day}}\" onfocus=\"(this.type='date')\"\r\n                                        id=\"Day\" />\r\n                                    <label for=\"Day\">Day</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"simpleOption\" [multiple]=\"false\"\r\n                                    placeholder=\"Frequency\" title=\"Compulsory Selection\"\r\n                                    formControlName=\"TransactionNo\">\r\n                                </ng-select>\r\n                                <label>{{message.Frequency}}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"NextExecutionOn\"\r\n                                        max=\"9999-12-31\" formControlName=\"Date\" value=\"{{ message.NextExecutionOn}}\"\r\n                                        onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"NextExecutionOn\">Next Execution On</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\r\n                                        formControlName=\"Date\" value=\"{{ message.LastExecutionOn}}\"\r\n                                        onfocus=\"(this.type='date')\" id=\"LastExecutionOn\" />\r\n                                    <label for=\"LastExecutionOn\">Last Execution On</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <h6>Debit Account Details</h6>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                    placeholder=\"Scheme \" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"Scheme\">\r\n                                </ng-select>\r\n                                <label>{{ message.Scheme }}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                    placeholder=\"Account No\" required>\r\n                                </ng-select>\r\n                                <label>{{ message.AccountNo }}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"DebitNarration\" value=\"{{ message.DebitNarration }}\">\r\n                                    <label for=\"DebitNarration\">Debit Narration</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <h6>Credit Account Details</h6>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                    placeholder=\"Scheme \" title=\"Compulsory Selection\" formControlName=\"Scheme\">\r\n                                </ng-select>\r\n                                <label>{{ message.Scheme1 }}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                    placeholder=\"Account No\">\r\n                                </ng-select>\r\n                                <label>{{ message.AccountNo1 }}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"CreditNarration\" value=\"{{ message.CreditNarration }}\">\r\n                                    <label for=\"CreditNarration\">Credit Narration</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"border-checkbox-section\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\" value=\"checkbox\"\r\n                                        [checked]=\"isIsAuto == true\">\r\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Auto Balance Transfer\r\n                                        Remaining this Minimum Balance :<span class=\"required\"> </span></label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"TransactionAmount\" value=\"{{ message.TransactionAmount }}\">\r\n                                    <label for=\"TransactionAmount\">Transaction Amount</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" required=\"\" max=\"9999-12-31\"\r\n                                        formControlName=\"RevokeDate\" value=\"{{ message.RevokeDate}}\"\r\n                                        onfocus=\"(this.type='date')\" id=\"RevokeDate\" />\r\n                                    <label for=\"RevokeDate\">Revoke Date <sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['RevokeDate'].invalid && (angForm.controls['RevokeDate'].dirty || angForm.controls['RevokeDate'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['RevokeDate'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\r\n                                [disabled]=\"angForm.invalid\">Update</button>\r\n                            <!-- <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\r\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\n// Used to Call API\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { ExucuteOnService } from '../../../../shared/dropdownService/exucute-on.service';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { specialservice } from './special.service'\r\n// Angular Datatable Directive\r\nimport { DataTableDirective } from \"angular-datatables\";\r\nimport { Subject } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { SchemeAccountNoService } from '../../../../shared/dropdownService/schemeAccountNo.service'\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service'\r\nimport { first } from 'rxjs/operators';\r\n//date pipe\r\nimport { DatePipe } from '@angular/common';\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n// For fetching values from backend\r\ninterface SpecialMaster {\r\n  INSTRUCTION_NO: number;\r\n  INSTRUCTION_DATE: Date;\r\n  TRAN_ACTYPE: string;\r\n  TRAN_ACNO: number;\r\n  FROM_DATE: Date;\r\n  TO_DATE: Date;\r\n  DRCR_APPLY: string;\r\n  IS_RESTRICT: boolean;\r\n  DETAILS: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-special',\r\n  templateUrl: './special.component.html',\r\n  styleUrls: ['./special.component.scss']\r\n})\r\nexport class SpecialComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\r\n  angForm: FormGroup;\r\n  //api \r\n  url = environment.base_url;\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // Store data from backend\r\n  specialMaster: SpecialMaster[];\r\n  //filter variable\r\n  filterData = {};\r\n\r\n  //Datatable\r\n  dtExportButtonOptions: any = {};\r\n  acno: any\r\n  excuteonOption: Array<IOption> = this.exucuteOnService.getCharacters();\r\n  allScheme // all scheme\r\n  schemeACNo //account no \r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n\r\n  private dataSub: Subscription = null;\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  newbtnShow: boolean = false;\r\n  //variable for checkbox and radio button \r\n  isIsRestrictTransactionEntry: boolean = false;\r\n  page: number;\r\n  updateID: any;\r\n\r\n  constructor(private fb: FormBuilder, private datePipe: DatePipe, public exucuteOnService: ExucuteOnService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private http: HttpClient,\r\n    private _special: specialservice) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: \"full_numbers\",\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n\r\n        dataTableParameters.columns.forEach((element) => {\r\n          if (element.search.value != \"\") {\r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          } else {\r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if (this.filterData.hasOwnProperty(element.data)) {\r\n              let value = this.filterData[getColumnName];\r\n              if (columnValue != undefined || value != undefined) {\r\n                delete this.filterData[element.data];\r\n              }\r\n            }\r\n          }\r\n        });\r\n        dataTableParameters[\"filterData\"] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            this.url + \"/special-instruction\",\r\n            dataTableParameters\r\n          )\r\n          .subscribe((resp) => {\r\n            this.specialMaster = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: [],\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        {\r\n          title: \"Action\",\r\n        },\r\n        {\r\n          title: 'Instruction No',\r\n          data: 'INSTRUCTION_NO'\r\n        }, {\r\n          title: 'Date',\r\n          data: 'INSTRUCTION_DATE'\r\n        },\r\n        {\r\n          title: 'Scheme',\r\n          data: 'TRAN_ACTYPE'\r\n        }, {\r\n          title: 'Account No',\r\n          data: 'TRAN_ACNO'\r\n        },\r\n        {\r\n          title: 'Start From',\r\n          data: 'FROM_DATE'\r\n        },\r\n        {\r\n          title: 'Upto Date',\r\n          data: 'TO_DATE'\r\n        },\r\n        {\r\n          title: 'Execute On',\r\n          data: 'DRCR_APPLY'\r\n        },\r\n        {\r\n          title: 'Is Restrict Transaction Entry',\r\n          data: 'IS_RESTRICT'\r\n        },\r\n\r\n        {\r\n          title: 'Details',\r\n          data: 'DETAILS'\r\n        },\r\n\r\n      ],\r\n      dom: 'Blrtip',\r\n\r\n    };\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      this.allScheme = data;\r\n    })\r\n\r\n    this.runTimer();\r\n    this.dataSub = this.exucuteOnService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n  }\r\n\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      INSTRUCTION_NO: ['',],\r\n      INSTRUCTION_DATE: ['',],\r\n      TRAN_ACTYPE: ['', [Validators.required]],\r\n      TRAN_ACNO: ['', [Validators.required]],\r\n      FROM_DATE: ['', [Validators.required]],\r\n      TO_DATE: ['', [Validators.required]],\r\n      DRCR_APPLY: ['', [Validators.required]],\r\n      IS_RESTRICT: [''],\r\n      DETAILS: ['', [Validators.required]],\r\n    });\r\n    let sysdate = new Date()\r\n    let sysDate = this.datePipe.transform(sysdate, \"yyyy-MM-dd\")\r\n    this.angForm.patchValue({\r\n      'INSTRUCTION_DATE': sysDate,\r\n      'FROM_DATE': sysDate,\r\n      'TO_DATE': sysDate\r\n    })\r\n  }\r\n\r\n  addNewData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    this.newbtnShow = false;\r\n    this.resetForm();\r\n  }\r\n\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    const dataToSend = {\r\n      INSTRUCTION_NO: formVal.INSTRUCTION_NO,\r\n      INSTRUCTION_DATE: formVal.INSTRUCTION_DATE,\r\n      TRAN_ACTYPE: formVal.TRAN_ACTYPE,\r\n      TRAN_ACNO: formVal.TRAN_ACNO,\r\n      FROM_DATE: formVal.FROM_DATE,\r\n      TO_DATE: formVal.TO_DATE,\r\n      DRCR_APPLY: formVal.DRCR_APPLY,\r\n      IS_RESTRICT: formVal.IS_RESTRICT,\r\n      DETAILS: formVal.DETAILS,\r\n    };\r\n    this._special.postData(dataToSend).subscribe(\r\n      (data1) => {\r\n        // to reload after delete of data\r\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n          dtInstance.ajax.reload()\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    //To clear form\r\n    this.resetForm();\r\n  }\r\n  /**\r\n* @editClickHandler function for edit button clicked\r\n*/\r\n\r\n  editClickHandler(id: any): void {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.newbtnShow = true;\r\n    this._special.getFormData(id).subscribe((data) => {\r\n      this.updateID = data.id;\r\n      this.angForm.setValue({\r\n        INSTRUCTION_NO: data.INSTRUCTION_NO,\r\n        INSTRUCTION_DATE: data.INSTRUCTION_DATE,\r\n        TRAN_ACTYPE: data.TRAN_ACTYPE,\r\n        TRAN_ACNO: data.TRAN_ACNO,\r\n        FROM_DATE: data.FROM_DATE,\r\n        TO_DATE: data.TO_DATE,\r\n        DRCR_APPLY: data.DRCR_APPLY,\r\n        IS_RESTRICT: data.IS_RESTRICT,\r\n        DETAILS: data.DETAILS,\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n  * @updateData function for update data \r\n  */\r\n  updateData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    this.newbtnShow = false;\r\n    let data = this.angForm.value;\r\n    data[\"id\"] = this.updateID;\r\n    this._special.updateData(data).subscribe(() => {\r\n      Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.newbtnShow = false;\r\n      // to reload after delete of data\r\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n        dtInstance.ajax.reload()\r\n      });\r\n      this.resetForm();\r\n    });\r\n  }\r\n\r\n  //get account no according scheme for introducer\r\n  getSchemeAcNO(acno) {\r\n    switch (acno) {\r\n      case 'SB':\r\n        console.log(\"saving\");\r\n        this.schemeAccountNoService.getSavingSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'SH':\r\n        console.log(\"Share\");\r\n        this.schemeAccountNoService.getShareSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'CA':\r\n        console.log(\"Current account\");\r\n        this.schemeAccountNoService.getCurrentAccountSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'LN':\r\n        console.log(\"Term Loan\");\r\n        this.schemeAccountNoService.getTermLoanSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'TD':\r\n        console.log(\"Term Deposit\");\r\n        this.schemeAccountNoService.getTermDepositSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'DS':\r\n        console.log(\"Dispute Loan\");\r\n        this.schemeAccountNoService.getDisputeLoanSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'CC':\r\n        console.log(\"Cash Credit Loan\");\r\n        this.schemeAccountNoService.getCashCreditSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'GS':\r\n        console.log(\"anamat\");\r\n        this.schemeAccountNoService.getAnamatSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'PG':\r\n        console.log(\"Pigmy account\");\r\n        this.schemeAccountNoService.getPigmyAccountSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'AG':\r\n        console.log(\"Pigmy agent\");\r\n        this.schemeAccountNoService.getPigmyAgentSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'IV':\r\n        console.log(\"Investment\");\r\n        this.schemeAccountNoService.getInvestmentSchemeList().pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @delClickHandler function for delete button \r\n    @Swal sweetalert2\r\n    @Swal.fire open a modal window to display message\r\n  */\r\n  delClickHandler(id: any): void {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete  Special Instruction  data\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      /* run code if our result  isConfirmed function Swal.fire open a modal window to display message\r\n      else if result is dismiss then it cancel and open a modal window to display cancel message\r\n       */\r\n      if (result.isConfirmed) {\r\n        this._special.deleteData(id).subscribe((data1) => {\r\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\r\n        }),\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your data has been deleted.',\r\n            'success'\r\n          )\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.myInputField.nativeElement.focus();\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $(\"input\", this.footer()).on(\"keyup change\", function () {\r\n          if (this[\"value\"] != \"\") {\r\n            that.search(this[\"value\"]).draw();\r\n          } else {\r\n            that.search(this[\"value\"]).draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n  }\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h5>Special Instruction</h5>\r\n        <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n      </div>\r\n      <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n        <div class=\"card-block\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input type=\"text\" name=\"TotalAmount\" class=\"form-control\" placeholder=\" \" id=\"InstructionNo\"\r\n                    formControlName=\"INSTRUCTION_NO\" disabled>\r\n                  <label for=\"InstructionNo\">Instruction No.</label>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"INSTRUCTION_DATE\" max=\"9999-12-31\"\r\n                    formControlName=\"INSTRUCTION_DATE\" onfocus=\"(this.type='date')\" disabled>\r\n                  <label for=\"INSTRUCTION_DATE\">Date</label>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group form-primary form-static-label\">\r\n                <ng-select [ngClass]=\"'ng-select'\" [options]=\"allScheme\" [multiple]=\"false\" placeholder=\"Scheme*\"\r\n                  formControlName=\"TRAN_ACTYPE\" [(ngModel)]=\"acno\" (selected)=\"getSchemeAcNO(acno)\">\r\n                </ng-select>\r\n              </div>\r\n              <div class=\"form-group form-primary form-static-label\"\r\n                *ngIf=\"angForm.controls['TRAN_ACTYPE'].invalid && (angForm.controls['TRAN_ACTYPE'].dirty || angForm.controls['TRAN_ACTYPE'].touched)\"\r\n                class='alert alert-danger'>\r\n                <div *ngIf=\"angForm.controls['TRAN_ACTYPE'].errors?.required\">\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group form-primary form-static-label\">\r\n                <ng-select [ngClass]=\"'ng-select'\" [options]=\"schemeACNo\" [multiple]=\"false\" placeholder=\"Account No*\"\r\n                  required title=\"Compulsory Selection\" formControlName=\"TRAN_ACNO\">\r\n                </ng-select>\r\n              </div>\r\n              <div class=\"form-group form-primary form-static-label\"\r\n                *ngIf=\"angForm.controls['TRAN_ACNO'].invalid && (angForm.controls['TRAN_ACNO'].dirty || angForm.controls['TRAN_ACNO'].touched)\"\r\n                class='alert alert-danger'>\r\n                <div *ngIf=\"angForm.controls['TRAN_ACNO'].errors?.required\">\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"StartFrom\" required=\"\" max=\"9999-12-31\"\r\n                    formControlName=\"FROM_DATE\" onfocus=\"(this.type='date')\" />\r\n                  <label for=\"StartFrom\">Start From<sub class=\"required\">*</sub></label>\r\n                </span>\r\n              </div>\r\n              <div class=\"form-group form-primary form-static-label\"\r\n                *ngIf=\"angForm.controls['FROM_DATE'].invalid && (angForm.controls['FROM_DATE'].dirty || angForm.controls['FROM_DATE'].touched)\"\r\n                class='alert alert-danger'>\r\n                <div *ngIf=\"angForm.controls['FROM_DATE'].errors?.required\">\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"UptoDate\" required=\"\" max=\"9999-12-31\"\r\n                    formControlName=\"TO_DATE\" onfocus=\"(this.type='date')\" />\r\n                  <label for=\"UptoDate\">Upto Date</label>\r\n                </span>\r\n              </div>\r\n              <div class=\"form-group form-primary form-static-label\"\r\n                *ngIf=\"angForm.controls['TO_DATE'].invalid && (angForm.controls['TO_DATE'].dirty || angForm.controls['TO_DATE'].touched)\"\r\n                class='alert alert-danger'>\r\n                <div *ngIf=\"angForm.controls['TO_DATE'].errors?.required\">\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"form-group form-primary form-static-label\">\r\n                <ng-select [ngClass]=\"'ng-select'\" [options]=\"excuteonOption\" [multiple]=\"false\"\r\n                  placeholder=\"ExecuteOn *\" required title=\"Compulsory Selection\" formControlName=\"DRCR_APPLY\">\r\n                </ng-select>\r\n              </div>\r\n              <div class=\"form-group form-primary form-static-label\"\r\n                *ngIf=\"angForm.controls['DRCR_APPLY'].invalid && (angForm.controls['DRCR_APPLY'].dirty || angForm.controls['DRCR_APPLY'].touched)\"\r\n                class='alert alert-danger'>\r\n                <div *ngIf=\"angForm.controls['DRCR_APPLY'].errors?.required\">\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <div class=\"border-checkbox-section\">\r\n                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                  <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\"\r\n                    [checked]=\"isIsRestrictTransactionEntry == true\" formControlName=\"IS_RESTRICT\">\r\n                  <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Restrict Transaction\r\n                    Entry?<span class=\"required\"> </span></label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-6\">\r\n              <div class=\"form-group input-group\">\r\n                <span class=\"border-lable-flt\">\r\n                  <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Particulars\" required=\"\"\r\n                    maxlength=\"2000\" formControlName=\"DETAILS\">\r\n                  <label for=\"Particulars\">Details <sub class=\"required\">*</sub></label>\r\n                </span>\r\n              </div>\r\n              <div class=\"form-group form-primary form-static-label\"\r\n                *ngIf=\"angForm.controls['DETAILS'].invalid && (angForm.controls['DETAILS'].dirty || angForm.controls['DETAILS'].touched)\"\r\n                class=\"alert alert-danger\">\r\n                <div\r\n                  *ngIf=\"angForm.controls['DETAILS'].errors?.maxlength || angForm.controls['DETAILS'].errors?.required\">\r\n                  This field is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"Date2\" required=\"\"\r\n                                        max=\"9999-12-31\" formControlName=\"Date2\" value=\"{{ message.Date2}}\"\r\n                                        onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"Date2\">Revoke Date</label>\r\n                                </span>\r\n                            </div>\r\n                        </div> -->\r\n            <div class=\"col-sm-3\">\r\n              <button class=\"btn btn-primary ripple light\" (click)=\"submit()\" [disabled]=\"angForm.invalid\"\r\n                *ngIf=\"showButton\">Add</button>\r\n              <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\r\n                *ngIf=\"updateShow\">Update</button>&nbsp;\r\n              <button class=\"btn btn-primary ripple light\" (click)=\"addNewData()\" *ngIf=\"newbtnShow\">New</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-block\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm\">\r\n            <div class=\"table-responsive\">\r\n              <table datatable [dtOptions]=\"dtExportButtonOptions\" [dtTrigger]=\"dtTrigger\"\r\n                class=\"table table-striped table-bordered table-hover\">\r\n                <tbody *ngIf=\"specialMaster?.length != 0\">\r\n                  <tr *ngFor=\"let data of specialMaster\">\r\n                    <td>\r\n                      <button class=\"btn btn-outline-primary btn-sm\" id=\"editbtn\" (click)=\"editClickHandler(data.id)\">\r\n                        Edit\r\n                      </button>\r\n\r\n                      <!-- <button id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\" (click)=\"delClickHandler(data.id)\">Delete</button> -->\r\n                    </td>\r\n                    <td>{{ data.INSTRUCTION_NO }}</td>\r\n                    <td>{{ data.INSTRUCTION_DATE }}</td>\r\n                    <td>{{ data.TRAN_ACTYPE }}</td>\r\n                    <td>{{ data.TRAN_ACNO }}</td>\r\n                    <td>{{ data.FROM_DATE }}</td>\r\n                    <td>{{ data.TO_DATE }}</td>\r\n                    <td>{{ data.DRCR_APPLY }}</td>\r\n                    <td>{{ data.IS_RESTRICT }}</td>\r\n                    <td>{{ data.DETAILS }}</td>\r\n                  </tr>\r\n                </tbody>\r\n                <tbody *ngIf=\"specialMaster?.length == 0\">\r\n                  <tr>\r\n                    <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                  </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr>\r\n                    <th></th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Submission Date\" name=\"INSTRUCTION_NO\">\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Company Code\" name=\"INSTRUCTION_DATE\">\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Company Name\" name=\"TRAN_ACTYPE\">\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Market Value Nature\" name=\"TRAN_ACNO\">\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Margin %\" name=\"FROM_DATE\">\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search No of Shares\" name=\"TO_DATE\">\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Updated By\" name=\"DRCR_APPLY\">\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Released On Date\" name=\"IS_RESTRICT\">\r\n                    </th>\r\n                    <th>\r\n                      <input type=\"text\" placeholder=\"Search Released By\" name=\"DETAILS\" />\r\n                    </th>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport \"rxjs/Rx\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport Swal from \"sweetalert2\";\r\nimport { environment } from \"../../../../../environments/environment\";\r\n@Injectable()\r\nexport class specialservice {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API\r\n  url = environment.base_url;\r\n\r\n  constructor(private http: HttpClient) { }\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + \"/special-instruction/insert\", data).pipe(\r\n      map((res) => res),\r\n      catchError((error) => {\r\n        Swal.fire(\"Please Input Proper Data !\");\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http\r\n      .get(this.url + \"/special-instruction/\" + id)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + \"/special-instruction/update\", data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http\r\n      .delete(this.url + \"/special-instruction/delete/\" + id)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Scheme1Service } from '../../../../shared/elements/scheme1.service';\r\nimport { AcountnoService } from '../../../../shared/elements/acountno.service';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-standing-instruction',\r\n  templateUrl: './standing-instruction.component.html',\r\n  styleUrls: ['./standing-instruction.component.scss']\r\n})\r\n\r\nexport class StandingInstructionComponent implements OnInit {\r\n  angForm: FormGroup;\r\n  //Datatable\r\n  dtExportButtonOptions: any = {};\r\n\r\n  a: Array<IOption> = this.Scheme1Service.getCharacters();\r\n  b: Array<IOption> = this.AcountnoService.getCharacters();\r\n  selectedOption = '3';\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = '3';\r\n  timeLeft = 5;\r\n\r\n  private dataSub: Subscription = null;\r\n\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n\r\n  //variable for checkbox and radio button \r\n  isIsAutoBalanceTransferRemainingthisMinimumBalance: boolean = false;\r\n\r\n  message = {\r\n    Date: \"\",\r\n    StartFrom: \"\",\r\n    InstructionNo: \" \",\r\n    NextExecutionOn: \"\",\r\n    LastExecutedOn: \"\",\r\n    Day: \" \",\r\n    TransactionAmount: \" \",\r\n    IsAutoBalanceTransferRemainingthisMinimumBalance: \" \",\r\n\r\n  };\r\n\r\n  constructor(private fb: FormBuilder, public Scheme1Service: Scheme1Service, public AcountnoService: AcountnoService) { this.createForm(); }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.dtExportButtonOptions = {\r\n      ajax: 'fake-data/standing-instruction.json',\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"btn btn-outline-primary btn-sm\"id=\"editbtn\">Edit</button>' + ' ' + '<button  id=\"delbtn\" class=\"btn btn-outline-primary btn-sm\">Delete</button>';\r\n          }\r\n        },\r\n        {\r\n          title: 'Date',\r\n          data: 'Date'\r\n        },\r\n        {\r\n          title: 'Start From',\r\n          data: 'StartFrom'\r\n        },\r\n        {\r\n          title: 'Instruction No',\r\n          data: 'InstructionNo'\r\n        }, {\r\n          title: 'Next Execution On',\r\n          data: 'NextExecutionOn'\r\n        },\r\n        {\r\n          title: 'Last Executed On',\r\n          data: 'LastExecutedOn'\r\n        },\r\n        {\r\n          title: 'Day',\r\n          data: 'Day'\r\n        }, {\r\n          title: 'Transaction Amount',\r\n          data: 'TransactionAmount'\r\n        },\r\n        {\r\n          title: 'IsAutoBalanceTransferRemainingthisMinimumBalance',\r\n          data: 'IsAutoBalanceTransferRemainingthisMinimumBalance'\r\n        },],\r\n      dom: 'Bfrtip',\r\n      buttons: [\r\n        'copy',\r\n        'print',\r\n        'excel',\r\n        'csv'\r\n      ],\r\n      //row click handler code\r\n\r\n      /**\r\n* @rowCallback function for editClickHandler and delClickHandler to passes table data to there filds\r\n  @return row \r\n*/\r\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\r\n        const self = this;\r\n        $('td', row).off('click');\r\n        $('td', row).on('click', '#editbtn', () => {\r\n          self.editClickHandler(data);\r\n        });\r\n        $('td', row).on('click', '#delbtn', () => {\r\n          self.delClickHandler(data);\r\n        });\r\n        return row;\r\n      }\r\n    };\r\n\r\n\r\n\r\n    this.dataSub = this.Scheme1Service.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n    this.dataSub = this.AcountnoService.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n  }\r\n\r\n  runTimer() {\r\n    const timer = setInterval(() => {\r\n      this.timeLeft -= 1;\r\n      if (this.timeLeft === 0) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      Date: [''],\r\n      StartFrom: ['', [Validators.required]],\r\n      InstructionNo: ['',],\r\n      NextExecutionOn: [''],\r\n      LastExecutedOn: [''],\r\n      Day: ['', [Validators.pattern, Validators.required]],\r\n      Scheme: ['', [Validators.required]],\r\n      creditScheme: ['', [Validators.required]],\r\n      AccountNo: ['', [Validators.required]],\r\n      creditAccountNo: ['', [Validators.required]],\r\n      Debit: ['', [Validators.pattern, Validators.required]],\r\n      Credit: ['', [Validators.pattern, Validators.required]],\r\n      TransactionAmount: ['', [Validators.pattern, Validators.required]],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.angForm.valid);\r\n    if (this.angForm.valid) {\r\n      console.log(this.angForm.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n* @editClickHandler function for edit button clicked\r\n*/\r\n\r\n  editClickHandler(info: any): void {\r\n    this.message.Date = info.Date;\r\n    this.message.StartFrom = info.StartFrom;\r\n    this.message.InstructionNo = info.InstructionNo;\r\n    this.message.NextExecutionOn = info.NextExecutionOn;\r\n    this.message.LastExecutedOn = info.LastExecutedOn;\r\n    this.message.Day = info.Day;\r\n    this.message.TransactionAmount = info.TransactionAmount;\r\n    this.message.IsAutoBalanceTransferRemainingthisMinimumBalance = info.IsAutoBalanceTransferRemainingthisMinimumBalance;\r\n\r\n\r\n    //code for chekbox\r\n    if (this.message.IsAutoBalanceTransferRemainingthisMinimumBalance == \"Yes\") {\r\n      this.isIsAutoBalanceTransferRemainingthisMinimumBalance = true;   //return boolean value and display checked checkbox\r\n    }\r\n    else {\r\n      this.isIsAutoBalanceTransferRemainingthisMinimumBalance = false;   //return boolean value and display unchecked checkbox\r\n    }\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n  }\r\n\r\n  /**\r\n  * @updateData function for update data \r\n  */\r\n  updateData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    // this.form.reset();\r\n  }\r\n\r\n\r\n  /**\r\n  * @delClickHandler function for delete button \r\n    @Swal sweetalert2\r\n    @Swal.fire open a modal window to display message\r\n  */\r\n  delClickHandler(info: any): void {\r\n    this.message.Date = info.Date;\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete Date.\" + this.message.Date + \"  data\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      /* run code if our result  isConfirmed function Swal.fire open a modal window to display message\r\n      else if result is dismiss then it cancel and open a modal window to display cancel message\r\n       */\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your data has been deleted.',\r\n          'success'\r\n        )\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Standing Instruction</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\r\n                                        formControlName=\"Date\" value=\"{{ message.Date}}\" onfocus=\"(this.type='date')\"\r\n                                        id=\"date\" />\r\n                                    <label for=\"date\">Date</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\" checked=\"checked\">\r\n                                        <i class=\"helper\"></i>Month Begin<span class=\"required\"> </span>\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\">\r\n                                        <i class=\"helper\"></i>Month End<span class=\"required\"> </span>\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"radio\">\r\n                                        <i class=\"helper\"></i>Specific Day<span class=\"required\"> </span>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"StartFrom\" required=\"\"\r\n                                        max=\"9999-12-31\" formControlName=\"StartFrom\" value=\"{{ message.StartFrom}}\"\r\n                                        onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"StartFrom\">Start From <sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['StartFrom'].invalid && (angForm.controls['StartFrom'].dirty || angForm.controls['StartFrom'].touched)\"\r\n                                class='alert alert-danger'>\r\n                                <div *ngIf=\"angForm.controls['StartFrom'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"TotalAmount\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"InstructionNo\" value=\"{{ message.InstructionNo }}\"\r\n                                        formControlName=\"InstructionNo\">\r\n                                    <label for=\"InstructionNo\">Instruction No.</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" id=\"NextExecutionOn\"\r\n                                        max=\"9999-12-31\" formControlName=\"NextExecutionOn\"\r\n                                        value=\"{{ message.NextExecutionOn}}\" onfocus=\"(this.type='date')\" />\r\n                                    <label for=\"NextExecutionOn\">Next Execution On</label>\r\n                                </span>\r\n                            </div>\r\n                            <!-- <div class=\"form-group form-primary form-static-label\">\r\n                                <input value=\"{{ message.NextExecutionOn }}\" class=\"form-control\" type=\"text\" onfocus=\"(this.type='date')\"  id=\"date\" name=\"AC_NDATE\" required />\r\n                                <span class=\"form-bar\"></span>\r\n                                <label class=\"float-label\">Next Execution On</label>\r\n                            </div> -->\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\" \" max=\"9999-12-31\"\r\n                                        formControlName=\"LastExecutedOn\" value=\"{{ message.LastExecutedOn}}\"\r\n                                        onfocus=\"(this.type='date')\" id=\"LastExecutedOn\" />\r\n                                    <label for=\"LastExecutedOn\">Last Executed On</label>\r\n                                </span>\r\n                            </div>\r\n                            <!-- <div class=\"form-group form-primary form-static-label\">\r\n                                <input value=\"{{ message.LastExecutedOn }}\" class=\"form-control\" type=\"text\" onfocus=\"(this.type='date')\"  id=\"date\" name=\"AC_NDATE\" required />\r\n                                <span class=\"form-bar\"></span>\r\n                                <label class=\"float-label\">Last Executed On</label>\r\n                            </div> -->\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Day\"\r\n                                        required=\"\" value=\"{{ message.Day }}\" pattern=\"^[0-9]+$\"\r\n                                        title=\"Input allowed only  0-9\" formControlName=\"Day\">\r\n                                    <label for=\"Day\">Day<sub class=\"required\">*</sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Day'].invalid && (angForm.controls['Day'].dirty || angForm.controls['Day'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['Day'].errors?.pattern || angForm.controls['Day'].errors?.required\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div *ngIf=\"angForm.get('Day').hasError('required') && myform.submitted\"\r\n                                class='alert alert-danger'>This field is required</div> -->\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <h6>Debit A/C Details</h6>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                    placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"Scheme\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Scheme'].invalid && (angForm.controls['Scheme'].dirty || angForm.controls['Scheme'].touched)\"\r\n                                class='alert alert-danger'>\r\n                                <div *ngIf=\"angForm.controls['Scheme'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                    placeholder=\"Account No *\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"AccountNo\">\r\n                                </ng-select>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"angForm.controls['AccountNo'].invalid && (angForm.controls['AccountNo'].dirty || angForm.controls['AccountNo'].touched)\"\r\n                                    class='alert alert-danger'>\r\n                                    <div *ngIf=\"angForm.controls['AccountNo'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Debit\"\r\n                                        required=\"\" pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\r\n                                        formControlName=\"Debit\">\r\n                                    <label for=\"Debit\">Debit Narration<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Debit'].invalid && (angForm.controls['Debit'].dirty || angForm.controls['Debit'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['Debit'].errors?.pattern || angForm.controls['Debit'].errors?.required\">\r\n                                    Input allowed only A-Za-z\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <h6>Credit A/C Details</h6>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"a\" [multiple]=\"false\"\r\n                                    placeholder=\"Scheme *\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"creditScheme\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['creditScheme'].invalid && (angForm.controls['creditScheme'].dirty || angForm.controls['creditScheme'].touched)\"\r\n                                class='alert alert-danger'>\r\n                                <div *ngIf=\"angForm.controls['creditScheme'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <ng-select [ngClass]=\"'ng-select'\" [options]=\"b\" [multiple]=\"false\"\r\n                                    placeholder=\"Account No *\" required title=\"Compulsory Selection\"\r\n                                    formControlName=\"creditAccountNo\">\r\n                                </ng-select>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"angForm.controls['creditAccountNo'].invalid && (angForm.controls['creditAccountNo'].dirty || angForm.controls['creditAccountNo'].touched)\"\r\n                                    class='alert alert-danger'>\r\n                                    <div *ngIf=\"angForm.controls['creditAccountNo'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \" id=\"Credit\"\r\n                                        required=\"\" pattern=\"^[A-Za-z]+$\" title=\"Input allowed only A-Za-z\"\r\n                                        formControlName=\"Credit\">\r\n                                    <label for=\"Credit\">Credit Narration<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Credit'].invalid && (angForm.controls['Credit'].dirty || angForm.controls['Credit'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['Credit'].errors?.pattern || angForm.controls['Credit'].errors?.required\">\r\n                                    Input allowed only A-Za-z\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"To\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"TransactionAmount\" required=\"\" value=\"{{ message.TransactionAmount }}\"\r\n                                        pattern=\"^[0-9]+$\" title=\"Input allowed only  0-9\"\r\n                                        formControlName=\"TransactionAmount\">\r\n                                    <label for=\"TransactionAmount\">Transaction Amount<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['TransactionAmount'].invalid && (angForm.controls['TransactionAmount'].dirty || angForm.controls['TransactionAmount'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['TransactionAmount'].errors?.pattern || angForm.controls['TransactionAmount'].errors?.required\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"border-checkbox-section\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" name=\"DD_APPLICABLE\" id=\"checkbox1\"\r\n                                        [checked]=\"isIsAutoBalanceTransferRemainingthisMinimumBalance == true\">\r\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Is Auto Balance Transfer\r\n                                        Remaining this Minimum Balance</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-primary ripple light\" *ngIf=\"showButton\"\r\n                                [disabled]=\"angForm.invalid\">Add</button>\r\n                            <button class=\"btn btn-primary ripple light\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table datatable [dtOptions]=\"dtExportButtonOptions\"\r\n                                class=\"table table-striped table-bordered table-hover\" style=\"width: 100%;\">\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}