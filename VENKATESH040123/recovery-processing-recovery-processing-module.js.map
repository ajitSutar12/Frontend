{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/dropdownService/ac-master-dropdown.service.ts","./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/salary-division-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/shared/dropdownService/subsalary-division-master-dropdown.service.ts","./src/app/shared/elements/transaction-cash-mode.service.ts","./src/app/shared/elements/transaction-transfer-mode.service.ts","./src/app/theme/master/customer/saving-master/saving-master.service.ts","./src/app/theme/transaction/recovery/recovery-processing/recovery-processing-routing.module.ts","./src/app/theme/transaction/recovery/recovery-processing/recovery-processing.component.ts","./src/app/theme/transaction/recovery/recovery-processing/recovery-processing.component.html","./src/app/theme/transaction/recovery/recovery-processing/recovery-processing.module.ts","./src/app/theme/transaction/recovery/recovery-processing/recovery-processing.service.ts","./src/app/theme/utility/scheme-parameters/shares-scheme/shares-scheme.service.ts"],"names":[],"mappings":"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","file":"recovery-processing-recovery-processing-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ACMasterDropdownService {\r\n\r\n    // // gl-account-master\"; \r\n    url = environment.base_url;\r\n    acMasterObject = new Array();\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getACMasterList() {\r\n        this.acMasterObject = [];\r\n        return this.http.get<any>(this.url + '/gl-account-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\r\n                    this.acMasterObject.push(obj)\r\n                });\r\n                return this.acMasterObject;\r\n            }));\r\n    }\r\n\r\n    public getACMasterList1() {\r\n        this.acMasterObject = [];\r\n        return this.http.get<any>(this.url + '/gl-account-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { AC_NAME: element.AC_NAME, id: element.id, AC_NO: element.AC_NO };\r\n                    this.acMasterObject.push(obj)\r\n                });\r\n                return this.acMasterObject;\r\n            }));\r\n    }\r\n\r\n    public getACMasterbranch(branchid) {\r\n        this.acMasterObject = [];\r\n        return this.http.get<any>(this.url + '/gl-account-master/branch/' + branchid)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\r\n                    // let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id };\r\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id, name: element.AC_NO };\r\n                    this.acMasterObject.push(obj)\r\n                });\r\n                return this.acMasterObject;\r\n            }));\r\n    }\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SalaryDMasterdropdownService {\r\n    salaryObject = new Array();\r\n    // // salary-division-master\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getSalaryMasterList() {\r\n        this.salaryObject = []\r\n        return this.http.get<any>(this.url + '/salary-division-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.NAME, value: element.id, name: element.CODE};\r\n                    this.salaryObject.push(obj)\r\n                });\r\n                return this.salaryObject;\r\n            }));\r\n    }\r\n    public getSalaryDMasterList(branch) {\r\n        this.salaryObject = []\r\n        return this.http.get<any>(this.url + '/salary-division-master/getBranch/' + branch)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.NAME, value: element.id, name: element.CODE};\r\n                    this.salaryObject.push(obj)\r\n                });\r\n                return this.salaryObject;\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SubSalaryDMasterdropdownService {\r\n    subSalaryObject = new Array();\r\n    // // salary-division-master\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getSubSalaryDMasterList() {\r\n        this.subSalaryObject = []\r\n        return this.http.get<any>(this.url + '/sub-salary-division-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.NAME,value: element.id};\r\n                    this.subSalaryObject.push(obj)\r\n                });\r\n                return this.subSalaryObject;\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class TransactionCashModeService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: 'DR', label: 'Deposit/Receipts' },\r\n        { value: 'DC', label: 'Deposit Closing' },\r\n        { value: 'WP', label: 'Withdrawals / Payments' },\r\n        { value: 'WC', label: 'Withdrawals for Closing' },\r\n        { value: 'WD', label: 'Withdrawals Dividend' },\r\n        { value: 'CIOA', label: 'Credit Interest On Account' },\r\n        { value: 'WI', label: 'Withdrawals Interest' }\r\n        \r\n\r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(TransactionCashModeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(TransactionCashModeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(TransactionCashModeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class TransactionTransferModeService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: 'CT', label: 'Credit Transfer' },\r\n        { value: 'CTC', label: 'Credit Transfer for Closing' },\r\n        { value: 'DT', label: 'Debit Transfer' },\r\n        { value: 'DTC', label: 'Debit Transfer for Closing' },\r\n        { value: 'DIA', label: 'Debit Interest on Account' },\r\n        { value: 'CTCBT', label: ' Credit Transfer for Closing with Branch Transfer' },\r\n        { value: 'DTD', label: 'Debit Transfer Dividend' },\r\n        { value: 'CIOA', label: 'Credit Interest On Account' },\r\n        { value: 'DTI', label: 'Debit Transfer Interest' },\r\n\r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(TransactionTransferModeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(TransactionTransferModeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(TransactionTransferModeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment'\r\n@Injectable()\r\nexport class SavingMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/saving-master/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/saving-master/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    getData(obj): Observable<any> {\r\n        return this.http.get(this.url + '/saving-master/alldata' + obj).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    getSchemeCodeList(scheme): Observable<any> {\r\n        return this.http.get(this.url + '/scheme-parameters/' + scheme).pipe(catchError(this.handleError));\r\n    }\r\n    getCustomerIDMasterList(): Observable<any> {\r\n        return this.http.get(this.url + '/customer-id').pipe(catchError(this.handleError));\r\n    }\r\n\r\n    getcategoryList(): Observable<any> {\r\n        return this.http.get(this.url + '/category-master').pipe(catchError(this.handleError));\r\n    }\r\n\r\n    getOperationMasterList(): Observable<any> {\r\n        return this.http.get(this.url + '/operation-master').pipe(catchError(this.handleError));\r\n    }\r\n    getMinimumBalanceMasterList(): Observable<any> {\r\n        return this.http.get(this.url + '/minimum-balance-master').pipe(catchError(this.handleError));\r\n    }\r\n    getIntrestCategoaryMasterList(): Observable<any> {\r\n        return this.http.get(this.url + '/interest-category-master').pipe(catchError(this.handleError));\r\n    }\r\n    getcityList(): Observable<any> {\r\n        return this.http.get(this.url + '/city-master').pipe(catchError(this.handleError));\r\n    }\r\n    getOwnbranchList(): Observable<any> {\r\n        return this.http.get(this.url + '/own-branch-master').pipe(catchError(this.handleError));\r\n    }\r\n    getAllSchemeList(): Observable<any> {\r\n        return this.http.get(this.url + '/scheme-parameters/').pipe(catchError(this.handleError));\r\n    }\r\n    getSavingSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/saving-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getShareSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/share-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getCurrentAccountSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/current-account-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getTermLoanSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/term-loan-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getTermDepositSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/term-deposits-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getDisputeLoanSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/dispute-loan-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getCashCreditSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/cash-credit-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getAnamatSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/anamat-gsm/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getPigmyAccountSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/pigmy-account-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getPigmyAgentSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/pigmy-agent-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getLokcerSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get<any>(this.url + '/locker-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getInvestmentSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/investment/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/saving-master/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/saving-master/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n\r\n\r\n    //approve master\r\n    approve(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/saving-master/approve', data).pipe(catchError(this.handleError));\r\n    }\r\n\r\n\r\n    //reject master\r\n    reject(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/saving-master/reject', data).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { RecoveryProcessingComponent } from './recovery-processing.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RecoveryProcessingComponent,\r\n    data: {\r\n      title: 'Recovery Processing',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RecoveryProcessingRoutingModule { }\r\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, PatternValidator } from '@angular/forms';\r\n//SubSalaryDMasterdropdownService\r\nimport { SubSalaryDMasterdropdownService } from '../../../../shared/dropdownService/subsalary-division-master-dropdown.service'\r\n//SalaryDMasterdropdownService\r\nimport { SalaryDMasterdropdownService } from '../../../../shared/dropdownService/salary-division-master-dropdown.service'\r\n//SchmeCodeDropdownService\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SharesSchemeService } from '../../../utility/scheme-parameters/shares-scheme/shares-scheme.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject, Subscription } from 'rxjs-compat';\r\nimport { RecoveryProcessingService } from './recovery-processing.service'\r\nimport { SchemeTypeDropdownService } from '../../../../shared/dropdownService/scheme-type-dropdown.service';\r\nimport { IOption } from 'ng-select';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal from 'sweetalert2';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { ACMasterDropdownService } from '../../../../shared/dropdownService/ac-master-dropdown.service';\r\nimport { TransactionCashModeService } from '../../../../shared/elements/transaction-cash-mode.service';\r\nimport { TransactionTransferModeService } from '../../../../shared/elements/transaction-transfer-mode.service';\r\nimport { SavingMasterService } from '../../../master/customer/saving-master/saving-master.service';\r\nimport { SchemeAccountNoService } from '../../../../shared/dropdownService/schemeAccountNo.service'\r\n\r\n@Component({\r\n  selector: 'app-recovery-processing',\r\n  templateUrl: './recovery-processing.component.html',\r\n  styleUrls: ['./recovery-processing.component.scss'],\r\n  providers: [SalaryDMasterdropdownService, SubSalaryDMasterdropdownService,SchemeCodeDropdownService,SharesSchemeService,SchemeTypeDropdownService,SavingMasterService,TransactionCashModeService,TransactionTransferModeService,ACMasterDropdownService,OwnbranchMasterService,SchemeAccountNoService]\r\n})\r\nexport class RecoveryProcessingComponent implements OnInit {\r\n\r\n  @ViewChild('triggerhide') triggerhide: ElementRef<HTMLElement>;\r\n\r\n //api\r\n url = environment.base_url;\r\n\r\n  angsForm: FormGroup;  //formGroup Name\r\n  angtForm: FormGroup;\r\n  angForm: FormGroup;\r\n  //DatePicker\r\n  datemax: any;\r\n  effectdate: any = null\r\n  transdate:any\r\n  maxDate: Date;\r\n  minDate: Date;\r\n\r\n  totalAmt: any;\r\n  //SalaryDropDown\r\n  salary_divList: any = null;\r\n  salary_div: any[];\r\n  //SubSalaryDropDown\r\n  sub_salary_div: any[];\r\n  sub_salary_divList: any = null;\r\n  ngtoac: any = null\r\n \r\n  particulars: any;\r\n  //narration\r\n  narrationList: any;\r\n\r\n   //Scheme type variable\r\n\r\n   shareSchemeType\r\n\r\n     //variable to calculate retirement date\r\n   \r\n  acno: any = null;\r\n  acnos: any = null;\r\n  SchemeCodeDropdownDropdown: any[];\r\n  ngIntroducer: any ;\r\n  ngIntroducers:any;\r\n  OwnbranchMasterDropdown: any[];\r\n\r\n  scheme //scheme code from schemast(S_ACNOTYPE)\r\n\r\n    // for dropdown ngmodule\r\n    ngschemetype:any=null\r\n\r\n\r\n     //title select variables\r\n  schemeType1: Array<IOption> = this.schemeTypeDropdown.getCharacters();\r\n  private dataSub: Subscription = null;\r\n  characters: Array<IOption>;\r\n\r\n  //Datatable\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  dtExportButtonOptions: any = {};\r\n\r\n\r\n  selectedCode: string;\r\n  allSchemeCode: any//from schme master\r\n  master: any;\r\n  type: any; //cash or transfer\r\n  tranModeList: any;\r\n  date: any;\r\n  headData: any;\r\n  headShow: boolean = false;\r\n  branchCode:any;\r\n  \r\n  selectedScheme: any;\r\n  allScheme = new Array()//from schme master\r\n  introducerACNo\r\n  \r\n  obj: any\r\n  selectedBranch: number;\r\n  ClearBalance: number = 0;\r\n  DayOpBal: number;\r\n  Pass: number = 0;\r\n  Unpass: number = 0;\r\n  AfterVoucher: number = 0;\r\n  Other_1_Accountlist : any = null;\r\n  Other_1_Account : any = null;\r\n  branch_code: any[]//from ownbranchmaster\r\n  Other_2_Accountlist : any = null;\r\n  \r\n // dropdown variables\r\n ngscheme: any = null\r\n  //Scheme type variable\r\n  schemeType: string = 'GL'\r\n\r\n  schemeACNo\r\n\r\n  constructor(private fb: FormBuilder,\r\n    public TransactionCashModeService: TransactionCashModeService,\r\n    public TransactionTransferModeService: TransactionTransferModeService,\r\n    private config: NgSelectConfig,\r\n    private salaryDMasterdropdownService: SalaryDMasterdropdownService,\r\n    private subSalaryDMasterdropdownService: SubSalaryDMasterdropdownService,\r\n    private _service: RecoveryProcessingService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private SchemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private sharesSchemeService: SharesSchemeService,\r\n    private schemeTypeDropdown: SchemeTypeDropdownService,\r\n    private savingMasterService: SavingMasterService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private ACMasterDropdownService: ACMasterDropdownService,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private http: HttpClient,\r\n    public OwnbranchMasterService: OwnbranchMasterService,) {\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n  \r\n\r\n  ngOnInit(): void {\r\n    this.createForm();  //processing validators\r\n    \r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    let branchCode = result.branch.id\r\n    if (result.RoleDefine[0].Role.id == 1) {\r\n      this.salaryDMasterdropdownService.getSalaryMasterList().pipe(first()).subscribe(data => {\r\n        this.salary_div = data;\r\n      })\r\n    }\r\n    //SalaryDropDown\r\n    else {\r\n      this.salaryDMasterdropdownService.getSalaryDMasterList(branchCode).pipe(first()).subscribe(data => {\r\n        this.salary_div = data;\r\n      })\r\n\r\n    }\r\n//SubSalaryDropDown\r\n    this.subSalaryDMasterdropdownService.getSubSalaryDMasterList().pipe(first()).subscribe(data => {\r\n      this.sub_salary_div = data;\r\n    })\r\n\r\n    this.ACMasterDropdownService.getACMasterList().pipe(first()).subscribe(data => {\r\n      this.Other_1_Account = data;\r\n    })\r\n\r\n    //Narration List\r\n    this._service.getNarrationMaster().subscribe(data => {\r\n      this.narrationList = data;\r\n    })\r\n\r\n    this.dataSub = this.schemeTypeDropdown.loadCharacters().subscribe((options) => {\r\n      this.characters = options;\r\n    });\r\n\r\n    \r\n\r\n    //Scheme Code\r\n    this._service.getSchemeCodeList().subscribe(data => {\r\n      this.master = data;\r\n      this.allSchemeCode = [...new Map(data.map(item => [item['S_ACNOTYPE'], item])).values()]\r\n\r\n    })\r\n\r\n    this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data => {\r\n      this.scheme = data\r\n      // this.ngscheme = data[0].value\r\n      this.getAccountList()\r\n    })\r\n\r\n     //Scheme Code\r\n     this._service.getSchemeCodeList().subscribe(data => {\r\n      this.master = data;\r\n      this.allSchemeCode = [...new Map(data.map(item => [item['S_ACNOTYPE'], item])).values()]\r\n\r\n    })\r\n\r\n\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n    }\r\n\r\n\r\n    this.SchemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n\r\n   var filtered = data.filter(function(SchemeCodeDropdownDropdown){\r\n    return (SchemeCodeDropdownDropdown.name == 'SH');\r\n   });\r\n   this.SchemeCodeDropdownDropdown = filtered;\r\n    })\r\n\r\n    this.OwnbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n\r\n      this.OwnbranchMasterDropdown = data;\r\n    })\r\n    \r\n\r\n  }\r\n//processing validators\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      ACNOTYPE: ['', [Validators.required]],\r\n      SUB_SALARYDIVISION_CODE: ['', [Validators.required]],\r\n      AC_SALARYDIVISION_CODE: ['', [Validators.required]],\r\n      OTHER_1_ACCOUNTNO: ['', [Validators.required]],\r\n      OTHER_2_ACCOUNTNO: ['', [Validators.required]],\r\n      DR_G_L_SCHEME: ['', [Validators.required]],\r\n      DR_G_L_CODE: ['', [Validators.required]],\r\n      TRAN_DATE: ['', [Validators.required]],\r\n      PROCESS_DATE: ['', [Validators.required]],\r\n    })\r\n\r\n  }\r\n\r\n  decimalAllContent($event) {\r\n    let value = Number($event.target.value);\r\n    let data = value.toFixed(2);\r\n    $event.target.value = data;\r\n  }\r\n\r\n  getAmt(ele) {\r\n    this.totalAmt = ele.target.value + '.00';\r\n  }\r\n\r\n  //get Narration Details \r\n  getNarration(ele) {\r\n    this.particulars = ele;\r\n    let el: HTMLElement = this.triggerhide.nativeElement;\r\n    el.click();\r\n  }\r\n\r\n \r\n\r\ngetBranch() {\r\n  this.getIntroducers()\r\n  \r\n}\r\n\r\n\r\ngetschemename: any\r\ncode1: any\r\ngetIntro(event) {\r\n  this.getschemename = event.name\r\n  this.getIntroducers()\r\n  \r\n}\r\n//get account no according scheme for introducer\r\ngetIntroducers() {\r\n  let data:any=localStorage.getItem('user')\r\n  let result=JSON.parse(data);\r\n  let branchCode=result.branch.id;\r\n  this.obj = [this.acno, branchCode]\r\n  switch (this.getschemename) {\r\n    case 'SH':\r\n      this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n        this.introducerACNo = data;\r\n        this.ngIntroducer \r\n        this.ngIntroducers=null\r\n\r\n      })\r\n      break;\r\n\r\n  }\r\n}\r\n\r\n\r\n//get account no according scheme\r\ngetAccountList() {\r\n  this.ngtoac = null\r\n  this.http.get(this.url + '/gl-account-master/divAccount/' + this.ngscheme).subscribe((data) => {\r\n    console.log(data)\r\n    this.schemeACNo = data\r\n  })\r\n}\r\n}\r\n","<div class=\"row\">\r\n\r\n    <div class=\"col-md-12\">\r\n\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n\r\n                <div class=\"card\">\r\n\r\n                    <div class=\"card-header\">\r\n                        <h5>Monthly Recovery Process</h5>\r\n                        <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                            Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                        </h6>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"card-body\">\r\n                        <h1><span>Recovery Process</span></h1>\r\n                        <form [formGroup]=\"angForm\" novalidate>\r\n\r\n                            <div class=\"solid\">\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-2 col-md-2\"> <label for=\"date\">Process Date<sub\r\n                                                class=\"required\">*\r\n                                            </sub></label></div>\r\n                                    <div class=\"col-sm-2 \">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"EFFECT_DATE\"\r\n                                                    id=\"EFFECT_DATE\" class=\"form-control\" [(ngModel)]=\"effectdate\"\r\n                                                    appButton minlength=\"10\" maxlength=\"10\"\r\n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                                    formControlName=\"PROCESS_DATE\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                    bsDatepicker>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group input-group\"\r\n                                            *ngIf=\"angForm.controls['PROCESS_DATE'].invalid && (angForm.controls['PROCESS_DATE'].dirty || angForm.controls['PROCESS_DATE'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div\r\n                                                *ngIf=\"angForm.controls['PROCESS_DATE'].errors?. maxlength || angForm.controls['PROCESS_DATE'].errors?. minlength || angForm.controls['PROCESS_DATE'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-1\"> <label for=\"date\">Transaction Date<sub\r\n                                                class=\"required\">*\r\n                                            </sub></label></div>\r\n                                    <div class=\"col-sm-2 \">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <input type=\"text\" placeholder=\"dd/mm/yyyy\" class=\"form-control\"\r\n                                                    name=\"TRANS_DATE\" id=\"TRANS_DATE\" [(ngModel)]=\"transdate\"\r\n                                                    formControlName=\"TRAN_DATE\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                    bsDatepicker>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group input-group\"\r\n                                            *ngIf=\"angForm.controls['TRAN_DATE'].invalid && (angForm.controls['TRAN_DATE'].dirty || angForm.controls['TRAN_DATE'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div\r\n                                                *ngIf=\"angForm.controls['TRAN_DATE'].errors?. maxlength || angForm.controls['TRAN_DATE'].errors?. minlength || angForm.controls['TRAN_DATE'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\" col-sm-5\">\r\n                                        <div class=\"form-radio\">\r\n                                            <div class=\"radio radio-inline\">\r\n                                                <label>\r\n                                                    <input type=\"radio\" name=\"type\" value=\"cash\" [checked]=\"true\">\r\n                                                    <i class=\"helper\"></i>Member Number Wise </label>\r\n                                            </div>\r\n                                            <div class=\"radio radio-inline\">\r\n                                                <label>\r\n                                                    <input type=\"radio\" name=\"type\" value=\"transfer\">\r\n                                                    <i class=\"helper\"></i>Employee Number Wise </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12 col-md-2\"><label for=\"ACNOTYPE\">Shared Scheme<sub\r\n                                                class=\"required\"> * </sub></label></div>\r\n\r\n                                    <div class=\"col-sm-3\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select formControlName=\"ACNOTYPE\" title=\"Compulsory Selection\"\r\n                                                    required placeholder=\"Shared Scheme\" [(ngModel)]=\"acnos\"\r\n                                                    bindValue=\"value\" bindLabel=\"label\" (change)=\"getIntro($event)\"\r\n                                                    placeholder=\"Shared Scheme\">\r\n                                                    <ng-option *ngFor=\"let values of SchemeCodeDropdownDropdown\"\r\n                                                        [value]=\"values\">\r\n                                                        {{values.label}}</ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"angForm.controls['ACNOTYPE'].invalid && (angForm.controls['ACNOTYPE'].dirty || angForm.controls['ACNOTYPE'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"angForm.controls['ACNOTYPE'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_SALARYDIVISION_CODE\">Salary\r\n                                            Division<sub class=\"required\"> * </sub></label></div>\r\n                                    <div class=\"col-sm-3\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select formControlName=\"AC_SALARYDIVISION_CODE\" bindValue=\"value\"\r\n                                                    [(ngModel)]=\"salary_divList\" bindLabel=\"label\"\r\n                                                    title=\"Compulsory Selection\" placeholder=\"Salary Division\">\r\n                                                    <ng-option *ngFor=\"let values of salary_div\" [value]=\"values\">\r\n                                                        {{values.label}}</ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"angForm.controls['AC_SALARYDIVISION_CODE'].invalid && (angForm.controls['AC_SALARYDIVISION_CODE'].dirty || angForm.controls['AC_SALARYDIVISION_CODE'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"angForm.controls['AC_SALARYDIVISION_CODE'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-1\"></div>\r\n                                    <div class=\"col-sm-12 col-md-3\"> <label for=\"SUB_SALARYDIVISION_CODE\">Sub Salary\r\n                                            Division<sub class=\"required\"> * </sub></label></div>\r\n                                    <div class=\"col-sm-3\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select formControlName=\"SUB_SALARYDIVISION_CODE\" bindValue=\"value\"\r\n                                                    [(ngModel)]=\"sub_salary_divList\" bindLabel=\"label\"\r\n                                                    title=\"Compulsory Selection\" placeholder=\"Sub Salary Division\">\r\n                                                    <ng-option *ngFor=\"let values of sub_salary_div\" [value]=\"values\">\r\n                                                        {{values.label}}</ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"angForm.controls['SUB_SALARYDIVISION_CODE'].invalid && (angForm.controls['SUB_SALARYDIVISION_CODE'].dirty || angForm.controls['SUB_SALARYDIVISION_CODE'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"angForm.controls['SUB_SALARYDIVISION_CODE'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n\r\n                                    <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_PARTICULAR\">Other 1 Amount</label>\r\n                                    </div>\r\n                                    <div class=\"col-md-3\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <input style=\"text-align: right;\" type=\"text\" name=\"AC_PARTICULAR\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                                    class=\"form-control\" placeholder=\"Other 1 Amount \"\r\n                                                    id=\"AC_PARTICULAR\" maxlength=\"15\"\r\n                                                    (focusout)=\"decimalAllContent($event)\"\r\n                                                    title=\"Input allowed only  A-Z a-z 0-9 - / . (Space)\" required\r\n                                                    formControlName=\"amt\" (keyup)=\"getAmt($event)\">\r\n\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-1\"></div>\r\n                                    <div class=\"col-sm-12 col-md-3\"> <label for=\"OTHER_1_ACCOUNTNO\">Other 1 Account\r\n                                            Number\r\n                                            <sub class=\"required\"> * </sub></label>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-3\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select formControlName=\"OTHER_1_ACCOUNTNO\"\r\n                                                    title=\"Compulsory Selection\" bindLabel=\"label\" bindValue=\"value\"\r\n                                                    [(ngModel)]=\"Other_1_Accountlist\"\r\n                                                    placeholder=\"Other 1 Account Number\">\r\n                                                    <ng-option *ngFor=\"let values of Other_1_Account\" [value]=\"values\">\r\n                                                        {{values.label}}></ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"angForm.controls['OTHER_1_ACCOUNTNO'].invalid && (angForm.controls['OTHER_1_ACCOUNTNO'].dirty || angForm.controls['OTHER_1_ACCOUNTNO'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"angForm.controls['OTHER_1_ACCOUNTNO'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n\r\n                                    <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_PARTICULAR\">Other 2 Amount</label>\r\n                                    </div>\r\n                                    <div class=\"col-md-3\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <input type=\"text\" style=\"text-align: right;\" name=\"AC_PARTICULAR\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                                    class=\"form-control\" placeholder=\"Other 2 Amount \"\r\n                                                    id=\"AC_PARTICULAR\" maxlength=\"15\"\r\n                                                    (focusout)=\"decimalAllContent($event)\"\r\n                                                    title=\"Input allowed only  A-Z a-z 0-9 - / . (Space)\" required\r\n                                                    formControlName=\"amt\" (keyup)=\"getAmt($event)\">\r\n\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-1\"></div>\r\n\r\n                                    <div class=\"col-sm-12 col-md-3\"> <label for=\"OTHER_2_ACCOUNTNO\">Other 2 Account\r\n                                            Number\r\n                                            <sub class=\"required\"> * </sub></label>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-3\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select formControlName=\"OTHER_2_ACCOUNTNO\" bindLabel=\"label\"\r\n                                                    bindValue=\"value\" [(ngModel)]=\"Other_2_Accountlist\"\r\n                                                    title=\"Compulsory Selection\" placeholder=\"Other 2 Account Number\">\r\n                                                    <ng-option *ngFor=\"let values of Other_1_Account\" [value]=\"values\">\r\n                                                        {{values.label}}></ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"angForm.controls['OTHER_2_ACCOUNTNO'].invalid && (angForm.controls['OTHER_2_ACCOUNTNO'].dirty || angForm.controls['OTHER_2_ACCOUNTNO'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"angForm.controls['OTHER_2_ACCOUNTNO'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12 col-md-2\"> <label for=\"DR_G_L_SCHEME\">Debit.G.L.Scheme\r\n                                            <sub class=\"required\"> * </sub></label></div>\r\n                                    <div class=\"col-sm-3\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select formControlName=\"DR_G_L_SCHEME\" bindValue=\"value\"\r\n                                                    [(ngModel)]=\"ngscheme\" bindLabel=\"label\" (change)=\"getAccountList()\"\r\n                                                    title=\"Compulsory Selection\" placeholder=\"Debit.G.L.Scheme\">\r\n                                                    <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                                        {{values.label}}</ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"angForm.controls['DR_G_L_SCHEME'].invalid && (angForm.controls['DR_G_L_SCHEME'].dirty || angForm.controls['DR_G_L_SCHEME'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"angForm.controls['DR_G_L_SCHEME'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-1\"></div>\r\n                                    <div class=\"col-sm-12 col-md-3\"> <label for=\"DR_G_L_CODE\">Debit.G.L.Code\r\n                                            <sub class=\"required\"> * </sub></label></div>\r\n                                    <div class=\"col-sm-3\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select formControlName=\"DR_G_L_CODE\" [(ngModel)]=\"ngtoac\"\r\n                                                    bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                                    placeholder=\"Debit.G.L.Code\">\r\n                                                    <ng-option *ngFor=\"let values of schemeACNo\" [value]=\"values\">\r\n                                                        {{values.AC_NO}} {{values.AC_NAME}}</ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"angForm.controls['DR_G_L_CODE'].invalid && (angForm.controls['DR_G_L_CODE'].dirty || angForm.controls['DR_G_L_CODE'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"angForm.controls['DR_G_L_CODE'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12 col-md-2  \"><label for=\"AC_PARTICULAR\">Particulars</label>\r\n                                    </div>\r\n                                    <div class=\"col-md-5\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <textarea class=\"form-control\" formControlName=\"particulars\"\r\n                                                    [(ngModel)]=\"particulars\"></textarea>\r\n                                                <i class=\"fa fa-info-circle errspan\" (click)=\"modalLarge.show()\"></i>\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm\" style=\"float: right;\">\r\n                                    <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\">\r\n                                        Process\r\n                                    </button>\r\n                                    <button class=\"btn btn-outline-primary btn-sm\">\r\n                                        Posting</button>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"table-responsive\">\r\n\r\n                                            <table class=\"table table-striped table-bordered table-hover compact\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <td class=\"td_center\">Scheme Code</td>\r\n                                                        <td class=\"td_center\">Account Number</td>\r\n                                                        <td class=\"td_center\">Scheme Name</td>\r\n                                                        <td class=\"td_center\">Type</td>\r\n                                                        <td class=\"td_center\">Amount</td>\r\n                                                        <td class=\"td_center\">Debit/credit</td>\r\n                                                        <td class=\"td_center\">Normal Interest</td>\r\n                                                        <td class=\"td_center\">Penal Interest</td>\r\n                                                        <td class=\"td_center\">Received Interest</td>\r\n\r\n                                                    </tr>\r\n\r\n\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td class=\"td_center\">1</td>\r\n                                                        <td class=\"td_center\">1234</td>\r\n                                                        <td class=\"td_center\">scheme</td>\r\n                                                        <td class=\"td_center\">Type</td>\r\n                                                        <td><input type=\"text\" class=\"form-control\"></td>\r\n                                                        <td><input type=\"text\" class=\"form-control\"></td>\r\n                                                        <td><input type=\"text\" class=\"form-control\"></td>\r\n                                                        <td><input type=\"text\" class=\"form-control\"></td>\r\n                                                        <td><input type=\"text\" class=\"form-control\"></td>\r\n\r\n\r\n                                                        <!-- <td *ngIf=\"ledgerbalance\" class=\"td_right\">\r\n                                                            <input style=\"text-align: right;\" type=\"text\" class=\"form-control\"\r\n                                                                name=\"TRAN_AMOUNT\" id=\"ledger_balance\" #ledger_balance\r\n                                                                (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                                                (change)=\"getColumnValue(data.id,data.AC_NO,data.BANKACNO,ledger_balance.value,ledger_balance.name)\">\r\n                                                        </td> -->\r\n                                                        <!-- <td *ngIf=\"productamount\" class=\"td_right\">\r\n                                                            <input style=\"text-align: right;\" type=\"text\" class=\"form-control\"\r\n                                                                name=\"AC_PRODUCT\" id=\"product_amount\" #AC_PRODUCT\r\n                                                                value=\"{{data.AC_PRODUCT == null || data.AC_PRODUCT == '' ? '' : data.AC_PRODUCT }}\"\r\n                                                                (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                                                (change)=\"getColumnValue(data.id,data.AC_NO,data.BANKACNO,AC_PRODUCT.value,AC_PRODUCT.name)\">\r\n                                                        </td> -->\r\n                                                        <!-- <td *ngIf=\"lastTranDate\" class=\"td_center\">\r\n                                                            <input type=\"text\" name=\"AC_ACTDATE\" id=\"tran_date\"\r\n                                                                placeholder=\"dd/mm/yyyy\" class=\"form-control\"\r\n                                                                [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                                                value=\"{{data.AC_ACTDATE == null || data.AC_ACTDATE == '' ? '' : data.AC_ACTDATE }}\"\r\n                                                                #AC_ACTDATE\r\n                                                                (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                                (bsValueChange)=\"getColumnValue(data.id,data.AC_NO,data.BANKACNO,AC_ACTDATE.value,AC_ACTDATE.name)\"\r\n                                                                bsDatepicker>\r\n                                                        </td> -->\r\n\r\n\r\n\r\n\r\n\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <!-- <tbody *ngIf=\"arrTable?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"12\" class=\"no-data-available\" style=\"text-align: center;\">\r\n                                                            No data!\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody> -->\r\n                                            </table>\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<app-modal-basic #modalLarge [dialogClass]=\"'modal-md'\">\r\n    <div class=\"app-modal-header\">\r\n        <h4 class=\"modal-title\">Narration Master</h4>\r\n        <button type=\"button\" class=\"close basic-close\" (click)=\"modalLarge.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"app-modal-body\">\r\n        <perfect-scrollbar style=\"overflow-y: auto;\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <th>Paticulars</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let item of narrationList\" (click)=\"getNarration(item.NARRATION)\">\r\n                                {{item.NARRATION}}\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <button type=\"button\" style=\"display: none;\" class=\"btn btn-outline-primary btn-sm\" #triggerhide\r\n                        (click)=\"modalLarge.hide()\">Close</button>\r\n                </div>\r\n            </div>\r\n        </perfect-scrollbar>\r\n    </div>\r\n    <!-- <div class=\"app-modal-footer\">\r\n          \r\n        </div> -->\r\n</app-modal-basic>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RecoveryProcessingComponent } from './recovery-processing.component';\r\nimport { RecoveryProcessingRoutingModule } from './recovery-processing-routing.module';\r\nimport { ReactiveFormsModule ,FormsModule} from '@angular/forms';\r\n\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { SharedModule } from '../../../../shared/shared.module';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport {NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RecoveryProcessingRoutingModule,\r\n    DataTablesModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    NgSelectModule,\r\n    NgbModule,\r\n    SharedModule\r\n\r\n  ],\r\n  declarations: [RecoveryProcessingComponent],\r\n  providers:[{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },],\r\n  schemas:[NO_ERRORS_SCHEMA,CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class RecoveryProcessingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecoveryProcessingService {\r\n\r\n  [x: string]: any;\r\n  url = environment.base_url;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n//get narration data\r\ngetNarrationMaster(): Observable<any> {\r\n  return this.http.get(this.url + '/narration')\r\n}\r\n\r\ngetSchemeCodeList(): Observable<any> {\r\n  return this.http.get(this.url + '/scheme-parameters')\r\n}\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class SharesSchemeService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  // // shares-scheme\";\r\n  url = environment.base_url;\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/shares-scheme/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        let errorMessage = 'Please add valid length';\r\n        Swal.fire('Kindly Add Valid Length !');\r\n        return throwError(errorMessage);\r\n      })\r\n    )\r\n  }\r\n\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/shares-scheme/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/shares-scheme/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/shares-scheme/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getFormDataBySchemeCode(schemeCode: any): Observable<any> {\r\n    return this.http.get(this.url + '/shares-scheme/schemeCode/' + schemeCode).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}