{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/shared/elements/branch.service.ts","./src/app/shared/elements/scheme-code.service.ts","./src/app/theme/master/shares/dividend-calculation/dividend-calculation-routing.module.ts","./src/app/theme/master/shares/dividend-calculation/dividend-calculation.component.ts","./src/app/theme/master/shares/dividend-calculation/dividend-calculation.component.html","./src/app/theme/master/shares/dividend-calculation/dividend-calculation.module.ts","./src/app/theme/master/shares/dividend-calculation/dividend-calculation.service.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,mDAAM;AAC3B;AACA,sC;;;;;;;;;;;;ACJa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,wEAAwB;AACzC,sC;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGN;AAG2B;;;AAIzD,MAAM,sBAAsB;IAM/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QALpC,0BAAqB,GAAG,IAAI,KAAK,EAAE,CAAC;QACpC,OAAO;QACP,yBAAyB;QACzB,QAAG,GAAG,qEAAW,CAAC,QAAQ,CAAC;IAEa,CAAC;IAElC,gBAAgB;QACnB,IAAI,CAAC,qBAAqB,GAAG,EAAE;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,oBAAoB,CAAC;aACrD,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC;gBACxH,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC;YACxC,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,qBAAqB,CAAC;QACtC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;4FAlBQ,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB;6FAAtB,sBAAsB;cADlC,wDAAU;;;;;;;;;;;;;;ACTX;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEN;AAC2B;;;AAEzD,MAAM,yBAAyB;IAKlC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,qBAAgB,GAAG,IAAI,KAAK,EAAE,CAAC;QAC/B,iBAAY,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,yBAAyB;QACzB,QAAG,GAAG,qEAAW,CAAC,QAAQ,CAAC;IACa,CAAC;IAElC,iBAAiB,CAAC,MAAM;QAC3B,IAAI,CAAC,gBAAgB,GAAG,EAAE;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,qBAAqB,GAAG,MAAM,CAAC;aAC/D,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,OAAO,CAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,mBAAmB,EAAE,SAAS,EAAE,OAAO,CAAC,aAAa,EAAE,UAAU,EAAE,OAAO,CAAC,wBAAwB,EAAE,aAAa,EAAE,OAAO,CAAC,aAAa,EAAE,eAAe,EAAE,OAAO,CAAC,eAAe,EAAE,iBAAiB,EAAE,OAAO,CAAC,iBAAiB,EAAE,CAAC;gBACjX,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC;YACnC,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAGM,gBAAgB;QACnB,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC;aACtD,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG;oBACN,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,EAAE,EAAE,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,OAAO,CAAC,iBAAiB,EAAE,eAAe,EAAE,OAAO,CAAC,eAAe,EAAE,aAAa,EAAE,OAAO,CAAC,uBAAuB,EAAE,YAAY,EAAE,OAAO,CAAC,aAAa,EAAE,SAAS,EAAE,OAAO,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,kBAAkB,EAAE,mBAAmB,EAAE,OAAO,CAAC,cAAc,EAAE,kBAAkB,EAAE,OAAO,CAAC,qBAAqB,EAAE,UAAU,EAAE,OAAO,CAAC,cAAc,EAAE,eAAe,EAAE,OAAO,CAAC,UAAU,EAAE,YAAY,EAAE,OAAO,CAAC,YAAY,EAAE,YAAY,EAAE,OAAO,CAAC,YAAY;oBACtnB,kBAAkB,EAAE,OAAO,CAAC,kBAAkB,EAAE,eAAe,EAAE,OAAO,CAAC,eAAe;iBAC3F,CAAC;gBACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAEM,iBAAiB;QACpB,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC;aACtD,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC;gBAC9H,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,CAAC,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IAEZ,CAAC;IAEM,sBAAsB;QACzB,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,0BAA0B,CAAC;aAC3D,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,2GAA2G;gBAE3G,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,EAAE,EAAE,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,OAAO,CAAC,iBAAiB,EAAE,eAAe,EAAE,OAAO,CAAC,eAAe,EAAE,CAAC;gBACzP,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAEM,wBAAwB;QAC3B,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,yBAAyB,CAAC;aAC1D,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,CAAC;gBACxG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAEM,qBAAqB;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC;aACtD,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,UAAU,GAAG,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC;gBAClF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IACM,kBAAkB;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC;aACtD,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,YAAY,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC;gBAC7D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IACM,mBAAmB;QACtB,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,6BAA6B,CAAC;aAC9D,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,CAAC;gBACxG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;kGAzGQ,yBAAyB;4GAAzB,yBAAyB,WAAzB,yBAAyB;6FAAzB,yBAAyB;cADrC,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAA;AAAA;AAAA;AAA2C;AACE;;AAKtC,MAAM,aAAa;IAQtB,aAAa;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAED,cAAc;QACV,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACtD,CAAC;IAED,yBAAyB;QACrB,MAAM,UAAU,GAAmB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC/E,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC9B,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC9B,OAAO,UAAU,CAAC;IACtB,CAAC;IAIO,WAAW,CAAC,OAAuB;QACvC,OAAO,IAAI,0DAAU,CAAC,CAAC,GAAG,EAAE,EAAE;YAC1B,UAAU,CAAC,GAAG,EAAE;gBACZ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;gBACrC,GAAG,CAAC,QAAQ,EAAE,CAAC;YACnB,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,YAAY,CAAC,OAAuB;QACxC,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACjF,CAAC;;AAnCsB,wBAAU,GAAmB;IAChD,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE;IAChC,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE;IAChC,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE;CAEnC,CAAC;0EANO,aAAa;gGAAb,aAAa,WAAb,aAAa;6FAAb,aAAa;cADzB,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAA2C;AACE;;AAKtC,MAAM,iBAAiB;IAS1B,aAAa;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;IAC3D,CAAC;IAED,cAAc;QACV,OAAO,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;IAC1D,CAAC;IAED,yBAAyB;QACrB,MAAM,UAAU,GAAmB,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACnF,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC9B,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC9B,OAAO,UAAU,CAAC;IACtB,CAAC;IAEO,WAAW,CAAC,OAAuB;QACvC,OAAO,IAAI,0DAAU,CAAC,CAAC,GAAG,EAAE,EAAE;YAC1B,UAAU,CAAC,GAAG,EAAE;gBACZ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;gBACrC,GAAG,CAAC,QAAQ,EAAE,CAAC;YACnB,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,YAAY,CAAC,OAAuB;QACxC,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACjF,CAAC;;AAlCsB,4BAAU,GAAmB;IAChD,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;IAClC,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;IAClC,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;IAClC,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;CAErC,CAAC;kFAPO,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB;6FAAjB,iBAAiB;cAD7B,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAAuC;AACc;AAC2B;;;AAGhF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4FAA4B;QACvC,IAAI,EAAE;YACJ,KAAK,EAAE,sBAAsB;YAC7B,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,0DAA0D;YACnE,MAAM,EAAE,IAAI;SACb;KACF;CACF,CAAC;AAMK,MAAM,gCAAgC;;+GAAhC,gCAAgC;0LAAhC,gCAAgC,kBAHlC,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,gCAAgC,uFAFjC,4DAAY;6FAEX,gCAAgC;cAJ5C,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAO9B;AAMP;AAEe;AAEN;AAC0B;AAC3D,8BAA8B;AAC0B;AAElB;;;;;;;;;;;;;;;;;;ICGE,gFACI;IAAA,uDAAgB;IAAA,4DAAY;;;IADc,6EAAgB;IAC1D,0DAAgB;IAAhB,2FAAgB;;;IAgBpB,gFACI;IAAA,uDAAgB;IAAA,4DAAY;;;IADS,6EAAgB;IACrD,0DAAgB;IAAhB,2FAAgB;;;IAO5B,sEACI;IAAA,oFACJ;IAAA,4DAAM;;;IALV,0EAGI;IAAA,gIACI;IAER,4DAAM;;;IAHG,0DAAoD;IAApD,+KAAoD;;;IA0BzD,sEACI;IAAA,oFACJ;IAAA,4DAAM;;;IALV,0EAGI;IAAA,gIACI;IAER,4DAAM;;;IAHG,0DAAyD;IAAzD,yLAAyD;;;IAsB9D,sEACI;IAAA,oFACJ;IAAA,4DAAM;;;IALV,0EAGI;IAAA,gIACI;IAER,4DAAM;;;IAHG,0DAAuD;IAAvD,qLAAuD;;;IAuB5D,sEACI;IAAA,oFACJ;IAAA,4DAAM;;;IALV,0EAGI;IAAA,gIACI;IAER,4DAAM;;;IAHG,0DAAyD;IAAzD,2LAAyD;;;IAkBtD,gFACI;IAAA,uDAAmC;IAAA,4DAAY;;;IADV,6EAAgB;IACrD,0DAAmC;IAAnC,oHAAmC;;;IAQ/C,sEACI;IAAA,oFACJ;IAAA,4DAAM;;;IALV,0EAGI;IAAA,gIACI;IAER,4DAAM;;;IAHG,0DAAoD;IAApD,iLAAoD;;;IAiBjD,gFACI;IAAA,uDAAmC;IAAA,4DAAY;;;IADZ,6EAAgB;IACnD,0DAAmC;IAAnC,oHAAmC;;;IAQ/C,sEACI;IAAA,oFACJ;IAAA,4DAAM;;;IALV,0EAGI;IAAA,gIACI;IAER,4DAAM;;;IAHG,0DAAkD;IAAlD,6KAAkD;;;IAuBvD,sEACI;IAAA,gHACJ;IAAA,4DAAM;;;IALV,0EAGI;IAAA,iIACI;IAER,4DAAM;;;IAHG,0DAAqD;IAArD,mLAAqD;;;IAqB1D,sEACI;IAAA,gHACJ;IAAA,4DAAM;;;IALV,0EAGI;IAAA,iIACI;IAER,4DAAM;;;IAHG,0DAAkD;IAAlD,6KAAkD;;;;IAU/D,6EACuB;IADwB,yUAAsB;IAC9C,iEAAM;IAAA,4DAAS;;;IA0B1C,qEACI;IAAA,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAiB;IAAA,4DAAK;IAC1B,sEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,wDAAqB;IAAA,4DAAK;IAC9B,sEAAI;IAAA,wDAAwC;IAAA,4DAAK;IACrD,4DAAK;;;IATG,0DAAqB;IAArB,sFAAqB;IACrB,0DAAe;IAAf,gFAAe;IACf,0DAAsB;IAAtB,uFAAsB;IACtB,0DAAoB;IAApB,qFAAoB;IACpB,0DAAmB;IAAnB,oFAAmB;IACnB,0DAAiB;IAAjB,kFAAiB;IACjB,0DAAwB;IAAxB,yFAAwB;IACxB,0DAAqB;IAArB,sFAAqB;IACrB,0DAAwC;IAAxC,8GAAwC;;;IAVpD,wEACI;IAAA,kIACI;IAUR,4DAAQ;;;IAXA,0DAA8B;IAA9B,sFAA8B;;;IAYtC,wEACI;IAAA,qEACI;IAAA,yEACI;IAAA,qEACJ;IAAA,4DAAK;IACT,4DAAK;IACT,4DAAQ;;;;ADjPxB,0BAA0B;AAC1B,MAAM,iBAAiB;CAKtB;AAoBM,MAAM,4BAA4B;IA6DvC,YACU,EAAe,EAChB,iBAAoC,EACpC,aAA4B,EAC3B,IAAgB,EAChB,yBAAoD,EACpD,sBAA8C,EAC9C,QAAoC;IAC5C,2CAA2C;IACnC,QAAkB,EAClB,sBAA8C,EAC9C,eAA8C;QAV9C,OAAE,GAAF,EAAE,CAAa;QAChB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,kBAAa,GAAb,aAAa,CAAe;QAC3B,SAAI,GAAJ,IAAI,CAAY;QAChB,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,aAAQ,GAAR,QAAQ,CAA4B;QAEpC,aAAQ,GAAR,QAAQ,CAAU;QAClB,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,oBAAe,GAAf,eAAe,CAA+B;QAvExD,KAAK;QACL,QAAG,GAAG,wEAAW,CAAC,QAAQ,CAAC;QAC3B,kBAAa,GAAG,KAAK,CAAC;QAMtB,cAAS,GAAwB,EAAE,CAAC;QACpC,cAAS,GAAiB,IAAI,mDAAO,EAAE,CAAC;QACxC,0BAAqB,GAAQ,EAAE,CAAC;QAEhC,8DAA8D;QAC9D,gBAAW,GAAmB,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QACrE,eAAU,GAAmB,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QAChE,4DAA4D;QAE5D,mBAAc,GAAG,GAAG,CAAC;QACrB,eAAU,GAAG,IAAI,CAAC;QAElB,sBAAiB,GAAG,GAAG,CAAC;QACxB,aAAQ,GAAG,CAAC,CAAC;QAEb,eAAU,GAAY,IAAI,CAAC;QAC3B,eAAU,GAAY,KAAK,CAAC;QAE5B,yBAAyB;QAEzB,sBAAsB;QACtB,eAAU,GAAW,IAAI,CAAC;QAG1B,aAAQ,GAAQ,IAAI,CAAC;QACrB,aAAQ,GAAQ,IAAI,CAAC;QACrB,WAAM,GAAQ,IAAI,CAAC;QAEnB,iBAAiB;QACjB,gBAAW,GAAQ,IAAI,CAAC;QACxB,cAAS,GAAQ,IAAI,CAAC;QACtB,gBAAW,GAAQ,IAAI,CAAC;QAKxB,YAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAEb,YAAO,GAAiB,IAAI,CAAC;QA6QrC,SAAI,GAAG,EAAE,CAAC;QA4HV,WAAM,GAAG,EAAE,CAAC;QA9WV,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAEnD,IAAI,CAAC,OAAO,GAAG,mCAAM,CAAC,IAAI,CAAC,YAAY,EAAE,YAAY,CAAC;YACtD,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE;QAE9C,CAAC,CAAC;QAGF,IAAI,OAAO,CAAC;QACZ,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,IAAI,IAAI,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;QAClC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;QACpD,yBAAyB;QACzB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,QAAQ,GAAG,SAAS,OAAO,EAAE,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;QAC7C,yEAAyE;QACzE,6DAA6D;IAC/D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,4BAA4B;QAC5B,iCAAiC;QACjC,gCAAgC;QAChC,kBAAkB;QAClB,oBAAoB;QACpB,sBAAsB;QACtB,sBAAsB;QACtB,oDAAoD;QACpD,qEAAqE;QACrE,sCAAsC;QACtC,gEAAgE;QAChE,sCAAsC;QACtC,0EAA0E;QAE1E,yDAAyD;QACzD,0CAA0C;QAC1C,6CAA6C;QAC7C,kDAAkD;QAClD,iBAAiB;QACjB,4CAA4C;QAC5C,2CAA2C;QAC3C,8DAA8D;QAC9D,wDAAwD;QACxD,kEAAkE;QAClE,oDAAoD;QACpD,cAAc;QACd,YAAY;QACZ,UAAU;QACV,UAAU;QACV,2DAA2D;QAC3D,gBAAgB;QAChB,kCAAkC;QAClC,8CAA8C;QAC9C,8BAA8B;QAC9B,UAAU;QACV,+BAA+B;QAC/B,gDAAgD;QAChD,qBAAqB;QACrB,6CAA6C;QAC7C,gDAAgD;QAChD,sBAAsB;QACtB,cAAc;QACd,YAAY;QACZ,OAAO;QAEP,eAAe;QACf,QAAQ;QACR,yBAAyB;QACzB,SAAS;QACT,QAAQ;QACR,8BAA8B;QAC9B,yBAAyB;QACzB,SAAS;QACT,QAAQ;QACR,kCAAkC;QAClC,yBAAyB;QACzB,SAAS;QACT,QAAQ;QACR,gCAAgC;QAChC,uBAAuB;QACvB,SAAS;QACT,QAAQ;QACR,gCAAgC;QAChC,8BAA8B;QAC9B,SAAS;QACT,QAAQ;QACR,8BAA8B;QAC9B,4BAA4B;QAC5B,SAAS;QACT,QAAQ;QACR,+BAA+B;QAC/B,8BAA8B;QAC9B,SAAS;QACT,QAAQ;QACR,6BAA6B;QAC7B,0BAA0B;QAC1B,SAAS;QACT,QAAQ;QACR,0BAA0B;QAC1B,uBAAuB;QACvB,SAAS;QACT,OAAO;QACP,mBAAmB;QACnB,KAAK;QACL,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5E,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,6BAA6B,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvE,IAAI,CAAC,SAAS,GAAG,IAAI;QACvB,CAAC,CAAC;QACF,IAAI,CAAC,yBAAyB;aAC3B,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC;aAClC,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,iCAAiC;YACjC,yCAAyC;YACzC,sCAAsC;YACtC,kDAAkD;YAClD,8CAA8C;YAC9C,4BAA4B;YAC5B,kCAAkC;YAClC,MAAM;QACR,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACxD,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACxD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACtD,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YAC7D,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YAC3D,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YAC7D,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;YACzD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC;SACvD,CAAC,CAAC;IACL,CAAC;IAED,iCAAiC;IACjC,cAAc;QACZ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;YAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,QAAQ;YACZ,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,EAAE;gBACzC,QAAQ,GAAG,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;aAClF;iBACI;gBACH,QAAQ,GAAG,IAAI,CAAC,WAAW;aAC5B;YACD,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,QAAQ,GAAG,QAAQ,CAAC;YACxB,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,IAAI,UAAU,GAAG,mCAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAChD,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YACrD,IAAI,CAAC,IAAI;iBACN,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,8BAA8B,GAAG,GAAG,CAAC;iBACpD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACrB,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC,UAAU,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,QAAQ,EAAE,KAAK,CAAC,QAAQ;SACzB,CAAC,CAAC;IACL,CAAC;IAED,oCAAoC;IACpC,QAAQ,CAAC,KAAK;QACZ,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE;YACtB,kDAAI,CAAC,IAAI,CAAC,MAAM,EAAE,0CAA0C,EAAE,MAAM,CAAC,CAAC;YACtE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;gBACtB,QAAQ,EAAE,EAAE;aACb,CAAC,CAAC;SACJ;IACH,CAAC;IAED,oCAAoC;IACpC,UAAU,CAAC,KAAK;QACd,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE;YACtB,kDAAI,CAAC,IAAI,CAAC,MAAM,EAAE,uCAAuC,EAAE,MAAM,CAAC,CAAC;YACnE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;gBACtB,KAAK,EAAE,EAAE;aACV,CAAC,CAAC;SACJ;IACH,CAAC;IAED,yBAAyB;IACzB,gBAAgB,CAAC,MAAM;QACrB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;IACzB,CAAC;IAID,YAAY;QACV,IAAI,OAAO,CAAC;QACZ,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,IAAI,IAAI,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;QAClC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;QACpD,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC;QACtB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,QAAQ,GAAG,SAAS,OAAO,EAAE,CAAC;QAClC,iCAAiC;QACjC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,UAAU,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,wBAAwB;QACxB,IAAI,KAAK,GAAG,mCAAM,CAAC,UAAU,CAAC,CAAC;QAC/B,IAAI,GAAG,GAAG,mCAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QACrC,IAAI,KAAK,GAAG,mCAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACjE,IAAI,QAAQ,GAAG,mCAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,GAAG,QAAQ;QAC5B,IAAI,CAAC,WAAW,GAAG,QAAQ;QAC3B,IAAI,CAAC,WAAW,GAAG,KAAK;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK;QACtB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,YAAY,EAAE,QAAQ;YACtB,UAAU,EAAE,KAAK;SAClB,CAAC,CAAC;IACL,CAAC;IASD,YAAY;QACV,IAAI,CAAC,cAAc,EAAE;QACrB,YAAY;QACZ,IAAI,SAAS;QACb,IAAI,OAAO;QACX,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK;QAC1D,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK;QACxD,IAAI,QAAQ,IAAI,EAAE,IAAI,QAAQ,IAAI,EAAE,EAAE;YACpC,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,EAAE;gBACzC,SAAS,GAAG,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;aACrF;iBACI;gBACH,SAAS,GAAG,IAAI,CAAC,YAAY;aAC9B;YACD,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,EAAE;gBACtC,OAAO,GAAG,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;aACjF;iBACI;gBACH,OAAO,GAAG,IAAI,CAAC,WAAW;aAC3B;YACD,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,6DAA6D;YAC7D,yDAAyD;YACzD,IAAI,OAAO,GAAG,SAAS,CAAC;YAExB,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAEhC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAE/B,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,KAAK,GAAG,OAAO,CAAC;YACpB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACxB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAE/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAE5B,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,CAAC,IAAI;iBACN,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,mCAAmC,GAAG,GAAG,CAAC;iBACzD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,yCAAyC;gBACzC,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,gBAAgB,EAAE;oBAC5C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC;oBAC9B,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,2BAA2B,EAAE,SAAS,CAAC,CAAC;iBAC/D;qBAAM,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,mBAAmB,EAAE;oBAClD,kDAAI,CAAC,IAAI,CAAC;wBACR,IAAI,EAAE,sDAAsD;wBAC5D,IAAI,EAAE,SAAS;wBACf,gBAAgB,EAAE,IAAI;wBACtB,kBAAkB,EAAE,SAAS;wBAC7B,iBAAiB,EAAE,MAAM;wBACzB,iBAAiB,EAAE,oBAAoB;qBACxC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;wBACjB,IAAI,MAAM,CAAC,WAAW,EAAE;4BACtB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC;yBACjC;6BAAM,IAAI,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAAE;4BACvD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;yBAC9B;oBACH,CAAC,CAAC,CAAC;iBACJ;qBACI,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,EAAE;oBAClC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;iBAC9B;YACH,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,aAAa;QACX,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACrD,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QACjD,IACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK;YAC9E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,IAAI,EAAE,EAC1C;YACA,IAAI,QAAQ;YACZ,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,EAAE;gBACzC,QAAQ,GAAG,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;aAClF;iBACI;gBACH,QAAQ,GAAG,IAAI,CAAC,WAAW;aAC5B;YACD,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,QAAQ,GAAG,QAAQ,CAAC;YACxB,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,IAAI,UAAU,GAAG,mCAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAChD,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YACrE,IAAI,CAAC,IAAI;iBACN,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,iCAAiC,GAAG,GAAG,CAAC;iBACvD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;oBAChC,IAAI,MAAM,GAAG;wBACX,KAAK,EAAE,OAAO,CAAC,KAAK;wBACpB,OAAO,EAAE,OAAO,CAAC,OAAO;wBACxB,EAAE,EAAE,OAAO,CAAC,EAAE;wBACd,UAAU,EAAE,OAAO,CAAC,UAAU;wBAC9B,QAAQ,EACN,OAAO,CAAC,QAAQ,IAAI,SAAS,IAAI,OAAO,CAAC,QAAQ,IAAI,IAAI;4BACvD,CAAC,CAAC,EAAE;4BACJ,CAAC,CAAC,OAAO,CAAC,QAAQ;wBACtB,WAAW,EAAE,OAAO,CAAC,WAAW;wBAChC,SAAS,EAAE,OAAO,CAAC,SAAS;qBAC7B,CAAC;oBACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAKD,MAAM;QACJ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACnC,IAAI,IAAI,GAAQ,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC9B,MAAM,UAAU,GAAG;YACjB,YAAY,EAAE,IAAI,CAAC,YAAY,IAAI,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,mCAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;YAClI,UAAU,EAAE,IAAI,CAAC,WAAW,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,mCAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;YACzH,IAAI,EAAE,MAAM,CAAC,EAAE;YACf,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,YAAY,EAAE,OAAO,CAAC,YAAY,IAAI,EAAE,IAAI,OAAO,CAAC,YAAY,IAAI,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,mCAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;YAC3I,aAAa,EAAE,IAAI,CAAC,OAAO;YAC3B,WAAW,EAAE,IAAI,CAAC,KAAK;YACvB,MAAM,EAAE,IAAI,CAAC,QAAQ;YACrB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,UAAU,EAAE,IAAI,CAAC,oBAAoB;SACtC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACvB,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBACpD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,6BAA6B,EAAE,SAAS,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;aACI;YACH,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,0BAA0B,EAAE,SAAS,CAAC,CAAC;SAC9D;IACH,CAAC;IAED;;OAEG;IAEH,gBAAgB,CAAC,IAAS;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,iBAAiB;IACjB,SAAS;QACP,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,UAAU;QACR,0BAA0B;QAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,qBAAqB;IACvB,CAAC;IAED;;;;MAIE;IACF,oCAAoC;IACpC,eAAe,CAAC,IAAS;QACvB,6CAA6C;QAC7C,cAAc;QACd,4BAA4B;QAC5B,qFAAqF;QACrF,qBAAqB;QACrB,4BAA4B;QAC5B,mCAAmC;QACnC,+BAA+B;QAC/B,yCAAyC;QACzC,wBAAwB;QACxB,8BAA8B;QAC9B,iBAAiB;QACjB,oBAAoB;QACpB,uCAAuC;QACvC,kBAAkB;QAClB,QAAQ;QACR,gBAAgB;QAChB,mDAAmD;QACnD,QAAQ;QACR,iBAAiB;QACjB,qBAAqB;QACrB,8BAA8B;QAC9B,gBAAgB;QAChB,QAAQ;QACR,MAAM;QACN,KAAK;IACP,CAAC;IAED,OAAO,CAAC,GAAsB;QAC5B,GAAG,CAAC,IAAI,EAAE;IACZ,CAAC;IACD,WAAW,CAAC,GAAQ;QAClB,oCAAoC;QACpC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAE;SAC3B;aACI;YACH,kDAAI,CAAC,IAAI,CAAC,eAAe,EAAE,+BAA+B,EAAE,OAAO,CAAC,CAAC;YACrE,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC;SAErB;IACH,CAAC;IAED,YAAY,CAAC,GAAQ;QACnB,oCAAoC;QACpC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAE;SAC3B;aACI;YACH,kDAAI,CAAC,IAAI,CAAC,eAAe,EAAE,+BAA+B,EAAE,OAAO,CAAC,CAAC;YACrE,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC;SAErB;IACH,CAAC;IACD,SAAS;QACP,IAAI,CAAC,QAAQ,GAAG,IAAI;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI;IAClB,CAAC;;wGAzjBU,4BAA4B;4GAA5B,4BAA4B;kEAO5B,qEAAkB;;;;;;QChE/B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,+EAAoB;QAAA,4DAAK;QAC7B,wEACI;QAAA,gFAAoB;QAAA,yEAAuB;QAAA,8DAAE;QAAA,4DAAM;QAAA,4EACvD;QAAA,4DAAK;QACT,4DAAM;QACN,8EAEI;QAFkE,yJAAY,YAAQ,IAAC;QAEvF,0EACI;QAAA,0EACI;QAAA,0EAAiC;QAAA,6EAAqB;QAAA,uEAAW;QAAA,0EACpC;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAC5C,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,qFAKI;QALmD,uMAAsB,8OAEpD,gBAAmB,IAFiC,kGAGxC,eAAW,IAH6B;QAKzE,uIACI;QACR,4DAAY;QAChB,4DAAO;QACX,4DAAM;QACV,4DAAM;QACN,0EAAiC;QAAA,6EAAqB;QAAA,uEAAW;QAAA,0EACpC;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAC5C,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,qFAKI;QALkD,uMAAsB,iGAE9D,oBAAgB,SAAE,4BAAwB,IAFoB,8OAG/D,gBAAgB,IAH+C;QAKxE,uIACI;QACR,4DAAY;QAChB,4DAAO;QACX,4DAAM;QACN,2HAGI;QAIR,4DAAM;QAEV,4DAAM;QACN,0EACI;QAAA,0EAAiC;QAAA,6EAA0B;QAAA,8EAAkB;QAAA,0EAChD;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAAA,4DAAM;QAClD,0EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFAQJ;QANiD,sMAAyB,sPAEnD,UAAmB,IAFgC,2HAIlC,EAAE,sBAAsB,EAAE,uBAAwB,EAAE,IAJlB,8FAKxD,kBAAc,IAL0C;QAFtE,4DAQJ;QAAA,4DAAO;QACX,4DAAM;QACN,2HAGI;QAIR,4DAAM;QACN,0EAAiC;QAAA,6EAAwB;QAAA,4EAAgB;QAAA,0EAC5C;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAAA,4DAAM;QAClD,0EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFAOJ;QALQ,oMAAuB,sPACsC,UAAiB,IADvD,2HAGS,EAAE,sBAAsB,EAAE,uBAAwB,EAAE,IAH7D,8FAIb,kBAAc,IAJD;QAF3B,4DAOJ;QAAA,4DAAO;QACX,4DAAM;QACN,2HAGI;QAIR,4DAAM;QACN,0EAAiC;QAAA,6EAA0B;QAAA,wEAAY;QAAA,0EAC1C;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAAA,4DAAM;QAClD,0EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFAQJ;QAN6B,sMAAyB,uPAEF,WAAmB,IAFjB,2HAId,EAAE,sBAAsB,EAAE,uBAAwB,EAAE,IAJtC;QAFlD,4DAQJ;QAAA,4DAAO;QACX,4DAAM;QACN,2HAGI;QAIR,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EAAiC;QAAA,6EAAqB;QAAA,uEAAW;QAAA,0EACpC;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAC5C,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,qFAKI;QAL+C,uMAAsB,+OAGnD,iBAAgB,IAHmC;QAKrE,uIACI;QACR,4DAAY;QAEhB,4DAAO;QACX,4DAAM;QACN,2HAGI;QAIR,4DAAM;QAEN,0EAAiC;QAAA,6EAAmB;QAAA,qEAAS;QAAA,0EAChC;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAC5C,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,qFAKI;QAL6C,qMAAoB,kGAEvD,mBAAe,IAFwC,+OAEtB,iBAAc,IAFQ;QAKjE,uIACI;QACR,4DAAY;QAEhB,4DAAO;QACX,4DAAM;QACN,2HAGI;QAIR,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EAAiC;QAAA,6EAAsB;QAAA,uEAAU;QAAA,2EACpC;QAAA,8DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAAA,4DAAM;QAClD,2EACI;QAAA,4EACI;QAAA,6EACI;QAAA,kFAMJ;QAJQ,2JAAS,uBAAmB,IAAC,mGAAe,4BAAwB,IAAvC,4HACG,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,IADtD,6OAGpB,wBAAmB,IAHC;QAFjC,4DAMJ;QAAA,4DAAO;QACX,4DAAM;QACN,6HAGI;QAIR,4DAAM;QACN,2EAAiC;QAAA,8EAAmB;QAAA,oEAAO;QAAA,2EAAsB;QAAA,8DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAChG,4DAAM;QACN,2EACI;QAAA,4EACI;QAAA,6EACI;QAAA,kFAMJ;QAHQ,2JAAS,4BAAwB,IAAC,mGAAU,wBAAoB,IAA9B,4HACF,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,IADjD,6OAED,0BAAuB,IAFtB;QAHtC,4DAMJ;QAAA,4DAAO;QACX,4DAAM;QACN,6HAGI;QAIR,4DAAM;QACV,4DAAM;QAEN,4EACI;QAAA,+EACa;QAAA,sEAAS;QAAA,4DAAS;QAC/B,mIACuB;QAC3B,4DAAM;QAEV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,4EACI;QAAA,4EACI;QAAA,8EACI;QAAA,0EACI;QAAA,uEACI;QAAA,uEAAI;QAAA,yEAAY;QAAA,4DAAK;QACrB,uEAAI;QAAA,mEAAM;QAAA,4DAAK;QACf,uEAAI;QAAA,+EAAkB;QAAA,4DAAK;QAC3B,uEAAI;QAAA,6EAAgB;QAAA,4DAAK;QACzB,uEAAI;QAAA,yEAAY;QAAA,4DAAK;QACrB,uEAAI;QAAA,uEAAU;QAAA,4DAAK;QACnB,uEAAI;QAAA,4EAAe;QAAA,4DAAK;QACxB,uEAAI;QAAA,yEAAY;QAAA,4DAAK;QACrB,uEAAI;QAAA,mEAAM;QAAA,4DAAK;QACnB,4DAAK;QACT,4DAAQ;QACR,iIACI;QAYJ,iIACI;QAMR,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA3Q2C,2DAAqB;QAArB,kFAAqB;QAUqB,2DAAsB;QAAtB,iFAAsB;QAK9D,0DAAkC;QAAlC,oFAAkC;QAYK,0DAAsB;QAAtB,iFAAsB;QAK7D,0DAA6B;QAA7B,+EAA6B;QAMhD,0DAAyH;QAAzH,+LAAyH;QAiBjH,2DAAmB;QAAnB,gFAAmB;QAS3B,0DAAwI;QAAxI,8MAAwI;QAchI,0DAAuB;QAAvB,kFAAuB;QAQ/B,0DAAkI;QAAlI,wMAAkI;QAcrG,0DAAyB;QAAzB,oFAAyB;QAStD,0DAAwI;QAAxI,8MAAwI;QAejF,2DAAsB;QAAtB,iFAAsB;QAK1D,0DAA6B;QAA7B,+EAA6B;QAOhD,0DAAyH;QAAzH,+LAAyH;QAcpE,0DAAoB;QAApB,+EAAoB;QAKtD,0DAA2B;QAA3B,6EAA2B;QAO9C,0DAAmH;QAAnH,yLAAmH;QAuBnH,2DAA4H;QAA5H,kMAA4H;QAqB5H,2DAAmH;QAAnH,yLAAmH;QAUjE,0DAA4B;QAA5B,yFAA4B;QAGlF,0DAAkB;QAAlB,gFAAkB;QAyBvB,2DAA8B;QAA9B,4HAA8B;QAa9B,0DAA8B;QAA9B,4HAA8B;;6FDjNxC,4BAA4B;cALxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,WAAW,EAAE,uCAAuC;gBACpD,SAAS,EAAE,CAAC,uCAAuC,CAAC;aACrD;;kBAQE,uDAAS;mBAAC,qEAAkB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;;;;;;;;;;;;;AEjElD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACO;AACmC;AACT;AACd;AACkB;AACe;AACQ;AAC5B;AACJ;AACpB;AACvD,4CAA4C;AACU;AACG;AACW;AACY;AACrC;AACgC;AAClB;AACkD;AACuC;;;AA2B3I,MAAM,yBAAyB;;wGAAzB,yBAAyB;4KAAzB,yBAAyB,mBAVzB,CAAC,sFAAiB,EAAE,sGAAsB,EAAE,8GAAyB,EAAE,iFAAe,EAAE,8EAAa,EAAE,yHAAsB,EAAC,gKAA6B;QACpK,wDAAQ,EAAE,yFAA0B,EAAE;YACpC,OAAO,EAAE,uEAAiB;YAC1B,QAAQ,EAAE,kFAAmB;YAC7B,KAAK,EAAE,IAAI;SACZ;KAEF,YArBQ;YACP,4DAAY;YACZ,qGAAgC;YAChC,mEAAgB;YAChB,qEAAS;YACT,gBAAgB;YAChB,oEAAc;YACd,0DAAW;YACX,kEAAmB;YACnB,4EAAkB,CAAC,OAAO,EAAE;YAC5B,0EAAgB,CAAC,OAAO,EAAE;YAC1B,uEAAW;SACZ;mIAYU,yBAAyB,mBAXrB,4FAA4B,aAZzC,4DAAY;QACZ,qGAAgC;QAChC,mEAAgB;QAChB,qEAAS;QACT,gBAAgB;QAChB,oEAAc;QACd,0DAAW;QACX,kEAAmB,4JAGnB,uEAAW;6FAaF,yBAAyB;cAzBrC,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,qGAAgC;oBAChC,mEAAgB;oBAChB,qEAAS;oBACT,gBAAgB;oBAChB,oEAAc;oBACd,0DAAW;oBACX,kEAAmB;oBACnB,4EAAkB,CAAC,OAAO,EAAE;oBAC5B,0EAAgB,CAAC,OAAO,EAAE;oBAC1B,uEAAW;iBACZ;gBACD,YAAY,EAAE,CAAC,4FAA4B,CAAC;gBAC5C,SAAS,EAAE,CAAC,sFAAiB,EAAE,sGAAsB,EAAE,8GAAyB,EAAE,iFAAe,EAAE,8EAAa,EAAE,yHAAsB,EAAC,gKAA6B;oBACpK,wDAAQ,EAAE,yFAA0B,EAAE;wBACpC,OAAO,EAAE,uEAAiB;wBAC1B,QAAQ,EAAE,kFAAmB;wBAC7B,KAAK,EAAE,IAAI;qBACZ;iBAEF;aAEF;;;;;;;;;;;;;;AC/CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACG;AAC7B;AAEgC;AAClB;AACuC;;;AAG/D,MAAM,0BAA0B;IAMnC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,OAAO;QACP,QAAG,GAAG,qEAAW,CAAC,QAAQ,CAAC;IAEa,CAAC;IAEzC,qBAAqB;IACrB,QAAQ,CAAC,IAAS;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,8BAA8B,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EACzF,iEAAU,CAAC,CAAC,KAAK,EAAE,EAAE;YACjB,kDAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;YACxC,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CACL;IACL,CAAC;IACD,kBAAkB;IAClB,WAAW,CAAC,EAAO;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,wBAAwB,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtG,CAAC;IACD,oBAAoB;IACpB,UAAU,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,8BAA8B,EAAE,IAAI,CAAC,CAAC;IAC1E,CAAC;IACD,oBAAoB;IACpB,UAAU,CAAC,EAAO;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,+BAA+B,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAChH,CAAC;;oGA5BQ,0BAA0B;6GAA1B,0BAA0B,WAA1B,0BAA0B;6FAA1B,0BAA0B;cADtC,wDAAU;;;;;;;;;;;;;;ACRX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACG;AAC7B;AAEgC;AAClB;AACsC;;;AAG9D,MAAM,6BAA6B;IAMxC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,OAAO;QACP,0DAA0D;QAC1D,QAAG,GAAG,qEAAW,CAAC,QAAQ,CAAC;IACa,CAAC;IAEzC,qBAAqB;IACrB,QAAQ,CAAC,IAAS;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,kCAAkC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAC/F,iEAAU,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,YAAY,GAAG,yBAAyB,CAAC;YAC7C,kDAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;YACvC,OAAO,uDAAU,CAAC,YAAY,CAAC,CAAC;QAClC,CAAC,CAAC,CACH;IACH,CAAC;IAED,kBAAkB;IAClB,WAAW,CAAC,EAAO;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,4BAA4B,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxG,CAAC;IACD,oBAAoB;IACpB,UAAU,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,kCAAkC,EAAE,IAAI,CAAC,CAAC;IAC5E,CAAC;IACD,oBAAoB;IACpB,UAAU,CAAC,EAAO;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,mCAAmC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAClH,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,4BAA4B,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACnG,CAAC;;0GAlCU,6BAA6B;gHAA7B,6BAA6B,WAA7B,6BAA6B;6FAA7B,6BAA6B;cADzC,wDAAU","file":"dividend-calculation-dividend-calculation-module.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class BranchService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: 'branch1' },\r\n        { value: '1', label: 'branch2' },\r\n        { value: '2', label: 'branch1' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(BranchService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(BranchService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(BranchService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class SchemeCodeService {\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '40100', label: '40100' },\r\n        { value: '40200', label: '40200' },\r\n        { value: '40300', label: '40300' },\r\n        { value: '40400', label: '40400' },\r\n        \r\n    ];\r\n\r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(SchemeCodeService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(SchemeCodeService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(SchemeCodeService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { DividendCalculationComponent } from './dividend-calculation.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DividendCalculationComponent,\r\n    data: {\r\n      title: 'Dividend Calculation',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DividendCalculationRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { IOption } from \"ng-select\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { SchemeCodeService } from \"../../../../shared/elements/scheme-code.service\";\r\nimport { SchemeCodeDropdownService } from \"../../../../shared/dropdownService/scheme-code-dropdown.service\";\r\n// import { MembernoService } from '../../../../shared/elements/memberno.service';\r\nimport { BranchService } from \"../../../../shared/elements/branch.service\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from \"@angular/forms\";\r\nimport { SchemeAccountNoService } from \"src/app/shared/dropdownService/schemeAccountNo.service\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { NgSelectComponent, NgSelectConfig } from \"@ng-select/ng-select\";\r\nimport * as moment from \"moment\";\r\nimport { environment } from \"src/environments/environment\";\r\n// Angular Datatable Directive\r\nimport { DataTableDirective } from \"angular-datatables\";\r\nimport { data } from \"jquery\";\r\nimport { Subject } from \"rxjs-compat\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n//date pipe\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { DividendCalculationService } from \"./dividend-calculation.service\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { throwError } from \"rxjs\";\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SystemMasterParametersService } from \"src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\r\n\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface DividendCalculation {\r\n  id: number;\r\n  AC_TYPE: string;\r\n  FROM_AC: string;\r\n  TO_AC: string;\r\n  DIV_FROMDATE: Date;\r\n  DIV_TODATE: Date;\r\n  WARRENT_DATE: Date;\r\n  Dividend: number;\r\n  Bonus: number;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-dividend-calculation\",\r\n  templateUrl: \"./dividend-calculation.component.html\",\r\n  styleUrls: [\"./dividend-calculation.component.scss\"],\r\n})\r\nexport class DividendCalculationComponent implements OnInit {\r\n  //api\r\n  url = environment.base_url;\r\n  formSubmitted = false;\r\n  angForm: FormGroup;\r\n\r\n  dividendcalculation: DividendCalculation[];\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  dtExportButtonOptions: any = {};\r\n\r\n  // a: Array<IOption> = this.SchemeCodeService.getCharacters();\r\n  WarrantDate: Array<IOption> = this.SchemeCodeService.getCharacters();\r\n  BranchCode: Array<IOption> = this.BranchService.getCharacters();\r\n  // b: Array<IOption> = this.MembernoService.getCharacters();\r\n\r\n  selectedOption = \"3\";\r\n  isDisabled = true;\r\n  characters: Array<IOption>;\r\n  selectedCharacter = \"3\";\r\n  timeLeft = 5;\r\n\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n\r\n  // dropdown ngmodel names\r\n\r\n  //Scheme type variable\r\n  schemeType: string = \"SH\";\r\n  shareSchemeType;\r\n  scheme: any[];\r\n  ngscheme: any = null;\r\n  ngfromac: any = null;\r\n  ngtoac: any = null;\r\n\r\n  // date variables\r\n  divfromdate: any = null;\r\n  divtodate: any = null;\r\n  warrentdate: any = null;\r\n  maxDate: any;\r\n  minDate: Date;\r\n  fromdate: Date;\r\n  todate: Date\r\n  bsValue = new Date();\r\n\r\n  private dataSub: Subscription = null;\r\n  fromAC;\r\n  ToAC;\r\n  getschemename: any;\r\n  filterData: any;\r\n  page: number;\r\n\r\n  INT_ROUND_OFF;\r\n  shareDividend;\r\n  divMethod;\r\n  isAddBonusInDividend;\r\n  branch_code\r\n  ngBranch\r\n  tablelist\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public SchemeCodeService: SchemeCodeService,\r\n    public BranchService: BranchService,\r\n    private http: HttpClient,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private _service: DividendCalculationService,\r\n    // public MembernoService: MembernoService,\r\n    private datePipe: DatePipe,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private systemParameter: SystemMasterParametersService,\r\n  ) {\r\n    this.systemParameter.getFormData(1).subscribe(data => {\r\n\r\n      this.maxDate = moment(data.CURRENT_DATE, 'DD/MM/YYYY')\r\n      this.maxDate, this.minDate = this.maxDate._d\r\n\r\n    })\r\n\r\n\r\n    let finYear;\r\n    var sysDate = new Date();\r\n    var year = sysDate.getFullYear();\r\n    var month = new Date().getMonth();\r\n    month > 2 ? (finYear = year) : (finYear = year - 1);\r\n    // finYear = finYear - 1;\r\n    var full = [];\r\n    var fullDate = `03/31/${finYear}`;\r\n    this.fromdate = new Date(fullDate)\r\n    this.fromdate.setDate(this.fromdate.getDate());\r\n    this.todate = new Date(fullDate)\r\n    this.todate.setDate(this.fromdate.getDate());\r\n    // this.fromdate = moment(this.divfromdate).subtract(1, \"year\").toDate();\r\n    // const todate = moment(this.divtodate).subtract(1, \"year\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    // this.dtExportButtonOptions = {\r\n    //   pagingType: \"full_numbers\",\r\n    //   paging: true,\r\n    //   pageLength: 10,\r\n    //   serverSide: true,\r\n    //   processing: true,\r\n    //   ajax: (dataTableParameters: any, callback) => {\r\n    //     dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n    //     dataTableParameters.maxNumber =\r\n    //       dataTableParameters.start + dataTableParameters.length;\r\n    //     let datatableRequestParam: any;\r\n    //     this.page = dataTableParameters.start / dataTableParameters.length;\r\n\r\n    //     dataTableParameters.columns.forEach((element) => {\r\n    //       if (element.search.value != \"\") {\r\n    //         let string = element.search.value;\r\n    //         this.filterData[element.data] = string;\r\n    //       } else {\r\n    //         let getColumnName = element.data;\r\n    //         let columnValue = element.value;\r\n    //         if (this.filterData.hasOwnProperty(element.data)) {\r\n    //           let value = this.filterData[getColumnName];\r\n    //           if (columnValue != undefined || value != undefined) {\r\n    //             delete this.filterData[element.data];\r\n    //           }\r\n    //         }\r\n    //       }\r\n    //     });\r\n    //     dataTableParameters[\"filterData\"] = this.filterData;\r\n    //     this.http\r\n    //       .post<DataTableResponse>(\r\n    //         this.url + \"/dividend-calculation\",\r\n    //         dataTableParameters\r\n    //       )\r\n    //       .subscribe((resp) => {\r\n    //         this.dividendcalculation = resp.data;\r\n    //         callback({\r\n    //           recordsTotal: resp.recordsTotal,\r\n    //           recordsFiltered: resp.recordsTotal,\r\n    //           data: [],\r\n    //         });\r\n    //       });\r\n    //   },\r\n\r\n    //   columns: [\r\n    //     {\r\n    //       title: \"Action\",\r\n    //     },\r\n    //     {\r\n    //       title: \"Scheme Code\",\r\n    //       data: \"AC_TYPE\",\r\n    //     },\r\n    //     {\r\n    //       title: \"Membership From\",\r\n    //       data: \"FROM_AC\",\r\n    //     },\r\n    //     {\r\n    //       title: \"Membership To\",\r\n    //       data: \"TO_AC\",\r\n    //     },\r\n    //     {\r\n    //       title: \"Div.Date From\",\r\n    //       data: \"DIV_FROMDATE\",\r\n    //     },\r\n    //     {\r\n    //       title: \"Div.Date To\",\r\n    //       data: \"DIV_TODATE\",\r\n    //     },\r\n    //     {\r\n    //       title: \"Warrent Date\",\r\n    //       data: \"WARRENT_DATE\",\r\n    //     },\r\n    //     {\r\n    //       title: \"Dividend %\",\r\n    //       data: \"Dividend\",\r\n    //     },\r\n    //     {\r\n    //       title: \"Bonus %\",\r\n    //       data: \"Bonus\",\r\n    //     },\r\n    //   ],\r\n    //   dom: \"Bfrtip\",\r\n    // };\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n    })\r\n    this.http.get(this.url + '/dividend-calculation/table').subscribe(data => {\r\n      this.tablelist = data\r\n    })\r\n    this.schemeCodeDropdownService\r\n      .getSchemeCodeList(this.schemeType)\r\n      .pipe(first())\r\n      .subscribe((data) => {\r\n        this.scheme = data;\r\n        // this.ngscheme = data[0].value;\r\n        // this.shareDividend = data[0].dividend;\r\n        // this.divMethod = data[0].divMethod;\r\n        // this.isAddBonusInDividend = data[0].isAddBonus;\r\n        // this.INT_ROUND_OFF = data[0].INT_ROUND_OFF;\r\n        // this.angForm.patchValue({\r\n        //   Dividend: this.shareDividend,\r\n        // });\r\n      });\r\n    this.getDivTOYear();\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      BRANCH_CODE: [\"\", [Validators.required]],\r\n      AC_TYPE: [\"\", [Validators.required, Validators.pattern]],\r\n      FROM_AC: [\"\", [Validators.required, Validators.pattern]],\r\n      TO_AC: [\"\", [Validators.required, Validators.pattern]],\r\n      DIV_FROMDATE: [\"\", [Validators.required, Validators.pattern]],\r\n      DIV_TODATE: [\"\", [Validators.required, Validators.pattern]],\r\n      WARRENT_DATE: [\"\", [Validators.required, Validators.pattern]],\r\n      Dividend: [\"\", [Validators.required, Validators.pattern]],\r\n      Bonus: [\"\", [Validators.required, Validators.pattern]],\r\n    });\r\n  }\r\n\r\n  //get account no according scheme\r\n  getAccountList() {\r\n    if (this.ngBranch != null && this.ngscheme != null) {\r\n      this.ngfromac = null;\r\n      this.ngtoac = null;\r\n      let trandate\r\n      if (this.formFromDate != this.divfromdate) {\r\n        trandate = moment(this.angForm.controls[\"DIV_TODATE\"].value).format('DD/MM/YYYY')\r\n      }\r\n      else {\r\n        trandate = this.formEndDate\r\n      }\r\n      var full = [];\r\n      var fullDate = trandate;\r\n      full = fullDate.split(\" \");\r\n      var date = full[0].split(/\\//);\r\n      var newDate = date[1] + \"/\" + date[0] + \"/\" + date[2];\r\n      var k = new Date(newDate);\r\n      var expiryDate = moment(k).format(\"DD.MM.YYYY\");\r\n      let obj = [this.ngscheme, this.ngBranch, expiryDate];\r\n      this.http\r\n        .get(this.url + \"/dividend-calculation/check/\" + obj)\r\n        .subscribe((data) => {\r\n          this.ToAC = data;\r\n          this.fromAC = data;\r\n        });\r\n    }\r\n  }\r\n\r\n  getShareDividend(event) {\r\n    this.shareDividend = event.dividend;\r\n    this.divMethod = event.divMethod;\r\n    this.isAddBonusInDividend = event.isAddBonus;\r\n    this.INT_ROUND_OFF = event.INT_ROUND_OFF;\r\n    this.angForm.patchValue({\r\n      Dividend: event.dividend,\r\n    });\r\n  }\r\n\r\n  //checks percentage of interest rate\r\n  checkInt(event) {\r\n    if (Number(event) > 25) {\r\n      Swal.fire(\"Info\", \"Please Input Dividend Percentage upto 25\", \"info\");\r\n      this.angForm.patchValue({\r\n        Dividend: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  //checks percentage of interest rate\r\n  checkBonus(event) {\r\n    if (Number(event) > 99) {\r\n      Swal.fire(\"Info\", \"Please Input Bonus Percentage upto 99\", \"info\");\r\n      this.angForm.patchValue({\r\n        Bonus: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  //select content of field\r\n  selectAllContent($event) {\r\n    $event.target.select();\r\n  }\r\n\r\n  formFromDate\r\n  formEndDate\r\n  getDivTOYear() {\r\n    let finYear;\r\n    var sysDate = new Date();\r\n    var year = sysDate.getFullYear();\r\n    var month = new Date().getMonth();\r\n    month > 2 ? (finYear = year) : (finYear = year - 1);\r\n    finYear = finYear - 1;\r\n    var full = [];\r\n    var fullDate = `01/04/${finYear}`;\r\n    // let divYear=new Date(fullDate)\r\n    full = fullDate.split(\" \");\r\n    var date = full[0].split(/\\//);\r\n    var newDate = date[1] + \"/\" + date[0] + \"/\" + date[2];\r\n    var formatDate = new Date(newDate);\r\n    // starting and end date\r\n    let start = moment(formatDate);\r\n    let end = moment(start).add(12, \"M\");\r\n    var endDT = moment(end).subtract(1, \"days\").format(\"DD/MM/YYYY\");\r\n    let starting = moment(start).format(\"DD/MM/YYYY\");\r\n    this.formFromDate = starting\r\n    this.divfromdate = starting\r\n    this.formEndDate = endDT\r\n    this.divtodate = endDT\r\n    this.angForm.patchValue({\r\n      DIV_FROMDATE: starting,\r\n      DIV_TODATE: endDT,\r\n    });\r\n  }\r\n\r\n  send = {};\r\n  endYr;\r\n  startYr;\r\n  DIV_FROM_MONTH;\r\n  DIV_TO_MONTH;\r\n\r\n\r\n  checkDivYear() {\r\n    this.getAccountList()\r\n    //Date range\r\n    let startDate\r\n    let endDate\r\n    let divdatef = this.angForm.controls[\"DIV_FROMDATE\"].value\r\n    let divdatet = this.angForm.controls[\"DIV_TODATE\"].value\r\n    if (divdatef != '' && divdatet != '') {\r\n      if (this.formFromDate != this.divfromdate) {\r\n        startDate = moment(this.angForm.controls[\"DIV_FROMDATE\"].value).format('DD/MM/YYYY')\r\n      }\r\n      else {\r\n        startDate = this.formFromDate\r\n      }\r\n      if (this.formEndDate != this.divtodate) {\r\n        endDate = moment(this.angForm.controls[\"DIV_TODATE\"].value).format('DD/MM/YYYY')\r\n      }\r\n      else {\r\n        endDate = this.formEndDate\r\n      }\r\n      var full = [];\r\n      // startDate = moment(this.divfromdate).format(\"DD/MM/YYYY\");\r\n      // endDate = moment(this.divtodate).format(\"DD/MM/YYYY\");\r\n      var startDT = startDate;\r\n\r\n      full = startDT.split(\" \");\r\n      var sdate = full[0].split(/\\//);\r\n\r\n      this.startYr = sdate[2];\r\n      this.DIV_FROM_MONTH = sdate[1];\r\n\r\n      var full = [];\r\n      var endDT = endDate;\r\n      full = endDT.split(\" \");\r\n      var date = full[0].split(/\\//);\r\n\r\n      this.endYr = date[2];\r\n      this.DIV_TO_MONTH = date[1];\r\n\r\n      let obj = [this.startYr, this.endYr];\r\n      this.http\r\n        .get(this.url + \"/dividend-calculation/divYrcheck/\" + obj)\r\n        .subscribe((data) => {\r\n          // data[\"divCheck\"] = \"Already Processed\"\r\n          if (data[\"historyCheck\"] == \"Already Posted\") {\r\n            this.send[\"Flag\"] = \"history\";\r\n            Swal.fire(\"Warning!\", \"Dividend Already Posted !\", \"warning\");\r\n          } else if (data[\"divCheck\"] == \"Already Processed\") {\r\n            Swal.fire({\r\n              text: \"Dividend Already Processed.Do You Want To Overwrite?\",\r\n              icon: \"warning\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#229954\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"Yes, Overwrite it!\",\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                this.send[\"Flag\"] = \"Overwrite\";\r\n              } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n                this.send[\"Flag\"] = \"Insert\";\r\n              }\r\n            });\r\n          }\r\n          else if (data[\"divCheck\"] == \"new\") {\r\n            this.send[\"Flag\"] = \"Insert\";\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  getAccNumbers() {\r\n    this.arrTable = [];\r\n    this.divArr = [];\r\n    var memFrom = this.angForm.controls[\"FROM_AC\"].value;\r\n    var memTo = this.angForm.controls[\"TO_AC\"].value;\r\n    if (\r\n      this.angForm.controls[\"FROM_AC\"].value <= this.angForm.controls[\"TO_AC\"].value &&\r\n      this.angForm.controls[\"TO_AC\"].value != \"\"\r\n    ) {\r\n      let trandate\r\n      if (this.formFromDate != this.divfromdate) {\r\n        trandate = moment(this.angForm.controls[\"DIV_TODATE\"].value).format('DD/MM/YYYY')\r\n      }\r\n      else {\r\n        trandate = this.formEndDate\r\n      }\r\n      var full = [];\r\n      var fullDate = trandate;\r\n      full = fullDate.split(\" \");\r\n      var date = full[0].split(/\\//);\r\n      var newDate = date[1] + \"/\" + date[0] + \"/\" + date[2];\r\n      var k = new Date(newDate);\r\n      var expiryDate = moment(k).format(\"DD.MM.YYYY\");\r\n      let mem = [memFrom, memTo, this.ngscheme, this.ngBranch, expiryDate];\r\n      this.http\r\n        .get(this.url + \"/dividend-calculation/accounts/\" + mem)\r\n        .subscribe((data) => {\r\n          this.arrTable = data;\r\n          this.arrTable.forEach((element) => {\r\n            var object = {\r\n              AC_NO: element.AC_NO,\r\n              AC_NAME: element.AC_NAME,\r\n              id: element.id,\r\n              AC_CLOSEDT: element.AC_CLOSEDT,\r\n              BANKACNO:\r\n                element.BANKACNO == undefined || element.BANKACNO == null\r\n                  ? \"\"\r\n                  : element.BANKACNO,\r\n              BRANCH_CODE: element.BRANCH_CODE,\r\n              AC_OPDATE: element.AC_OPDATE\r\n            };\r\n            this.divArr.push(object);\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  divArr = [];\r\n  arrTable;\r\n\r\n  submit() {\r\n    const formVal = this.angForm.value;\r\n    let data: any = localStorage.getItem(\"user\");\r\n    let result = JSON.parse(data);\r\n    const dataToSend = {\r\n      DIV_FROMDATE: this.formFromDate == formVal.DIV_FROMDATE ? formVal.DIV_FROMDATE : moment(formVal.DIV_FROMDATE).format('DD/MM/YYYY'),\r\n      DIV_TODATE: this.formEndDate == formVal.DIV_TODATE ? formVal.DIV_TODATE : moment(formVal.DIV_TODATE).format('DD/MM/YYYY'),\r\n      USER: result.id,\r\n      divMethod: this.divMethod,\r\n      Dividend: formVal.Dividend,\r\n      Bonus: formVal.Bonus,\r\n      WARRENT_DATE: formVal.WARRENT_DATE == \"\" || formVal.WARRENT_DATE == \"Invalid date\" ? \"\" : moment(formVal.WARRENT_DATE).format(\"DD/MM/YYYY\"),\r\n      DIV_FROM_YEAR: this.startYr,\r\n      DIV_TO_YEAR: this.endYr,\r\n      ACTYPE: this.ngscheme,\r\n      DIV_FROM_MONTH: this.DIV_FROM_MONTH,\r\n      DIV_TO_MONTH: this.DIV_TO_MONTH,\r\n      divArr: this.divArr,\r\n      send: this.send,\r\n      isAddBonus: this.isAddBonusInDividend,\r\n    };\r\n    console.log(dataToSend)\r\n    if (this.send != 'history') {\r\n      this._service.postData(dataToSend).subscribe((data) => {\r\n        this.formSubmitted = false;\r\n        Swal.fire(\"Success!\", \"Data Updated Successfully !\", \"success\");\r\n      });\r\n      this.arrTable = [];\r\n      this.divArr = [];\r\n      this.resetForm();\r\n    }\r\n    else {\r\n      Swal.fire(\"Warning!\", \"Dividend Already Posted!\", \"warning\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @editClickHandler function for edit button clicked\r\n   */\r\n\r\n  editClickHandler(info: any): void {\r\n    this.updateShow = true;\r\n  }\r\n\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n    this.ngscheme = null;\r\n    this.ngfromac = null;\r\n    this.ngtoac = null;\r\n  }\r\n\r\n  /**\r\n   * @updateData function for update data\r\n   */\r\n  updateData() {\r\n    // this.showButton = true;\r\n    this.updateShow = false;\r\n    // this.form.reset();\r\n  }\r\n\r\n  /**\r\n  * @delClickHandler function for delete button \r\n    @Swal sweetalert2\r\n    @Swal.fire open a modal window to display message\r\n  */\r\n  //function for delete button clicked\r\n  delClickHandler(info: any): void {\r\n    // this.message.SchemeCode = info.SchemeCode;\r\n    // Swal.fire({\r\n    //   title: 'Are you sure?',\r\n    //   text: \"Do you want to delete Scheme Code.\" + this.message.SchemeCode + \"  data\",\r\n    //   icon: 'warning',\r\n    //   showCancelButton: true,\r\n    //   confirmButtonColor: '#229954',\r\n    //   cancelButtonColor: '#d33',\r\n    //   confirmButtonText: 'Yes, delete it!'\r\n    // }).then((result) => {\r\n    //   if (result.isConfirmed) {\r\n    //     Swal.fire(\r\n    //       'Deleted!',\r\n    //       'Your data has been deleted.',\r\n    //       'success'\r\n    //     )\r\n    //   } else if (\r\n    //     result.dismiss === Swal.DismissReason.cancel\r\n    //   ) {\r\n    //     Swal.fire(\r\n    //       'Cancelled',\r\n    //       'Your data is safe.',\r\n    //       'error'\r\n    //     )\r\n    //   }\r\n    // })\r\n  }\r\n\r\n  onFocus(ele: NgSelectComponent) {\r\n    ele.open()\r\n  }\r\n  checkmargin(ele: any) {\r\n    //check  if given value  is below 25\r\n    if (ele.target.value <= 25) {\r\n    }\r\n    else {\r\n      Swal.fire(\"Invalid Input\", \"Please Insert Values Below 25\", \"error\");\r\n      ele.target.value = 0\r\n\r\n    }\r\n  }\r\n\r\n  checkmarginb(ele: any) {\r\n    //check  if given value  is below 99\r\n    if (ele.target.value <= 99) {\r\n    }\r\n    else {\r\n      Swal.fire(\"Invalid Input\", \"Please Insert Values Below 99\", \"error\");\r\n      ele.target.value = 0\r\n\r\n    }\r\n  }\r\n  getBranch() {\r\n    this.ngfromac = null\r\n    this.ngtoac = null\r\n    this.ngscheme = null\r\n    this.fromAC = null\r\n    this.ToAC = null\r\n  }\r\n}\r\n","<!-- Dividend Calculation -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Dividend Calculation</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" appSubmit [formGroup]=\"angForm\" novalidate (ngSubmit)=\"submit()\"\r\n                #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Branch Code<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select appTheme id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranch\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        #branchcode (focus)=\"onFocus(branchcode)\" [selectOnTab]='true'\r\n                                        [virtualScroll]=\"true\" (change)=\"getBranch()\" autofocus\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Code<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select appTheme id=\"SchemeCode\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" [virtualScroll]=\"true\"\r\n                                        (change)=\"getAccountList(); getShareDividend($event)\" #AC_TYPE\r\n                                        (focus)=\"onFocus(AC_TYPE)\" [selectOnTab]='true' title=\"Compulsory Selection\"\r\n                                        required placeholder=\"Scheme Code\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"DIV_FROMDATE\">Dividend Date From<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input appTheme appButton minlength=\"10\" maxlength=\"10\" type=\"text\"\r\n                                        placeholder=\"dd/mm/yyyy\" name=\"DIV_FROMDATE\" id=\"DIV_FROMDATE\"\r\n                                        [bsValue]=\"bsValue\" class=\"form-control\" [(ngModel)]=\"divfromdate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" #DIV_FROMDATE=\"bsDatepicker\"\r\n                                        (keydown.Tab)=\"DIV_FROMDATE.hide()\" [maxDate]=\"fromdate\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"DIV_FROMDATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        (change)=\"checkDivYear()\" bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['DIV_FROMDATE'].invalid && (angForm.controls['DIV_FROMDATE'].dirty || angForm.controls['DIV_FROMDATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['DIV_FROMDATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"DIV_TODATE\">Dividend Date To<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input appTheme appButton minlength=\"10\" maxlength=\"10\" type=\"text\"\r\n                                        placeholder=\"dd/mm/yyyy\" name=\"DIV_TODATE\" id=\"DIV_TODATE\" class=\"form-control\"\r\n                                        [(ngModel)]=\"divtodate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                        [maxDate]=\"todate\" #DIV_TODATE=\"bsDatepicker\" (keydown.Tab)=\"DIV_TODATE.hide()\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"DIV_TODATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        (change)=\"checkDivYear()\" bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['DIV_TODATE'].invalid && (angForm.controls['DIV_TODATE'].dirty || angForm.controls['DIV_TODATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['DIV_TODATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"WARRENT_DATE\">Warrent Date<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input appTheme appButton minlength=\"10\" maxlength=\"10\" type=\"text\"\r\n                                        placeholder=\"dd/mm/yyyy\" name=\"WARRENT_DATE\" id=\"WARRENT_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"warrentdate\" placement=\"left\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"minDate\"\r\n                                        #WARRENT_DATE=\"bsDatepicker\" (keydown.Tab)=\"WARRENT_DATE.hide()\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"WARRENT_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['WARRENT_DATE'].invalid && (angForm.controls['WARRENT_DATE'].dirty || angForm.controls['WARRENT_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['WARRENT_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_AC\">Member From<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select appTheme id=\"FROM_AC\" bindValue=\"AC_NO\" [(ngModel)]=\"ngfromac\"\r\n                                        formControlName=\"FROM_AC\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required [virtualScroll]=\"true\"\r\n                                        #FROM_AC (focus)=\"onFocus(FROM_AC)\" [selectOnTab]='true'\r\n                                        placeholder=\"From Account\">\r\n                                        <ng-option *ngFor=\"let values of fromAC\" [value]=\"values\">\r\n                                            {{values.AC_NO}} {{values.AC_NAME}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['FROM_AC'].invalid && (angForm.controls['FROM_AC'].dirty || angForm.controls['FROM_AC'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['FROM_AC'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_AC\">Member To<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select appTheme id=\"TO_AC\" bindValue=\"AC_NO\" [(ngModel)]=\"ngtoac\"\r\n                                        formControlName=\"TO_AC\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        (change)=\"getAccNumbers()\" #TO_AC (focus)=\"onFocus(TO_AC)\" [selectOnTab]='true'\r\n                                        [virtualScroll]=\"true\" [ngClass]=\"{'form-submitted': formSubmitted}\" required\r\n                                        placeholder=\"To Account\">\r\n                                        <ng-option *ngFor=\"let values of ToAC\" [value]=\"values\">\r\n                                            {{values.AC_NO}} {{values.AC_NAME}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['TO_AC'].invalid && (angForm.controls['TO_AC'].dirty || angForm.controls['TO_AC'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TO_AC'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"Dividend\">Dividend %<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input appTheme type=\"text\" name=\"Dividend\" style=\"text-align: right;\"\r\n                                        class=\"form-control\" placeholder=\" \" id=\"Dividend\" required=\"\" value=\" \"\r\n                                        (keyup)=\"checkmargin($event)\" #INT (focus)=\"selectAllContent($event)\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\r\n                                        title=\"Input allowed only 0-9\" formControlName=\"Dividend\"\r\n                                        (keyup)=\"checkInt(INT.value)\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Dividend'].invalid && (angForm.controls['Dividend'].dirty || angForm.controls['Dividend'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['Dividend'].errors?.required\">\r\n                                    This field is required and input allowed only . 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"Bonus\">Bonus %<sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input appTheme type=\"text\" name=\"Bonus\" style=\"text-align: right;\"\r\n                                        class=\"form-control\" placeholder=\" \" id=\"Bonus\" value=\" \"\r\n                                        pattern=\"\\d{1,5}(\\.\\d{2})?\" title=\"Input allowed only 0-9\" #Bonus\r\n                                        (focus)=\"selectAllContent($event)\" (keyup)=\"checkmarginb($event)\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46)\"\r\n                                        formControlName=\"Bonus\" (keyup)=\"checkBonus(Bonus.value)\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Bonus'].invalid && (angForm.controls['Bonus'].dirty || angForm.controls['Bonus'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['Bonus'].errors?.required\">\r\n                                    This field is required and input allowed only . 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm\">\r\n                        <button class=\"btn btn-outline-primary btn-sm btn-submit\" [disabled]=\"angForm.invalid\"\r\n                            appTheme>Calculate</button>\r\n                        <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\"\r\n                            *ngIf=\"updateShow\">Update</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm\">\r\n        <div class=\"table-responsive fixTableHead\">\r\n            <table class=\"table table-striped table-bordered table-hover compact\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>Warrent Date</td>\r\n                        <td>Scheme</td>\r\n                        <td>Dividend From Year</td>\r\n                        <td>Dividend To Year</td>\r\n                        <td>From Account</td>\r\n                        <td>To Account</td>\r\n                        <td>Dividend Amount</td>\r\n                        <td>Bouns Amount</td>\r\n                        <td>Status</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"tablelist?.length != 0\">\r\n                    <tr *ngFor=\"let data of tablelist\">\r\n                        <td>{{data.WARRENT_DATE}}</td>\r\n                        <td>{{data.S_APPL}}</td>\r\n                        <td>{{data.DIV_FROM_YEAR}}</td>\r\n                        <td>{{data.DIV_TO_YEAR}}</td>\r\n                        <td>{{data.FROM_AC_NO}}</td>\r\n                        <td>{{data.TO_AC_NO}}</td>\r\n                        <td>{{data.DIVIDEND_AMOUNT}}</td>\r\n                        <td>{{data.BONUS_AMOUNT}}</td>\r\n                        <td>{{data.DIVIDEND_STATUS=='0'? 'UP':'PS'}}</td>\r\n                    </tr>\r\n                </tbody>\r\n                <tbody *ngIf=\"tablelist?.length == 0\">\r\n                    <tr>\r\n                        <td colspan=\"12\" class=\"no-data-available\" style=\"text-align: center;\">\r\n                            No data!\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card shadow\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"informationtable\" datatable [dtOptions]=\"dtExportButtonOptions\"\r\n                                [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover compact\">\r\n                                <tbody *ngIf=\"dividendcalculation?.length != 0\">\r\n                                    <tr *ngFor=\"let data of dividendcalculation\">\r\n                                        <td>\r\n                                            <span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\"\r\n                                                (click)=\"editClickHandler(data.id)\" placement=\"bottom\"\r\n                                                ngbTooltip=\"Edit\"></span>\r\n                                            &nbsp;\r\n\r\n                                        </td>\r\n                                        <td>{{ data.AC_TYPE }}</td>\r\n                                        <td>{{ data.FROM_AC }}</td>\r\n                                        <td>{{ data.TO_AC }}</td>\r\n                                        <td>{{ data.DIV_FROMDATE }}</td>\r\n                                        <td>{{ data.DIV_TODATE }}</td>\r\n                                        <td>{{ data.WARRENT_DATE }}</td>\r\n                                        <td>{{ data.Dividend }}</td>\r\n                                        <td>{{ data.Bonus }}</td>\r\n\r\n\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"dividendcalculation?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot #filters class=\"filters\">\r\n                                    <tr class=\"testing\">\r\n                                        <th class=\"testing\"></th>\r\n\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_TYPE\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"FROM_AC\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"TO_AC\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"DIV_FROMDATE\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"DIV_TODATE\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"WARRENT_DATE\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"Dividend\" /></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"Bonus\" /></th>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { DividendCalculationRoutingModule } from './dividend-calculation-routing.module';\r\nimport { DividendCalculationComponent } from './dividend-calculation.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SchemeCodeService } from '../../../../shared/elements/scheme-code.service';\r\nimport { SchemeAccountNoService } from '../../../../shared/dropdownService/schemeAccountNo.service'\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service'\r\nimport { MembernoService } from '../../../../shared/elements/memberno.service';\r\nimport { BranchService } from '../../../../shared/elements/branch.service';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n// import { SelectModule } from 'ng-select';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DividendCalculationService } from './dividend-calculation.service'\r\nimport { ThemeModule } from 'src/app/theme/theme.module';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SystemMasterParametersService } from \"src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DividendCalculationRoutingModule,\r\n    DataTablesModule,\r\n    NgbModule,\r\n    // SelectModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    ThemeModule\r\n  ],\r\n  declarations: [DividendCalculationComponent],\r\n  providers: [SchemeCodeService, SchemeAccountNoService, SchemeCodeDropdownService, MembernoService, BranchService, OwnbranchMasterService,SystemMasterParametersService,\r\n    DatePipe, DividendCalculationService, {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UserAuthInterceptor,\r\n      multi: true\r\n    },\r\n\r\n  ]\r\n\r\n})\r\nexport class DividendCalculationModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class DividendCalculationService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/dividend-calculation/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data !');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/dividend-calculation/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/dividend-calculation/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/dividend-calculation/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class SystemMasterParametersService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  // url = \"http://localhost:4000/system-master-parameters\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        let errorMessage = 'Please add valid length';\r\n        Swal.fire('Kindly Add Valid Length !');\r\n        return throwError(errorMessage);\r\n      })\r\n    )\r\n  }\r\n\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/system-master-parameters/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getData(): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}