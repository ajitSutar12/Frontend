{"version":3,"sources":["./src/app/shared/dropdownService/customer-id-master-dropdown.service.ts","./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/transaction/cash-recovery-transaction/cash-recovery-transaction-routing.module.ts","./src/app/theme/transaction/cash-recovery-transaction/cash-recovery-transaction.component.ts","./src/app/theme/transaction/cash-recovery-transaction/cash-recovery-transaction.component.html","./src/app/theme/transaction/cash-recovery-transaction/cash-recovery-transaction.module.ts"],"names":[],"mappings":"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","file":"cash-recovery-transaction-cash-recovery-transaction-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class CustomerIDMasterDropdownService {\r\n    loadCharacters() {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n\r\n    url = environment.base_url;\r\n    customerIDMasterObject = new Array();\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getCustomerIDMasterList() {\r\n        this.customerIDMasterObject = [];\r\n        return this.http.get<any>(this.url + '/customer-id')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\r\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME, value: element.id, name: element.AC_NO };\r\n                    this.customerIDMasterObject.push(obj)\r\n                });\r\n                return this.customerIDMasterObject;\r\n            }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {CashRecoveryTransactionComponent} from './cash-recovery-transaction.component'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  CashRecoveryTransactionComponent,\r\n    data: {\r\n      title: 'Cash Recovery Transaction',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CashRecoveryTransactionRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { CustomerIDMasterDropdownService } from 'src/app/shared/dropdownService/customer-id-master-dropdown.service';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-cash-recovery-transaction',\r\n  templateUrl: './cash-recovery-transaction.component.html',\r\n  styleUrls: ['./cash-recovery-transaction.component.scss']\r\n})\r\nexport class CashRecoveryTransactionComponent implements OnInit {\r\n\r\n\r\n  angForm : FormGroup;\r\n  \r\n  Cust_ID: any;\r\n  obj: any[];\r\n  branch_code: any;\r\n  selectedBranch: any;\r\n  ngacno: any;\r\n  tScheme: any;\r\n  transferSchemeDetails: any;\r\n  constructor(private fb: FormBuilder,\r\n    private customerID: CustomerIDMasterDropdownService,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService) { }\r\n\r\n  selectedCId\r\n  selectedScode\r\n  selectedMemno\r\n\r\n  //variable for checkbox\r\n  isIsRestrictTransactionEntry: boolean = false;\r\n\r\n\r\n  //dropdown variables\r\n  cId:any\r\n  schemeCode:any\r\n  memNo:any[]\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    //For Customer Id dropdown\r\n    this.customerID.getCustomerIDMasterList().pipe(first()).subscribe(data => {\r\n      this.Cust_ID = data;\r\n      \r\n    })\r\n\r\n    //for Branch Dropdown\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n      // this.getIntroducer()\r\n    })\r\n    \r\n    //For Scheme Code dropdown\r\n\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      this.schemeCode = data;\r\n      \r\n    });\r\n\r\n    \r\n    \r\n  }\r\n\r\n  getIntro(event){\r\n    this.getschemename = event.name\r\n    this.getIntroducer()\r\n  }\r\n\r\n  getBranch(event) {\r\n    \r\n    //debugger\r\n    this.selectedBranch = event.value\r\n    this.getIntroducer()\r\n    \r\n  }\r\n\r\n\r\n      //For Starting account and Ending Account dropdown\r\n      getschemename: any\r\n  getIntroducer() {\r\n    // let data: any = localStorage.getItem('user');\r\n    // let result = JSON.parse(data);\r\n    // let branchCode = result.branch.id;\r\n    this.obj = [this.selectedScode,this.selectedBranch]\r\n\r\n    \r\n    switch (this.getschemename) {\r\n\r\n      case 'SH':\r\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        this.selectedMemno = null\r\n        \r\n \r\n        })\r\n        break;\r\n\r\n\r\n     case 'SB':\r\n      this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n        this.memNo = data;\r\n      this.selectedMemno = null\r\n\r\n         })\r\n         break;\r\n \r\n       case 'CA':\r\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        this.selectedMemno = null\r\n\r\n         })\r\n         break;\r\n \r\n       case 'LN':\r\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        this.selectedMemno = null\r\n\r\n         })\r\n         break;\r\n \r\n       case 'TD':\r\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        this.selectedMemno = null\r\n\r\n         })\r\n         break;\r\n \r\n       case 'DS':\r\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        this.selectedMemno = null\r\n\r\n \r\n         })\r\n         break;\r\n \r\n       case 'CC':\r\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        this.selectedMemno = null\r\n\r\n         })\r\n         break;\r\n \r\n       case 'GS':\r\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        this.selectedMemno = null\r\n\r\n \r\n         })\r\n         break;\r\n \r\n       case 'PG':\r\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        this.selectedMemno = null\r\n  \r\n \r\n         })\r\n         break;\r\n \r\n       case 'AG':\r\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        this.selectedMemno = null\r\n\r\n \r\n         })\r\n         break;\r\n \r\n       case 'IV':\r\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        this.selectedMemno = null\r\n\r\n \r\n         })\r\n         break;\r\n    }\r\n     \r\n   }\r\n\r\n\r\n  getTransferAccountList(event) {\r\n    this.transferSchemeDetails = event\r\n    this.tScheme = event.name\r\n    this.obj = [this.selectedScode, this.selectedBranch]\r\n    this.ngacno = null\r\n    switch (event.name) {\r\n      case 'SB':\r\n        this.schemeAccountNoService.getSavingSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'CA':\r\n        this.schemeAccountNoService.getCurrentAccountSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'LN':\r\n        this.schemeAccountNoService.getTermLoanSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'TD':\r\n        this.schemeAccountNoService.getTermDepositSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'DS':\r\n        this.schemeAccountNoService.getDisputeLoanSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'CC':\r\n        this.schemeAccountNoService.getCashCreditSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'PG':\r\n        this.schemeAccountNoService.getPigmyAccountSchemeList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        })\r\n        break;\r\n\r\n      case 'GL':\r\n        this.schemeAccountNoService.getGeneralLedgerList1(this.obj).subscribe(data => {\r\n          this.memNo = data;\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  createForm(){\r\n    this.angForm = this.fb.group({\r\n\r\n      customerid: ['',[Validators.required]],\r\n      branch: ['',[Validators.required]],\r\n      checkActive: [false],\r\n      scode: ['',[Validators.required]],\r\n      memberno: ['',[Validators.required]],\r\n      totalamount: ['',[Validators.required]],\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Cash Recovery Transaction</h5>\r\n            </div>\r\n\r\n            <form [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Customer Id<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedCId\" #scheme formControlName=\"customerid\"\r\n                                        bindValue=\"value\" bindLabel=\"label\">\r\n                                        <ng-option *ngFor=\"let item of Cust_ID\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['customerid'].invalid && (angForm.controls['customerid'].dirty || angForm.controls['customerid'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['customerid'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Branch<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedBranch\" #scheme formControlName=\"branch\"\r\n                                        bindValue=\"value\" bindLabel=\"label\" (change)=\"getBranch($event)\">\r\n                                        <ng-option *ngFor=\"let item of branch_code\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['branch'].invalid && (angForm.controls['branch'].dirty || angForm.controls['branch'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['branch'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\"\r\n                                        [checked]=\"isIsRestrictTransactionEntry == true\" formControlName=\"checkActive\">\r\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Show only Active\r\n                                        Accounts?</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Scheme Code<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedScode\" #scheme formControlName=\"scode\"\r\n                                        bindValue=\"value\" bindLabel=\"label\"\r\n                                        (change)=\"getIntro($event);getTransferAccountList($event)\">\r\n                                        <ng-option *ngFor=\"let item of schemeCode\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['scode'].invalid && (angForm.controls['scode'].dirty || angForm.controls['scode'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['scode'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Member Number<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedMemno\" #scheme formControlName=\"memberno\"\r\n                                        bindValue=\"bankacno\" bindLabel=\"NAME\">\r\n                                        <ng-option *ngFor=\"let item of memNo\" [value]=\"item\">\r\n                                            {{item.label}} {{item.name}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['memberno'].invalid && (angForm.controls['memberno'].dirty || angForm.controls['memberno'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['memberno'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"INSTALLMENT_NO\">Total Amount<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"INSTALLMENT_NO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"INSTALLMENT_NO\" maxlength=\"15\" formControlName=\"totalamount\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['totalamount'].invalid && (angForm.controls['totalamount'].dirty || angForm.controls['totalamount'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['totalamount'].errors?.pattern || angForm.controls['totalamount'].errors?.required || angForm.controls['totalamount'].errors?.maxlength\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <button class=\"btn  btn-outline-primary btn-sm\">Close</button>\r\n\r\n        <button class=\"btn  btn-outline-primary btn-sm\">Cancel</button>\r\n\r\n        <button class=\"btn  btn-outline-primary btn-sm\">Update</button>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CashRecoveryTransactionRoutingModule } from './cash-recovery-transaction-routing.module';\r\nimport { CashRecoveryTransactionComponent} from './cash-recovery-transaction.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { CustomerIDMasterDropdownService } from 'src/app/shared/dropdownService/customer-id-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CashRecoveryTransactionComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CashRecoveryTransactionRoutingModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DataTablesModule,\r\n  ],\r\n  providers:[{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },\r\n  CustomerIDMasterDropdownService,\r\n  SchemeCodeDropdownService,\r\n  SchemeAccountNoService,\r\n  OwnbranchMasterService\r\n  \r\n]\r\n})\r\nexport class CashRecoveryTransactionModule { }\r\n"],"sourceRoot":"webpack:///"}