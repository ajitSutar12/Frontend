{"version":3,"sources":["./src/app/shared/dropdownService/salary-division-master-dropdown.service.ts","./src/app/theme/transaction/dividend-pay/dividend-paid-mark-sd/dividend-paid-mark-sd-routing.module.ts","./src/app/theme/transaction/dividend-pay/dividend-paid-mark-sd/dividend-paid-mark-sd.component.ts","./src/app/theme/transaction/dividend-pay/dividend-paid-mark-sd/dividend-paid-mark-sd.component.html","./src/app/theme/transaction/dividend-pay/dividend-paid-mark-sd/dividend-paid-mark-sd.module.ts"],"names":[],"mappings":"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","file":"dividend-paid-mark-sd-dividend-paid-mark-sd-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SalaryDMasterdropdownService {\r\n    salaryObject = new Array();\r\n    // // salary-division-master\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getSalaryMasterList() {\r\n        this.salaryObject = []\r\n        return this.http.get<any>(this.url + '/salary-division-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.NAME, value: element.id, name: element.CODE};\r\n                    this.salaryObject.push(obj)\r\n                });\r\n                return this.salaryObject;\r\n            }));\r\n    }\r\n    public getSalaryDMasterList(branch) {\r\n        this.salaryObject = []\r\n        return this.http.get<any>(this.url + '/salary-division-master/getBranch/' + branch)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.NAME, value: element.id, name: element.CODE};\r\n                    this.salaryObject.push(obj)\r\n                });\r\n                return this.salaryObject;\r\n            }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { DividendPaidMarkSDComponent} from './dividend-paid-mark-sd.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  DividendPaidMarkSDComponent,\r\n    data: {\r\n      title: 'Dividend Paid MSD',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class  DividendPaidMarkSDRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { SalaryDMasterdropdownService } from 'src/app/shared/dropdownService/salary-division-master-dropdown.service';\r\n\r\n@Component({\r\n  selector: 'app-dividend-paid-mark-sd',\r\n  templateUrl: './dividend-paid-mark-sd.component.html',\r\n  styleUrls: ['./dividend-paid-mark-sd.component.scss']\r\n})\r\nexport class DividendPaidMarkSDComponent implements OnInit {\r\n  angForm : FormGroup;\r\n  \r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private salaryDMasterdropdownService: SalaryDMasterdropdownService,\r\n  ) { }\r\n\r\n\r\n  //ngfor variables\r\n  s_Div\r\n\r\n  //ngmodel variables\r\n  selectedSDiv\r\n  particulars\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    \r\n    this.salaryDMasterdropdownService.getSalaryMasterList().pipe(first()).subscribe(data => {\r\n      this.s_Div = data;\r\n    })\r\n  }\r\n\r\n\r\n  createForm(){\r\n    this.angForm = this.fb.group({\r\n      traNo: ['',[Validators.required]],\r\n      date: ['',[Validators.required]],\r\n      sdiv: ['',[Validators.required]],\r\n      particulars: ['',[Validators.required]],\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Batch Transfer Voucher-Companywise </h5>\r\n            </div>\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Transaction No.\r\n                                <sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"INSTALLMENT_NO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"INSTALLMENT_NO\" maxlength=\"20\" formControlName=\"traNo\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['traNo'].invalid && (angForm.controls['traNo'].dirty || angForm.controls['traNo'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['traNo'].errors?.pattern || angForm.controls['traNo'].errors?.required || angForm.controls['traNo'].errors?.maxlength\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"Date\">Date<sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"Date\" id=\"Date\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" class=\"form-control\"\r\n                                        formControlName=\"date\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['date'].invalid && (angForm.controls['date'].dirty || angForm.controls['date'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['date'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Salary Division<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedSDiv\" #scheme formControlName=\"sdiv\"\r\n                                        bindValue=\"value\" bindLabel=\"label\">\r\n                                        <ng-option *ngFor=\"let item of s_Div\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['sdiv'].invalid && (angForm.controls['sdiv'].dirty || angForm.controls['sdiv'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['sdiv'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"><label for=\"AC_PARTICULAR\">Particulars</label>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <textarea class=\"form-control\" formControlName=\"particulars\"\r\n                                        [(ngModel)]=\"particulars\"></textarea>\r\n                                    <i class=\"fa fa-info-circle errspan\"></i>\r\n                                </span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <button class=\"btn  btn-outline-primary btn-sm\">Close</button>\r\n\r\n                            <button class=\"btn  btn-outline-primary btn-sm\">Cancel</button>\r\n\r\n                            <button class=\"btn  btn-outline-primary btn-sm\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </form>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n\r\nimport { DividendPaidMarkSDRoutingModule } from './dividend-paid-mark-sd-routing.module';\r\n\r\n\r\nimport { DividendPaidMarkSDComponent } from './dividend-paid-mark-sd.component';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { SalaryDMasterdropdownService } from 'src/app/shared/dropdownService/salary-division-master-dropdown.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DividendPaidMarkSDRoutingModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DataTablesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n  ],\r\n  declarations: [DividendPaidMarkSDComponent],\r\n  providers:[{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },\r\n  SalaryDMasterdropdownService,\r\n]\r\n})\r\nexport class  DividendPaidMarkSDModule { }"],"sourceRoot":"webpack:///"}