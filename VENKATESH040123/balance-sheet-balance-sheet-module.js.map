{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/theme/reports/final-reports/balance-sheet/balance-sheet-routing.module.ts","./src/app/theme/reports/final-reports/balance-sheet/balance-sheet.module.ts","./src/app/theme/reports/final-reports/balance-sheet/balance-sheet.service.ts","./src/app/theme/reports/final-reports/balance-sheet/balance-sheet/balance-sheet.component.ts","./src/app/theme/reports/final-reports/balance-sheet/balance-sheet/balance-sheet.component.html"],"names":[],"mappings":"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","file":"balance-sheet-balance-sheet-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {BalanceSheetComponent} from './balance-sheet/balance-sheet.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component:  BalanceSheetComponent,\r\n  data: {\r\n    title: 'Balance sheet',\r\n    icon: 'icon-home',\r\n    caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n    status: true\r\n  }\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BalanceSheetRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BalanceSheetRoutingModule } from './balance-sheet-routing.module';\nimport { BalanceSheetComponent } from './balance-sheet/balance-sheet.component';\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {Iframe4Module} from '../iframe4/iframe4.module';\nimport {NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n\n@NgModule({\n  declarations: [BalanceSheetComponent],\n  imports: [\n    CommonModule,\n    BalanceSheetRoutingModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n    ReactiveFormsModule,\n    FormsModule,\n    NgbModule,\n    NgSelectModule,\n    Iframe4Module\n  ],\n  schemas:[NO_ERRORS_SCHEMA,CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class BalanceSheetModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment}  from '../../../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BalanceSheetService {\r\n\r\n  // Variable for handleError\r\n[x: string]: any;\r\nurl = environment.base_url;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/reports/balanceSheet', data).pipe(map((res) => res),\r\n        catchError((error) => {\r\n            Swal.fire('Please Input Proper Data!');\r\n            return throwError(error);\r\n        })\r\n    )\r\n}\r\n\r\ngetFormData(data): Observable<any> {\r\n  return this.http.post(this.url + '/reports/balanceSheet',data).pipe(catchError(this.handleError));\r\n}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { OwnbranchMasterService } from \"src/app/shared/dropdownService/own-branch-master-dropdown.service\";\r\nimport { first, take } from \"rxjs/operators\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as moment from 'moment';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport Swal from \"sweetalert2\";\r\nimport { environment } from \"src/environments/environment\"; import { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\nimport { BalanceSheetService } from '../balance-sheet.service';\r\nimport { date } from 'ngx-custom-validators/src/app/date/validator';\r\nimport { data } from 'jquery';\r\nimport { NgSelectConfig } from \"@ng-select/ng-select\";\r\n\r\n@Component({\r\n  selector: 'app-balance-sheet',\r\n  templateUrl: './balance-sheet.component.html',\r\n  styleUrls: ['./balance-sheet.component.scss'],\r\n  providers: [OwnbranchMasterService]\r\n})\r\nexport class BalanceSheetComponent implements OnInit {\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  todate: any = null;\r\n  fromdate: any;\r\n  maxDate: Date;\r\n  minDate: Date;\r\n  bsValue = new Date();\r\n  formSubmitted: any;\r\n\r\n  showRepo: boolean = false;\r\n  iframeurl: any = ' ';\r\n  report_url = environment.report_url;\r\n  clicked: boolean = false;\r\n  getBalaceSData: any;\r\n\r\n  //Dropdown option variable\r\n  ngbranch: any;\r\n  branchOption: any;\r\n  BalanceSheetService: any;\r\n  data: any;\r\n  balSheetdataset: [];\r\n  allFilters: any;\r\n  branchName\r\n  constructor(private fb: FormBuilder,\r\n    private _ownbranchmasterservice: OwnbranchMasterService,\r\n    private sanitizer: DomSanitizer,\r\n    private http: HttpClient,\r\n    private systemParameter: SystemMasterParametersService,\r\n    private _service: BalanceSheetService\r\n  ) {\r\n    this.fromdate = moment().format('DD/MM/YYYY');\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branchOption = data;\r\n      let data1: any = localStorage.getItem('user');\r\n      let result = JSON.parse(data1);\r\n      if (result.branchId == 1) {\r\n        this.branchOption.push({ value: '0', label: 'Consolidate' })\r\n      }\r\n    });\r\n\r\n    this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\r\n      \r\n      this.fromdate = data.CURRENT_DATE;\r\n    });\r\n\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    if (result.RoleDefine[0].Role.id == 1) {\r\n      this.ngbranch = result.branch.id\r\n      this.branchName = result.branch.NAME\r\n      this.angForm.controls['BRANCH_CODE'].enable()\r\n    }\r\n    else {\r\n      this.angForm.controls['BRANCH_CODE'].disable()\r\n      this.ngbranch = result.branch.id\r\n      this.branchName = result.branch.NAME\r\n    }\r\n\r\n\r\n\r\n  }\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      BRANCH_CODE: [\"\", [Validators.required]],\r\n      START_DATE: [\"\", [Validators.required]],\r\n    })\r\n  }\r\n\r\n\r\n  view(event) {\r\n    // this.branchName = event.branchName\r\n    event.preventDefault();\r\n    this.formSubmitted = true;\r\n\r\n    let userData = JSON.parse(localStorage.getItem('user'));\r\n    let bankName = userData.branch.syspara.BANK_NAME;\r\n\r\n\r\n    if (this.angForm.valid) {\r\n      this.showRepo = true;\r\n\r\n      let obj = this.angForm.value\r\n      // check the conition of the default(syspara) date and date parameter and set the format\r\n      let date: any;\r\n      if (this.fromdate == obj.START_DATE) {\r\n        date = moment(this.fromdate, 'DD/MM/YYYY').format('DD/MM/YYYY')\r\n      } else {\r\n        date = moment(this.fromdate, 'DD/MM/YYYY').format('DD/MM/YYYY')\r\n      };\r\n\r\n      let branch_code = obj.BRANCH_CODE;\r\n\r\n\r\n\r\n      getBalaceSData(event); {\r\n        let Obj = {\r\n          date: this.fromdate,\r\n          branch_code: this.ngbranch,\r\n        }\r\n        this._service.getFormData(Obj).subscribe(data => {\r\n\r\n\r\n          this.balSheetdataset = data;\r\n          console.log(this.balSheetdataset);\r\n\r\n          this.iframeurl = this.report_url + \"examples/BalanceSheet.php?&date=\" + date + \"&branch_code=\" + this.ngbranch + \"&bankName=\" + bankName + \"\" + \"&branchName=\" + this.branchName;\r\n          console.log(this.iframeurl);\r\n          this.iframeurl = this.sanitizer.bypassSecurityTrustResourceUrl(this.iframeurl);\r\n        })\r\n\r\n      }\r\n\r\n    }\r\n    else {\r\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(() => { this.clicked = false });\r\n    }\r\n\r\n  }\r\n  close() {\r\n    this.resetForm()\r\n  }\r\n  // Reset Function\r\n  resetForm() {\r\n    // this.createForm()\r\n    this.showRepo = false;\r\n    this.clicked = false;\r\n  }\r\n  getBranch(event) {\r\n    this.ngbranch = event.value\r\n    this.branchName = event.branchName\r\n  }\r\n\r\n}\r\nfunction getBalaceSData(event: any) {\r\n  // throw new Error('Function not implemented.');\r\n}\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5> Balance Sheet </h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-md-1\"> <label for=\"scheme\">Branch <sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngbranch\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" placeholder=\"Branch\" required\r\n                                        (change)=\"getBranch($event);getBalaceSData($event)\">\r\n                                        <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\" angForm.controls['BRANCH_CODE'].invalid &&(angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required ||angForm.controls['BRANCH_CODE'].errors?.pattern\">\r\n                                    This is required field\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-1\"> <label for=\"START_DATE\">Date<sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"START_DATE\" id=\"START_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"fromdate\" [bsValue]=\"bsValue\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" formControlName=\"START_DATE\"\r\n                                        [maxDate]=\"maxDate\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\" *ngIf=\"angForm.controls['START_DATE'].invalid &&\r\n                                     (angForm.controls['START_DATE'].dirty ||angForm.controls['START_DATE'].touched) \"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['START_DATE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3\"></div>\r\n                        <div class=\"col-md-2\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\r\n                                (click)=\"view($event); clicked = true \">View</button>\r\n                        </div>\r\n                        <div class=\"col-md-1\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" value=\"submit\"\r\n                                (click)=\"close()\">Close</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\">\r\n                                    <h5>Report Frame</h5>\r\n                                </div>\r\n                                <div *ngIf=\"showRepo\">\r\n                                    <app-iframe4 [url]='iframeurl'></app-iframe4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}