{"version":3,"sources":["./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/view/shares-ledger-view/shares-ledger-view-routing.module.ts","./src/app/theme/view/shares-ledger-view/shares-ledger-view.component.ts","./src/app/theme/view/shares-ledger-view/shares-ledger-view.component.html","./src/app/theme/view/shares-ledger-view/shares-ledger-view.module.ts"],"names":[],"mappings":"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","file":"shares-ledger-view-shares-ledger-view-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                }); console.log('in service', this.schemeObject)\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {SharesLedgerViewComponent} from './shares-ledger-view.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SharesLedgerViewComponent,\r\n    data: {\r\n      title: 'Shares Ledger View',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SharesLedgerViewRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { environment } from 'src/environments/environment';\r\nimport { first } from 'rxjs/operators';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport * as moment from 'moment';\r\nimport { Subject } from 'rxjs-compat';\r\nimport { DataTableDirective } from 'angular-datatables';\r\n@Component({\r\n  selector: 'app-shares-ledger-view',\r\n  templateUrl: './shares-ledger-view.component.html',\r\n  styleUrls: ['./shares-ledger-view.component.scss']\r\n})\r\nexport class SharesLedgerViewComponent implements OnInit {\r\n  angForm: FormGroup;\r\n  formSubmitted = false;\r\n\r\n  //api \r\n\r\n  url = environment.base_url;\r\n\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  \r\n  // dropdown variables\r\n  allScheme: any[]\r\n  ngscheme:any=null\r\n  accountedit:any=null\r\n  schemeACNo: any;\r\n\r\n  // Date variables\r\n  todate: any = null;\r\n  fromdate:any=null\r\n  maxDate: any;\r\n  minDate: any;\r\n  bsValue = new Date();\r\n\r\n  \r\n\r\n  constructor( \r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private config: NgSelectConfig,\r\n    \r\n    ) {\r\n      this.maxDate = new Date();\r\n      this.minDate = new Date();\r\n      this.minDate.setDate(this.minDate.getDate());\r\n      this.maxDate.setDate(this.maxDate.getDate())\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n\r\n    \r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n\r\n      var filtered = data.filter(function (scheme) {\r\n        return (scheme.name == 'SH');\r\n      });\r\n      this.allScheme = filtered;\r\n    })\r\n    \r\n    \r\n  }\r\n  \r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      AC_TYPE: ['', [Validators.required]],\r\n      AC_NO: ['', [Validators.required]],\r\n      FROM_DATE: ['', [Validators.required]],\r\n      TO_DATE: ['', [Validators.required]],\r\n      AC_OPDATE:['', [Validators.required]],\r\n\r\n    });\r\n  }\r\n\r\n\r\n  schemechange(event) {\r\n\r\n    this.getschemename = event.name\r\n    this.ngscheme = event.value\r\n    this.getIntroducer()\r\n\r\n\r\n  }\r\n  obj: any\r\n  getschemename: any\r\n  //get account no according scheme for introducer\r\n  getIntroducer() {\r\n\r\n    switch (this.getschemename) {\r\n\r\n      case 'SH':\r\n\r\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n\r\n        })\r\n        break;\r\n      \r\n    }\r\n  }\r\n  submit() {\r\n    console.log(this.angForm.valid);\r\n\r\n    if (this.angForm.valid) {\r\n      console.log(this.angForm.value);\r\n    }\r\n  }\r\n\r\n  counter = 0;\r\n  \r\n\r\n  // checking date \r\n  checkDate(event){\r\n\r\n    this.counter = this.counter+1;\r\n    if(this.counter>2 && event.length!=0){\r\n        let value1\r\n      let value2\r\n      value1 = moment(this.fromdate).format('DD/MM/YYYY');\r\n      // console.log(value1)\r\n      value2 = moment(this.todate).format('DD/MM/YYYY');\r\n      // console.log(value2)\r\n      if(moment(value1).isSame(value2)){\r\n        Swal.fire(\"from date should not be same as to date\")\r\n        this.angForm.controls['TO_DATE'].reset()\r\n      }\r\n    }\r\n    \r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Shares Ledger View</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                    formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                    (change)=\"schemechange($event)\"\r\n                                    [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Scheme\">\r\n                                    <ng-option *ngFor=\"let values of allScheme\" [value]=\"values\">\r\n                                        {{values.id}} {{values.label}} </ng-option>\r\n                                </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_NO\">Account Number<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_NO\" bindValue=\"value\" [(ngModel)]=\"accountedit\"\r\n                                     formControlName=\"AC_NO\" bindLabel=\"label\"\r\n                                    title=\"Compulsory Selection\" required placeholder=\"Account No.\">\r\n                                    <ng-option *ngFor=\"let values of schemeACNo\" [value]=\"values\">\r\n                                        {{values.label}} {{values.name}}</ng-option>\r\n                                </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            \r\n                                \r\n                            \r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_NO'].invalid && (angForm.controls['AC_NO'].dirty || angForm.controls['AC_NO'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"><label style=\"color: #1e5bc5\">Freeze Account Status</label></div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_DATE\">From Date<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"FROM_DATE\" id=\"FROM_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"fromdate\"  [bsValue]=\"bsValue\"\r\n                                        [maxDate]=\"maxDate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" \r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"FROM_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['FROM_DATE'].invalid && (angForm.controls['FROM_DATE'].dirty || angForm.controls['FROM_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['FROM_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_DATE\">To Date<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TO_DATE\" id=\"TO_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"todate\"  [maxDate]=\"maxDate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"fromdate\" (bsValueChange)=\"checkDate($event)\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TO_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['TO_DATE'].invalid && (angForm.controls['TO_DATE'].dirty || angForm.controls['TO_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TO_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_OPDATE\">Account Opening Date<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AC_OPDATE\" id=\"AC_OPDATE\"\r\n                                        class=\"form-control\" \r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\" \r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"AC_OPDATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_OPDATE'].invalid && (angForm.controls['AC_OPDATE'].dirty || angForm.controls['AC_OPDATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_OPDATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\">View</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"table-responsive\">\r\n            <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n             class=\"table table-striped table-bordered table-hover compact\">\r\n                <thead>\r\n                    <td class=\"td_center\">Date</td>\r\n                    <td>Particulars</td>\r\n                    <td>Transaction Type</td>\r\n                    <td class=\"td_right\">Dr. Amount</td>\r\n                    <td class=\"td_right\">Cr. Amount</td>\r\n                    <td class=\"td_right\">Closing Balance</td>\r\n                    <td class=\"td_right\">Dr. Dividend</td>\r\n                    <td class=\"td_right\">Cr.Dividend</td>\r\n                    <td class=\"td_right\">Dividend Balance</td>\r\n                    <td class=\"td_right\">Bonus Amount</td>\r\n                    <td class=\"td_right\">Rebit Interest</td>\r\n                    <td class=\"td_right\">Certificate Number</td>\r\n                    <td class=\"td_right\">Number Of Shares</td>\r\n                    <td>Shares From - To</td>\r\n                    <td class=\"td_right\">Face Value</td>\r\n                    <td class=\"td_right\">Officer ID</td>\r\n                    <td class=\"td_right\">Voucher Number</td>\r\n\r\n                </thead>\r\n\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { SharesLedgerViewComponent } from './shares-ledger-view.component';\r\nimport { SharesLedgerViewRoutingModule } from './shares-ledger-view-routing.module'\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { FormsModule,ReactiveFormsModule  }   from '@angular/forms';\r\n\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharesLedgerViewRoutingModule,\r\n    SharedModule,\r\n    NgSelectModule,\r\n    DataTablesModule,\r\n    FormsModule,ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot()\r\n    \r\n  ],\r\n  declarations: [SharesLedgerViewComponent],\r\n  providers: [SchemeCodeDropdownService,SchemeAccountNoService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UserAuthInterceptor,\r\n      multi: true\r\n    },]\r\n})\r\nexport class SharesLedgerViewModule { }\r\n"],"sourceRoot":"webpack:///"}