{"version":3,"sources":["./src/app/shared/dropdownService/ac-master-dropdown.service.ts","./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/utility/process-acm/charges-posting/charges-posting.component.ts","./src/app/theme/utility/process-acm/charges-posting/charges-posting.component.html","./src/app/theme/utility/process-acm/dead-stock-depreciation/dead-stock-depreciation.component.ts","./src/app/theme/utility/process-acm/dead-stock-depreciation/dead-stock-depreciation.component.html","./src/app/theme/utility/process-acm/npamarking/npamarking.component.ts","./src/app/theme/utility/process-acm/npamarking/npamarking.component.html","./src/app/theme/utility/process-acm/npaprocess-locking/npaprocess-locking.component.ts","./src/app/theme/utility/process-acm/npaprocess-locking/npaprocess-locking.component.html","./src/app/theme/utility/process-acm/npaprocess/npaprocess.component.ts","./src/app/theme/utility/process-acm/npaprocess/npaprocess.component.html","./src/app/theme/utility/process-acm/overdraft-interest-posting/overdraft-interest-posting.component.ts","./src/app/theme/utility/process-acm/overdraft-interest-posting/overdraft-interest-posting.component.html","./src/app/theme/utility/process-acm/payrolldatatransfer/payrolldatatransfer.component.ts","./src/app/theme/utility/process-acm/payrolldatatransfer/payrolldatatransfer.component.html","./src/app/theme/utility/process-acm/payrollexportfileprocess/payrollexportfileprocess.component.ts","./src/app/theme/utility/process-acm/payrollexportfileprocess/payrollexportfileprocess.component.html","./src/app/theme/utility/process-acm/penal-interest-calculation/penal-interest-calculation.component.ts","./src/app/theme/utility/process-acm/penal-interest-calculation/penal-interest-calculation.component.html","./src/app/theme/utility/process-acm/process-acm-routing.module.ts","./src/app/theme/utility/process-acm/process-acm.component.ts","./src/app/theme/utility/process-acm/process-acm.component.html","./src/app/theme/utility/process-acm/process-acm.module.ts","./src/app/theme/utility/process-acm/transfer-to-glby-closing-ac/transfer-to-glby-closing-ac.component.ts","./src/app/theme/utility/process-acm/transfer-to-glby-closing-ac/transfer-to-glby-closing-ac.component.html"],"names":[],"mappings":"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","file":"process-acm-process-acm-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ACMasterDropdownService {\r\n\r\n    // // gl-account-master\"; \r\n    url = environment.base_url;\r\n    acMasterObject = new Array();\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getACMasterList() {\r\n        this.acMasterObject = [];\r\n        return this.http.get<any>(this.url + '/gl-account-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\r\n                    this.acMasterObject.push(obj)\r\n                });\r\n                return this.acMasterObject;\r\n            }));\r\n    }\r\n\r\n    public getACMasterbranch(branchid) {\r\n        this.acMasterObject = [];\r\n        return this.http.get<any>(this.url + '/gl-account-master/branch/' + branchid)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\r\n                    // let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id };\r\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id, name: element.AC_NO };\r\n                    this.acMasterObject.push(obj)\r\n                });\r\n                return this.acMasterObject;\r\n            }));\r\n    }\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                }); console.log('in service', this.schemeObject)\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { first } from 'rxjs/operators';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport {ACMasterDropdownService} from '../../../../shared/dropdownService/ac-master-dropdown.service'\r\n\r\n@Component({\r\n  selector: 'app-charges-posting',\r\n  templateUrl: './charges-posting.component.html',\r\n  styleUrls: ['./charges-posting.component.scss']\r\n})\r\nexport class ChargesPostingComponent implements OnInit {\r\n  formSubmitted = false;\r\n  //api\r\n  url = environment.base_url;\r\n\r\n  // Formgroup variable\r\n  angForm: FormGroup;\r\n\r\n  // dropdown variables\r\n  allScheme: any[]\r\n  ngscheme:any=null\r\n  isServiceCharges: boolean=true\r\n  isMinimumBalanceCharges=false\r\n  isDormantCharges=false\r\n  isChargesEntry=false\r\n  GLACNooption: any[];\r\n  ngGlAC:any=null\r\n\r\n  // for date \r\n  maxDate: Date;\r\n  minDate: Date;\r\n\r\n  label:string='Service Charges'\r\n  constructor(\r\n    private fb: FormBuilder, private http: HttpClient,\r\n    private config: NgSelectConfig,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private ACMasterDropdownService: ACMasterDropdownService,\r\n  ) { \r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate());\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      // var allscheme = data.filter(function (scheme) {\r\n      //   return (scheme.name == 'SB' || scheme.name == 'CA' || scheme.name == 'AG' || scheme.name == 'GS' || scheme.name == 'PG' || scheme.name == 'TD' || scheme.name == 'LN' || scheme.name == 'DS' || scheme.name == 'CC' || scheme.name == 'SH'||scheme.name == 'GL')\r\n      // });\r\n      this.allScheme = data;\r\n    })\r\n    this.ACMasterDropdownService.getACMasterList()\r\n      .pipe(first())\r\n      .subscribe((data) => {\r\n        this.GLACNooption = data;\r\n      });\r\n  }\r\n\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      AC_TYPE: ['', [Validators.required]],\r\n      FORM_TYPE:['Service Charges'],\r\n      CHARGES_AMT:['',[Validators.required,Validators.pattern]],\r\n      TRANFROM_DATE:['',[Validators.required]],\r\n      TRANTO_DATE:['',[Validators.required]],\r\n      BALCHARGES_AMT:['',[Validators.required,Validators.pattern]],\r\n      DORMANTFROM_DATE:['',[Validators.required]],\r\n      DORMANTTO_DATE:['',[Validators.required]],\r\n      DORMANTCHARGES_AMT:['',[Validators.required]],\r\n      BALANCE:[''],\r\n      BAL_AMT:['',[Validators.required],Validators.pattern],\r\n      ENTRY_CHARGES:['',[Validators.required],Validators.pattern],\r\n      MIN_CHARGES:['',[Validators.required],Validators.pattern],\r\n      TRAN_PERIOD:['',[Validators.required]],\r\n      TRANPERIOD_TO:['',[Validators.required]],\r\n      TYPE:[''],\r\n      GL_ACNO:['',[Validators.required]],\r\n      TOTAL_CHARGE:[''],\r\n      PARTICULAR:['Service Charges'],\r\n\r\n    });\r\n  }\r\n\r\n  isForm(value,data) {\r\n\r\n    this.label=data\r\n    // console.log(this.label)\r\n    this.angForm.patchValue({\r\n      'PARTICULAR':data\r\n      \r\n    })\r\n    if (value == 1) {\r\n      this.isServiceCharges = true;\r\n      this.isMinimumBalanceCharges=false;\r\n      this.isDormantCharges=false;\r\n      this.isChargesEntry=false\r\n      \r\n    }\r\n    else if (value == 2) {\r\n      this.isServiceCharges = false;\r\n      this.isMinimumBalanceCharges=true;\r\n      this.isDormantCharges=false;\r\n      this.isChargesEntry=false\r\n      \r\n      \r\n    }\r\n    else if (value == 3) {\r\n      this.isServiceCharges = false\r\n      this.isMinimumBalanceCharges=false;\r\n      this.isDormantCharges=true;\r\n      this.isChargesEntry=false\r\n      \r\n      \r\n    }\r\n    else if (value == 4) {\r\n      this.isServiceCharges = false;\r\n      this.isMinimumBalanceCharges=false;\r\n      this.isDormantCharges=false;\r\n      this.isChargesEntry=true\r\n      \r\n      \r\n    }\r\n    \r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Charges Posting</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                    formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                    \r\n                                    [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Scheme\">\r\n                                    <ng-option *ngFor=\"let values of allScheme\" [value]=\"values\">\r\n                                        {{values.id}} {{values.label}} </ng-option>\r\n                                </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" formControlName=\"FORM_TYPE\" #charges1 name=\"FORM_TYPE\" value=\"Service Charges\"\r\n                                            id=\"FORM_TYPE\" (change)=\"isForm(1,charges1.value)\" checked>\r\n                                        <i class=\"helper\"></i>Service Charges\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" value=\"Minimum Balance Charges\" #charges2 formControlName=\"FORM_TYPE\" id=\"form2\"\r\n                                            name=\"FORM_TYPE\" (change)=\"isForm(2,charges2.value)\">\r\n                                        <i class=\"helper\"></i>Minimum Balance Charges\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" value=\"Dormant Charges\" #charges3 formControlName=\"FORM_TYPE\" id=\"form3\"\r\n                                            name=\"FORM_TYPE\" (change)=\"isForm(3,charges3.value)\">\r\n                                        <i class=\"helper\"></i>Dormant Charges\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" value=\"Charges Per Entry\" #charges4 formControlName=\"FORM_TYPE\" id=\"form4\"\r\n                                            name=\"FORM_TYPE\" (change)=\"isForm(4,charges4.value)\">\r\n                                        <i class=\"helper\"></i>Charges Per Entry\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"solid\">\r\n                                <h3><span>{{label}}</span></h3>\r\n                                <div class=\"row\" id=\"form1\"  *ngIf=\"isServiceCharges\">\r\n                                \r\n                                   \r\n                                    <div class=\"col-sm-12 col-md-2\"> <label for=\"CHARGES_AMT\">Charges Amount<sub\r\n                                        class=\"required\">*</sub></label></div>\r\n                                    <div class=\"col-sm-12 col-md-2\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <input style=\"text-align: right;\" type=\"text\" name=\"CHARGES_AMT\" class=\"form-control\"\r\n                                                    placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"CHARGES_AMT\" max=\"10\"\r\n                                                    title=\"Input allowed only  0-9\" #INT formControlName=\"CHARGES_AMT\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\">\r\n        \r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"angForm.controls['CHARGES_AMT'].invalid && (angForm.controls['CHARGES_AMT'].dirty || angForm.controls['CHARGES_AMT'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div\r\n                                                *ngIf=\"angForm.controls['CHARGES_AMT'].errors?.pattern || angForm.controls['CHARGES_AMT'].errors?.required || angForm.controls['CHARGES_AMT'].errors?.maxlength\">\r\n                                                Input allowed only 0-9 .(after decimal 2 digits)\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                \r\n                            </div>\r\n                            <div class=\"row\" id=\"form2\" *ngIf=\"isMinimumBalanceCharges\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TRANFROM_DATE\">Transaction Date From<sub\r\n                                            class=\"required\">*</sub></label></div>\r\n                                        <div class=\"col-sm-12 col-md-2\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TRANFROM_DATE\" id=\"TRANFROM_DATE\"\r\n                                                    class=\"form-control\" \r\n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TRANFROM_DATE\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                    bsDatepicker>\r\n                \r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['TRANFROM_DATE'].invalid && (angForm.controls['TRANFROM_DATE'].dirty || angForm.controls['TRANFROM_DATE'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div *ngIf=\"angForm.controls['TRANFROM_DATE'].errors?.required\">\r\n                                                    This field is required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TRANTO_DATE\">Transaction Date To<sub\r\n                                            class=\"required\">*</sub></label></div>\r\n                                        <div class=\"col-sm-12 col-md-2\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TRANTO_DATE\" id=\"TRANTO_DATE\"\r\n                                                    class=\"form-control\" \r\n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TRANTO_DATE\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                    bsDatepicker>\r\n                \r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['TRANTO_DATE'].invalid && (angForm.controls['TRANTO_DATE'].dirty || angForm.controls['TRANTO_DATE'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div *ngIf=\"angForm.controls['TRANTO_DATE'].errors?.required\">\r\n                                                    This field is required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BALCHARGES_AMT\">Charges Amount<sub\r\n                                            class=\"required\">*</sub></label></div>\r\n                                        <div class=\"col-sm-12 col-md-2\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input style=\"text-align: right;\" type=\"text\" name=\"BALCHARGES_AMT\" class=\"form-control\"\r\n                                                        placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"BALCHARGES_AMT\" max=\"10\"\r\n                                                        title=\"Input allowed only  0-9\" #INT formControlName=\"BALCHARGES_AMT\"\r\n                                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\">\r\n                \r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['BALCHARGES_AMT'].invalid && (angForm.controls['BALCHARGES_AMT'].dirty || angForm.controls['BALCHARGES_AMT'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div\r\n                                                    *ngIf=\"angForm.controls['BALCHARGES_AMT'].errors?.pattern || angForm.controls['BALCHARGES_AMT'].errors?.required || angForm.controls['BALCHARGES_AMT'].errors?.maxlength\">\r\n                                                    Input allowed only 0-9 .(after decimal 2 digits)\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                               \r\n                               \r\n                                \r\n                            </div>\r\n                            <div class=\"row\" id=\"form3\" *ngIf=\"isDormantCharges\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"DORMANTFROM_DATE\">Transaction Date From<sub\r\n                                            class=\"required\">*</sub></label></div>\r\n                                        <div class=\"col-sm-12 col-md-2\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"DORMANTFROM_DATE\" id=\"DORMANTFROM_DATE\"\r\n                                                    class=\"form-control\" \r\n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"DORMANTFROM_DATE\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                    bsDatepicker>\r\n                \r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['DORMANTFROM_DATE'].invalid && (angForm.controls['DORMANTFROM_DATE'].dirty || angForm.controls['DORMANTFROM_DATE'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div *ngIf=\"angForm.controls['DORMANTFROM_DATE'].errors?.required\">\r\n                                                    This field is required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"DORMANTTO_DATE\">Transaction Date To<sub\r\n                                            class=\"required\">*</sub></label></div>\r\n                                        <div class=\"col-sm-12 col-md-2\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"DORMANTTO_DATE\" id=\"DORMANTTO_DATE\"\r\n                                                    class=\"form-control\" \r\n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"DORMANTTO_DATE\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                    bsDatepicker>\r\n                \r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['DORMANTTO_DATE'].invalid && (angForm.controls['DORMANTTO_DATE'].dirty || angForm.controls['DORMANTTO_DATE'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div *ngIf=\"angForm.controls['DORMANTTO_DATE'].errors?.required\">\r\n                                                    This field is required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"DORMANTCHARGES_AMT\">Charges Amount<sub\r\n                                            class=\"required\">*</sub></label></div>\r\n                                        <div class=\"col-sm-12 col-md-2\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input style=\"text-align: right;\" type=\"text\" name=\"DORMANTCHARGES_AMT\" class=\"form-control\"\r\n                                                        placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"DORMANTCHARGES_AMT\" max=\"10\"\r\n                                                        title=\"Input allowed only  0-9\" #INT formControlName=\"DORMANTCHARGES_AMT\"\r\n                                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\">\r\n                \r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['DORMANTCHARGES_AMT'].invalid && (angForm.controls['DORMANTCHARGES_AMT'].dirty || angForm.controls['DORMANTCHARGES_AMT'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div\r\n                                                    *ngIf=\"angForm.controls['DORMANTCHARGES_AMT'].errors?.pattern || angForm.controls['DORMANTCHARGES_AMT'].errors?.required || angForm.controls['DORMANTCHARGES_AMT'].errors?.maxlength\">\r\n                                                    Input allowed only 0-9 .(after decimal 2 digits)\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm\">\r\n                                            <button class=\"btn btn-outline-primary btn-sm\"> Show Report</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n        \r\n                            </div>\r\n                            <div class=\"row\" id=\"form4\" *ngIf=\"isChargesEntry\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <h6>Transaction Type</h6>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm\">\r\n                                            <div class=\"form-radio\">\r\n                                                <div class=\"radio radio-inline\">\r\n                                                    <label>\r\n                                                        <input type=\"radio\" formControlName=\"BALANCE\" name=\"BALANCE\" value=\"bal1\"\r\n                                                            id=\"BAL1\">\r\n                                                        <i class=\"helper\"></i>Minimum Balance\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class=\"radio radio-inline\">\r\n                                                    <label>\r\n                                                        <input type=\"radio\"  formControlName=\"BALANCE\"  name=\"BALANCE\" value=\"bal2\" \r\n                                                        id=\"BAL2\">\r\n                                                        <i class=\"helper\"></i>Maximum Balance \r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n        \r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BAL_AMT\">Balance Amount<sub\r\n                                            class=\"required\">*</sub></label></div>\r\n                                        <div class=\"col-sm-12 col-md-2\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input style=\"text-align: right;\" type=\"text\" name=\"BAL_AMT\" class=\"form-control\"\r\n                                                        placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"BAL_AMT\" max=\"10\"\r\n                                                        title=\"Input allowed only  0-9\" #INT formControlName=\"BAL_AMT\"\r\n                                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\">\r\n                \r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['BAL_AMT'].invalid && (angForm.controls['BAL_AMT'].dirty || angForm.controls['BAL_AMT'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div\r\n                                                    *ngIf=\"angForm.controls['BAL_AMT'].errors?.pattern || angForm.controls['BAL_AMT'].errors?.required || angForm.controls['BAL_AMT'].errors?.maxlength\">\r\n                                                    Input allowed only 0-9 .(after decimal 2 digits)\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n        \r\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"ENTRY_CHARGES\">Per Entry Charges<sub\r\n                                            class=\"required\">*</sub></label></div>\r\n                                        <div class=\"col-sm-12 col-md-2\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input style=\"text-align: right;\" type=\"text\" name=\"ENTRY_CHARGES\" class=\"form-control\"\r\n                                                        placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"ENTRY_CHARGES\" max=\"10\"\r\n                                                        title=\"Input allowed only  0-9\" #INT formControlName=\"ENTRY_CHARGES\"\r\n                                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\">\r\n                \r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['ENTRY_CHARGES'].invalid && (angForm.controls['ENTRY_CHARGES'].dirty || angForm.controls['ENTRY_CHARGES'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div\r\n                                                    *ngIf=\"angForm.controls['ENTRY_CHARGES'].errors?.pattern || angForm.controls['ENTRY_CHARGES'].errors?.required || angForm.controls['ENTRY_CHARGES'].errors?.maxlength\">\r\n                                                    Input allowed only 0-9 .(after decimal 2 digits)\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"MIN_CHARGES\">Minimum Charges<sub\r\n                                            class=\"required\">*</sub></label></div>\r\n                                        <div class=\"col-sm-12 col-md-2\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input style=\"text-align: right;\" type=\"text\" name=\"MIN_CHARGES\" class=\"form-control\"\r\n                                                        placeholder=\" \" pattern=\"\\d{1,20}(\\.\\d{2})?\" id=\"MIN_CHARGES\" max=\"10\"\r\n                                                        title=\"Input allowed only  0-9\" #INT formControlName=\"MIN_CHARGES\"\r\n                                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 )|| $event.charCode == 46\">\r\n                \r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['MIN_CHARGES'].invalid && (angForm.controls['MIN_CHARGES'].dirty || angForm.controls['MIN_CHARGES'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div\r\n                                                    *ngIf=\"angForm.controls['MIN_CHARGES'].errors?.pattern || angForm.controls['MIN_CHARGES'].errors?.required || angForm.controls['MIN_CHARGES'].errors?.maxlength\">\r\n                                                    Input allowed only 0-9 .(after decimal 2 digits)\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TRAN_PERIOD\">Transaction Period<sub\r\n                                            class=\"required\">*</sub></label></div>\r\n                                        <div class=\"col-sm-12 col-md-2\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TRAN_PERIOD\" id=\"TRAN_PERIOD\"\r\n                                                    class=\"form-control\" \r\n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TRAN_PERIOD\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                    bsDatepicker>\r\n                \r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['TRAN_PERIOD'].invalid && (angForm.controls['TRAN_PERIOD'].dirty || angForm.controls['TRAN_PERIOD'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div *ngIf=\"angForm.controls['TRAN_PERIOD'].errors?.required\">\r\n                                                    This field is required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TRANPERIOD_TO\">To<sub\r\n                                            class=\"required\">*</sub></label></div>\r\n                                        <div class=\"col-sm-12 col-md-2\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TRANPERIOD_TO\" id=\"TRANPERIOD_TO\"\r\n                                                    class=\"form-control\" \r\n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TRANPERIOD_TO\"\r\n                                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                    bsDatepicker>\r\n                \r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['TRANPERIOD_TO'].invalid && (angForm.controls['TRANPERIOD_TO'].dirty || angForm.controls['TRANPERIOD_TO'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div *ngIf=\"angForm.controls['TRANPERIOD_TO'].errors?.required\">\r\n                                                    This field is required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm\">\r\n                                                    \r\n                                                    <div class=\"form-radio\">\r\n                                                        <div class=\"radio radio-inline\">\r\n                                                            \r\n                                                            <label>\r\n                                                                <input type=\"radio\" formControlName=\"TYPE\" name=\"TYPE\" value=\"type1\"\r\n                                                                    id=\"TYPE1\">\r\n                                                                <i class=\"helper\"></i>Debit\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div class=\"radio radio-inline\">\r\n                                                            <label>\r\n                                                                <input type=\"radio\"  formControlName=\"TYPE\"  name=\"TYPE\" value=\"type2\" \r\n                                                                id=\"TYPE2\">\r\n                                                                <i class=\"helper\"></i>Credit\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div class=\"radio radio-inline\">\r\n                                                            <label>\r\n                                                                <input type=\"radio\"  formControlName=\"TYPE\"  name=\"TYPE\" value=\"type3\" \r\n                                                                id=\"TYPE3\">\r\n                                                                <i class=\"helper\"></i>All\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </div>\r\n                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                   \r\n                    \r\n                    \r\n                    \r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-4\"> <label for=\"GL_ACNO\">Charges GL Account Number<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"GL_ACNO\" bindValue=\"value\" [(ngModel)]=\"ngGlAC\"\r\n                                        formControlName=\"GL_ACNO\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" placeholder=\"\">\r\n                                        <ng-option *ngFor=\"let values of GLACNooption\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['GL_ACNO'].invalid && (angForm.controls['GL_ACNO'].dirty || angForm.controls['GL_ACNO'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['GL_ACNO'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"><label for=\"PARTICULAR\">Particulars</label></div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"PARTICULAR\" class=\"form-control\"\r\n                                        placeholder=\" \" id=\"PARTICULAR\" value=\"charges.value\"\r\n                                        (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) ||($event.charCode >= 48 && $event.charCode < 58) || ($event.charCode <= 32)\"\r\n                                        \r\n                                        title=\"Input allowed only  A-Z a-z 0-9 - / . (Space)\"\r\n                                        formControlName=\"PARTICULAR\">\r\n                                </span>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"><label for=\"TOTAL_CHARGE\">Total Charges</label></div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" style=\"text-align: right;\" name=\"TOTAL_CHARGE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                        class=\"form-control\" placeholder=\" \" id=\"TOTAL_CHARGE\" value=\"\"\r\n                                        maxlength=\"15\" \r\n                                        title=\"Input allowed only   0-9\" required\r\n                                        formControlName=\"TOTAL_CHARGE\" disabled>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\n\r\n@Component({\r\n  selector: 'app-dead-stock-depreciation',\r\n  templateUrl: './dead-stock-depreciation.component.html',\r\n  styleUrls: ['./dead-stock-depreciation.component.scss']\r\n})\r\nexport class DeadStockDepreciationComponent implements OnInit {\r\n\r\n  formSubmitted = false;\r\n  //api\r\n  url = environment.base_url;\r\n\r\n  // Formgroup variable\r\n  angForm: FormGroup;\r\n\r\n  // dropdown variaqbles\r\n  branch_code: any;\r\n  ngBranchCode:any=null\r\n\r\n  // date variables\r\n  maxDate: Date;\r\n  minDate: Date;\r\n  ngcalculationdate:any=null\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder, private http: HttpClient,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private config: NgSelectConfig,\r\n  ) { \r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n\r\n\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n      this.ngBranchCode = data[0].value\r\n\r\n    })\r\n  }\r\n\r\n  createForm(){\r\n\r\n    this.angForm = this.fb.group({\r\n      BRANCH_CODE: ['', [Validators.required]],\r\n      CAL_DATE: ['', [Validators.required]],\r\n\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Dead Stock Depreciation</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\r\n                            class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" \r\n                                        placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\"> <label for=\"CAL_DATE\">Calculation Date<sub\r\n                            class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"CAL_DATE\" id=\"CAL_DATE\"\r\n                                        class=\"form-control\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                        [minDate]=\"minDate\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        formControlName=\"CAL_DATE\" bsDatepicker required>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['CAL_DATE'].invalid && (angForm.controls['CAL_DATE'].dirty || angForm.controls['CAL_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['CAL_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\">Delete</button>\r\n                            <button class=\"btn btn-outline-primary btn-sm\">Process</button>\r\n                            <button class=\"btn btn-outline-primary btn-sm\">Report</button>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport * as moment from 'moment';\r\nimport { Subject } from 'rxjs-compat';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-npamarking',\r\n  templateUrl: './npamarking.component.html',\r\n  styleUrls: ['./npamarking.component.scss']\r\n})\r\nexport class NPAMarkingComponent implements OnInit {\r\n\r\n  formSubmitted = false;\r\n  //api\r\n  url = environment.base_url;\r\n\r\n  // Formgroup variable\r\n  angForm: FormGroup;\r\n\r\n   @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  // dtTrigger: Subject<any> = new Subject();\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n\r\n  // dropdown variaqbles\r\n  branch_code: any;\r\n  ngBranchCode:any=null\r\n  ngscheme:any=null\r\n  scheme:any\r\n\r\n  //for date\r\n  maxDate: Date;\r\n  minDate: Date;\r\n  bsValue = new Date();\r\n  warrentDate: any \r\n  ngwarrentDate: any = null\r\n  fromdate: any = null\r\n  todate: any = null\r\n\r\n  // Transaction type variable\r\n  ngnpaclass: any = null\r\n  npaClass = [\r\n    { id: 'S', label: 'Standard' },\r\n    { id: 'SS', label: 'Sub Standard' },\r\n    { id: 'D1', label: 'Doubtfull Assets 1' },\r\n    { id: 'D2', label: 'Doubtfull Assets 2' },\r\n    { id: 'D3', label: 'Doubtfull Assets 3' },\r\n    { id: 'L', label: 'Loss Assets' }\r\n  ]\r\n\r\n  constructor(\r\n    private fb: FormBuilder, private http: HttpClient,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private config: NgSelectConfig,\r\n  ) { \r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate());\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n      this.ngBranchCode = data[0].value\r\n\r\n    })\r\n\r\n    this.http.get(this.url + '/npa-marking').subscribe((data) => {\r\n      this.warrentDate = data\r\n    })\r\n\r\n\r\n    \r\n  }\r\n  createForm(){\r\n\r\n    this.angForm = this.fb.group({\r\n      BRANCH_CODE: ['', [Validators.required]],\r\n      AC_TYPE: ['', [Validators.required]],\r\n      WARRENT_DATE: ['', [Validators.required]],\r\n      FROM_DATE: ['', [Validators.required]],\r\n      TO_DATE: ['', [Validators.required]],\r\n      NPA_CLASS:['']\r\n     \r\n\r\n    })\r\n  }\r\n   // checking date \r\n   counter = 0;\r\n   checkDate(event){\r\n \r\n     this.counter = this.counter+1;\r\n     if(this.counter>2 && event.length!=0){\r\n       let value1\r\n     let value2\r\n     value1 = moment(this.fromdate).format('DD/MM/YYYY');\r\n     // console.log(value1)\r\n     value2 = moment(this.todate).format('DD/MM/YYYY');\r\n     // console.log(value2)\r\n     if(moment(value1).isSame(value2)){\r\n       Swal.fire(\"from date should not be same as to date\")\r\n       this.angForm.controls['TO_DATE'].reset()\r\n     }\r\n     }\r\n     \r\n   }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Npa Marking</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\r\n                            class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" \r\n                                        placeholder=\"\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Code<sub\r\n                            class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\r\n                                        placeholder=\"\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"WARRENT_DATE\">Div.Warrent Date<sub\r\n                            class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"WARRENT_DATE\" bindValue=\"WARRENT_DATE\" [(ngModel)]=\"ngwarrentDate\"\r\n                                        formControlName=\"WARRENT_DATE\" bindLabel=\"WARRENT_DATE\"\r\n                                        title=\"Compulsory Selection\" required placeholder=\"Warrent Date\">\r\n                                        <ng-option *ngFor=\"let values of warrentDate\" [value]=\"values\">\r\n                                            {{values.WARRENT_DATE}} ({{values.DIV_FROM_YEAR}}-{{values.DIV_TO_YEAR}})\r\n                                        </ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['WARRENT_DATE'].invalid && (angForm.controls['WARRENT_DATE'].dirty || angForm.controls['WARRENT_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['WARRENT_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_DATE\">From Date</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"FROM_DATE\" id=\"FROM_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"fromdate\" [bsValue]=\"bsValue\" \r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"FROM_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['FROM_DATE'].invalid && (angForm.controls['FROM_DATE'].dirty || angForm.controls['FROM_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['FROM_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_DATE\">To Date</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TO_DATE\" id=\"TO_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"todate\"  (bsValueChange)=\"checkDate($event)\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"fromdate\"  [maxDate]=\"maxDate\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TO_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['TO_DATE'].invalid && (angForm.controls['TO_DATE'].dirty || angForm.controls['TO_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TO_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\">Update</button>\r\n                            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table datatable>\r\n                                        <thead>\r\n                                            <td>Serial Number</td>\r\n                                            <td>Account Number</td>\r\n                                            <td>Account Name</td>\r\n                                            <td>NPA Class</td>\r\n                                            <td class=\"td_right\">NPA Provision</td>\r\n                                            <td>NPA Percentage</td>\r\n                                            <td class=\"td_right\">To Be Recovered</td>\r\n                                            \r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td></td>\r\n                                                <td></td>\r\n                                                <td></td>\r\n                                                <td>\r\n                                                    <ng-select id=\"NPA_CLASS\" [items]=\"npaClass\" name=\"type\"\r\n                                                    bindLabel=\"label\" formControlName=\"NPA_CLASS\"\r\n                                                    [ngClass]=\"{'form-submitted': formSubmitted}\" \r\n                                                    [(ngModel)]=\"ngnpaclass\" placeholder=\"Transaction Type\" required>\r\n                                                    </ng-select>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <input>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <input>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <input>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                        <!-- <tbody>\r\n                                            <tr>\r\n                                                <td class=\"no-data-available\" style=\"text-align: center;\">\r\n                                                    No data!\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody> -->\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-npaprocess-locking',\r\n  templateUrl: './npaprocess-locking.component.html',\r\n  styleUrls: ['./npaprocess-locking.component.scss']\r\n})\r\nexport class NPAProcessLockingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>3. NPA Process Locking</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\n\r\n@Component({\r\n  selector: 'app-npaprocess',\r\n  templateUrl: './npaprocess.component.html',\r\n  styleUrls: ['./npaprocess.component.scss']\r\n})\r\nexport class NPAProcessComponent implements OnInit {\r\n  // variable for validation\r\n  formSubmitted = false;\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n\r\n  // dropdown variables\r\n  scheme\r\n  ngscheme: any = null\r\n  ngBranchCode: any = null\r\n  glaccount: any = null;\r\n  schemeACNo: any[];\r\n  branch_code: any[];\r\n  schemeedit: any;\r\n  ACMasterDropdown: any[];\r\n  fromAC\r\n  ngfromac:any =null\r\n  ngtoac: any = null\r\n  ToAC\r\n  NPAdate\r\n  // variables for button\r\n  showButton: boolean =true;\r\n  updateShow: boolean;\r\n  newbtnShow: boolean;\r\n\r\n    // Date variables\r\n    todate: any = null;\r\n    fromdate:any=null\r\n    maxDate: Date;\r\n    minDate: Date;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private config: NgSelectConfig,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n  ) {\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      var allscheme = data.filter(function (scheme) {\r\n        // return (scheme.name == 'LN' || scheme.name == 'CC' || scheme.name == 'DS');\r\n        return (scheme.name == 'LN' || scheme.name == 'CC');\r\n      });\r\n      this.scheme = allscheme;\r\n    })\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n      this.ngBranchCode = data[0].value\r\n    })\r\n\r\n  }\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      BRANCH_CODE: ['', [Validators.required]],\r\n      AC_TYPE: ['', [Validators.required]],\r\n      NPA_DATE: ['', [Validators.required]],\r\n      FROM_AC: [''],\r\n      TO_AC:[''],\r\n      RECOVER_AMT:[''],\r\n    });\r\n  }\r\n  schemechange(event) {\r\n    this.getschemename = event.name\r\n    this.ngscheme = event.value\r\n    this.getIntroducer()\r\n  }\r\n  obj: any\r\n  getschemename: any\r\n  //get account no according scheme for introducer\r\n  getIntroducer() {\r\n    this.obj = [this.ngscheme, this.ngBranchCode]\r\n    switch (this.getschemename) {\r\n   \r\n      case 'LN':\r\n        this.schemeAccountNoService.getTermLoanSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.fromAC = data;\r\n          this.ToAC = data\r\n        })\r\n        break;\r\n      case 'CC':\r\n        this.schemeAccountNoService.getCashCreditSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.fromAC = data;\r\n          this.ToAC = data\r\n        })\r\n        break\r\n    }\r\n  }\r\n  getACmastercode(){}\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>NPA Processing (M1)</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" \r\n                                        placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\r\n                                        (change)=\"schemechange($event)\"  (change)=\"getACmastercode()\" placeholder=\"Scheme\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"NPA_DATE\">NPA Provision Date</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"NPA_DATE\" id=\"NPA_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"NPAdate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\" \r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"NPA_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['NPA_DATE'].invalid && (angForm.controls['NPA_DATE'].dirty || angForm.controls['NPA_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['NPA_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_AC\">From Account Number</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"FROM_AC\" bindValue=\"value\" [(ngModel)]=\"ngfromac\"\r\n                                        formControlName=\"FROM_AC\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"From A/C\">\r\n                                        <ng-option *ngFor=\"let values of fromAC\" [value]=\"values\">\r\n                                            {{values.label}} {{values.name}}</ng-option>\r\n                                    </ng-select>\r\n                                    \r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['FROM_AC'].invalid && (angForm.controls['FROM_AC'].dirty || angForm.controls['FROM_AC'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['FROM_AC'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_AC\">To Account Number</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"TO_AC\" bindValue=\"value\" [(ngModel)]=\"ngtoac\" formControlName=\"TO_AC\"\r\n                                        bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"To A/C\">\r\n                                        <ng-option *ngFor=\"let values of ToAC\" [value]=\"values\">\r\n                                            {{values.label}} {{values.name}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['TO_AC'].invalid && (angForm.controls['TO_AC'].dirty || angForm.controls['TO_AC'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TO_AC'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input type=\"checkbox\" class=\"border-checkbox\" id=\"RECOVER_AMT\"\r\n                                        formControlName=\"RECOVER_AMT\">\r\n                                    <label class=\"border-checkbox-label\" for=\"RECOVER_AMT\">Is To Be Recover Amount Process \r\n                                        ?</label>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12\">\r\n                        <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\">Posting</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport {ACMasterDropdownService} from '../../../../shared/dropdownService/ac-master-dropdown.service'\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal from 'sweetalert2';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\n\r\n@Component({\r\n  selector: 'app-overdraft-interest-posting',\r\n  templateUrl: './overdraft-interest-posting.component.html',\r\n  styleUrls: ['./overdraft-interest-posting.component.scss']\r\n})\r\nexport class OverdraftInterestPostingComponent implements OnInit {\r\n\r\n  formSubmitted = false;\r\n  //api\r\n  url = environment.base_url;\r\n\r\n  // Formgroup variable\r\n  angForm: FormGroup;\r\n\r\n  // dropdown variaqbles\r\n  branch_code: any;\r\n  ngBranchCode:any=null\r\n  schemeedit:any=null\r\n  ngfromac:any=null\r\n  ngtoac:any=null\r\n  ngGlAC:any=null\r\n  scheme: any[];\r\n  fromAC:any[];\r\n  ToAC:any[];\r\n  GLACNooption: any[];\r\n  schemeACNo: any[];\r\n\r\n  // date variables\r\n  maxDate: Date;\r\n  minDate: Date;\r\n\r\n  constructor(\r\n    private fb: FormBuilder, private http: HttpClient,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private ACMasterDropdownService: ACMasterDropdownService,\r\n    private config: NgSelectConfig,\r\n  ) {\r\n      this.maxDate = new Date();\r\n      this.minDate = new Date();\r\n      this.minDate.setDate(this.minDate.getDate() - 1);\r\n      this.maxDate.setDate(this.maxDate.getDate())\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.createForm();\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n      this.ngBranchCode = data[0].value\r\n\r\n    })\r\n    this.schemeCodeDropdownService.getAllSchemeList1().pipe(first()).subscribe(data => {\r\n      this.scheme = data;\r\n    })\r\n\r\n    this.ACMasterDropdownService.getACMasterList()\r\n      .pipe(first())\r\n      .subscribe((data) => {\r\n        this.GLACNooption = data;\r\n      });\r\n  }\r\n\r\n  createForm(){\r\n\r\n    this.angForm = this.fb.group({\r\n      BRANCH_CODE: ['', [Validators.required]],\r\n      AC_TYPE: ['', [Validators.required]],\r\n      FROM_AC: ['', [Validators.required]],\r\n      TO_AC:['',[Validators.required]],\r\n      CAL_DATE:['',[Validators.required]],\r\n      GL_ACNO:['',[Validators.required]],\r\n      PARTICULAR:[''],\r\n      TOTAL_CHARGE:[''],\r\n      AUTO_TRAN:[''],\r\n\r\n    })\r\n  }\r\n\r\n  getBranch() {\r\n    this.schemeedit = null\r\n    this.ngfromac = null\r\n    this.ngtoac = null\r\n    \r\n  }\r\n  schemechange(event) {\r\n\r\n    this.getschemename = event.name\r\n    this.schemeedit = event.value\r\n    this.getIntroducer()\r\n\r\n\r\n  }\r\n  obj: any\r\n  getschemename: any\r\n\r\n\r\n  //get account no according scheme for introducer\r\n\r\n  getIntroducer() {\r\n    this.obj = [this.schemeedit, this.ngBranchCode]\r\n    switch (this.getschemename) {\r\n      case 'SB':\r\n        this.schemeAccountNoService.getSavingSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.fromAC = data;\r\n          this.ToAC = data\r\n        })\r\n        break;\r\n        case 'SH':\r\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.fromAC = data;\r\n          this.ToAC = data\r\n        })\r\n        break;\r\n        case 'CA':\r\n        this.schemeAccountNoService.getCurrentAccountSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.fromAC = data;\r\n          this.ToAC = data\r\n        })\r\n        break;\r\n\r\n      case 'CC':\r\n\r\n        this.schemeAccountNoService.getCashCreditSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.fromAC = data;\r\n          this.ToAC = data\r\n\r\n        })\r\n        break;\r\n        case 'TD':\r\n        this.schemeAccountNoService.getTermDepositSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.fromAC = data;\r\n          this.ToAC = data\r\n        })\r\n        break;\r\n        case 'DS':\r\n        this.schemeAccountNoService.getDisputeLoanSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.fromAC = data;\r\n          this.ToAC = data\r\n        })\r\n        break;\r\n        case 'GS':\r\n        this.schemeAccountNoService.getAnamatSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.fromAC = data;\r\n          this.ToAC = data\r\n        })\r\n        break;\r\n        case 'PG':\r\n        this.schemeAccountNoService.getPigmyAccountSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.fromAC = data;\r\n          this.ToAC = data\r\n        })\r\n        break;\r\n\r\n      case 'LN':\r\n\r\n        this.schemeAccountNoService.getTermLoanSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.fromAC = data;\r\n          this.ToAC = data\r\n\r\n\r\n        })\r\n        break;\r\n        case 'AG':\r\n        this.schemeAccountNoService.getPigmyAgentSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.fromAC = data;\r\n          this.ToAC = data\r\n        })\r\n        break;\r\n        case 'IV':\r\n        this.schemeAccountNoService.getInvestmentSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.fromAC = data;\r\n          this.ToAC = data\r\n        })\r\n        break;\r\n        case 'GL':\r\n          this.schemeAccountNoService.getGeneralLedgerList1(this.obj).pipe(first()).subscribe(data => {\r\n            this.fromAC = data;\r\n          this.ToAC = data\r\n          })\r\n          break;\r\n    }\r\n  }\r\n\r\n  //decimal content show purpose wrote below function\r\n  decimalAllContent($event) {\r\n    let value = Number($event.target.value);\r\n    let data = value.toFixed(2);\r\n    $event.target.value = data;\r\n  }\r\n\r\n  select(){\r\n    if (this.angForm.controls['FROM_AC'].value < this.angForm.controls['TO_AC'].value) {\r\n      Swal.fire(\"To Account Number Must Be Greater Than From Account Number\");\r\n     \r\n     \r\n    }\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>OverDraft Interest Posting</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\r\n                            class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" (change)=\"getBranch()\"\r\n                                        placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Code<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"schemeedit\"\r\n                                 formControlName=\"AC_TYPE\" bindLabel=\"label\" (change)=\"schemechange($event)\"\r\n                                title=\"Compulsory Selection\" required placeholder=\"Scheme Code\">\r\n                                <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                    {{values.label}}</ng-option>\r\n                            </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_AC\">From Account Number<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"FROM_AC\" bindValue=\"value\" [(ngModel)]=\"ngfromac\" (change)=\"select()\"\r\n                                        formControlName=\"FROM_AC\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"From A/C\">\r\n                                        <ng-option *ngFor=\"let values of fromAC\" [value]=\"values\">\r\n                                            {{values.label}} {{values.name}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['FROM_AC'].invalid && (angForm.controls['FROM_AC'].dirty || angForm.controls['FROM_AC'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['FROM_AC'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_AC\">To Account Number<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"TO_AC\" bindValue=\"value\" [(ngModel)]=\"ngtoac\" formControlName=\"TO_AC\"\r\n                                    bindLabel=\"label\" title=\"Compulsory Selection\" (change)=\"select()\"\r\n                                    [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"To A/C\">\r\n                                    <ng-option *ngFor=\"let values of ToAC\" [value]=\"values\">\r\n                                        {{values.label}} {{values.name}}</ng-option>\r\n                                </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['TO_AC'].invalid && (angForm.controls['TO_AC'].dirty || angForm.controls['TO_AC'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TO_AC'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"CAL_DATE\">Calculation Upto Date<sub\r\n                            class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"CAL_DATE\" id=\"CAL_DATE\"\r\n                                        class=\"form-control\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                        [maxDate]=\"maxDate\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        formControlName=\"CAL_DATE\" bsDatepicker required>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['CAL_DATE'].invalid && (angForm.controls['CAL_DATE'].dirty || angForm.controls['CAL_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['CAL_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"GL_ACNO\">GL Account Number<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"GL_ACNO\" bindValue=\"value\" [(ngModel)]=\"ngGlAC\"\r\n                                        formControlName=\"GL_ACNO\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" placeholder=\"GL Account Number\">\r\n                                        <ng-option *ngFor=\"let values of GLACNooption\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['GL_ACNO'].invalid && (angForm.controls['GL_ACNO'].dirty || angForm.controls['GL_ACNO'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['GL_ACNO'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"><label for=\"TOTAL_CHARGE\">Total Charges</label></div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" style=\"text-align: right;\" name=\"TOTAL_CHARGE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                        class=\"form-control\" placeholder=\" \" id=\"TOTAL_CHARGE\" value=\"\"\r\n                                        maxlength=\"15\" (focusout)=\"decimalAllContent($event)\"\r\n                                        title=\"Input allowed only   0-9\" required\r\n                                        formControlName=\"TOTAL_CHARGE\">\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2  \"><label for=\"PARTICULAR\">Particulars</label></div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"PARTICULAR\" class=\"form-control\"\r\n                                        placeholder=\" \" id=\"PARTICULAR\" \r\n                                        (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) ||($event.charCode >= 48 && $event.charCode < 58) || ($event.charCode <= 32)\"\r\n                                        \r\n                                        title=\"Input allowed only  A-Z a-z 0-9 - / . (Space)\"\r\n                                        formControlName=\"PARTICULAR\">\r\n                                </span>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group\r\n                                    border-checkbox-group-primary\">\r\n                                  <input class=\"border-checkbox\" type=\"checkbox\" id=\"AUTO_TRAN\"\r\n                                    formControlName=\"AUTO_TRAN\" />\r\n                                  <label class=\"border-checkbox-label\" for=\"AUTO_TRAN\">Auto Transactions Passing?</label>\r\n                                </div>\r\n                            </div>\r\n                            <button class=\"btn btn-outline-primary btn-sm\">Posting</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-payrolldatatransfer',\r\n  templateUrl: './payrolldatatransfer.component.html',\r\n  styleUrls: ['./payrolldatatransfer.component.scss']\r\n})\r\nexport class PayrolldatatransferComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>9.Payroll Data Transfer</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-payrollexportfileprocess',\r\n  templateUrl: './payrollexportfileprocess.component.html',\r\n  styleUrls: ['./payrollexportfileprocess.component.scss']\r\n})\r\nexport class PayrollexportfileprocessComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>8.Payroll Export File Process</p>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-penal-interest-calculation',\r\n  templateUrl: './penal-interest-calculation.component.html',\r\n  styleUrls: ['./penal-interest-calculation.component.scss']\r\n})\r\nexport class PenalInterestCalculationComponent implements OnInit {\r\n  formSubmitted = false;\r\n  //api\r\n  url = environment.base_url;\r\n\r\n  // Formgroup variable\r\n  angForm: FormGroup;\r\n\r\n  // dropdown variaqbles\r\n  branch_code: any;\r\n  ngBranchCode:any=null\r\n  ngscheme:any=null\r\n  scheme: any[];\r\n\r\n  constructor(\r\n    private fb: FormBuilder, private http: HttpClient,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    \r\n    private config: NgSelectConfig,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.createForm();\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n      this.ngBranchCode = data[0].value\r\n\r\n    })\r\n    this.schemeCodeDropdownService.getAllSchemeList1().pipe(first()).subscribe(data => {\r\n      var allscheme = data.filter(function (scheme) {\r\n        return (scheme.name == 'CC' || scheme.name == 'SB'|| scheme.name == 'TD'|| scheme.name == 'LN'|| scheme.name == 'CA');\r\n      });\r\n      this.scheme = allscheme;\r\n    })\r\n   \r\n\r\n  }\r\n\r\n  createForm(){\r\n\r\n    this.angForm = this.fb.group({\r\n      BRANCH_CODE: ['', [Validators.required]],\r\n      AC_TYPE: ['', [Validators.required]],\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Penal Interest Calculation</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\r\n                            class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" \r\n                                        placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme<sub\r\n                            class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\r\n                                        placeholder=\"Scheme\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\">Process</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { ProcessACMComponent } from './process-acm.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProcessACMComponent,\r\n    data: {\r\n      title: 'Process And Calculation Menu',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProcessACMRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-process-acm',\r\n  templateUrl: './process-acm.component.html',\r\n  styleUrls: ['./process-acm.component.scss']\r\n})\r\nexport class ProcessACMComponent implements OnInit {\r\n  NPAProcess = true;\r\n  NPAMarking = false;\r\n  NPAProcessLocking = false;\r\n  DeadStockDepreciation = false;\r\n  OverdraftInterestPosting = false;\r\n  PenalInterestCalculation = false;\r\n  TransferToGLbyClosingAC = false;\r\n  payrollexportfileprocess = false;\r\n  payrolldatatransfer = false;\r\n  ChargesPosting=false;\r\n\r\n\r\n  dtExportButtonOptions : any = {};\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.dtExportButtonOptions = {\r\n      ajax: 'fake-data/datatable-data.json',\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"btn btn-outline-primary btn-sm\">Edit</button>' + ' ' + '<button class=\"btn btn-outline-primary btn-sm\">Delete</button>';\r\n          }\r\n        },\r\n        {\r\n        title: 'Name',\r\n        data: 'name'\r\n      }, {\r\n        title: 'Position',\r\n        data: 'position'\r\n      }, {\r\n        title: 'Office',\r\n        data: 'office'\r\n      }, {\r\n        title: 'Age',\r\n        data: 'age'\r\n      }, {\r\n        title: 'Start Date',\r\n        data: 'date'\r\n      }, {\r\n        title: 'Salary',\r\n        data: 'salary'\r\n      }],\r\n      dom: 'Bfrtip',\r\n      buttons: [\r\n        'copy',\r\n        'print',\r\n        'excel',\r\n        'csv'\r\n      ]\r\n    };\r\n  }\r\n\r\n  OpenLink(val) {\r\n    document.body.scrollTop = 0;\r\n    document.documentElement.scrollTop = 0;\r\n    // \r\n    if (val == 1) {\r\n      this.NPAProcess = true;\r\n      this.NPAMarking = false;\r\n      this.NPAProcessLocking = false;\r\n      this.DeadStockDepreciation = false;\r\n      this.OverdraftInterestPosting = false;\r\n      this.PenalInterestCalculation = false;\r\n      this.TransferToGLbyClosingAC = false;\r\n      this.payrollexportfileprocess = false;\r\n      this.payrolldatatransfer = false;\r\n      this.ChargesPosting=false;\r\n        \r\n      }\r\n    if (val == 2) {\r\n      this.NPAProcess = false;\r\n      this.NPAMarking = true;\r\n      this.NPAProcessLocking = false;\r\n      this.DeadStockDepreciation = false;\r\n      this.OverdraftInterestPosting = false;\r\n      this.PenalInterestCalculation = false;\r\n      this.TransferToGLbyClosingAC = false;\r\n      this.payrollexportfileprocess = false;\r\n      this.payrolldatatransfer = false;\r\n      this.ChargesPosting=false;\r\n    }\r\n    if (val == 3) {\r\n      this.NPAProcess = false;\r\n      this.NPAMarking = false;\r\n      this.NPAProcessLocking = true;\r\n      this.DeadStockDepreciation = false;\r\n      this.OverdraftInterestPosting = false;\r\n      this.PenalInterestCalculation = false;\r\n      this.TransferToGLbyClosingAC = false;\r\n      this.payrollexportfileprocess = false;\r\n      this.payrolldatatransfer = false;\r\n      this.ChargesPosting=false;\r\n\r\n    }\r\n    if (val == 4) {\r\n      this.NPAProcess = false;\r\n      this.NPAMarking = false;\r\n      this.NPAProcessLocking = false;\r\n      this.DeadStockDepreciation = true;\r\n      this.OverdraftInterestPosting = false;\r\n      this.PenalInterestCalculation = false;\r\n      this.TransferToGLbyClosingAC = false;\r\n      this.payrollexportfileprocess = false;\r\n      this.payrolldatatransfer = false;\r\n      this.ChargesPosting=false;\r\n    }\r\n    if (val == 5) {\r\n      this.NPAProcess = false;\r\n      this.NPAMarking = false;\r\n      this.NPAProcessLocking = false;\r\n      this.DeadStockDepreciation = false;\r\n      this.OverdraftInterestPosting = true;\r\n      this.PenalInterestCalculation = false;\r\n      this.TransferToGLbyClosingAC = false;\r\n      this.payrollexportfileprocess = false;\r\n      this.payrolldatatransfer = false;\r\n      this.ChargesPosting=false;\r\n\r\n    }\r\n    if (val == 6) {\r\n      this.NPAProcess = false;\r\n      this.NPAMarking = false;\r\n      this.NPAProcessLocking = false;\r\n      this.DeadStockDepreciation = false;\r\n      this.OverdraftInterestPosting = false;\r\n      this.PenalInterestCalculation = true;\r\n      this.TransferToGLbyClosingAC = false;\r\n      this.payrollexportfileprocess = false;\r\n      this.payrolldatatransfer = false;\r\n      this.ChargesPosting=false;\r\n    }\r\n    if (val == 7) {\r\n      this.NPAProcess = false;\r\n      this.NPAMarking = false;\r\n      this.NPAProcessLocking = false;\r\n      this.DeadStockDepreciation = false;\r\n      this.OverdraftInterestPosting = false;\r\n      this.PenalInterestCalculation = false;\r\n      this.TransferToGLbyClosingAC = true;\r\n      this.payrollexportfileprocess = false;\r\n      this.payrolldatatransfer = false;\r\n      this.ChargesPosting=false;\r\n\r\n    }\r\n    if (val == 8) {\r\n      this.NPAProcess = false;\r\n      this.NPAMarking = false;\r\n      this.NPAProcessLocking = false;\r\n      this.DeadStockDepreciation = false;\r\n      this.OverdraftInterestPosting = false;\r\n      this.PenalInterestCalculation = false;\r\n      this.TransferToGLbyClosingAC = false;\r\n      this.payrollexportfileprocess = true;\r\n      this.payrolldatatransfer = false;\r\n      this.ChargesPosting=false;\r\n      \r\n\r\n    }\r\n    if (val == 9) {\r\n      this.NPAProcess = false;\r\n      this.NPAMarking = false;\r\n      this.NPAProcessLocking = false;\r\n      this.DeadStockDepreciation = false;\r\n      this.OverdraftInterestPosting = false;\r\n      this.PenalInterestCalculation = false;\r\n      this.TransferToGLbyClosingAC = false;\r\n      this.payrollexportfileprocess = false;\r\n      this.payrolldatatransfer = true;\r\n      this.ChargesPosting=false;\r\n\r\n    }\r\n    if (val == 10) {\r\n      this.NPAProcess = false;\r\n      this.NPAMarking = false;\r\n      this.NPAProcessLocking = false;\r\n      this.DeadStockDepreciation = false;\r\n      this.OverdraftInterestPosting = false;\r\n      this.PenalInterestCalculation = false;\r\n      this.TransferToGLbyClosingAC = false;\r\n      this.payrollexportfileprocess = false;\r\n      this.payrolldatatransfer = false;\r\n      this.ChargesPosting=true;\r\n  \r\n    }\r\n  }\r\n}\r\n","\r\n<div class=\"row\">\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Process Options</h5>\r\n            </div>\r\n            <div class=\"card-block\">\r\n                <div class=\"col-md-12\">\r\n                    <perfect-scrollbar style=\"max-width: 600px; max-height: 450px;\">\r\n\r\n                        <ul class=\"basic-list\">\r\n                            <li>\r\n                                <h6> <a (click)=\"OpenLink(1)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': NPAProcess}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">1. NPA Process</a></h6>\r\n                            </li>\r\n                            <li>\r\n                                <h6> <a (click)=\"OpenLink(2)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': NPAMarking}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">2. NPA Marking</a></h6>\r\n                            </li>\r\n                            <li>\r\n                                <h6> <a (click)=\"OpenLink(3)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': NPAProcessLocking}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">3. NPA Process Locking</a></h6>\r\n                            </li>\r\n                            <li>\r\n                                <h6> <a (click)=\"OpenLink(4)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': DeadStockDepreciation}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">4. Dead Stock Depreciation</a></h6>\r\n                            </li>\r\n                            <li>\r\n                                <h6> <a (click)=\"OpenLink(5)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': OverdraftInterestPosting}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">5.Overdraft Interest Posting (On Debit Bal. only)</a></h6>\r\n                            </li>\r\n                            <li>\r\n                                <h6> <a (click)=\"OpenLink(6)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': PenalInterestCalculation}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">6. Penal Interest Calculation</a></h6>\r\n                            </li>\r\n                            <li>\r\n                                <h6> <a (click)=\"OpenLink(7)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': TransferToGLbyClosingAC}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">7. Transfer To GL by Closing A/c</a></h6>\r\n                            </li>\r\n                            <li>\r\n                                <h6> <a (click)=\"OpenLink(8)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': payrollexportfileprocess}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">8.Payroll Export File Process</a></h6>\r\n                            </li>\r\n                            <li>\r\n                                <h6> <a (click)=\"OpenLink(9)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': payrolldatatransfer}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">9.Payroll Data Transfer</a></h6>\r\n                            </li> \r\n                            <li>\r\n                                <h6> <a (click)=\"OpenLink(10)\" routerLink=\"/utility/processACM\" [ngClass]=\"{'isActive': ChargesPosting}\" routerLinkActive=\"active\" class=\"text-right f-w-600\" id=\"pointer\">10.Charges Posting</a></h6>\r\n                            </li> \r\n                      \r\n                           \r\n                        </ul>\r\n                    </perfect-scrollbar>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-9\">\r\n        <div class=\"card-block\">\r\n            <div *ngIf=\"NPAProcess\">\r\n                <app-npaprocess></app-npaprocess>\r\n            </div>\r\n            <div *ngIf=\"NPAMarking\">\r\n                <app-npamarking></app-npamarking>\r\n            </div>\r\n            <div *ngIf=\"NPAProcessLocking\">\r\n                <app-npaprocess-locking></app-npaprocess-locking>\r\n            </div>\r\n            <div *ngIf=\"DeadStockDepreciation\">\r\n                <app-dead-stock-depreciation></app-dead-stock-depreciation>\r\n            </div>\r\n            <div *ngIf=\"OverdraftInterestPosting\">\r\n                <app-overdraft-interest-posting></app-overdraft-interest-posting>\r\n            </div>\r\n            <div *ngIf=\"PenalInterestCalculation\">\r\n                <app-penal-interest-calculation></app-penal-interest-calculation>\r\n            </div>\r\n            <div *ngIf=\"TransferToGLbyClosingAC \">\r\n                <app-transfer-to-glby-closing-ac></app-transfer-to-glby-closing-ac>\r\n            </div>\r\n            <div *ngIf=\"payrollexportfileprocess\">\r\n                <app-payrollexportfileprocess></app-payrollexportfileprocess>\r\n            </div>\r\n            <div *ngIf=\"payrolldatatransfer\">\r\n                <app-payrolldatatransfer></app-payrolldatatransfer>\r\n            </div>\r\n            <div *ngIf=\"ChargesPosting\">\r\n                <app-charges-posting></app-charges-posting>\r\n            </div>\r\n          \r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ProcessACMComponent } from './process-acm.component';\r\nimport { ProcessACMRoutingModule } from './process-acm-routing.module';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { NPAProcessComponent } from './npaprocess/npaprocess.component';\r\nimport { NPAMarkingComponent } from './npamarking/npamarking.component';\r\nimport { NPAProcessLockingComponent } from './npaprocess-locking/npaprocess-locking.component';\r\nimport { DeadStockDepreciationComponent } from './dead-stock-depreciation/dead-stock-depreciation.component';\r\nimport { OverdraftInterestPostingComponent } from './overdraft-interest-posting/overdraft-interest-posting.component';\r\nimport { PenalInterestCalculationComponent } from './penal-interest-calculation/penal-interest-calculation.component';\r\nimport { TransferToGLbyClosingACComponent } from './transfer-to-glby-closing-ac/transfer-to-glby-closing-ac.component';\r\nimport { PayrolldatatransferComponent } from './payrolldatatransfer/payrolldatatransfer.component';\r\nimport { PayrollexportfileprocessComponent } from './payrollexportfileprocess/payrollexportfileprocess.component';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { ACMasterDropdownService } from 'src/app/shared/dropdownService/ac-master-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { ChargesPostingComponent } from './charges-posting/charges-posting.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ProcessACMRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    DataTablesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot()\r\n  ],\r\n  declarations: [\r\n    ProcessACMComponent,\r\n    NPAProcessComponent,\r\n    NPAMarkingComponent,\r\n    NPAProcessLockingComponent, \r\n    DeadStockDepreciationComponent, \r\n    OverdraftInterestPostingComponent, \r\n    PenalInterestCalculationComponent, \r\n    TransferToGLbyClosingACComponent,\r\n    PayrolldatatransferComponent, \r\n    PayrollexportfileprocessComponent, ChargesPostingComponent],\r\n  providers:[OwnbranchMasterService,SchemeCodeDropdownService,ACMasterDropdownService,SchemeAccountNoService,{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },]\r\n})\r\nexport class ProcessACMModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { ACMasterDropdownService } from 'src/app/shared/dropdownService/ac-master-dropdown.service';\r\nimport Swal from 'sweetalert2';\r\nimport * as moment from 'moment';\r\n@Component({\r\n  selector: 'app-transfer-to-glby-closing-ac',\r\n  templateUrl: './transfer-to-glby-closing-ac.component.html',\r\n  styleUrls: ['./transfer-to-glby-closing-ac.component.scss']\r\n})\r\nexport class TransferToGLbyClosingACComponent implements OnInit {\r\n\r\n  // variable for validation\r\n  formSubmitted = false;\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n\r\n  // dropdown variables\r\n  scheme\r\n  ngscheme: any = null\r\n  ngBranchCode: any = null\r\n  glaccount: any = null;\r\n  schemeACNo: any[];\r\n  branch_code: any[];\r\n  schemeedit: any;\r\n  ACMasterDropdown: any[];\r\n\r\n  totalCharges: any = null\r\n  // Date variables\r\n  todate: any = null;\r\n  fromdate:any=null\r\n  maxDate: any;\r\n  minDate: any;\r\n  bsValue = new Date();\r\n  // variables for button\r\n  showButton: boolean =true;\r\n  updateShow: boolean;\r\n  newbtnShow: boolean;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private config: NgSelectConfig,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    public ACMasterDropdownService: ACMasterDropdownService,\r\n  ) {\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n      this.ngBranchCode = data[0].value\r\n    })\r\n    this.schemeCodeDropdownService.getAllSchemeList1().pipe(first()).subscribe(data => {\r\n      var allscheme = data.filter(function (scheme) {\r\n        return (scheme.name == 'GS' || scheme.name == 'SH');\r\n      });\r\n      this.scheme = allscheme;\r\n    })\r\n\r\n  }\r\n  getACmastercode(event){\r\n    console.log(event)\r\n   \r\n    this.ACMasterDropdownService.getACMasterList().pipe(first()).subscribe(data => {\r\n      this.ACMasterDropdown = data;\r\n    })\r\n  }\r\n  // Method to handle validation of form\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      BRANCH_CODE: ['', [Validators.required]],\r\n      AC_TYPE: ['', [Validators.required]],\r\n      FROM_DATE: ['', [Validators.required]],\r\n      TO_DATE: ['', [Validators.required]],\r\n      GL_AC: [''],\r\n      TOTAL_CHARGES:[''],\r\n      PARTICULAR:[''],\r\n      TRAN_PASSING:[''],\r\n    })\r\n  }\r\n  getBranch() {\r\n\r\n    this.getIntroducer()\r\n  }\r\n  schemechange(event) {\r\n    this.getschemename = event.name\r\n    this.schemeedit = event.value\r\n    this.getIntroducer()\r\n  }\r\n  obj: any\r\n  getschemename: any\r\n  //get account no according scheme for introducer\r\n  getIntroducer() {\r\n    this.obj = [this.schemeedit, this.ngBranchCode]\r\n    switch (this.getschemename) {\r\n   \r\n      case 'SH':\r\n        this.schemeAccountNoService.getShareSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n      case 'GS':\r\n        this.schemeAccountNoService.getAnamatSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break\r\n    }\r\n  }\r\n    \r\n  // checking date \r\n  counter = 0;\r\n  checkDate(event){\r\n\r\n    this.counter = this.counter+1;\r\n    if(this.counter>2 && event.length!=0){\r\n      let value1\r\n    let value2\r\n    value1 = moment(this.fromdate).format('DD/MM/YYYY');\r\n    // console.log(value1)\r\n    value2 = moment(this.todate).format('DD/MM/YYYY');\r\n    // console.log(value2)\r\n    if(moment(value1).isSame(value2)){\r\n      Swal.fire(\"from date should not be same as to date\")\r\n      this.angForm.controls['TO_DATE'].reset()\r\n    }\r\n    }\r\n    \r\n  } \r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Transfer To GL by Closing A/c</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" \r\n                                        placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\r\n                                        (change)=\"schemechange($event)\"  (change)=\"getACmastercode($event)\"placeholder=\"Scheme\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"GL_AC\">GL Account<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"GL_AC\" bindValue=\"value\" [(ngModel)]=\"schemeedit\"\r\n                                (change)=\"schemechange($event)\" formControlName=\"GL_AC\" bindLabel=\"label\"\r\n                                title=\"Compulsory Selection\" required placeholder=\"GL Account Code\">\r\n                                <ng-option *ngFor=\"let values of ACMasterDropdown\" [value]=\"values\">\r\n                                    {{values.label}}</ng-option>\r\n                            </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['GL_AC'].invalid && (angForm.controls['GL_AC'].dirty || angForm.controls['GL_AC'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['GL_AC'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_DATE\">From Date</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"FROM_DATE\" id=\"FROM_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"fromdate\" [bsValue]=\"bsValue\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" \r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"FROM_DATE\" [maxDate]=\"maxDate\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker >\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['FROM_DATE'].invalid && (angForm.controls['FROM_DATE'].dirty || angForm.controls['FROM_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['FROM_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_DATE\">To Date</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TO_DATE\" id=\"TO_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"todate\"  (bsValueChange)=\"checkDate($event)\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"  [minDate]=\"fromdate\"\r\n                                        [bsValue]=\"bsValue\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TO_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['TO_DATE'].invalid && (angForm.controls['TO_DATE'].dirty || angForm.controls['TO_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TO_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2  \"><label for=\"TOTAL_CHARGES\">Total Charges</label>\r\n                        </div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\"  style=\"text-align: right;\" name=\"TOTAL_CHARGES\" class=\"form-control\"\r\n                                    (keypress)=\"($event.charCode >= 48 && $event.charCode < 58 || $event.charCode == 46 )\"\r\n                                        placeholder=\" \" id=\"TOTAL_CHARGES\" [(ngModel)]=\"totalCharges\"\r\n                                        title=\"Input allowed only  0-9 - / . (Space)\" required\r\n                                        formControlName=\"TOTAL_CHARGES\">\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                    <div class=\"col-sm-12 col-md-2  \"><label for=\"PARTICULAR\">Particulars</label>\r\n                    </div>\r\n                    <div class=\"col-md-5\">\r\n                        <div class=\"form-group input-group\">\r\n                            <span class=\"border-lable-flt\">\r\n                                <input type=\"text\" name=\"PARTICULAR\" class=\"form-control\"\r\n                                    placeholder=\" \" id=\"PARTICULAR\" \r\n                                    (keypress)=\"($event.charCode >= 65 && $event.charCode <= 90)||($event.charCode >= 97 && $event.charCode <= 122) ||($event.charCode >= 48 && $event.charCode < 58) || ($event.charCode <= 32)\"\r\n                                    style=\"text-transform: capitalize;font-size: 15px;\"\r\n                                    title=\"Input allowed only  A-Z a-z 0-9 - / . (Space)\"\r\n                                    formControlName=\"PARTICULAR\">\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"form-group form-primary form-static-label\"\r\n                        *ngIf=\"angForm.controls['PARTICULAR'].invalid && (angForm.controls['GL_AC'].dirty || angForm.controls['GL_AC'].touched)\"\r\n                        class=\"alert alert-danger\">\r\n                        <div *ngIf=\"angForm.controls['PARTICULAR'].errors?.required\">\r\n                            This field is required.\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input type=\"checkbox\" class=\"border-checkbox\" id=\"TRAN_PASSING\"\r\n                                        formControlName=\"TRAN_PASSING\">\r\n                                    <label class=\"border-checkbox-label\" for=\"TRAN_PASSING\">Auto Transactions Passing\r\n                                        ?</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\">Posting</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}