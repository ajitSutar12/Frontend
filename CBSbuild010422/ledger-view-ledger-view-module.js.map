{"version":3,"sources":["./src/app/shared/dropdownService/ac-master-dropdown.service.ts","./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/view/ledger-view/ledger-view-routing.module.ts","./src/app/theme/view/ledger-view/ledger-view.component.ts","./src/app/theme/view/ledger-view/ledger-view.component.html","./src/app/theme/view/ledger-view/ledger-view.module.ts"],"names":[],"mappings":"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","file":"ledger-view-ledger-view-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ACMasterDropdownService {\r\n\r\n    // // gl-account-master\"; \r\n    url = environment.base_url;\r\n    acMasterObject = new Array();\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getACMasterList() {\r\n        this.acMasterObject = [];\r\n        return this.http.get<any>(this.url + '/gl-account-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\r\n                    this.acMasterObject.push(obj)\r\n                });\r\n                return this.acMasterObject;\r\n            }));\r\n    }\r\n\r\n    public getACMasterbranch(branchid) {\r\n        this.acMasterObject = [];\r\n        return this.http.get<any>(this.url + '/gl-account-master/branch/' + branchid)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\r\n                    // let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id };\r\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id, name: element.AC_NO };\r\n                    this.acMasterObject.push(obj)\r\n                });\r\n                return this.acMasterObject;\r\n            }));\r\n    }\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                }); console.log('in service', this.schemeObject)\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n//import {GeneralLedgerComponent} from './general-ledger.component';\r\nimport { LedgerViewComponent } from './ledger-view.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LedgerViewComponent,\r\n    data: {\r\n      title: 'Ledger View',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LedgerViewRoutingModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport {ACMasterDropdownService} from 'src/app/shared/dropdownService/ac-master-dropdown.service'\r\nimport { environment } from 'src/environments/environment';\r\nimport { first } from 'rxjs/operators';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs-compat';\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\n\r\n@Component({\r\n  selector: 'app-ledger-view',\r\n  templateUrl: './ledger-view.component.html',\r\n  styleUrls: ['./ledger-view.component.scss']\r\n})\r\nexport class LedgerViewComponent implements OnInit {\r\n  angForm: FormGroup;\r\n  formSubmitted = false;\r\n\r\n  //api \r\n\r\n  url = environment.base_url;\r\n  \r\n\r\n  // dropdown variables\r\n  ngscheme:any=null\r\n  accountedit:any=null\r\n  allScheme: any[]\r\n  schemeACNo: any;\r\n  scheme: any[];\r\n  GLACNooption: any[];\r\n  branch_code//from ownbranchmaster\r\n  ngBranchCode: any = null\r\n\r\n  // Date variables\r\n  todate: any = null;\r\n  fromdate:any=null\r\n  maxDate: Date;\r\n  minDate: Date;\r\n  bsValue = new Date();\r\n  // bsRangeValue: Date[];\r\n\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  \r\n\r\n  // for grid variable declaration\r\n  dormantac: boolean = false\r\n  acclosedon:boolean=false\r\n  freezeac:boolean=false\r\n\r\n  \r\n  \r\n  \r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private ACMasterDropdownService: ACMasterDropdownService,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private config: NgSelectConfig,\r\n  ) { \r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate());\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n    // this.bsRangeValue = [this.bsValue, this.maxDate];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n    // this.checkdate()\r\n\r\n\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      var allscheme = data.filter(function (scheme) {\r\n        return (scheme.name == 'SB' || scheme.name == 'CA' || scheme.name == 'AG' || scheme.name == 'GS' || scheme.name == 'PG' || scheme.name == 'TD' || scheme.name == 'LN' || scheme.name == 'DS' || scheme.name == 'CC' || scheme.name == 'SH'||scheme.name == 'GL')\r\n      });\r\n      this.allScheme = allscheme;\r\n    })\r\n\r\n    this.schemeCodeDropdownService.getTermDepositSchemePatD().pipe(first()).subscribe(data => {\r\n      this.allScheme.push(data)\r\n    })\r\n    //branch List\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n    })\r\n\r\n\r\n    // this.ACMasterDropdownService.getACMasterList()\r\n    //   .pipe(first())\r\n    //   .subscribe((data) => {\r\n    //     this.GLACNooption = data;\r\n    //   });\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      BRANCH_CODE: ['', [Validators.required]],\r\n      AC_TYPE: ['', [Validators.required]],\r\n      AC_NO: ['', [Validators.required]],\r\n      FROM_DATE: ['', [Validators.required]],\r\n      TO_DATE: ['', [Validators.required]],\r\n      AC_OPDATE:['', [Validators.required]],\r\n      AMOUNT:[''],\r\n\r\n    });\r\n  }\r\n\r\n  obj: any\r\n  getschemename: any\r\n\r\n  schemechange(event) {\r\n\r\n    this.getschemename = event.name\r\n    this.ngscheme = event.value\r\n    this.getAccountlist()\r\n\r\n\r\n  }\r\n\r\n  // Fetching account from seleted scheme\r\n  getAccountlist() {\r\n    this.accountedit = null\r\n    let obj = [this.ngscheme,this.ngBranchCode]\r\n    switch (this.getschemename) {\r\n      case 'SB':\r\n        this.schemeAccountNoService.getSavingSchemeList1(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n          this.dormantac=true\r\n          this.acclosedon=true\r\n          this.freezeac=true\r\n\r\n\r\n        })\r\n      break;\r\n      case 'CA':\r\n        this.schemeAccountNoService.getCurrentAccountSchemeList1(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n          this.dormantac=true\r\n          this.acclosedon=true\r\n          this.freezeac=true\r\n\r\n\r\n        })\r\n      break;\r\n      case 'AG':\r\n        this.schemeAccountNoService.getPigmyAgentSchemeList1(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n          this.dormantac=false\r\n          this.acclosedon=true\r\n          this.freezeac=false\r\n\r\n\r\n        })\r\n      break;\r\n      case 'GS':\r\n        this.schemeAccountNoService.getAnamatSchemeList1(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n          this.dormantac=false\r\n          this.acclosedon=true\r\n          this.freezeac=false\r\n\r\n\r\n        })\r\n      break;\r\n      case 'PG':\r\n        this.schemeAccountNoService.getPigmyAccountSchemeList1(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n          this.dormantac=false\r\n          this.acclosedon=true\r\n          this.freezeac=false\r\n\r\n\r\n        })\r\n      break;\r\n      case 'TD':\r\n        this.schemeAccountNoService.getTermDepositSchemeList1(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n          this.dormantac=false\r\n          this.acclosedon=true\r\n          this.freezeac=true\r\n\r\n\r\n        })\r\n      break;\r\n      case 'LN':\r\n        this.schemeAccountNoService.getTermLoanSchemeList1(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n          this.dormantac=false\r\n          this.acclosedon=true\r\n          this.freezeac=false\r\n\r\n\r\n        })\r\n      break;\r\n      case 'DS':\r\n        this.schemeAccountNoService.getDisputeLoanSchemeList1(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n          this.dormantac=false\r\n          this.acclosedon=true\r\n          this.freezeac=false\r\n\r\n\r\n        })\r\n      break;\r\n      case 'CC':\r\n        this.schemeAccountNoService.getCashCreditSchemeList1(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n          this.dormantac=false\r\n          this.acclosedon=true\r\n          this.freezeac=false\r\n\r\n\r\n        })\r\n      break;\r\n      case 'SH':\r\n        this.schemeAccountNoService.getShareSchemeList1(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n          this.dormantac=true\r\n          this.acclosedon=true\r\n          this.freezeac=true\r\n\r\n\r\n        })\r\n      break;\r\n      case 'GL':\r\n        this.schemeAccountNoService.getGeneralLedgerList1(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n          this.dormantac=false\r\n          this.acclosedon=true\r\n          this.freezeac=false\r\n\r\n\r\n        })\r\n      break;\r\n      case 'GL':\r\n        this.schemeAccountNoService.getGeneralLedgerList1(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n          this.dormantac=true\r\n          this.acclosedon=true\r\n          this.freezeac=true\r\n\r\n\r\n        })\r\n      break;\r\n\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  // counter = 0;\r\n\r\n  // // checking date \r\n  // checkDate(event){\r\n\r\n  //   this.counter = this.counter+1;\r\n  //   if(this.counter>2 && event.length!=0){\r\n  //       let value1\r\n  //     let value2\r\n  //     value1 = moment(this.fromdate).format('DD/MM/YYYY');\r\n  //     // console.log(value1)\r\n  //     value2 = moment(this.todate).format('DD/MM/YYYY');\r\n  //     // console.log(value2)\r\n  //     if(moment(value1).isSame(value2)){\r\n  //       Swal.fire(\"from date should not be same as to date\")\r\n  //       this.angForm.controls['TO_DATE'].reset()\r\n  //     }\r\n  //   }\r\n    \r\n  \r\n\r\n\r\n  \r\n\r\n  \r\n  \r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Ledger View</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"BRANCH_CODE\">Branch<sub\r\n                            class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_TYPE\">Scheme<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                    formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                    (change)=\"schemechange($event)\"\r\n                                    [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Scheme\">\r\n                                    <ng-option *ngFor=\"let values of allScheme\" [value]=\"values\">\r\n                                        {{values.id}} {{values.label}} </ng-option>\r\n                                </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\" *ngIf=\"dormantac\">\r\n                            <div class=\"col-sm-12 col-md-2\"><label style=\"color: #1e5bc5\">Dormant Account</label></div>\r\n                        </div>\r\n                        <div class=\"col-sm\" *ngIf=\"acclosedon\">\r\n                            <div class=\"col-sm-12 col-md-2\"><label style=\"color: #1e5bc5\">A/c Closed On xx/xx/xxxx</label></div>\r\n                        </div>\r\n                        <div class=\"col-sm\" *ngIf=\"freezeac\">\r\n                            <div class=\"col-sm-12 col-md-2\"><label style=\"color: #1e5bc5\">Freeze Account</label></div>\r\n                        </div>\r\n                        \r\n                        \r\n                        \r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_NO\">Account Number<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_NO\" bindValue=\"value\" [(ngModel)]=\"accountedit\"\r\n                                     formControlName=\"AC_NO\" bindLabel=\"label\"\r\n                                    title=\"Compulsory Selection\" required placeholder=\"Account No.\">\r\n                                    <ng-option *ngFor=\"let values of schemeACNo\" [value]=\"values\">\r\n                                        {{values.label}} {{values.name}}</ng-option>\r\n                                </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_NO'].invalid && (angForm.controls['AC_NO'].dirty || angForm.controls['AC_NO'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_DATE\">From Date<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"FROM_DATE\" id=\"FROM_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"fromdate\"  [bsValue]=\"bsValue\"\r\n                                        [maxDate]=\"maxDate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"  \r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"FROM_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['FROM_DATE'].invalid && (angForm.controls['FROM_DATE'].dirty || angForm.controls['FROM_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['FROM_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_DATE\">To Date<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TO_DATE\" id=\"TO_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"todate\"  \r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"fromdate\" [maxDate]=\"maxDate\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"TO_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['TO_DATE'].invalid && (angForm.controls['TO_DATE'].dirty || angForm.controls['TO_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TO_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_OPDATE\">Account Opening Date</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AC_OPDATE\" id=\"AC_OPDATE\"\r\n                                        class=\"form-control\" \r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\" \r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"AC_OPDATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker disabled>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_OPDATE'].invalid && (angForm.controls['AC_OPDATE'].dirty || angForm.controls['AC_OPDATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_OPDATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-3\"><label for=\"AMOUNT\">Matured But Not Paid Amount</label></div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AMOUNT\" class=\"form-control\"\r\n                                        placeholder=\" \" id=\"AMOUNT\" \r\n                                        formControlName=\"AMOUNT\" disabled>\r\n                                </span>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\">View</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"col-12\">\r\n            <div class=\"table-responsive\">\r\n                <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n                class=\"table table-striped table-bordered table-hover compact\">\r\n                    <thead>\r\n                        <td class=\"td_center\">Date</td>\r\n                        <td>Cheque Number</td>\r\n                        <td>Particulars</td>\r\n                        <td class=\"td_center\">Transaction Type</td>\r\n                        <td class=\"td_right\">Dr. Amount</td>\r\n                        <td class=\"td_right\">Cr. Amount</td>\r\n                        <td class=\"td_right\">Closing Balance</td>\r\n                        <td class=\"td_center\">Officer ID</td>\r\n                        <td>Normal Int</td>\r\n                        <td>Recbl/Payable Interest</td>\r\n                        <td>Overdue Interest</td>\r\n                        <td>Penal Interest</td>\r\n                        <td>Receivable Penal</td>\r\n                        <td class=\"td_right\">Other Amount</td>\r\n                        <td>Added Penal</td>\r\n                        <td class=\"td_right\">Voucher Number</td>\r\n\r\n                        \r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            \r\n                        </tr>\r\n                    </tbody>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td colspan=\"12\" class=\"no-data-available\"\r\n                                                    style=\"text-align: center;\">\r\n                                                    No data!\r\n                                                </td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { LedgerViewRoutingModule } from './ledger-view-routing.module'\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport { FormsModule,ReactiveFormsModule  }   from '@angular/forms';\r\nimport { LedgerViewComponent } from './ledger-view.component';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { ACMasterDropdownService } from 'src/app/shared/dropdownService/ac-master-dropdown.service';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LedgerViewRoutingModule,\r\n    SharedModule,\r\n    DataTablesModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n  ],\r\n  declarations: [LedgerViewComponent],\r\n  providers:[SchemeCodeDropdownService,SchemeAccountNoService,ACMasterDropdownService,OwnbranchMasterService,{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },]\r\n})\r\nexport class LedgerViewModule { }\r\n"],"sourceRoot":"webpack:///"}