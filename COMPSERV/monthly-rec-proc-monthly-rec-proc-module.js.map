{"version":3,"sources":["./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/utility/monthly-rec-proc/monthly-rec-proc-routing.module.ts","./src/app/theme/utility/monthly-rec-proc/monthly-rec-proc.component.ts","./src/app/theme/utility/monthly-rec-proc/monthly-rec-proc.component.html","./src/app/theme/utility/monthly-rec-proc/monthly-rec-proc.module.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"monthly-rec-proc-monthly-rec-proc-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {MonthlyRecProcComponent} from './monthly-rec-proc.component'\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    component: MonthlyRecProcComponent,\r\n    data: {\r\n      title: 'Monthly Recovery Process',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MonthlyRecProcRoutingModule { } \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\n\r\n@Component({\r\n  selector: 'app-monthly-rec-proc',\r\n  templateUrl: './monthly-rec-proc.component.html',\r\n  styleUrls: ['./monthly-rec-proc.component.scss']\r\n})\r\nexport class MonthlyRecProcComponent implements OnInit { \r\n\r\n  ngForm : FormGroup \r\n  scheme: any[];\r\n  scode\r\n  recac\r\n  recacno\r\n  recinst\r\n  recinstf\r\n  recbalf\r\n\r\n  recactype = [\r\n\r\n    { label: 'T_MEMBCONT_ACTYPE', value: 'T_MEMBCONT_ACTYPE' },\r\n    { label: 'T_LOAN_ACTYPE', value: 'T_LOAN_ACTYPE' },\r\n    { label: 'T_RECURRING_ACTYPE', value: 'T_RECURRING_ACTYPE' },\r\n    { label: 'T_EMRGLN_ACTYPE', value: 'T_EMRGLN_ACTYPE' },\r\n    { label: 'T_HPLN_ACTYPE', value: 'T_HPLN_ACTYPE' },\r\n  ];\r\n\r\n  recaccno =  [\r\n    { label: 'T_MEMBCONT_ACNO', value: 'T_MEMBCONT_ACNO' },\r\n    { label: 'T_LOAN_ACNO', value: 'T_LOAN_ACNO' },\r\n    { label: 'T_RECURRING_ACNO', value: 'T_RECURRING_ACNO' },\r\n    { label: 'T_EMRGLN_ACNO', value: 'T_EMRGLN_ACNO' },\r\n    { label: 'T_HPLN_ACNO', value: 'T_HPLN_ACNO' },\r\n\r\n  ];\r\n  recinstno = [\r\n\r\n    { label: 'T_MEMBCONT', value: 'T_MEMBCONT' },\r\n    { label: 'T_LOAN_AMT', value: 'T_LOAN_AMT' },\r\n    { label: 'T_RECURRING_INST', value: 'T_RECURRING_INST' },\r\n    { label: 'T_EMRGLN_AMT', value: 'T_EMRGLN_AMT' },\r\n    { label: 'T_HPLN_AMT', value: 'T_HPLN_AMT' },\r\n\r\n  ];\r\n\r\n  recinstfield = [\r\n\r\n    { label: 'T_LOAN_INT_AMT', value: 'T_LOAN_INT_AMT' },\r\n    { label: 'T_EMRGLN_INT_AMT', value: 'T_EMRGLN_INT_AMT' },\r\n    { label: 'T_HPLN_INT_AMT', value: 'T_HPLN_INT_AMT' },\r\n\r\n  ];\r\n\r\n  recbalfield = [\r\n\r\n    { label: 'T_LOAN_BAL', value: 'T_LOAN_BAL' },\r\n    { label: 'T_EMRGLN_BAL', value: 'T_EMRGLN_BAL' },\r\n    { label: 'T_HPLN_BAL', value: 'T_HPLN_BAL' },\r\n\r\n  ];\r\n  \r\n  constructor(private fb: FormBuilder,public schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n\r\n    // Scheme Code\r\n  this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n     \r\n    var filtered = data.filter(function (scheme) {\r\n      return (scheme.name == 'SB'|| scheme.name == 'AG'|| scheme.name == 'PG' ||  scheme.name == 'TD'      );\r\n    });\r\n    this.scheme = filtered;\r\n  })\r\n  }\r\n\r\n\r\n  \r\n  createForm() {\r\n    this.ngForm = this.fb.group({\r\n      Scheme_code: [\"\",[ Validators.required]],\r\n      SEQ_NO: [\"\",[ Validators.required]],\r\n      REC_ACTYPEFIELD: [\"\",[ Validators.required]],\r\n      REC_ACNOFIELD: [\"\",[ Validators.required]],\r\n      REC_INSTFIELD: [\"\",[ Validators.required]],\r\n      REC__INT_INSTFIELD: [\"\",[ Validators.required]],\r\n      REC_BALANCE_FIELD: [\"\",[ Validators.required]],\r\n      ISAPPLY: [\"\"],\r\n      \r\n    });\r\n   \r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Monthly Recovery Process</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <div class=\"card\">\r\n                <form [formGroup]=\"ngForm\">\r\n                    <div class=\"card-block\">\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\" Date\">Scheme Code<sub\r\n                                        class=\"required\">*</sub></label> </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Scheme_code\" bindValue=\"value\" bindLabel=\"label\"\r\n                                            placeholder=\"Scheme Code\" [(ngModel)]=\"scode\">\r\n                                            <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                                {{values.id}} {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Scheme_code'].invalid && (ngForm.controls['Scheme_code'].dirty || ngForm.controls['Scheme_code'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['Scheme_code'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-2\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" name=\"SEQ_NO\" class=\"form-control\" placeholder=\" \"\r\n                                            id=\"SEQ_NO\" formControlName=\"SEQ_NO\" >\r\n                                        <label for=\"SEQ_NO\">Sequence Number</label>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\" raf\">Recovery ACTYPE Field<sub\r\n                                        class=\"required\">*</sub></label> </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"REC_ACTYPEFIELD\" bindValue=\"value\" bindLabel=\"label\"\r\n                                            placeholder=\"Recovery Actype Field\" [(ngModel)]=\"recac\">\r\n                                            <ng-option *ngFor=\"let values of recactype\" [value]=\"values\">\r\n                                                {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['REC_ACTYPEFIELD'].invalid && (ngForm.controls['REC_ACTYPEFIELD'].dirty || ngForm.controls['REC_ACTYPEFIELD'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['REC_ACTYPEFIELD'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\" raf\">Recovery ACNO Field<sub\r\n                                        class=\"required\">*</sub></label> </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"REC_ACNOFIELD\" bindValue=\"value\" bindLabel=\"label\"\r\n                                            placeholder=\"Recovery Acno Field\" [(ngModel)]=\"recacno\">\r\n                                            <ng-option *ngFor=\"let values of recaccno\" [value]=\"values\">\r\n                                                {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['REC_ACNOFIELD'].invalid && (ngForm.controls['REC_ACNOFIELD'].dirty || ngForm.controls['REC_ACNOFIELD'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['REC_ACNOFIELD'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\" raf\">Recovery INST Field<sub\r\n                                        class=\"required\">*</sub></label> </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"REC_INSTFIELD\" bindValue=\"value\" bindLabel=\"label\"\r\n                                            placeholder=\"Recovery Acno Field\" [(ngModel)]=\"recinst\">\r\n                                            <ng-option *ngFor=\"let values of recinstno\" [value]=\"values\">\r\n                                                {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['REC_INSTFIELD'].invalid && (ngForm.controls['REC_INSTFIELD'].dirty || ngForm.controls['REC_INSTFIELD'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['REC_INSTFIELD'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\" raf\">Recovery INTINST Field<sub\r\n                                        class=\"required\">*</sub></label> </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"REC__INT_INSTFIELD\" bindValue=\"value\"\r\n                                            bindLabel=\"label\" placeholder=\"Recovery IntInst Field\"\r\n                                            [(ngModel)]=\"recinstf\">\r\n                                            <ng-option *ngFor=\"let values of recinstfield\" [value]=\"values\">\r\n                                                {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['REC__INT_INSTFIELD'].invalid && (ngForm.controls['REC__INT_INSTFIELD'].dirty || ngForm.controls['REC__INT_INSTFIELD'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['REC__INT_INSTFIELD'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\" raf\">Recovery BALANCE Field<sub\r\n                                        class=\"required\">*</sub></label> </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"REC_BALANCE_FIELD\" bindValue=\"value\"\r\n                                            bindLabel=\"label\" placeholder=\"Recovery Acno Field\" [(ngModel)]=\"recbalf\">\r\n                                            <ng-option *ngFor=\"let values of recbalfield\" [value]=\"values\">\r\n                                                {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['REC_BALANCE_FIELD'].invalid && (ngForm.controls['REC_BALANCE_FIELD'].dirty || ngForm.controls['REC_BALANCE_FIELD'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['REC_BALANCE_FIELD'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-5\">\r\n                                <div class=\"checkbox checkbox-primary\">\r\n                                    <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                        <input type=\"checkbox\" class=\"border-checkbox\" id=\"ISAPPLIABLE\" value=\"ISAPPLIABLE\"\r\n                                             formControlName=\"ISAPPLY\">\r\n                                        <label class=\"border-checkbox-label\" for=\"ISAPPLIABLE\">Is Applicable ?</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- <div class=\"row\">\r\n                            <div class=\"col-md-9\"></div>\r\n                            <div class=\"col-md-2\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\r\n                                    (click)=\"view($event); clicked = true \">Submit</button>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-1\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" (click)=\"close()\">Close</button>\r\n                            </div>\r\n                        </div> -->\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MonthlyRecProcRoutingModule } from './monthly-rec-proc-routing.module';\r\nimport { MonthlyRecProcComponent } from './monthly-rec-proc.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { SystemMasterParametersService } from '../scheme-parameters/system-master-parameters/system-master-parameters.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n@NgModule({\r\n  declarations: [MonthlyRecProcComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MonthlyRecProcRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    PerfectScrollbarModule,\r\n    NgSelectModule,\r\n  ],\r\n  providers: [\r\n    {\r\n\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\r\n\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UserAuthInterceptor,\r\n      multi: true\r\n    },\r\n    SystemMasterParametersService,\r\n    SchemeCodeDropdownService,\r\n   \r\n  ]\r\n})\r\nexport class MonthlyRecProcModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class SystemMasterParametersService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  // url = \"http://localhost:4000/system-master-parameters\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        let errorMessage = 'Please add valid length';\r\n        Swal.fire('Kindly Add Valid Length !');\r\n        return throwError(errorMessage);\r\n      })\r\n    )\r\n  }\r\n\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/system-master-parameters/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getData(): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}