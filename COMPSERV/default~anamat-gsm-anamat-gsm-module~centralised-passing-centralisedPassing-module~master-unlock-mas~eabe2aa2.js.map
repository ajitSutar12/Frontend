{"version":3,"sources":["./src/app/shared/elements/customerid.service.ts","./src/app/theme/master/customer/anamat-gsm/anamat-gsm-routing.module.ts","./src/app/theme/master/customer/anamat-gsm/anamat-gsm.component.ts","./src/app/theme/master/customer/anamat-gsm/anamat-gsm.component.html","./src/app/theme/master/customer/anamat-gsm/anamat-gsm.module.ts","./src/app/theme/master/customer/anamat-gsm/anamat-gsm.service.ts"],"names":[],"mappings":"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","file":"default~anamat-gsm-anamat-gsm-module~centralised-passing-centralisedPassing-module~master-unlock-mas~eabe2aa2.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\n\r\n\r\n@Injectable()\r\nexport class CustomeridService {\r\n    getFormData(id: any) {\r\n      throw new Error('Method not implemented.');\r\n    }\r\n    public static readonly PLAYER_ONE: Array<IOption> = [\r\n        { value: '0', label: '10100' },\r\n        { value: '1', label: '20100' },\r\n        { value: '2', label: '20200' }\r\n             \r\n    ];\r\n       \r\n    getCharacters(): Array<IOption> {\r\n        return this.cloneOptions(CustomeridService.PLAYER_ONE);\r\n    }\r\n\r\n    loadCharacters(): Observable<Array<IOption>> {\r\n        return this.loadOptions(CustomeridService.PLAYER_ONE);\r\n    }\r\n\r\n    getCharactersWithDisabled(): Array<IOption> {\r\n        const characters: Array<IOption> = this.cloneOptions(CustomeridService.PLAYER_ONE);\r\n        characters[1].disabled = true;\r\n        characters[4].disabled = true;\r\n        return characters;\r\n    }\r\n\r\n\r\n\r\n    private loadOptions(options: Array<IOption>): Observable<Array<IOption>> {\r\n        return new Observable((obs) => {\r\n            setTimeout(() => {\r\n                obs.next(this.cloneOptions(options));\r\n                obs.complete();\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    private cloneOptions(options: Array<IOption>): Array<IOption> {\r\n        return options.map(option => ({ value: option.value, label: option.label }));\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { AnamatGSMComponent } from './anamat-gsm.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  AnamatGSMComponent,\r\n    data: {\r\n      title: 'Anamat/General Sub Master',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class  AnamatGSMRoutingModule { }","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from \"@angular/core\";\r\n//animation\r\nimport { animate, style, transition, trigger } from \"@angular/animations\";\r\nimport { Subject } from \"rxjs\";\r\n// Creating and maintaining form fields with validation\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from \"@angular/forms\";\r\n// Displaying Sweet Alert\r\nimport Swal from \"sweetalert2\";\r\n// Angular Datatable Directive \r\nimport { DataTableDirective } from \"angular-datatables\";\r\n// Used to Call API\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { IOption } from \"ng-select\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { environment } from \"../../../../../environments/environment\";\r\n// Service File For Handling CRUD Operation\r\nimport { anamatGSMService } from \"./anamat-gsm.service\";\r\n//service file for fetching records from customer ID\r\nimport { CustomerIdService } from \"../customer-id/customer-id.service\";\r\n//Service file of dropdown\r\nimport { CustomerIDMasterDropdownService } from \"../../../../shared/dropdownService/customer-id-master-dropdown.service\";\r\nimport { cityMasterService } from \"../../../../shared/dropdownService/city-master-dropdown.service\";\r\nimport { SchemeCodeDropdownService } from \"../../../../shared/dropdownService/scheme-code-dropdown.service\";\r\nimport { PrefixMasterDropdownService } from \"src/app/shared/dropdownService/prefix-master-dropdown.service\";\r\nimport { SystemMasterParametersService } from \"../../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service\"\r\nimport * as moment from 'moment';\r\nimport { NgSelectComponent } from \"@ng-select/ng-select\";\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface anamatinf {\r\n  //id:number\r\n  AC_ACNOTYPE: number;\r\n  AC_TYPE: string;\r\n  AC_NO: String;\r\n  AC_CUSTID: string;\r\n  AC_TITLE: string;\r\n  AC_NAME: string;\r\n  AC_MEMBTYPE: string;\r\n  AC_MEMBNO: string;\r\n  AC_HONO: string;\r\n  AC_WARD: string;\r\n  AC_TADDR: string;\r\n  AC_TGALLI: string;\r\n  AC_AREA: string;\r\n  AC_CTCODE: string;\r\n  AC_PIN: string;\r\n  AC_OPDATE: Date;\r\n  AC_IS_RECOVERY: boolean;\r\n  DEBIT: string;\r\n  AC_PARTICULAR: string;\r\n  BANKACNO: number\r\n}\r\n\r\n@Component({\r\n  selector: \"app-anamat-gsm\",\r\n  templateUrl: \"./anamat-gsm.component.html\",\r\n  styleUrls: [\"./anamat-gsm.component.scss\"],\r\n  animations: [\r\n    trigger(\"fadeInOutTranslate\", [\r\n      transition(\":enter\", [\r\n        style({ opacity: 0 }),\r\n        animate(\"400ms ease-in-out\", style({ opacity: 1 })),\r\n      ]),\r\n      transition(\":leave\", [\r\n        style({ transform: \"translate(0)\" }),\r\n        animate(\"400ms ease-in-out\", style({ opacity: 0 })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\n\r\nexport class AnamatGSMComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @Output() reloadTablePassing = new EventEmitter<string>();\r\n  @Input() childMessage: string;\r\n  @Output() public getUserData = new EventEmitter<string>();\r\n  formSubmitted = false;\r\n  //api\r\n  url = environment.base_url;\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  // Store data from backend\r\n  anamat: anamatinf[];\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //Datatable variable\r\n  dtExportButtonOptions: DataTables.Settings = {};\r\n  Data: any;\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = \"start\";\r\n  active = 1;\r\n  activeKeep = 1;\r\n\r\n  // Variables for search\r\n  filterObject: { name: string; type: string }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  newbtnShow: boolean = false;\r\n  unapproveShow: boolean = false;\r\n  public visible = false;\r\n  public visibleAnimate = false;\r\n  //for search functionality\r\n  filterData = {};\r\n\r\n  // Dropdown Options\r\n  scheme: any[];//scheme code from schemast(S_ACNOTYPE)\r\n  Cust_ID: any[]; //customer id from idmaster\r\n  city: any[];//city from customer id from idmaster\r\n\r\n  joint_Cust_ID: any[];\r\n  newcustid: any = null;\r\n\r\n  prifix: any;\r\n  AC_CUSTID1: any;\r\n  // for new customer\r\n  newCustomerID;\r\n  updateID: number = 0;\r\n  //Scheme type variable\r\n  schemeType: string = 'GS'\r\n  schemeCode\r\n  timeLeft = 5;\r\n  maxDate\r\n  id: any = null;\r\n  datemax: any;\r\n\r\n  code: any;\r\n  cust_id: any;\r\n  bsValue\r\n  AC_TYPE1: boolean = false\r\n  DatatableHideShow: boolean = true;\r\n  rejectShow: boolean = false;\r\n  approveShow: boolean = false;\r\n  logDate\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private anamatGSMService: anamatGSMService,\r\n    public customerIdService: CustomerIdService,\r\n    private prefixMaster: PrefixMasterDropdownService,\r\n    private cityMasterService: cityMasterService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private customerID: CustomerIDMasterDropdownService,\r\n    private systemParameter: SystemMasterParametersService\r\n  ) {\r\n    if (this.childMessage != undefined) {\r\n\r\n      this.editClickHandler(this.childMessage, 1);\r\n    }\r\n    this.datemax = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2);\r\n    this.systemParameter.getFormData(1).subscribe(data => {\r\n      this.maxDate = moment(data.CURRENT_DATE, 'DD/MM/YYYY')\r\n      this.maxDate = this.maxDate._d\r\n      this.logDate = data.CURRENT_DATE\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: \"full_numbers\",\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n        dataTableParameters.columns.forEach((element) => {\r\n          if (element.search.value != '') {\r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          } else {\r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if (this.filterData.hasOwnProperty(element.data)) {\r\n              let value = this.filterData[getColumnName];\r\n              if (columnValue != undefined || value != undefined) {\r\n                delete this.filterData[element.data];\r\n              }\r\n            }\r\n          }\r\n        });\r\n        let data: any = localStorage.getItem('user');\r\n        let result = JSON.parse(data);\r\n        let branchCode = result.branch.id;\r\n\r\n        dataTableParameters['branchCode'] = branchCode;\r\n        dataTableParameters[\"filterData\"] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            this.url + \"/anamat-gsm\",\r\n            dataTableParameters\r\n          )\r\n          .subscribe((resp) => {\r\n            this.anamat = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: [],\r\n            });\r\n          });\r\n      },\r\n      columnDefs: [\r\n        {\r\n          targets: \"_all\",\r\n          defaultContent: '',\r\n        },\r\n      ],\r\n      columns: [\r\n        {\r\n          title: \"Action\",\r\n          render: function (data: any, type: any, full: any) {\r\n            return '<button class=\"editbtn btn btn-outline-primary btn-sm\" id=\"editbtn\">Edit</button>';\r\n          },\r\n        },\r\n        {\r\n          data: \"AC_TYPE\",\r\n          title: \"Scheme\",\r\n        },\r\n        {\r\n          data: 'BANKACNO',\r\n          title: \"Account Number\",\r\n        },\r\n        {\r\n          data: \"AC_CUSTID\",\r\n          title: \"Customer ID\",\r\n        },\r\n        {\r\n          data: \"AC_NAME\",\r\n          title: \"Member Name\",\r\n        },\r\n        // {\r\n        //   data: \"AC_MEMBTYPE\",\r\n        //   title: \"Member Scheme\",\r\n        // },\r\n        // {\r\n        //   data: \"AC_MEMBNO\",\r\n        //   title: \"Member No\",\r\n        // },\r\n        {\r\n          data: \"AC_AREA\",\r\n          title: \"Detail Address\",\r\n        },\r\n        {\r\n          data: \"AC_CTCODE\",\r\n          title: \"City\",\r\n        },\r\n        {\r\n          data: \"AC_OPDATE\",\r\n          title: \"Opening date\",\r\n        },\r\n        {\r\n          data: \"AC_PARTICULAR\",\r\n          title: \"Reason\",\r\n        },\r\n      ],\r\n      dom: \"Blrtip\",\r\n    };\r\n\r\n    this.prefixMaster.getPrefixMasterList().pipe(first()).subscribe(data => {\r\n      this.prifix = data;\r\n    })\r\n\r\n    this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data3 => {\r\n      this.scheme = data3\r\n      this.code = this.scheme[0].value\r\n      //  console.log(this.code);\r\n      this.schemeCode = this.scheme[0].name\r\n    })\r\n\r\n    this.customerID.getCustomerIDMasterList().pipe(first()).subscribe(data4 => {\r\n      this.Cust_ID = data4;\r\n      this.joint_Cust_ID = data4;\r\n    })\r\n\r\n\r\n    this.cityMasterService\r\n      .getcityList()\r\n      .pipe(first())\r\n      .subscribe((data) => {\r\n        this.city = data;\r\n      });\r\n\r\n    // this.customerID\r\n    // .getCustomerIDMasterList()\r\n    // .pipe(first())\r\n    // .subscribe((data1) => {\r\n    // this.Cust_ID = data1;\r\n    // console.log(this.cust_id);\r\n\r\n    // });\r\n    this.getSystemParaDate()\r\n  }\r\n\r\n\r\n  //check  if require values\r\n  checkRequire(ele: any) {\r\n    if (ele <= 100) {\r\n    }\r\n    else {\r\n      Swal.fire(\"Invalid Input\", \"Please insert values below 100\", \"error\");\r\n    }\r\n  }\r\n\r\n\r\n  checkCUST_No() {\r\n    if (this.AC_CUSTID1 = '') {\r\n    }\r\n    else {\r\n      Swal.fire(\"Invalid Input\", \"Please insert Customer ID\", \"error\");\r\n    }\r\n  }\r\n\r\n  // addNewCustomer(newCustomer) {\r\n  //   this.customerID\r\n  //     .getCustomerIDMasterList()\r\n  //     .pipe(first())\r\n  //     .subscribe((data) => {\r\n  //       this.Cust_ID = data;\r\n  //       this.cust_id = newCustomer;\r\n  //       console.log(this.cust_id);\r\n\r\n  //       this.getCustomer(newCustomer);\r\n  //     });\r\n  // }\r\n  addNewCustomer(newCustomer) {\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    let branchCode = result.branch.id;\r\n    this.customerID.getCustomerIDMasterList().pipe(first()).subscribe(data => {\r\n      this.Cust_ID = data;\r\n      this.newcustid = newCustomer;\r\n      this.getCustomer(newCustomer);\r\n    })\r\n  }\r\n\r\n  getCustomer(id) {\r\n    this.customerIdService.getFormData(id).subscribe(data => {\r\n      if (data.castMaster == null) {\r\n        data.castMaster = \"\"\r\n      }\r\n      if (data.occupMaster == null) {\r\n        data.occupMaster = \"\"\r\n      }\r\n      this.newcustid = data.id\r\n\r\n      this.angForm.patchValue({\r\n        AC_TITLE: data.AC_TITLE,\r\n        AC_NAME: data.AC_NAME,\r\n        AC_CAST: data.castMaster.NAME,\r\n        AC_OCODE: data.occupMaster.NAME,\r\n        // AC_MEM_BIRTH_DT: moment(data.AC_BIRTH_DT).format('DD/MM/YYYY'),\r\n        AC_MOBNO: data.AC_MOBILENO,\r\n        AC_PHNO: data.AC_PHONE_RES,\r\n        AC_EMAIL: data.AC_EMAILID,\r\n        AC_MEMBNO: data.AC_MEMBNO,\r\n        AC_MEMBTYPE: data.AC_MEMBTYPE,\r\n      })\r\n      let permadd\r\n      let temp\r\n      data.custAddress.forEach(async (element) => {\r\n        if (element.AC_ADDTYPE == 'P') {\r\n          permadd = element\r\n        }\r\n      })\r\n      this.newcustid = data.id;\r\n      this.angForm.patchValue({\r\n        AC_ADDFLAG: permadd?.AC_ADDFLAG,\r\n        AC_HONO: permadd?.AC_HONO,\r\n        AC_WARD: permadd?.AC_WARD,\r\n        AC_ADDR: permadd?.AC_ADDR,\r\n        AC_GALLI: permadd?.AC_GALLI,\r\n        AC_AREA: permadd?.AC_AREA,\r\n        AC_CTCODE: permadd?.city?.CITY_NAME,\r\n        AC_PIN: permadd?.AC_PIN,\r\n      })\r\n\r\n    })\r\n  }\r\n  openingDate: any\r\n  //set open date, appointed date and expiry date\r\n  getSystemParaDate() {\r\n    this.systemParameter.getFormData(1).subscribe(data => {\r\n      this.openingDate = data.CURRENT_DATE\r\n      this.logDate = data.CURRENT_DATE\r\n      this.angForm.patchValue({\r\n        AC_OPDATE: data.CURRENT_DATE\r\n      })\r\n\r\n      if (data.ON_LINE === '1') {\r\n        this.angForm.controls['AC_OPDATE'].disable()\r\n      } else {\r\n        this.angForm.controls['AC_OPDATE'].enable()\r\n      }\r\n    })\r\n  }\r\n\r\n  //disabledate on keyup\r\n  disabledate(data: any) {\r\n    if (data != \"\") {\r\n      if (data > this.datemax) {\r\n        Swal.fire(\"Invalid Input\", \"Please insert valid date \", \"warning\");\r\n        (document.getElementById(\"AC_CTCODE\") as HTMLInputElement).value = \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      AC_OPDATE: new FormControl({ value: '', disabled: true }),\r\n      AC_ACNOTYPE: ['GS'],\r\n      AC_TYPE: ['', [Validators.required]],\r\n      AC_NO: [''],\r\n      AC_CUSTID: ['', [Validators.required]],\r\n      AC_TITLE: [''],\r\n      AC_NAME: ['',],\r\n      AC_MEMBTYPE: [''],\r\n      AC_MEMBNO: [''],\r\n      AC_HONO: [''],\r\n      AC_WARD: [''],\r\n      AC_ADDR: [''],\r\n      AC_GALLI: [''],\r\n      AC_AREA: [''],\r\n      AC_CTCODE: [''],\r\n      AC_PIN: [''],\r\n      BANKACNO: [''],\r\n      // AC_OPDATE: [''],\r\n      AC_IS_RECOVERY: [],\r\n      DEBIT: new FormControl('DEBIT'),\r\n      AC_PARTICULAR: ['', [Validators.required, Validators.pattern]],\r\n    });\r\n  }\r\n\r\n\r\n  getScheme(value) {\r\n    this.schemeCode = value.name\r\n  }\r\n  // Method to insert data into database through NestJS\r\n  submit(event) {\r\n    event.preventDefault();\r\n    this.formSubmitted = true;\r\n    if (this.angForm.valid) {\r\n      //get bank code and branch code from session\r\n      let data: any = localStorage.getItem('user');\r\n      let result = JSON.parse(data);\r\n      let branchCode = result.branch.id;\r\n      let bankCode = Number(result.branch.syspara.BANK_CODE)\r\n      let opdate = (document.getElementById(\"AC_OPDATE\") as HTMLInputElement).value;\r\n      const formVal = this.angForm.value;\r\n      const dataToSend = {\r\n        'branchCode': branchCode,\r\n        'bankCode': bankCode,\r\n        'schemeCode': this.schemeCode,\r\n        AC_ACNOTYPE: formVal.AC_ACNOTYPE,\r\n        AC_TYPE: formVal.AC_TYPE,\r\n        AC_NO: formVal.AC_NO,\r\n        AC_NAME: formVal.AC_NAME,\r\n        AC_CUSTID: formVal.AC_CUSTID,\r\n        // AC_OPDATE: formVal.AC_OPDATE,\r\n        AC_OPDATE: opdate,\r\n        // 'AC_OPDATE': (formVal.AC_OPDATE == '' || formVal.AC_OPDATE == 'Invalid date') ? opdate = '' : opdate = moment(formVal.AC_OPDATE).format('DD/MM/YYYY'),\r\n        AC_IS_RECOVERY: (formVal.AC_IS_RECOVERY == true ? '1' : '0'),\r\n        DEBIT: formVal.DEBIT,\r\n        AC_PARTICULAR: formVal.AC_PARTICULAR,\r\n      };\r\n      this.anamatGSMService.postData(dataToSend).subscribe(\r\n        (data) => {\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Account Created successfully!',\r\n            html:\r\n              '<b>NAME : </b>' + data.AC_NAME + ',' + '<br>' +\r\n              '<b>ACCOUNT NO : </b>' + data.BANKACNO + '<br>'\r\n          })\r\n          this.formSubmitted = false;\r\n          // to reload after insertion of data\r\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n            dtInstance.ajax.reload();\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n      //To clear form\r\n      this.resetForm();\r\n    }\r\n    else {\r\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning');\r\n    }\r\n  }\r\nname:any\r\nac_no:any\r\n  //Method for append data into fields\r\n  editClickHandler(id, status) {\r\n    this.angForm.controls['AC_TYPE'].disable()\r\n    this.anamatGSMService.getFormData(id).subscribe((data) => {\r\n      this.name = data.AC_NAME\r\n      this.ac_no = data.BANKACNO\r\n      if (data.SYSCHNG_LOGIN != null && data.status == 0) {\r\n        this.unapproveShow = true\r\n        this.showButton = false;\r\n        this.updateShow = false;\r\n        this.newbtnShow = true;\r\n        this.approveShow = false;\r\n        this.rejectShow = false;\r\n      }\r\n      else if (data.SYSCHNG_LOGIN == null && status == 0) {\r\n        this.unapproveShow = false\r\n        this.showButton = false;\r\n        this.updateShow = true;\r\n        this.newbtnShow = true;\r\n        this.approveShow = false;\r\n        this.rejectShow = false;\r\n      }\r\n      else if (data.SYSCHNG_LOGIN == null && data.status == 1) {\r\n        this.unapproveShow = false\r\n        this.showButton = false;\r\n        this.updateShow = true;\r\n        this.newbtnShow = true;\r\n        this.approveShow = true;\r\n        this.rejectShow = true;\r\n      }\r\n      else {\r\n        this.approveShow = false;\r\n        this.rejectShow = false;\r\n        this.unapproveShow = false\r\n        this.showButton = false;\r\n        this.updateShow = false;\r\n        this.newbtnShow = true;\r\n      }\r\n      this.updateID = data.id;\r\n      this.newcustid = (data.AC_CUSTID)\r\n      this.getCustomer(data.AC_CUSTID)\r\n      this.angForm.patchValue({\r\n        AC_ACNOTYPE: data.AC_ACNOTYPE,\r\n        AC_TYPE: data.AC_TYPE,\r\n        AC_NO: data.AC_NO,\r\n        BANKACNO: data.BANKACNO,\r\n        // AC_CUSTID: data.AC_CUSTID.toString(),\r\n        // AC_TITLE: data.AC_TITLE,\r\n        // AC_NAME: data.AC_NAME,\r\n        AC_MEMBTYPE: data.AC_MEMBTYPE,\r\n        AC_MEMBNO: data.AC_MEMBNO,\r\n        AC_OPDATE: data.AC_OPDATE,\r\n        AC_IS_RECOVERY: (data.AC_IS_RECOVERY == '1' ? true : false),\r\n        DEBIT: data.DEBIT,\r\n        AC_PARTICULAR: data.AC_PARTICULAR,\r\n      });\r\n    });\r\n  }\r\n\r\n  //Method for update data\r\n  updateData() {\r\n    this.angForm.controls['AC_TYPE'].enable()\r\n    let data = this.angForm.value;\r\n    let data1: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data1);\r\n    let branchCode = result.branch.id;\r\n    data[\"id\"] = this.updateID;\r\n    data['branchCode'] = branchCode\r\n    let opdate = (document.getElementById(\"AC_OPDATE\") as HTMLInputElement).value;\r\n    data[\"AC_OPDATE\"] = opdate;\r\n    data['AC_IS_RECOVERY'] = (data.AC_IS_RECOVERY == true ? '1' : '0'),\r\n      this.anamatGSMService.updateData(data).subscribe(() => {\r\n        Swal.fire(\"Success!\", \"Record Updated Successfully !\", \"success\");\r\n        this.showButton = true;\r\n        this.updateShow = false;\r\n        this.newbtnShow = false;\r\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n          dtInstance.ajax.reload();\r\n        });\r\n        this.resetForm();\r\n      });\r\n  }\r\n\r\n  addNewData() {\r\n    this.angForm.controls['AC_TYPE'].enable()\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    this.newbtnShow = false;\r\n    this.getSystemParaDate()\r\n    this.resetForm();\r\n\r\n  }\r\n\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n    this.code = null\r\n    this.cust_id = null\r\n    this.getSystemParaDate()\r\n  }\r\n\r\n  //Method for delete data\r\n  delClickHandler(id: number) {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to delete narration data.\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#229954\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.anamatGSMService.deleteData(id).subscribe((data1) => {\r\n          this.anamat = data1;\r\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\r\n        }),\r\n          (error) => {\r\n            console.log(error);\r\n          };\r\n        // to reload after delete of data\r\n        this.rerender();\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\"Cancelled\", \"Your data is safe.\", \"error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.angForm.controls['AC_TYPE'].enable()\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      $('#mastertable tfoot tr').appendTo('#mastertable thead');\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          } else {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  disableForm(id) {\r\n    this.editClickHandler(id, 0)\r\n  }\r\n\r\n\r\n  //approve account\r\n  Approve() {\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    let obj = {\r\n      id: this.updateID,\r\n      user: user.id\r\n    }\r\n    this.anamatGSMService.approve(obj).subscribe(data => {\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Anamat Account Approved successfully!',\r\n        html: `\r\n          <b>NAME : </b> ${this.name},<br>\r\n          <b>ACCOUNT NO : </b> ${this.ac_no}<br>\r\n        `\r\n      });\r\n      var button = document.getElementById('trigger');\r\n      button.click();\r\n      this.reloadTablePassing.emit();\r\n      this.getUserData.emit('welcome to stackoverflow!');\r\n    }, err => {\r\n      console.log('something is wrong');\r\n    })\r\n  }\r\n\r\n\r\n  //reject account\r\n  reject() {\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    let obj = {\r\n      id: this.updateID,\r\n      user: user.id\r\n    }\r\n    this.anamatGSMService.reject(obj).subscribe(data => {\r\n      Swal.fire({\r\n        icon: 'success', \r\n        title: 'Anamat Account rejected successfully!',\r\n        html: `\r\n          <b>NAME : </b> ${this.name},<br>\r\n          <b>ACCOUNT NO : </b> ${this.ac_no}<br>\r\n        `\r\n      });\r\n\r\n      var button = document.getElementById('trigger');\r\n      button.click();\r\n      this.reloadTablePassing.emit();\r\n    }, err => {\r\n      console.log('something is wrong');\r\n    })\r\n  }\r\n\r\n  onCloseModal() {\r\n    this.visibleAnimate = false;\r\n    setTimeout(() => this.visible = false, 300);\r\n  }\r\n  closeModal() {\r\n    var button = document.getElementById('trigger');\r\n    button.click();\r\n    this.reloadTablePassing.emit();\r\n  }\r\n\r\n  onFocus(ele: NgSelectComponent) {\r\n    ele.open()\r\n  }\r\n  gotoTop() {\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  }\r\n\r\n  unApprove() {\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    let obj = {\r\n      id: this.updateID,\r\n      user: user.id,\r\n      LOG_DATE: this.logDate\r\n    }\r\n    this.anamatGSMService.unapporve(obj).subscribe(data => {\r\n      Swal.fire({\r\n        icon: 'success', \r\n        title: 'Account unapproved successfully!',\r\n        html: `\r\n          <b>NAME : </b> ${this.name},<br>\r\n          <b>ACCOUNT NO : </b> ${this.ac_no}<br>\r\n        `\r\n      });\r\n      var button = document.getElementById('trigger');\r\n      button.click();\r\n      this.reloadTablePassing.emit();\r\n    }, err => {\r\n      console.log('something is wrong');\r\n    })\r\n  }\r\n}\r\n","<!-- Anamat / General Sub Master -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Anamat/General Sub Master</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <div class=\"card-block\">\r\n                <form action=\"javascript:\" appSubmit [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <!-- <ng-select bindValue=\"value\" appTheme [(ngModel)]=\"code\" id=\"AC_TYPE\"\r\n                                        formControlName=\"AC_TYPE\" title=\"Compulsory Selection\" [disabled]=\"AC_TYPE\"\r\n                                        (change)=\"getSchemeCode($event)\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        required placeholder=\"Scheme\" [virtualScroll]=\"true\" #AC_TYPE1\r\n                                        (focus)=\"onFocus(AC_TYPE1)\" [selectOnTab]='true' autofocus>\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select> -->\r\n                                    <!-- <ng-select bindValue=\"value\" appTheme [(ngModel)]=\"code\" id=\"AC_TYPE\"\r\n                                        formControlName=\"AC_TYPE\" [disabled]=\"AC_TYPE1\" title=\"Compulsory Selection\"\r\n                                        [virtualScroll]=\"true\" [ngClass]=\"{ 'form-submitted': formSubmitted }\" required\r\n                                        placeholder=\"Scheme\" #ACTYPE (focus)=\"onFocus(ACTYPE)\" [selectOnTab]='true'\r\n                                        (change)=\"getScheme($event)\"  autofocus>\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{ values.label }}</ng-option>\r\n                                    </ng-select> -->\r\n                                    <ng-select bindValue=\"value\" appTheme id=\"AC_TYPE\" bindLabel=\"label\"\r\n                                        formControlName=\"AC_TYPE\" [(ngModel)]=\"code\" (change)=\"getScheme($event)\"\r\n                                        title=\"Compulsory Selection\" [virtualScroll]=\"true\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Scheme\"\r\n                                        #ACTYPE (focus)=\"onFocus(ACTYPE)\" autofocus>\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.label}} </ng-option>\r\n                                    </ng-select>\r\n                                    <label>Scheme <sub class=\"required\"> * </sub></label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <!-- <ng-select [(ngModel)]=\"id\" appTheme id=\"AC_CUSTID\" bindValue=\"value\"\r\n                                        formControlName=\"AC_CUSTID\" [ngClass]=\"{ 'form-submitted': formSubmitted }\"\r\n                                        [virtualScroll]=\"true\" (change)=\"getCustomer($event.value)\" style=\"width: 85%\"\r\n                                        title=\"Compulsory Selection\" required placeholder=\"Customer Id\" #CUSTID\r\n                                        (focus)=\"onFocus(CUSTID)\" >\r\n                                        <ng-option *ngFor=\"let values of Cust_ID\" [value]=\"values\">\r\n                                            {{ values.label }}</ng-option>\r\n                                    </ng-select> -->\r\n                                    <!-- <ng-select [(ngModel)]=\"newcustid\" appTheme id=\"AC_CUSTID\" bindValue=\"value\"\r\n                                    formControlName=\"AC_CUSTID\" [ngClass]=\"{ 'form-submitted': formSubmitted }\" [virtualScroll]=\"true\"\r\n                                    (change)=\"getcustomer($event)\" (blur)=\"onBlur()\"\r\n                                    style=\"width: 85%\" title=\"Compulsory Selection\" required\r\n                                    placeholder=\"Customer Id\" #CUSTID (focus)=\"onFocus(CUSTID)\" [selectOnTab]=\"true\"\r\n                                    [closeOnSelect]=\"true\">\r\n                           <ng-option *ngFor=\"let values of Cust_ID\" [value]=\"values\">\r\n                             {{ values.label }}\r\n                           </ng-option>\r\n                         </ng-select> -->\r\n                                    <ng-select [(ngModel)]=\"newcustid\" appTheme id=\"AC_CUSTID\" bindValue=\"value\"\r\n                                        formControlName=\"AC_CUSTID\" (change)=\"getCustomer($event.value)\"\r\n                                        [ngClass]=\"{ 'form-submitted': formSubmitted }\" [virtualScroll]=\"true\"\r\n                                        style=\"width: 85%\" title=\"Compulsory Selection\" required\r\n                                        placeholder=\"Customer Id\" #CUSTID (focus)=\"onFocus(CUSTID)\"\r\n                                        [selectOnTab]='true'>\r\n                                        <ng-option *ngFor=\"let values of Cust_ID\" [value]=\"values\">\r\n                                            {{ values.label }}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                    <label for=\"AC_CUSTID\">Customer ID<sub class=\"required\"> * </sub></label>\r\n                                    <span class=\"fa fa-fw fa-plus-circle field-icon\" id=\"custicon\"\r\n                                        (click)=\"modalLarge.show()\" placement=\"bottom\"\r\n                                        ngbTooltip=\"Add New Customer\"></span>\r\n                                </span>\r\n                            </div>\r\n                            <!-- <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_CUSTID'].invalid && (angForm.controls['AC_CUSTID'].dirty || angForm.controls['AC_CUSTID'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_CUSTID'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div> -->\r\n                        </div>\r\n                        <!-- <ng-container *ngIf=\"showModalStatus\"> -->\r\n                        <app-modal-basic #modalLarge [dialogClass]=\"'modal-xl'\">\r\n                            <div class=\"app-modal-header\">\r\n                                <h4 class=\"modal-title\">Customer ID </h4>\r\n                                <button type=\"button\" class=\"close basic-close\" (click)=\"modalLarge.hide()\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"app-modal-body\">\r\n                                <perfect-scrollbar style=\"overflow-y: auto;\">\r\n                                    <app-customer-id (newCustomerEvent)=\"addNewCustomer($event)\"></app-customer-id>\r\n                                </perfect-scrollbar>\r\n                            </div>\r\n\r\n                            <div class=\"app-modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" id=\"triggerhide\"\r\n                                    (click)=\"modalLarge.hide()\">Close</button>\r\n                            </div>\r\n                        </app-modal-basic>\r\n                        <!-- <app-modal-basic #modalLarge [dialogClass]=\"'modal-xl'\">\r\n                            <div class=\"app-modal-header\">\r\n                                <h4 class=\"modal-title\">Customer ID</h4>\r\n                                <button type=\"button\" class=\"close basic-close\" (click)=\"modalLarge.hide()\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"app-modal-body\">\r\n                                <perfect-scrollbar style=\"overflow-y: auto;\">\r\n                                    <app-customer-id (newCustomerEvent)=\"addNewCustomer($event)\"></app-customer-id>\r\n                                </perfect-scrollbar>\r\n                            </div>\r\n                            <div class=\"app-modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" id=\"triggerhide\"\r\n                                    (click)=\"modalLarge.hide();onCloseModal();\">Close</button>\r\n                            </div>\r\n                        </app-modal-basic> -->\r\n                        <div class=\"col-sm-1\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"Name\" class=\"form-control\" placeholder=\" \" id=\"AC_TITLE\"\r\n                                        value=\"\" formControlName=\"AC_TITLE\" disabled>\r\n                                    <label for=\"AC_TITLE\">Title </label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TITLE'].invalid && (angForm.controls['AC_TITLE'].dirty || angForm.controls['AC_TITLE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TITLE'].errors?.pattern\">\r\n                                    Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"Name\" class=\"form-control\" placeholder=\" \" id=\"AC_NAME\"\r\n                                        value=\"\" formControlName=\"AC_NAME\" disabled>\r\n                                    <label for=\"AC_NAME\">Name </label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"BANKACNO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"BANKACNO\" formControlName=\"BANKACNO\" disabled>\r\n                                    <label for=\"BANKACNO\">Account Number</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_MEMBTYPE\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"AC_MEMBTYPE\" value=\"\" formControlName=\"AC_MEMBTYPE\" disabled>\r\n                                    <label for=\"AC_MEMBTYPE\">Member Scheme</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_MEMBTYPE'].invalid && (angForm.controls['AC_MEMBTYPE'].dirty || angForm.controls['AC_MEMBTYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_MEMBTYPE'].errors?.pattern\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_MEMBNO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"AC_MEMBNO\" value=\"\" formControlName=\"AC_MEMBNO\" disabled>\r\n                                    <label for=\"AC_MEMBNO\">Member Number</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_MEMBNO'].invalid && (angForm.controls['AC_MEMBNO'].dirty || angForm.controls['AC_MEMBNO'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_MEMBNO'].errors?.pattern\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_HONO\" class=\"form-control\" placeholder=\" \" id=\"AC_HONO\"\r\n                                        formControlName=\"AC_HONO\" disabled />\r\n                                    <label for=\"AC_HONO\">House</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_WARD\" class=\"form-control\" placeholder=\" \" id=\"AC_WARD\"\r\n                                        formControlName=\"AC_WARD\" disabled />\r\n                                    <label for=\"AC_WARD\">Ward</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_ADDR\" class=\"form-control\" placeholder=\" \" id=\"AC_ADDR\"\r\n                                        formControlName=\"AC_ADDR\" disabled />\r\n                                    <label for=\"AC_ADDR\">Detail</label>\r\n\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_GALLI\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"AC_GALLI\" maxlength=\"40\" formControlName=\"AC_GALLI\" disabled />\r\n                                    <label for=\"AC_GALLI\">Galli</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_CTCODE\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"AC_CTCODE\" formControlName=\"AC_CTCODE\" disabled />\r\n                                    <label for=\"AC_CTCODE\">City</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_AREA\" class=\"form-control\" placeholder=\" \" id=\"AC_AREA\"\r\n                                        formControlName=\"AC_AREA\" disabled />\r\n                                    <label for=\"AC_AREA\">Area</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AC_PIN\" class=\"form-control\" placeholder=\" \" id=\"AC_PIN\"\r\n                                        value=\"\" formControlName=\"AC_PIN\" disabled>\r\n                                    <label for=\"AC_PIN\">Pincode</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                          \r\n                             <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AC_OPDATE\" id=\"AC_OPDATE\"\r\n                                        class=\"form-control\" required [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                         [ngClass]=\"{'form-submitted': formSubmitted}\" [maxDate]=\"maxDate\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        formControlName=\"AC_OPDATE\" [(ngModel)]=\"openingDate\" bsDatepicker\r\n                                        #AC_OPDATE=\"bsDatepicker\" placement=\"left\" (keydown.Tab)=\"AC_OPDATE.hide()\" disabled />\r\n                                    <label for=\"AC_OPDATE\">Opening Date<sub class=\"required\">*\r\n                                        </sub></label>\r\n                                </span>\r\n                            </div>\r\n                           <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_OPDATE'].invalid && (angForm.controls['AC_OPDATE'].dirty || angForm.controls['AC_OPDATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['AC_OPDATE'].errors?.pattern || angForm.controls['AC_OPDATE'].errors?.required\">\r\n                                    This field is Required .\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input type=\"checkbox\" class=\"border-checkbox\" id=\"AC_IS_RECOVERY\"\r\n                                        formControlName=\"AC_IS_RECOVERY\">\r\n                                    <label class=\"border-checkbox-label\" for=\"AC_IS_RECOVERY\">Recovery</label>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input type=\"checkbox\" class=\"border-checkbox\" id=\"AC_IS_RECOVERY\"\r\n                                        formControlName=\"AC_IS_RECOVERY\">\r\n                                    <label class=\"border-checkbox-label\" for=\"AC_IS_RECOVERY\">Recovery\r\n                                    </label>\r\n                                </div>\r\n                            </div> -->\r\n\r\n                            <!-- <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"IS_RECOVERY\"\r\n                                        formControlName=\"AC_IS_RECOVERY\">\r\n                                    <label class=\"border-checkbox-label\" for=\"IS_RECOVERY\">Recovery<span\r\n                                            class=\"required\">\r\n                                        </span></label>\r\n                                </div>\r\n                            </div> -->\r\n                        </div>\r\n                        <!-- <div class=\"col-sm-2\">\r\n                            <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"IS_RECOVERY\"\r\n                                        formControlName=\"AC_IS_RECOVERY\">\r\n                                    <label class=\"border-checkbox-label\" for=\"IS_RECOVERY\">Recovery<span\r\n                                            class=\"required\">\r\n                                        </span></label>\r\n                                </div>\r\n                            </div> -->\r\n                        <!-- <div class=\"border-checkbox-section\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"AC_IS_RECOVERY\" value=\"checkbox\"\r\n                                        formControlName=\"AC_IS_RECOVERY\">\r\n                                    <label class=\"border-checkbox-label\" for=\"AC_IS_RECOVERY\">Recovery</label>\r\n                                </div>\r\n                            </div> -->\r\n                        <!-- </div> -->\r\n                        <div class=\"col-sm-2\">\r\n                            <label for=\"\">Opening Balance :</label>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label class=\"inputRadio\">\r\n                                        <input type=\"radio\" name=\"DEBIT\" formControlName=\"DEBIT\" value=\"DEBIT\">\r\n                                        <i class=\"helper\"></i>Debit </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label class=\"inputRadio\">\r\n                                        <input type=\"radio\" name=\"DEBIT\" formControlName=\"DEBIT\" value=\"Credit\">\r\n                                        <i class=\"helper\"></i>Credit </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" appTheme name=\"AC_PARTICULAR\" class=\"form-control\"\r\n                                        placeholder=\" \" id=\"AC_PARTICULAR\" value=\"\" style=\"text-transform: capitalize;\"\r\n                                        title=\"Input allowed only  A-Z a-z 0-9 - / . (Space)\"\r\n                                        formControlName=\"AC_PARTICULAR\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        required>\r\n                                    <label for=\"AC_PARTICULAR\">Reason<sub class=\"required\">* </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_PARTICULAR'].invalid && (angForm.controls['AC_PARTICULAR'].dirty || angForm.controls['AC_PARTICULAR'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['AC_PARTICULAR'].errors?.pattern || angForm.controls['AC_PARTICULAR'].errors?.required\">\r\n                                    Input allowed only A-Z a-z - / . (Space)\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- <div class=\"col-sm-2\" style=\"float: right;\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\"\r\n                                (click)=\"submit($event)\">\r\n                                Submit\r\n                            </button>\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"addNewData()\" *ngIf=\"newbtnShow\">\r\n                                Cancel\r\n                            </button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">\r\n                                Update</button>\r\n                        </div> -->\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\" style=\"float: right;\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm btn-submit\" *ngIf=\"showButton\"\r\n                                (click)=\"submit($event)\" (keydown.Tab)=\"focus()\" appTheme>\r\n                                Submit\r\n                            </button>\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"approveShow\" (click)=\"closeModal()\">\r\n                                Close</button>\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"addNewData()\" *ngIf=\"newbtnShow\">\r\n                                Cancel\r\n                            </button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\" *ngIf=\"updateShow\">\r\n                                Update</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"rejectShow\" (click)=\"reject()\">\r\n                                Reject</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"approveShow\" (click)=\"Approve()\">\r\n                                Approve</button>\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"unapproveShow\" (click)=\"unApprove()\">\r\n                                Unapprove</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\" *ngIf=\"DatatableHideShow\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card shadow\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"mastertable\" datatable [dtOptions]=\"dtExportButtonOptions\"\r\n                                [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover compact\">\r\n                                <tbody *ngIf=\"anamat?.length != 0\">\r\n                                    <tr *ngFor=\"let data of anamat\">\r\n                                        <td>\r\n                                            <span class=\"fa fa-fw fa-edit field-icon\" style=\"align-items: right;\"\r\n                                                id=\"editbutton\" *ngIf=\"!data.SYSCHNG_LOGIN\"\r\n                                                (click)=\"editClickHandler(data.id,0); gotoTop()\" placement=\"bottom\"\r\n                                                ngbTooltip=\"Edit\"></span>\r\n                                            <span class=\"fa fa-fw fa-eye field-icon\" id=\"viewbutton\"\r\n                                                style=\"align-items: right;\" *ngIf=\"data.SYSCHNG_LOGIN\"\r\n                                                (click)=\"disableForm(data.id);gotoTop()\" placement=\"bottom\"\r\n                                                ngbTooltip=\"View\"></span>\r\n                                        </td>\r\n                                        <td\r\n                                            [ngClass]=\"data.AC_TYPE === '' || data.AC_TYPE== null? 'td_center' : 'td_right'\">\r\n                                            {{ data.AC_TYPE === \"\" || data.AC_TYPE== null? \"-\" : data.DPMaster.S_APPL }}\r\n                                        </td>\r\n                                        <td [ngClass]=\"data.BANKACNO === '' ? 'td_center' : 'td_right'\">\r\n                                            {{ data.BANKACNO === \"\" ? \"-\" : data.BANKACNO }}\r\n                                        </td>\r\n                                        <td class=\"td_right\"\r\n                                            [ngClass]=\"data.AC_CUSTID === '' ? 'td_center' : 'td_right'\">\r\n                                            {{data.AC_CUSTID === ''? '-' : data.AC_CUSTID}}</td>\r\n                                        <td [ngClass]=\"data.AC_NAME  === '' ? 'td_center' : 'td_left'\">\r\n                                            {{ data.AC_NAME === \"\" ? \"-\" : data.AC_NAME }} </td>\r\n                                        <!-- <td>{{ data.AC_MEMBTYPE }}</td> -->\r\n                                        <!-- <td class=\"td_right\"\r\n                                            [ngClass]=\"data.AC_MEMBNO === '' ? 'td_center' : 'td_right'\">\r\n                                            {{data.AC_MEMBNO === ''? '-' : data.AC_MEMBNO}}</td> -->\r\n                                        <td\r\n                                            [ngClass]=\"data.idmaster.custAddress[0].AC_ADDR === '' ? 'td_center' : 'td_left'\">\r\n                                            {{ data.idmaster.custAddress[0].AC_ADDR === \"\" ? \"-\" :\r\n                                            data.idmaster.custAddress[0].AC_ADDR }}\r\n                                        </td>\r\n                                        <td\r\n                                            [ngClass]=\"data.idmaster.custAddress[0]?.city.CITY_NAME === '' ? 'td_center' : 'td_left'\">\r\n                                            {{ data.idmaster.custAddress[0]?.city.CITY_NAME === \"\" ? \"-\" :\r\n                                            data.idmaster.custAddress[0]?.city.CITY_NAME }}\r\n                                        </td>\r\n                                        <td class=\"td_right\"\r\n                                            [ngClass]=\"data.AC_OPDATE === '' ? 'td_center' : 'td_center'\">\r\n                                            {{data.AC_OPDATE === ''? '-' : data.AC_OPDATE}}</td>\r\n\r\n                                        <td [ngClass]=\"data.AC_PARTICULAR === '' ? 'td_center' : 'td_left'\">\r\n                                            {{data.AC_PARTICULAR ===\r\n                                            ''? '-' : data.AC_PARTICULAR}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"anamat?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"9\" style=\"text-align: center;\" class=\"no-data-available\">No data!\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot #filters class=\"filters\">\r\n                                    <tr class=\"testing\">\r\n                                        <th></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_TYPE\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"BANKACNO\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_CUSTID\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_NAME\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_TADDR\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_CTCODE\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_OPDATE\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_PARTICULAR\"></th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AnamatGSMRoutingModule } from './anamat-gsm-routing.module';\r\nimport { AnamatGSMComponent } from './anamat-gsm.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { MsService } from '../../../../shared/elements/ms.service';\r\n// import { AccountcodeService } from '../../../../shared/elements/accountcode.service';\r\nimport { CustomeridService } from '../../../../shared/elements/customerid.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { anamatGSMService } from './anamat-gsm.service'\r\n// import { City3Service } from '../../../../shared/elements/city3.service';\r\nimport { cityMasterService } from '../../../../shared/dropdownService/city-master-dropdown.service'\r\nimport { CustomerIdModule } from '../customer-id/customer-id.module';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { SharedModule } from '../../../../shared/shared.module';\r\nimport { PrefixMasterDropdownService } from \"src/app/shared/dropdownService/prefix-master-dropdown.service\";\r\n\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service';\r\nimport { CustomerIDMasterDropdownService } from 'src/app/shared/dropdownService/customer-id-master-dropdown.service';\r\nimport { SystemMasterParametersService } from \"../../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\n\r\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ThemeModule } from 'src/app/theme/theme.module';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AnamatGSMRoutingModule,\r\n    DataTablesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    PerfectScrollbarModule,\r\n    CustomerIdModule,\r\n    SharedModule,\r\n    NgSelectModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n\r\n    ThemeModule\r\n  ],\r\n\r\n  declarations: [AnamatGSMComponent],\r\n  exports:[AnamatGSMComponent],\r\n  providers: [\r\n    PrefixMasterDropdownService,\r\n    SchemeCodeDropdownService,\r\n    CustomeridService,\r\n    cityMasterService,\r\n    CustomerIDMasterDropdownService,\r\n    anamatGSMService,\r\n    {\r\n\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\r\n\r\n    },\r\n    SystemMasterParametersService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UserAuthInterceptor,\r\n      multi: true\r\n    },\r\n  ]\r\n})\r\nexport class AnamatGSMModule { }","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment'\r\n@Injectable()\r\nexport class anamatGSMService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  // url = \"http://localhost:4000/anamat-gsm\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/anamat-gsm/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        Swal.fire('Please Input Proper Data !');\r\n        return throwError(error);\r\n      })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/anamat-gsm/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/anamat-gsm/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/anamat-gsm/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  //approve master\r\n  approve(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/anamat-gsm/approve', data).pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n  //reject master\r\n  reject(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/anamat-gsm/reject', data).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  //unapporve master\r\n  unapporve(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/anamat-gsm/unapporve', data).pipe(catchError(this.handleError));\r\n  }\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}