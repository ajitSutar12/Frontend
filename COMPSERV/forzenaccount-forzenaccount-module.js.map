{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/reports/other-reports/forzenaccount/forzenaccount-routing.module.ts","./src/app/theme/reports/other-reports/forzenaccount/forzenaccount.component.ts","./src/app/theme/reports/other-reports/forzenaccount/forzenaccount.component.html","./src/app/theme/reports/other-reports/forzenaccount/forzenaccount.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5-routing.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.html"],"names":[],"mappings":"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","file":"forzenaccount-forzenaccount-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ForzenaccountComponent } from './forzenaccount.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForzenaccountComponent,\r\n    data: {\r\n      title: 'Frozen Account',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ForzenaccountRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport * as moment from 'moment';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-forzenaccount',\r\n  templateUrl: './forzenaccount.component.html',\r\n  styleUrls: ['./forzenaccount.component.scss']\r\n})\r\nexport class ForzenaccountComponent implements OnInit {\r\n\r\n  ngForm!: FormGroup;\r\n  branch_code: any;\r\n  ngbranch: any;\r\n  branch;\r\n  accountedit: null;\r\n  ngscheme: any = null;\r\n  schtype: any = null;\r\n  schcode: any = null;\r\n  branchName: any;\r\n  getschemename: any;\r\n  showRepo: boolean = false;\r\n  bsValue = new Date();\r\n  schemeACNo: any[];\r\n  schemeACNo1: any[];\r\n  ngscheme1\r\n  clicked: boolean = false;\r\n  formSubmitted: boolean;\r\n  report_url = environment.report_url;\r\n  tableData: any[] = [];\r\n  showData = []\r\n  url = environment.base_url;\r\n\r\n  iframe5url: any = '';\r\n\r\n\r\n  constructor(private ownbranchMasterService: OwnbranchMasterService,\r\n    private fb: FormBuilder, private schemeAccountNoService: SchemeAccountNoService,\r\n    public schemeCodeDropdownService: SchemeCodeDropdownService, private sanitizer: DomSanitizer,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.showtable();\r\n\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n      console.log(this.branch_code)\r\n    });\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      this.schemeACNo = data;\r\n      console.log(this.schemeACNo);\r\n    });\r\n\r\n\r\n\r\n    // })\r\n    // this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\r\n    //   this.dates = data.CURRENT_DATE;\r\n    // });\r\n\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.ngForm = this.fb.group({\r\n      BRANCH_CODE: [\"\", [Validators.required]],\r\n      // Scheme_code: [\"\", [Validators.required]],\r\n      Suite_Date: [\"\", [Validators.required]],\r\n      // start: [\"\", [Validators.required]],\r\n      // end: [\"\", [Validators.required]],\r\n      // Scheme_type:[\"\",[Validators.required]]\r\n    })\r\n  }\r\n  getBranch(event) {\r\n    this.ngbranch = event.value\r\n    this.branchName = event.branchName\r\n  }\r\n  getdata(event) {\r\n    this.ngscheme = null;\r\n    this.accountedit = null;\r\n    this.branch = event.value\r\n  }\r\n  schemechange(event) {\r\n\r\n    this.getschemename = event.name\r\n    this.ngscheme = event.value\r\n    this.schcode = event.id\r\n    this.schtype = event.label\r\n    console.log(event);\r\n\r\n    this.getAccountlist()\r\n  }\r\n  getIntTrans(event) {\r\n    this.getschemename = event.name\r\n    // this.getAccountlist() T\r\n  }\r\n  getAccountlist() {\r\n    this.accountedit = null\r\n\r\n\r\n    // let obj = [this.ngscheme, this.branch]\r\n    // console.log(this.ngForm.get(\"Scheme_code\").value)\r\n    let obj = [this.ngForm.get(\"Scheme_type\").value.value, this.ngForm.get(\"BRANCH_CODE\").value]\r\n    console.log(obj)\r\n    // switch (this.getschemename) {\r\n    // case 'SH':\r\n    this.schemeAccountNoService.getShareMasterAcListForBalUpdation(obj).pipe(first()).subscribe(data => {\r\n      // this.schemeACNo = data\r\n      this.schemeACNo1 = data\r\n      console.log(\"acNo\", this.schemeACNo1);\r\n    })\r\n    // break;\r\n    // }\r\n\r\n  }\r\n  selectedRows: any[] = [];\r\n  selectedRowsGrp: any[] = [];\r\n\r\n  toggleSelection(event: any, row: any) {\r\n\r\n    console.log(\"row\", row);\r\n\r\n    if (event.target.checked) {\r\n      // If checkbox is checked, add row id to selectedRows if not already present\r\n      if (!this.selectedRows.includes(row.id)) {\r\n        this.selectedRows.push(row.id);\r\n        if (!this.selectedRows.includes(row.S_ACNOTYPE\r\n        )) {\r\n          this.selectedRowsGrp.push(row.S_ACNOTYPE);\r\n        }\r\n\r\n      }\r\n    } else {\r\n      // If checkbox is unchecked, remove row id from selectedRows if present\r\n      const index = this.selectedRows.indexOf(row.id);\r\n      const indexGrp = this.selectedRowsGrp.indexOf(row.S_ACNOTYPE\r\n      );\r\n      if (index !== -1) {\r\n        this.selectedRows.splice(index, 1);\r\n      }\r\n      if (indexGrp !== -1) {\r\n        this.selectedRowsGrp.splice(index, 1);\r\n      }\r\n    }\r\n    this.pushSelectedRows(); // Call pushSelectedRows to update the selectedRows array\r\n  }\r\n\r\n  isRowSelected(row: any) {\r\n    // console.log(row);\r\n    return this.selectedRows.includes(row.id);\r\n  }\r\n\r\n  selectAll() {\r\n    // Clear selectedRows array and then add all row ids to it\r\n    this.selectedRows = this.tableData.map(row => row.id);\r\n    this.updateCheckboxes(true);\r\n    this.pushSelectedRows();\r\n  }\r\n\r\n  unselectAll() {\r\n    this.selectedRows = [];\r\n    this.updateCheckboxes(false);\r\n    this.pushSelectedRows();\r\n  }\r\n\r\n  pushSelectedRows() {\r\n    console.log('Selected Rows:', this.selectedRows);\r\n  }\r\n\r\n  updateCheckboxes(checked: boolean) {\r\n    this.tableData.forEach(row => row.isSelected = checked);\r\n  }\r\n\r\n  view(event) {\r\n    // debugger\r\n\r\n\r\n    event.preventDefault();\r\n    this.formSubmitted = true;\r\n\r\n    let userData = JSON.parse(localStorage.getItem('user'));\r\n    let bankName = userData.branch.syspara.BANK_NAME;\r\n    let branchName = userData.branch.NAME;\r\n\r\n\r\n    if (this.ngForm.valid) {\r\n\r\n      this.showRepo = true;\r\n      let obj = this.ngForm.value\r\n      this.showRepo = true;\r\n      let Date = moment(obj.Suite_Date).format('DD/MM/YYYY');\r\n      // let Scheme_code =   this.schcode\r\n      let BRANCH_CODE = obj.BRANCH_CODE;\r\n      let rowArray = this.selectedRows;\r\n      console.log(rowArray);\r\n      console.log(this.tableData);\r\n      console.log(\"new : ---- \", this.selectedRowsGrp)\r\n\r\n\r\n      // let Scheme_type =  this.schtype\r\n      // let start = obj.start\r\n      // let end = obj.end\r\n\r\n\r\n\r\n\r\n      this.iframe5url = this.report_url + \"examples/FrozenAccount.php?startDate='\" + Date\r\n        + \"'&branchcode=\" + BRANCH_CODE + \"&row=\" + this.selectedRowsGrp\r\n        + \"&branchName=\" + branchName + \"&bankName=\" + bankName + \"\";\r\n      console.log(this.iframe5url);\r\n      this.iframe5url = this.sanitizer.bypassSecurityTrustResourceUrl(this.iframe5url);\r\n\r\n    }\r\n    else {\r\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(() => { this.clicked = false });\r\n    }\r\n  }\r\n  close() {\r\n    this.resetForm()\r\n\r\n  }\r\n  resetForm() {\r\n    this.ngForm.controls.Suite_Date.reset();\r\n    this.ngForm.controls.BRANCH_CODE.reset();\r\n\r\n    this.showRepo = false;\r\n    this.clicked = false;\r\n  }\r\n  showLoading: boolean = false;\r\n\r\n  onLoad() {\r\n    this.showLoading = false;\r\n\r\n  }\r\n  showtable() {\r\n    this.http.get(this.url + '/scheme-parameters').subscribe((data: any) => {\r\n      // console.log(data);\r\n\r\n      this.tableData = data\r\n      this.showData.push(this.tableData)\r\n\r\n      console.log(this.tableData)\r\n    })\r\n  }\r\n\r\n}\r\n","<!-- <p>forzenaccount works!</p> -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Frozen Account </h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <div class=\"card\">\r\n                <form [formGroup]=\"ngForm\">\r\n                    <div class=\"card-block\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-1\"> <label for=\"Branch\">Branch <sub\r\n                                        class=\"required\">*</sub></label></div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngbranch\"\r\n                                            formControlName=\"BRANCH_CODE\" bindLabel=\"label\" placeholder=\"\"\r\n                                            (change)=\"getdata($event)\">\r\n                                            <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                                {{values.label}}</ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['BRANCH_CODE'].invalid && (ngForm.controls['BRANCH_CODE'].dirty || ngForm.controls['BRANCH_CODE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"col-sm-12 col-md-2\"> <label for=\" Date\">Scheme Code<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Scheme_type\" \r\n                                            (change)=\"schemechange($event)\">\r\n                                            <ng-option *ngFor=\"let values of schemeACNo\" [value]=\"values\">\r\n                                                {{values.id}} {{values.label}}</ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Scheme_type'].invalid && (ngForm.controls['Scheme_type'].dirty || ngForm.controls['Scheme_type'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['Scheme_type'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div> -->\r\n                            <div class=\"col-md-2\">\r\n                                <label>Report Date<sub class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-md-2\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"Suite_Date\" id=\"Suite_Date\"\r\n                                            class=\"form-control\" appDateValidation [bsValue]=\"bsValue\"\r\n                                            formControlName=\"Suite_Date\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                            [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                            bsDatepicker>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Suite_Date'].invalid && (ngForm.controls['Suite_Date'].dirty || ngForm.controls['Suite_Date'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['Suite_Date'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"col-sm-12 col-md-2\"> <label for=\" Date\">Scheme Type<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div> -->\r\n                            <!-- <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Scheme_type\" [(ngModel)]=\"ngscheme1\"\r\n                                            (change)=\"schemechange($event)\">\r\n                                            <ng-option *ngFor=\"let values of schemeACNo\" [value]=\"values\">\r\n                                                {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Scheme_type'].invalid && (ngForm.controls['Scheme_type'].dirty || ngForm.controls['Scheme_type'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['Scheme_type'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div> -->\r\n                        </div>\r\n                        <!-- <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-1\"> <label for=\" Date\">Starting Account No.<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"AC_TYPE\" formControlName=\"start\" (change)=\"getIntTrans($event)\">\r\n                                            <ng-option *ngFor=\"let values of schemeACNo1\" [value]=\"values.value\">\r\n                                                {{values.label}} {{values.name}}</ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['start'].invalid && (ngForm.controls['start'].dirty || ngForm.controls['start'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['start'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-2\"> <label for=\" Date\">Ending Account No.<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"AC_TYPE\" formControlName=\"end\" (change)=\"getIntTrans($event)\">\r\n                                            <ng-option *ngFor=\"let values of schemeACNo1\" [value]=\"values.value\">\r\n                                                {{values.label}} {{values.name}}</ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['end'].invalid && (ngForm.controls['end'].dirty || ngForm.controls['end'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['end'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div> -->\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-md-8\"></div>\r\n                            <div class=\"col-md-2\">\r\n                                \r\n                                    <button class=\"btn btn-outline-primary btn-sm\" (click)=\"selectAll()\">Select All</button>\r\n    \r\n                            </div>\r\n                            <div class=\"col-md-2\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\"\r\n                                (click)=\"unselectAll()\">UnSelect All</button>\r\n                                \r\n                            </div>\r\n    \r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"solid\">\r\n                                    <table class=\"table table-bordered table-hover compact\">\r\n                                        <thead>\r\n                                            <td>Scheme Type</td>\r\n                                            <td>Scheme Code</td>\r\n                                            <td>Scheme Name</td>\r\n                                            <td>Select Scheme</td>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let row of tableData\">\r\n                                                <td>{{ row.S_ACNOTYPE }}</td>\r\n                                                <td>{{row.S_APPL}}</td>\r\n                                                <td>{{row.S_NAME}}</td>\r\n                                                <!-- <td><input type=\"checkbox\"></td> -->\r\n                                                <td><input type=\"checkbox\" [checked]=\"isRowSelected(row)\"\r\n                                                    (change)=\"toggleSelection($event, row)\"></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-9\"></div>\r\n                            <div class=\"col-md-2\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\r\n                                    (click)=\"view($event); clicked = true \">Print</button>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-1\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" (click)=\"close()\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        <h5>Report Frame</h5>\r\n                                    </div>\r\n                                    <div *ngIf=\"showRepo\">\r\n                                        <app-iframe5 [url]='iframe5url' (load)=\"onLoad()\"></app-iframe5>\r\n    \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ForzenaccountRoutingModule } from './forzenaccount-routing.module';\r\nimport { ForzenaccountComponent } from './forzenaccount.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { Iframe5Module } from '../../pigmy-report/iframe5/iframe5.module';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ForzenaccountComponent],\r\n  exports:[ForzenaccountComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ForzenaccountRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    Iframe5Module\r\n  ],\r\n  providers:[SchemeCodeDropdownService,OwnbranchMasterService,SchemeAccountNoService]\r\n\r\n})\r\nexport class ForzenaccountModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:Iframe5Component,\r\n    data: {\r\n      title: 'Iframe5',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class Iframe5RoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { Iframe5RoutingModule } from './iframe5-routing.module';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [Iframe5Component],\r\n  imports: [\r\n    CommonModule,\r\n    Iframe5RoutingModule\r\n  ],\r\n  exports:[Iframe5Component]\r\n})\r\nexport class Iframe5Module { }\r\n","import { Component, OnInit,Input } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-iframe5',\r\n  templateUrl: './iframe5.component.html',\r\n  styleUrls: ['./iframe5.component.scss']\r\n})\r\nexport class Iframe5Component implements OnInit {\r\n  @Input() url: any;\r\n  \r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer) {\r\n    this.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.url);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <form  novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"embed-responsive embed-responsive-16by9\">\r\n                        <div class=\"loader\">\r\n                            <img src=\"assets/Loading.gif\">\r\n                        </div>\r\n                        <iframe [src]=\"url\"></iframe>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}