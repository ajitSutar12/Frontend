{"version":3,"sources":["./src/app/theme/master/customer/saving-master/saving-master.service.ts","./src/app/theme/printing/td-recipt-printing/NumberToWordsService.service.ts","./src/app/theme/printing/td-recipt-printing/td-recipt-printing-routing.module.ts","./src/app/theme/printing/td-recipt-printing/td-recipt-printing.component.ts","./src/app/theme/printing/td-recipt-printing/td-recipt-printing.component.html","./src/app/theme/printing/td-recipt-printing/td-recipt-printing.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5-routing.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.html","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"td-recipt-printing-td-recipt-printing-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment'\r\n@Injectable()\r\nexport class SavingMasterService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/saving-master/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                Swal.fire('Please Input Proper Data!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/saving-master/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    getData(obj): Observable<any> {\r\n        return this.http.get(this.url + '/saving-master/alldata' + obj).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    getSchemeCodeList(scheme): Observable<any> {\r\n        return this.http.get(this.url + '/scheme-parameters/' + scheme).pipe(catchError(this.handleError));\r\n    }\r\n    getCustomerIDMasterList(): Observable<any> {\r\n        return this.http.get(this.url + '/customer-id').pipe(catchError(this.handleError));\r\n    }\r\n\r\n    getcategoryList(): Observable<any> {\r\n        return this.http.get(this.url + '/category-master').pipe(catchError(this.handleError));\r\n    }\r\n\r\n    getOperationMasterList(): Observable<any> {\r\n        return this.http.get(this.url + '/operation-master').pipe(catchError(this.handleError));\r\n    }\r\n    getMinimumBalanceMasterList(): Observable<any> {\r\n        return this.http.get(this.url + '/minimum-balance-master').pipe(catchError(this.handleError));\r\n    }\r\n    getIntrestCategoaryMasterList(): Observable<any> {\r\n        return this.http.get(this.url + '/interest-category-master').pipe(catchError(this.handleError));\r\n    }\r\n    getcityList(): Observable<any> {\r\n        return this.http.get(this.url + '/city-master').pipe(catchError(this.handleError));\r\n    }\r\n    getOwnbranchList(): Observable<any> {\r\n        return this.http.get(this.url + '/own-branch-master').pipe(catchError(this.handleError));\r\n    }\r\n    getAllSchemeList(): Observable<any> {\r\n        return this.http.get(this.url + '/scheme-parameters/').pipe(catchError(this.handleError));\r\n    }\r\n    getSavingSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/saving-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getShareSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/share-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getCurrentAccountSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/current-account-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getTermLoanSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/term-loan-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getTermDepositSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/term-deposits-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getDisputeLoanSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/dispute-loan-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getCashCreditSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/cash-credit-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getAnamatSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/anamat-gsm/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getPigmyAccountSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/pigmy-account-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getPigmyAgentSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/pigmy-agent-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getLokcerSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get<any>(this.url + '/locker-master/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n    getInvestmentSchemeList1(schemeid): Observable<any> {\r\n        return this.http.get(this.url + '/investment/scheme/' + schemeid).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/saving-master/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/saving-master/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n\r\n\r\n    //approve master\r\n    approve(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/saving-master/approve', data).pipe(catchError(this.handleError));\r\n    }\r\n\r\n\r\n    //reject master\r\n    reject(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/saving-master/reject', data).pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NumberToWordsService {\r\n\r\n  \r\n    private ones: string[] = ['', 'एक', 'दोन', 'तीन', 'चार', 'पाच', 'सहा', 'सात', 'आठ', 'नऊ'];\r\n    private teens: string[] = ['अकरा', 'बारा', 'तेरा', 'चौदा', 'पंधरा', 'सोळा', 'सतरा', 'अठरा', 'एकोणीस'];\r\n    private tens: string[] = ['', 'दहा', 'वीस', 'तीस', 'चाळीस', 'पन्नास', 'साठ', 'सत्तर', 'ऐंशी', 'नव्वद'];\r\n    private thousands: string[] = ['', 'हजार', 'लाख', 'कोटी', 'अब्ज'];\r\n  \r\n    convertToWords(num: number): string {\r\n      if (num === 0) {\r\n        return 'शून्य';\r\n      }\r\n  \r\n      let words = '';\r\n  \r\n      let i = 0;\r\n      while (num > 0) {\r\n        if (num % 1000 !== 0) {\r\n          words = this.convertHundreds(num % 1000) + this.thousands[i] + ' ' + words;\r\n        }\r\n        num = Math.floor(num / 1000);\r\n        i++;\r\n      }\r\n  \r\n      return words.trim();\r\n    }\r\n  \r\n    private convertHundreds(num: number): string {\r\n      let words = '';\r\n  \r\n      if (num > 99) {\r\n        words += this.ones[Math.floor(num / 100)] + 'शे ';\r\n        num = num % 100;\r\n      }\r\n  \r\n      if (num > 10 && num < 20) {\r\n        words += this.teens[num - 11] + ' ';\r\n      } else {\r\n        words += this.tens[Math.floor(num / 10)] + ' ';\r\n        num = num % 10;\r\n        words += this.ones[num] + ' ';\r\n      }\r\n  \r\n      return words;\r\n    }\r\n  }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TdReciptPrintingComponent } from './td-recipt-printing.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TdReciptPrintingComponent,\r\n    data: {\r\n      title: 'Td-Recipt Printing ',\r\n      status: false\r\n    },\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TdReciptPrintingRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport * as moment from 'moment';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal from 'sweetalert2';\r\nimport { SavingMasterService } from '../../master/customer/saving-master/saving-master.service';\r\nimport { VoucherEntryService } from '../../transaction/voucher-entry/voucher-entry.service';\r\nimport { SystemMasterParametersService } from '../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport {NumberToWordsService} from './NumberToWordsService.service';\r\n\r\n@Component({\r\n  selector: 'app-td-recipt-printing',\r\n  templateUrl: './td-recipt-printing.component.html',\r\n  styleUrls: ['./td-recipt-printing.component.scss']\r\n})\r\nexport class TdReciptPrintingComponent implements OnInit {\r\n  ngForm: FormGroup\r\n  bsValue = new Date();\r\n  BranchCode\r\n  schemeCode\r\n  firstno\r\n  fromdate\r\n  todate\r\n  acnumber\r\n  lastno\r\n  scheme\r\n  isTdsForm: boolean;\r\n  branch_code: any;\r\n  obj: any;\r\n  introducerACNo: any;\r\n  selectedBranch: any;\r\n  narrationList: any;\r\n  getschemename: any\r\n  allScheme //account type for introducer\r\n  formSubmitted = false;\r\n  report_url = environment.report_url;\r\n  showRepo: boolean = false;\r\n  clicked: boolean = false;\r\n  iframe5url: any = '';\r\n  Scheme\r\n  ngFnarration: any;\r\n  schemeACNo\r\n  transferSchemeDetails: any;\r\n  schemeType: string = 'TD'\r\n  city: any;\r\n  Ncity: any;\r\n  defaultDate: any;\r\n  ngbranch: any;\r\n  branchName: any;\r\n  getbankAcNo: any;\r\n  letterTemplate: string = ''\r\n  // textareaWidth: number = 1300;\r\n  fontSize: number = 24;\r\n  url = environment.base_url;\r\n  amountInWords: string;\r\n  isTextareaVisible: boolean = false;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private _service: VoucherEntryService,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private savingMasterService: SavingMasterService,private numberToWordsService: NumberToWordsService,\r\n    private _SchemeCodeDropdown: SchemeCodeDropdownService,private http: HttpClient,\r\n    private sanitizer: DomSanitizer, private systemParameter: SystemMasterParametersService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    //branchcode\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n      this.BranchCode = user.branchId;\r\n    })\r\n\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      this.Scheme = data;\r\n    });\r\n    this._SchemeCodeDropdown.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      var filtered = data.filter(function (scheme) {\r\n        return (scheme.name == 'TD');\r\n      });\r\n      this.allScheme = filtered;\r\n    })\r\n    //Narration List\r\n    this._service.getNarrationMaster().subscribe(data => {\r\n      this.narrationList = data;\r\n    })\r\n\r\n    //display defalut date\r\n    this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\r\n      this.defaultDate = data.CURRENT_DATE;\r\n    })\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    if (result.RoleDefine[0].Role.id == 1) {\r\n      this.ngbranch = result.branch.id\r\n      this.ngForm.controls['BRANCH_CODE'].enable()\r\n      this.branchName = result.branch.NAME\r\n    }\r\n    else {\r\n      this.ngForm.controls['BRANCH_CODE'].disable()\r\n      this.ngbranch = result.branch.id\r\n      this.branchName = result.branch.NAME\r\n\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.ngForm = this.fb.group({\r\n      BRANCH_CODE: ['', [Validators.required]],\r\n      AC_TYPE: ['', [Validators.required]],\r\n      FIRST_NO: ['', [Validators.required]],\r\n      // LAST_NO: ['', [Validators.required]],\r\n      FROM_DATE: ['',],\r\n      TO_DATE: ['',],\r\n\r\n    });\r\n  }\r\n\r\nschemenm\r\n  accdetails\r\n  getIntro(event) {\r\nthis.schemenm=event.label\r\n    let obj={\r\n      \"actype\":event.value,\r\n      \"branch\":  this.BranchCode,\r\n    }\r\n    this.http.post(this.url+'/term-deposits-master/getreciptacc', obj).subscribe(\r\n      (data: any) => {\r\n          this.introducerACNo = data;\r\n      },\r\n      error => {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    );\r\n    this.getschemename = event.name\r\n  }\r\n  getIntTranscus(event) {\r\n    this.getbankAcNo = event.bankacno\r\n  }\r\n\r\n \r\n  isReceivedTds($event) {\r\n\r\n    if ($event.target.checked) {\r\n      this.isTdsForm = true;\r\n\r\n    } else {\r\n      this.isTdsForm = false;\r\n    }\r\n  }\r\n\r\n  AC_NAME\r\n  OPDATE\r\nAC_EXPDT\r\nAC_DAYS\r\nAC_MONTHS\r\nAC_MATUAMT\r\nAC_SCHMAMT\r\nAC_ASON_DATE\r\nAC_REF_RECEIPTNO\r\nAC_NO\r\nCITY_NAME\r\nAC_INTRATE\r\nAC_NNAME\r\n  getIntTrans(event) {\r\n    this.firstno = event.BANKACNO\r\n    this.AC_ASON_DATE=event.AC_ASON_DATE\r\n    this.AC_NAME=event.AC_NAME\r\n    this.OPDATE=event.AC_OPDATE\r\n    this.AC_EXPDT=event.AC_EXPDT\r\n    this.AC_DAYS=event.AC_DAYS\r\n    this.AC_MONTHS=event.AC_MONTHS\r\n    this.AC_MATUAMT=event.AC_MATUAMT\r\n    this.AC_SCHMAMT=event.AC_SCHMAMT\r\n    this.AC_REF_RECEIPTNO=event.AC_REF_RECEIPTNO\r\n    this.AC_NO=event.AC_NO\r\n    this.CITY_NAME=event.CITY_NAME\r\n    this.AC_INTRATE=event.AC_INTRATE\r\n    this.AC_NNAME=event.AC_NNAME\r\n  }  \r\n  getIntTrans1(event) {\r\n    this.lastno = event.BANKACNO\r\n  }\r\n  view() {\r\n\r\n    // event.preventDefault();\r\n    // this.formSubmitted = true;\r\n    this.isTextareaVisible = true;\r\n    let userData = JSON.parse(localStorage.getItem('user'));\r\n    let bankName = userData.branch.syspara.BANK_NAME;\r\n    let branchName = userData.branch.NAME;\r\n\r\n    if (this.ngForm.valid) {\r\n      let obj = this.ngForm.value\r\n      this.showRepo = true;\r\n\r\n      if (this.defaultDate == userData.branch.syspara.CURRENT_DATE) {\r\n        obj['FROM_DATE'] = userData.branch.syspara.CURRENT_DATE\r\n      }\r\n      else {\r\n        let date = moment(this.defaultDate).format('DD/MM/YYYY');\r\n        let tDate = moment(date, 'DD/MM/YYYY')\r\n        obj['FROM_DATE'] = date\r\n      }\r\n      let scheme = obj.AC_TYPE\r\n      let branch = obj.BRANCH_CODE\r\n      let firstno = this.firstno\r\n      let lastno = this.lastno\r\n\r\n      let AC_NAME= this.AC_NAME\r\n      let AC_EXPDT=this.AC_EXPDT\r\n      let OPDATE=this.OPDATE\r\n      let AC_DAYS=this.AC_DAYS\r\n      let AC_MONTHS=this.AC_MONTHS\r\n      let schemenm=this.schemenm\r\n      let AC_ASON_DATE=this.AC_ASON_DATE\r\n      let AC_MATUAMT=this.AC_MATUAMT\r\n      let AC_SCHMAMT=this.AC_SCHMAMT\r\n      // let AC_REF_RECEIPTNO=this.AC_REF_RECEIPTNO\r\n      let AC_NO=this.AC_NO\r\n      let CITY_NAME=this.CITY_NAME\r\n      let AC_INTRATE=this.AC_INTRATE\r\n      let AC_NNAME=this.AC_NNAME\r\n      let AC_REF_RECEIPTNO = this.AC_REF_RECEIPTNO ? this.AC_REF_RECEIPTNO : this.AC_NO;\r\n      this.amountInWords = this.numberToWordsService.convertToWords(this.AC_SCHMAMT);\r\n      this.letterTemplate = `                                                                                         \r\n  ठेव प्रकार : ${schemenm}                     पावती नं: ${AC_REF_RECEIPTNO}                          जमा तारीख: ${OPDATE}      \r\n\r\n  खाते नं:  ${AC_NO}                                                                   नूतनीकरण तारीख: ${AC_ASON_DATE}\r\n\r\n                                                                                 परत फेडीची तारीख: ${AC_EXPDT}\r\n\r\n  श्री/सौ/श्रीमती:  ${AC_NAME}                                    रा. ${CITY_NAME}            यांचेकडून \r\n\r\n  ठेव रक्कम रुपये ${AC_SCHMAMT}    (अक्षरी रुपये ${this.amountInWords} फक्त).\r\n\r\n  द.सा.द.शे. ${AC_INTRATE} % व्याजदराने मुदत महिने - ${AC_MONTHS} , दिवस - ${AC_DAYS} , मुदतीने स्वीकारली आहे. \r\n\r\n  मुदतीनंतर मिळणारी रक्कम:  ${AC_MATUAMT}.\r\n\r\n  वारस:  ${AC_NNAME}\r\n                                                        \r\n                        `;\r\n      // console.log(this.letterTemplate);\r\n    }\r\n\r\n\r\n  }\r\n  close() {\r\n    this.resetForm()\r\n    this.isTextareaVisible = false;\r\n\r\n\r\n  }\r\n  resetForm() {\r\n    this.ngForm.controls.AC_TYPE.reset();\r\n    this.ngForm.controls.FIRST_NO.reset();\r\n    this.showRepo = false;\r\n    this.clicked = false;\r\n  }\r\n  getBranch(event) {\r\n    // this.getIntroducer()\r\n    this.ngbranch = event.value\r\n    this.branchName = event.branchName\r\n  }\r\n  printTextArea() {\r\n\r\n    const printWindow = window.open();\r\n    printWindow.document.write('<html><head><title>Print</title></head><body>');\r\n    printWindow.document.write('<pre>' + this.letterTemplate + '</pre>');\r\n    printWindow.document.write('</body></html>');\r\n    printWindow.print();\r\n    printWindow.close();\r\n\r\n    // this.showViewButton = false;\r\n    // this.showCancelButton = true;\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>TD-Receipt Printing</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form [formGroup]=\"ngForm\">\r\n                <div class=\"card-block\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"solid\">\r\n                                <div class=\"row\">\r\n\r\n                                    <div class=\"col-sm-2 col-md-2\"> <label for=\"AC_BRANCH\">Branch Code<sub\r\n                                                class=\"required\">*</sub></label>\r\n                                    </div>\r\n                                    <div class=\"col-sm-2 col-md-3\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select bindValue=\"value\" bindLabel=\"label\" [(ngModel)]=\"BranchCode\"\r\n                                                (change)=\"getBranch($event)\" formControlName=\"BRANCH_CODE\" #branchcode autofocus>\r\n                                                    <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                                        {{values.label}}</ng-option> \r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['BRANCH_CODE'].invalid && (ngForm.controls['BRANCH_CODE'].dirty || ngForm.controls['BRANCH_CODE'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Scheme Code<sub\r\n                                                class=\"required\">*</sub></label>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <span class=\"border-lable-flt\" autofocus>\r\n                                                <ng-select bindValue=\"value\" [(ngModel)]=\"schemeCode\" id=\"AC_TYPE\"\r\n                                                    bindLabel=\"label\" formControlName=\"AC_TYPE\" (change)=\"getIntro($event)\"\r\n                                                    title=\"Compulsory Selection\" required placeholder=\"Scheme\">\r\n                                                    <ng-option *ngFor=\"let values of allScheme\" [value]=\"values\">\r\n                                                        {{values.id}} {{values.label}} </ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['AC_TYPE'].invalid && (ngForm.controls['AC_TYPE'].dirty || ngForm.controls['AC_TYPE'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['AC_TYPE'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\"> \r\n                                    <div class=\"col-md-2\"> <label for=\"from no\">From A/c Number<sub\r\n                                                class=\"required\">*</sub></label>\r\n                                    </div>\r\n                                    <div class=\"col-md-3\">\r\n                                        <div class=\"form-group input-group\">\r\n                                            <span class=\"border-lable-flt\">\r\n                                                <ng-select id=\"cdropdown\" [(ngModel)]=\"firstno\"\r\n                                                    formControlName=\"FIRST_NO\"\r\n                                                   (change)=\"getIntTrans($event)\"\r\n                                                    placeholder=\" From A/c No\">\r\n                                                    <ng-option *ngFor=\"let values of introducerACNo\" [value]=\"values\"> \r\n                                                       {{ values.AC_NAME }}</ng-option>\r\n                                                </ng-select>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"ngForm.controls['FIRST_NO'].invalid && (ngForm.controls['FIRST_NO'].dirty || ngForm.controls['FIRST_NO'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"ngForm.controls['FIRST_NO'].errors?.required\">\r\n                                                This field is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                   \r\n                                </div>\r\n                                \r\n\r\n                                <div class=\"row\">\r\n\r\n                                    <div class=\"col-sm\">\r\n                                        <button class=\"btn  btn-outline-primary btn-sm\" (click)=\"close()\">Close</button>\r\n                                        <button type=\"view\" class=\"btn btn-outline-primary btn-sm btn-submit\" (click)=\"view()\" \r\n                                       >View</button>\r\n                                      \r\n                                        <button class=\"btn  btn-outline-primary btn-sm\"  (click)=\"printTextArea()\">Print</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md\">\r\n                                      <div class=\"checkbox checkbox-primary \">\r\n                                        <div class=\"border-checkbox-group border-checkbox-group-primary\" *ngIf=\"isTextareaVisible\">\r\n                                          <textarea [(ngModel)]=\"letterTemplate\" rows=\"20\"   class=\"custom-textarea\"\r\n                                            disabled>{{this.letterTemplate}}</textarea>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                <!-- <div class=\"row\">\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"card\">\r\n                                            <div class=\"card-header\">\r\n                                                <h5>Report Frame</h5>\r\n                                            </div>\r\n                                            <div *ngIf=\"showRepo\">\r\n                                                <app-iframe5 [url]='iframe5url'></app-iframe5>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>  -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                  \r\n\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- \r\n<app-modal-basic #modalLarge [dialogClass]=\"'modal-md'\">\r\n    <div class=\"app-modal-header\">\r\n        <h4 class=\"modal-title\">Narration Master</h4>\r\n        <button type=\"button\" class=\"close basic-close\" (click)=\"modalLarge.hide()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"app-modal-body\">\r\n        <perfect-scrollbar style=\"overflow-y: auto;\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <th>Reasons</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let item of narrationList\" (click)=\"getNarration(item.NARRATION)\">\r\n                                {{item.NARRATION}}\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <button type=\"button\" style=\"display: none;\" class=\"btn btn-outline-primary btn-sm\" id=\"triggrhide\"\r\n                        #triggerhide (click)=\"modalLarge.hide()\">Close</button>\r\n                </div>\r\n            </div>\r\n        </perfect-scrollbar>\r\n    </div>\r\n</app-modal-basic> -->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TdReciptPrintingRoutingModule } from './td-recipt-printing-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { Iframe5Module } from '../../reports/pigmy-report/iframe5/iframe5.module';\r\nimport { TdReciptPrintingComponent } from './td-recipt-printing.component';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { SavingMasterService } from '../../master/customer/saving-master/saving-master.service';\r\nimport { VoucherEntryService } from '../../transaction/voucher-entry/voucher-entry.service';\r\nimport { SystemMasterParametersService } from '../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n@NgModule({\r\n  declarations: [TdReciptPrintingComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TdReciptPrintingRoutingModule,\r\n    SharedModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    ColorPickerModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DataTablesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    Iframe5Module,\r\n  ],\r\n  exports:[TdReciptPrintingComponent],\r\n  providers:[  SchemeCodeDropdownService,SchemeAccountNoService,\r\n    OwnbranchMasterService,VoucherEntryService,SavingMasterService,\r\n    SystemMasterParametersService,\r\n   \r\n]\r\n})\r\nexport class TdReciptPrintingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:Iframe5Component,\r\n    data: {\r\n      title: 'Iframe5',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class Iframe5RoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { Iframe5RoutingModule } from './iframe5-routing.module';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [Iframe5Component],\r\n  imports: [\r\n    CommonModule,\r\n    Iframe5RoutingModule\r\n  ],\r\n  exports:[Iframe5Component]\r\n})\r\nexport class Iframe5Module { }\r\n","import { Component, OnInit,Input } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-iframe5',\r\n  templateUrl: './iframe5.component.html',\r\n  styleUrls: ['./iframe5.component.scss']\r\n})\r\nexport class Iframe5Component implements OnInit {\r\n  @Input() url: any;\r\n  \r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer) {\r\n    this.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.url);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <form  novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"embed-responsive embed-responsive-16by9\">\r\n                        <div class=\"loader\">\r\n                            <img src=\"assets/Loading.gif\">\r\n                        </div>\r\n                        <iframe [src]=\"url\"></iframe>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class SystemMasterParametersService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  // url = \"http://localhost:4000/system-master-parameters\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        let errorMessage = 'Please add valid length';\r\n        Swal.fire('Kindly Add Valid Length !');\r\n        return throwError(errorMessage);\r\n      })\r\n    )\r\n  }\r\n\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/system-master-parameters/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getData(): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}