{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5-routing.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.html","./src/app/theme/reports/registers/locker-key-register/locker-key-register-routing.module.ts","./src/app/theme/reports/registers/locker-key-register/locker-key-register.component.ts","./src/app/theme/reports/registers/locker-key-register/locker-key-register.component.html","./src/app/theme/reports/registers/locker-key-register/locker-key-register.module.ts"],"names":[],"mappings":"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","file":"locker-key-register-locker-key-register-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:Iframe5Component,\r\n    data: {\r\n      title: 'Iframe5',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class Iframe5RoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { Iframe5RoutingModule } from './iframe5-routing.module';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [Iframe5Component],\r\n  imports: [\r\n    CommonModule,\r\n    Iframe5RoutingModule\r\n  ],\r\n  exports:[Iframe5Component]\r\n})\r\nexport class Iframe5Module { }\r\n","import { Component, OnInit,Input } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-iframe5',\r\n  templateUrl: './iframe5.component.html',\r\n  styleUrls: ['./iframe5.component.scss']\r\n})\r\nexport class Iframe5Component implements OnInit {\r\n  @Input() url: any;\r\n  \r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer) {\r\n    this.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.url);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <form  novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"embed-responsive embed-responsive-16by9\">\r\n                        <div class=\"loader\">\r\n                            <img src=\"assets/Loading.gif\">\r\n                        </div>\r\n                        <iframe [src]=\"url\"></iframe>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LockerKeyRegisterComponent } from './locker-key-register.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component:  LockerKeyRegisterComponent,\r\n  data: {\r\n    title: 'Locker Register',\r\n    icon: 'icon-home',\r\n    caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n    status: true\r\n  }\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LockerKeyRegisterRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport * as moment from 'moment';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-locker-key-register',\r\n  templateUrl: './locker-key-register.component.html',\r\n  styleUrls: ['./locker-key-register.component.scss']\r\n})\r\nexport class LockerKeyRegisterComponent implements OnInit {\r\n  ngForm: FormGroup;\r\n  ngbranch: any = null;\r\n  branchName: any;\r\n  branchOption: any[];\r\n  rackNo: any[] = [];\r\n  formSubmitted = false;\r\n  tScheme\r\n  showRepo: boolean = false;\r\n  clicked: boolean = false;\r\n  todate: any = null;\r\n  fromdate: any = null;\r\n  iframe5url: any = ' ';\r\n  bsValue = new Date();\r\n  maxDate: any;\r\n  minDate: any;\r\n  report_url = environment.report_url;\r\n  url = environment.base_url;\r\n  constructor(private fb: FormBuilder,\r\n    private _ownbranchmasterservice: OwnbranchMasterService,\r\n    private http: HttpClient,\r\n    private sanitizer: DomSanitizer,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    //branch List\r\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branchOption = data;\r\n    });\r\n    // this.http.get('http://192.168.1.153:3000/locker-rack-master/').subscribe((data: any) => {\r\n    this.http.get(this.url+'/locker-rack-master/').subscribe((data: any) => {\r\n\r\n      console.log(\"rack no:\", data);\r\n      this.rackNo = data;\r\n    });\r\n  }\r\n  createForm() {\r\n    this.ngForm = this.fb.group({\r\n      BRANCH_CODE: ['', [Validators.pattern, Validators.required]],\r\n      RNo: ['', [Validators.required]],\r\n      // Scheme_code: [\"\", [Validators.pattern, Validators.required]],\r\n      // // radio_sort:new FormControl('rentreceipt'),\r\n      // START_DATE: [\"\", [Validators.required]],\r\n      // END_DATE: [\"\", [Validators.required]],\r\n      S_Rank: ['', [Validators.required]],\r\n      E_Rank: ['', [Validators.required]],\r\n      DATEE: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  getBranch(event) {\r\n    this.ngbranch = event.value\r\n    this.branchName = event.branchName\r\n  }\r\n  Rno\r\n  Enk\r\n  Snk\r\n  getRNo(event) {\r\n    this.Rno = event.RACK_NO;\r\n    this.Enk = event.LOCKER_TONO;\r\n    this.Snk = event.LOCKER_FROMNO;\r\n  }\r\n\r\n\r\n  view(event) {\r\n\r\n    event.preventDefault();\r\n    this.formSubmitted = true;\r\n\r\n    let userData = JSON.parse(localStorage.getItem('user'));\r\n    let bankName = userData.branch.syspara.BANK_NAME;\r\n    let branchName = userData.branch.NAME\r\n\r\n    let schemeName = this.tScheme\r\n\r\n    if (this.ngForm.valid) {\r\n      let obj = this.ngForm.value\r\n      this.showRepo = true;\r\n\r\n      // let flag = obj.radio_sort;\r\n\r\n      // if(flag == 'rentreceipt'){\r\n      //   flag = '1';\r\n      // }else{\r\n      //   flag = '0';\r\n      // }\r\n\r\n      //for start Date\r\n      // if (this.fromdate == userData.branch.syspara.CURRENT_DATE) {\r\n      //   obj['START_DATE'] = userData.branch.syspara.CURRENT_DATE\r\n      // }\r\n      // else {\r\n      //   let date = moment(this.fromdate).format('DD/MM/YYYY');\r\n      //   let tDate = moment(date, 'DD/MM/YYYY')\r\n      //   obj['START_DATE'] = date\r\n      // }\r\n      // //for End Date\r\n      // if (this.todate == userData.branch.syspara.CURRENT_DATE) {\r\n      //   obj['END_DATE'] = userData.branch.syspara.CURRENT_DATE\r\n      // }\r\n      // else {\r\n      //   let date = moment(this.todate).format('DD/MM/YYYY');\r\n      //   let tDate = moment(date, 'DD/MM/YYYY')\r\n      //   obj['END_DATE'] = date\r\n      // }\r\n\r\n      let RackNo = this.Rno;\r\n      let ERank = this.Enk;\r\n      let SRank = this.Snk;\r\n\r\n      let Date = moment(obj.DATEE).format('DD/MM/YYYY');\r\n      // debugger\r\n\r\n\r\n      // this.iframe5url=this.report_url+\"examples/LockerRegister.php?PRINT_DATE='\" + obj.END_DATE + \"'&BRANCH='\" + this.branchName + \"'&BANK_NAME='\" + bankName + \"'\";\r\n      //   this.iframe5url=this.report_url+\"examples/LockerKeyRegister.php?BRANCH='\" + this.branchName + \r\n      //  \"'&BRANCH_CODE='\" + this.ngbranch + \r\n      //   \"'&PRINT_DATE='\" + obj.END_DATE +  \"'&RackNo='\" + RackNo +  \r\n      // \"'&SRank='\" + SRank +  \"'&ERank='\" + ERank + \"'\" +  \"'&BANK_NAME='\" + bankName ;\r\n      this.iframe5url = this.report_url + \"examples/LockerKeyRegister.php?startDate='\" + Date + \"'&BRANCH='\" + branchName +\r\n        \"'&BRANCH_CODE='\" + this.ngbranch +\r\n        \"'&RackNo='\" + RackNo +\r\n        \"'&SRank='\" + SRank + \"'&ERank='\" + ERank + \"'&BANK_NAME='\" + bankName;\r\n      console.log(this.iframe5url)\r\n      this.iframe5url = this.sanitizer.bypassSecurityTrustResourceUrl(this.iframe5url);\r\n\r\n\r\n    }\r\n    else {\r\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(() => { this.clicked = false });\r\n    }\r\n\r\n  }\r\n\r\n  close() {\r\n    this.resetForm()\r\n  }\r\n\r\n\r\n  resetForm() {\r\n    this.ngForm.controls.RNo.reset();\r\n    this.ngForm.controls.S_Rank.reset();\r\n    this.ngForm.controls.E_Rank.reset();\r\n    this.showRepo = false;\r\n    this.clicked = false;\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Locker Key Register </h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form [formGroup]=\"ngForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"scheme\">Branch <sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngbranch\"\r\n                                        (change)=\"getBranch($event)\" formControlName=\"BRANCH_CODE\" bindLabel=\"label\"\r\n                                        placeholder=\"\">\r\n                                        <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"ngForm.controls['BRANCH_CODE'].invalid && (ngForm.controls['BRANCH_CODE'].dirty || ngForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"ngForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"rackno\">Rack No. <sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"RNo\" (change)=\"getRNo($event)\" formControlName=\"RNo\" placeholder=\"\">\r\n                                        <ng-option *ngFor=\"let values of rackNo \" [value]=\"values\">\r\n                                            {{values.RACK_NO}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"ngForm.controls['RNo'].invalid && (ngForm.controls['RNo'].dirty || ngForm.controls['RNo'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"ngForm.controls['RNo'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"rackno\">Starting <sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"S_Rank\" formControlName=\"S_Rank\" placeholder=\"\">\r\n                                        <ng-option *ngFor=\"let values of rackNo \" [value]=\"values\">\r\n                                            {{values.LOCKER_FROMNO}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"ngForm.controls['S_Rank'].invalid && (ngForm.controls['S_Rank'].dirty || ngForm.controls['S_Rank'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"ngForm.controls['S_Rank'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"scheme\">Ending <sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"E_Rank\" formControlName=\"E_Rank\" placeholder=\"\">\r\n                                        <ng-option *ngFor=\"let values of rackNo \" [value]=\"values\">\r\n                                            {{values.LOCKER_TONO}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"ngForm.controls['E_Rank'].invalid && (ngForm.controls['E_Rank'].dirty || ngForm.controls['E_Rank'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"ngForm.controls['E_Rank'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"Branch\">Date <sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"DATE\" id=\"DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"fromdate\" [bsValue]=\"bsValue\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" appButton minlength=\"10\"\r\n                                        maxlength=\"10\" formControlName=\"DATEE\" [maxDate]=\"maxDate\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-9\"></div>\r\n                        <div class=\"col-sm-12 col-md-1\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\r\n                                (click)=\"view($event); clicked = true\">View</button>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-1\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\"\r\n                                (click)=\"close()\">Close</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\">\r\n                                    <h5>Report Frame</h5>\r\n                                </div>\r\n                                <div *ngIf=\"showRepo\">\r\n                                    <app-iframe5 [url]='iframe5url'></app-iframe5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LockerKeyRegisterRoutingModule } from './locker-key-register-routing.module';\r\nimport { LockerKeyRegisterComponent } from './locker-key-register.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { Iframe5Module } from '../../pigmy-report/iframe5/iframe5.module';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LockerKeyRegisterComponent],\r\n  providers:[OwnbranchMasterService],\r\n  imports: [\r\n    CommonModule,\r\n    LockerKeyRegisterRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    NgbModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    Iframe5Module\r\n  ]\r\n})\r\nexport class LockerKeyRegisterModule { }\r\n"],"sourceRoot":"webpack:///"}