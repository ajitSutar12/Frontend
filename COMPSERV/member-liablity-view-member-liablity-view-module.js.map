{"version":3,"sources":["./src/app/shared/dropdownService/director-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5-routing.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.html","./src/app/theme/view/member-liablity-view/member-liablity-view-routing.module.ts","./src/app/theme/view/member-liablity-view/member-liablity-view.component.ts","./src/app/theme/view/member-liablity-view/member-liablity-view.component.html","./src/app/theme/view/member-liablity-view/member-liablity-view.module.ts"],"names":[],"mappings":"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","file":"member-liablity-view-member-liablity-view-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class DirectorMasterDropdownService {\r\n\r\n    //  // director-master\";\r\n    url = environment.base_url;\r\n    directorMasterObject = new Array();\r\n    directorObject = new Array();\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getDirectorMasterList() {\r\n        this.directorMasterObject = []\r\n        return this.http.get<any>(this.url + '/director-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.NAME, value: element.id, name:element.IS_CURRENT_BODY_MEMBER };\r\n                    this.directorMasterObject.push(obj)\r\n                });\r\n                return this.directorMasterObject;\r\n            }));\r\n    }\r\n\r\n    public getDirectorMastertrueList() {\r\n        this.directorObject = []\r\n        return this.http.get<any>(this.url + '/director-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                \r\n                    if(element.IS_CURRENT_BODY_MEMBER == true){\r\n                        let obj = { label: element.NAME, value: element.id};\r\n                        this.directorObject.push(obj)\r\n                    }\r\n                   \r\n                });\r\n                return this.directorObject;\r\n            }));\r\n\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:Iframe5Component,\r\n    data: {\r\n      title: 'Iframe5',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class Iframe5RoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { Iframe5RoutingModule } from './iframe5-routing.module';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [Iframe5Component],\r\n  imports: [\r\n    CommonModule,\r\n    Iframe5RoutingModule\r\n  ],\r\n  exports:[Iframe5Component]\r\n})\r\nexport class Iframe5Module { }\r\n","import { Component, OnInit,Input } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-iframe5',\r\n  templateUrl: './iframe5.component.html',\r\n  styleUrls: ['./iframe5.component.scss']\r\n})\r\nexport class Iframe5Component implements OnInit {\r\n  @Input() url: any;\r\n  \r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer) {\r\n    this.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.url);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <form  novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"embed-responsive embed-responsive-16by9\">\r\n                        <div class=\"loader\">\r\n                            <img src=\"assets/Loading.gif\">\r\n                        </div>\r\n                        <iframe [src]=\"url\"></iframe>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","\r\nimport {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {MemberLiablityViewComponent} from './member-liablity-view.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MemberLiablityViewComponent,\r\n    data: {\r\n      title: 'Member Liablity View',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MemberLiablityViewRoutingModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport * as moment from 'moment';\r\nimport { first } from 'rxjs/operators';\r\nimport { DirectorMasterDropdownService } from 'src/app/shared/dropdownService/director-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-member-liablity-view',\r\n  templateUrl: './member-liablity-view.component.html',\r\n  styleUrls: ['./member-liablity-view.component.scss']\r\n})\r\nexport class MemberLiablityViewComponent implements OnInit {\r\n  // angForm : FormGroup;\r\n  //   obj: any;\r\n\r\n  // constructor(\r\n  //   private fb: FormBuilder,\r\n  //   public schemeCodeDropdownService: SchemeCodeDropdownService,\r\n  //   private _schemeService: SchemeAccountNoService\r\n\r\n  // ) { }\r\n\r\n  // //ngfor variables\r\n  // sh_Scheme\r\n  // introducerACNo\r\n\r\n  // //ngmodel variables\r\n  // selectedshScheme\r\n  // selectedmemNo\r\n\r\n  // ngOnInit(): void {\r\n  //   this.createForm();\r\n\r\n  //   this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n\r\n  //       var filtered = data.filter(function (sh_Scheme) {\r\n  //         return (sh_Scheme.name == 'SH');\r\n  //       });\r\n  //       this.sh_Scheme = filtered;\r\n  //       this.getIntroducer()\r\n  //   })\r\n  // }\r\n\r\n\r\n  // getIntro(event){\r\n  //   this.getschemename = event.name\r\n  //   this.getIntroducer()\r\n  // }\r\n\r\n  // getschemename: any\r\n  // getIntroducer() {\r\n  //   let data: any = localStorage.getItem('user');\r\n  //   let result = JSON.parse(data);\r\n  //   let branchCode = result.branch.id;\r\n  //   this.obj = [this.selectedshScheme,branchCode]\r\n\r\n    \r\n  //   switch (this.getschemename) {\r\n\r\n  //     case 'SH':\r\n  //       this._schemeService.getShareSchemeList1(this.obj).subscribe(data => {\r\n  //         this.introducerACNo = data;\r\n  //         //console.log(data,\"gj\");        \r\n\r\n  //       })\r\n  //       break;\r\n\r\n  //   }\r\n     \r\n  //  }\r\n\r\n\r\n  // createForm(){\r\n  //   this.angForm = this.fb.group({\r\n  //     scheme: ['',[Validators.required]],\r\n  //     memNo: ['',[Validators.required]]\r\n  //   });\r\n  // }\r\n\r\n  angForm: FormGroup;\r\n  obj: any;\r\n  defaultDate: any\r\n  showRepo: boolean = false;\r\n  clicked: boolean = false;\r\n  iframeurl: any = ' ';\r\n  showLoading: boolean = false;\r\n  ngbranch: any = null;\r\n  todate: any = null;\r\n  fromdate: any = null;\r\n\r\n  maxDate: Date;\r\n  minDate: Date;\r\n  bsValue = new Date();\r\n  formSubmitted = false;\r\n  scheme: any = null\r\n  url = environment.base_url;\r\n  report_url = environment.report_url;\r\n  iframe5url: any = ' ';\r\n  FROM_DATE: any;\r\n  isShow: boolean = false\r\n\r\n  textareaWidth: number = 1000;\r\n  tableHtml1: string = '';\r\n  tableHtml: string = '';\r\n  tableData: any[] = [];\r\n  tableData1: any[] = [];\r\n  director\r\n  bankName: string = '';\r\n  branchName: string = '';\r\n  reportName: string = 'Member Liability Report';\r\n  fromDate: string = new Date().toISOString().split('T')[0];\r\n  dueBalance: any;\r\n  openDate: any;\r\n  closeDate: any;\r\n  accdetails1: any;\r\n  GAC_CUSTID: any;\r\n  gaccustid: any;\r\n  accdetails2: any;\r\n  tableHtml2: any;\r\n  tableData2: { srNO: any; name: any; sanctionAmount: any; installmentAmount: any; openDate: any; closeDate: any; balance: any; dueBalance: any; }[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private _schemeService: SchemeAccountNoService,\r\n    private sanitizer: DomSanitizer, private http: HttpClient,\r\n    private directorMasterDropdown: DirectorMasterDropdownService,\r\n\r\n  ) {\r\n    this.fromdate = moment().format('DD/MM/YYYY');\r\n    this.FROM_DATE = moment().format('DD/MM/YYYY');\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  sh_Scheme\r\n  introducerACNo\r\n  selectedshScheme\r\n  selectedmemNo\r\n  id\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      this.id = data[0].id\r\n      var filtered = data.filter(function (sh_Scheme) {\r\n        return (sh_Scheme.name == 'LN');\r\n      });\r\n      this.sh_Scheme = filtered;\r\n      this.getIntroducer()\r\n    });\r\n    //director\r\n//  this.directorMasterDropdown.getDirectorMastertrueList().pipe(first()).subscribe(data => {\r\n//   this.director = data;\r\n// })\r\n  }\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      scheme: ['', [Validators.required]],\r\n      memNo: ['', [Validators.required]],\r\n      FROM_DATE: ['', [Validators.pattern, Validators.required]],\r\n      PRINT_CUSTID: [\"\"],\r\n    });\r\n\r\n  }\r\n  actype\r\n  getIntro(event) {\r\n    this.getschemename = event.name\r\n    this.getIntroducer()\r\n    this.actype = event.value\r\n  }\r\n\r\n  // adjustTextareaWidth() {\r\n  //   const content = this.tableHtml + this.tableHtml1;\r\n  //   const lines = content.split('\\n');\r\n  //   let maxLength = 0;\r\n  //   lines.forEach(line => {\r\n  //       if (line.length > maxLength) {\r\n  //           maxLength = line.length;\r\n  //       }\r\n  //   });\r\n  //   this.textareaWidth = Math.min(maxLength * 8, window.innerWidth - 40); \r\n  // }\r\n  bankacno: any\r\n  ac_name: any\r\n  accdetails\r\n  name\r\n  balance\r\n  sanctionamount\r\n  installmentamt\r\n  accustid\r\n  branch\r\n  customerId\r\n  getIntro1(event) {\r\n    // this.bankacno = event.bankacno\r\n    // this.ac_name = event.name\r\n    // this.branch = event.branch\r\n    this.customerId = event.customerId\r\n    // this.getdata();\r\n  }\r\n  \r\n  thirdaccustid\r\n  getSecondDetails() {\r\n    const myObj1 = {\r\n      'lnmasterID': this.gaccustid\r\n    };\r\n    this.http.post(this.url+'/term-loan-master/memberLiablity2', myObj1).subscribe(\r\n      (data1: any) => {\r\n        this.accdetails1 = data1;\r\n        this.thirdaccustid = data1[0].GAC_CUSTID\r\n        this.tableData1 = data1.map(item => ({\r\n          srNO: item.id,\r\n          name: item.AC_NAME || '',\r\n        }));\r\n\r\n        this.tableHtml1 = this.convertTableToText1(this.tableData1);\r\n        // this.adjustTextareaWidth();\r\n      },\r\n      error => {\r\n        console.error('Error fetching second details:', error);\r\n      }\r\n    );\r\n    this.getThirdDetails()\r\n  }\r\n\r\n  getThirdDetails(){\r\n    const myObj2 = {\r\n      'GAC_CUSTID':  this.thirdaccustid\r\n    };\r\n\r\n    this.http.post(this.url+'/term-loan-master/guaranterDetails3', myObj2).subscribe(\r\n      (data3: any) => {\r\n        this.accdetails2 = data3;\r\n        this.tableData2 = data3.map(item => ({\r\n          srNO: data3[0].id,\r\n          name: data3[0].AC_NAME || '',\r\n          sanctionAmount: data3[0].AC_SANCTION_AMOUNT || 0,\r\n          installmentAmount: data3[0].AC_INSTALLMENT || 0,\r\n          openDate: data3[0].AC_OPDATE || '',\r\n          closeDate: data3[0].AC_CLOSEDT || '',\r\n          balance: data3[0].ledgerbalance || 0,\r\n          dueBalance: data3[0].duebal || 0\r\n        }));\r\n        // this.setAccountDetails(data[0]);\r\n        this.tableHtml2 = this.convertTableToText2(this.tableData2);\r\n      },\r\n      error => {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getschemename: any\r\n  getIntroducer() {\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    let branchCode = result.branch.id;\r\n    this.obj = [this.selectedshScheme, branchCode]\r\n    switch (this.getschemename) {\r\n      case 'LN':\r\n        this._schemeService.getTermLoanSchemeList1(this.obj).subscribe(data => {\r\n          this.director = data;     \r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n \r\n \r\n  printTextArea() {\r\n    const printWindow = window.open();\r\n    printWindow.document.write('<html><head><title>Print</title></head><body>');\r\n    // tableHtml: string = '';\r\n    // printWindow.document.write('<pre>' + this.tableHtml, this.tableHtml1 + '</pre>');\r\n    printWindow.document.write('<pre>' + this.tableHtml + '\\n' + this.tableHtml1 + '\\n' + this.tableHtml2 +'</pre>');\r\n   \r\n    printWindow.document.write('</body></html>');\r\n    printWindow.document.close(); \r\n    printWindow.print();\r\n    printWindow.close();\r\n\r\n  }\r\n\r\n\r\n//   convertTableToText(data: any[], bankName: string, branchName: string, reportName: string, currentDate: string): string {\r\n//     let headers = ['Sr. No.', 'Name/Guarantor Name', 'Sanction Amount', 'Installment Amount', 'Open Date', 'Close Date', 'Balance', 'Due Balance'];\r\n\r\n\r\n//     // let headerRow = ` ${headers[0].padEnd(5, ' ')}  ${headers[1].padEnd(20, ' ')}  ${headers[2].padEnd(15, ' ')}  ${headers[3].padStart(15, ' ')}  ${headers[4].padStart(15, ' ')}  ${headers[5].padStart(15, ' ')}  ${headers[6].padStart(15, ' ')}  ${headers[7].padStart(15, ' ')} `;\r\n\r\n//     let headerRow = ` ${headers[0]}      ${headers[1]}               ${headers[2]}          ${headers[3]}          ${headers[4]}         ${headers[5]}        ${headers[6]}        ${headers[7]} `;\r\n\r\n//     let separator = '___________________________________________________________________________________________________________________________________________________________';\r\n//     // let rows = data.map(row =>\r\n//     //   ` ${(row.srNO ?? '').toString().padEnd(5, ' ')}  ${(row.name).padEnd(20, ' ')}  ${(row.sanctionAmount ?? '').toString().padStart(15, ' ')}  ${(row.installmentAmount ?? '').toString().padStart(15, ' ')}  ${(row.openDate ?? '').padStart(15, ' ')}  ${(row.closeDate ?? '').padStart(15, ' ')}  ${(row.balance ?? '').toString().padStart(15, ' ')}  ${(row.dueBalance ?? '').toString().padStart(15, ' ')} `\r\n//     // );\r\n\r\n\r\n//     let rows = data.map(row =>\r\n//       ` ${(row.srNO ?? '').toString()}          ${(row.name)}                    ${(row.sanctionAmount ?? '').toString()}           ${(row.installmentAmount ?? '').toString()}              ${(row.openDate ?? '')}            ${(row.closeDate ?? '')}           ${(row.balance ?? '').toString()}             ${(row.dueBalance ?? '').toString()} `\r\n//     );\r\n//     let additionalInfo = `                                                      ${bankName}  \r\n//  ${branchName}                                                            ${reportName} ${currentDate}\r\n \r\n// `;\r\n\r\n//     return [separator, additionalInfo, separator, headerRow, separator, ...rows, separator].join('\\n');\r\n//   }\r\n//   convertTableToText1(data: any[]): string {\r\n//     let rows = data.map(row =>\r\n//       ` ${(row.srNO ?? '').toString()}          ${(row.name)}          `\r\n//     );\r\n//     return [...rows].join('\\n');\r\n//   }\r\n\r\nconvertTableToText(data: any[], bankName: string, branchName: string, reportName: string, currentDate: string): string {\r\n  let headers = ['Sr. No.', 'Name/Guarantor Name', 'Sanction Amount', 'Installment Amount', 'Open Date', 'Close Date', 'Balance', 'Due Balance'];\r\n  let headerRow = ` ${headers[0]}    ${headers[1]}           ${headers[2]}     ${headers[3]}      ${headers[4]}        ${headers[5]}       ${headers[6]}     ${headers[7]} `;\r\n  let separator = '________________________________________________________________________________________________________________________________________________';\r\n\r\n  let rows = data.map(row =>\r\n      ` 1          ${(row.name)}          ${(row.sanctionAmount ?? '').toString()}               ${(row.installmentAmount ?? '').toString()}            ${(row.openDate ?? '')}            ${(row.closeDate ?? '')}            ${(row.balance ?? '').toString()}      ${(row.dueBalance ?? '').toString()} `\r\n  );\r\n\r\n  let additionalInfo = `                                                      ${bankName} \r\n             ${branchName}                                                ${reportName} ${currentDate}\r\n\r\n`;\r\n\r\n  return [separator, additionalInfo, separator, headerRow, separator, ...rows, separator].join('\\n');\r\n}\r\n\r\nconvertTableToText1(data: any[]): string {\r\n  let rows = data.map(row =>\r\n      ` ${(row.srNO ?? '').toString()}          ${(row.name)}          `\r\n  );\r\n  return rows.join('\\n');\r\n}\r\nconvertTableToText2(data: any[]): string {\r\n  // let headers = ['Sr. No.', 'Name/Guarantor Name', 'Sanction Amount', 'Installment Amount', 'Open Date', 'Close Date', 'Balance', 'Due Balance'];\r\n  // let headerRow = ` ${headers[0]}      ${headers[1]}           ${headers[2]}          ${headers[3]}          ${headers[4]}         ${headers[5]}        ${headers[6]}        ${headers[7]} `;\r\n  let separator = '_______________________________________________________________________________________________________________________________________________';\r\n\r\n  let rows = data.map(row =>\r\n      ` 1          ${(row.name)}           ${(row.sanctionAmount ?? '').toString()}              ${(row.installmentAmount ?? '').toString()}             ${(row.openDate ?? '')}         ${(row.closeDate ?? '')}              ${(row.balance ?? '').toString()}         ${(row.dueBalance ?? '').toString()} `\r\n  );\r\n\r\n  \r\n  return [separator,  separator,  separator, ...rows, separator].join('\\n');\r\n}\r\ngetdata(){\r\n  let myObj = {\r\n    // 'AC_TYPE': this.actype,\r\n    // 'BANKACNO': this.bankacno,\r\n    // 'BRANCH_CODE': this.branch\r\n    'AC_CUSTID':this.customerId\r\n  }\r\n  this.http.post(this.url+'/term-loan-master/memberLiablity1', myObj).subscribe(\r\n    (data: any) => {\r\n      this.accdetails = data;\r\n      this.gaccustid = data[0].lnmasterID\r\n      this.accustid=data[0].AC_CUSTID\r\n      this.tableData = [{\r\n        srNO: data[0].id,\r\n        name: data[0].AC_NAME || '',\r\n        sanctionAmount: data[0].AC_SANCTION_AMOUNT || 0,\r\n        installmentAmount: data[0].AC_INSTALLMENT || 0,\r\n        openDate: data[0].AC_OPDATE || '',\r\n        closeDate: data[0].AC_CLOSEDT || '',\r\n        balance: data[0].ledgerbalance || 0,\r\n        dueBalance: data[0].duebal || 0,\r\n        TOT_SAC_AMT:data[0].TOT_SAC_AMT || 0\r\n      }];\r\n\r\n      let userData = JSON.parse(localStorage.getItem('user'));\r\n      let bankName = userData.branch.syspara.BANK_NAME;\r\n      let branchName = userData.branch.NAME;\r\n      this.getSecondDetails();\r\n      this.tableHtml = this.convertTableToText(this.tableData, bankName, branchName, 'Member Liability Report', this.fromdate);\r\n      // this.adjustTextareaWidth();\r\n    },\r\n    error => {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  );\r\n}\r\nview(event) {\r\n  this.getdata();\r\n  // let userData = JSON.parse(localStorage.getItem('user'));\r\n  // let bankName = userData.branch.syspara.BANK_NAME;\r\n  // let branchId = userData.branch.id\r\n  // let branchName = userData.branch.NAME;\r\n  // this.tableHtml = this.convertTableToText(this.tableData, bankName, branchName, 'Member Liability Report', this.fromdate);\r\n  this.tableHtml1 = this.convertTableToText1(this.tableData1);\r\n  \r\n}\r\nclose() {\r\n  this.resetForm()\r\n  this.isShow = false\r\n  this.angForm.reset();\r\n}\r\n\r\n// Reset Function\r\nresetForm() {\r\n  this.angForm.controls.memNo.reset();\r\n  this.angForm.controls.FROM_DATE.reset();\r\n  this.showRepo = false;\r\n  this.clicked = false;\r\n  this.tableHtml = '';\r\n  this.tableHtml1 = '';\r\n  this.tableHtml2 = '';\r\n}\r\nonLoad() {\r\n  this.showLoading = false;\r\n}\r\n\r\n}\r\n","<!-- Member Guranter Details -->\r\n<!-- <div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Member Guranter Details</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub>: Required Fields</h6>\r\n            </div>\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Shares Scheme<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedshScheme\" #scheme formControlName=\"scheme\"\r\n                                        bindValue=\"value\" bindLabel=\"label\"\r\n                                        (change)=\"getIntro($event);getIntroducer();\">\r\n                                        <ng-option *ngFor=\"let item of sh_Scheme\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['scheme'].invalid && (angForm.controls['scheme'].dirty || angForm.controls['scheme'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['scheme'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Member No.<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedmemNo\" #scheme formControlName=\"memNo\"\r\n                                        bindValue=\"bankacno\" bindLabel=\"NAME\">\r\n                                        <ng-option *ngFor=\"let item of introducerACNo\" [value]=\"item\">\r\n                                            {{item.label}} {{item.name}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['memNo'].invalid && (angForm.controls['memNo'].dirty || angForm.controls['memNo'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['memNo'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <button class=\"btn  btn-outline-primary btn-sm\">Close</button>\r\n\r\n                            <button class=\"btn  btn-outline-primary btn-sm\">Cancel</button>\r\n\r\n                            <button class=\"btn  btn-outline-primary btn-sm\">Update</button>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n\r\n<!-- Member Guranter Details -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Member Liability View</h5>\r\n                <h6 style=\"float: right;\"><sub class=\"required\">* </sub> Required Fields</h6>\r\n            </div>\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"\"> Scheme Code<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedshScheme\" #scheme formControlName=\"scheme\"\r\n                                        bindValue=\"value\" bindLabel=\"label\"\r\n                                        (change)=\"getIntro($event);getIntroducer();\">\r\n                                        <ng-option *ngFor=\"let item of sh_Scheme\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['scheme'].invalid && (angForm.controls['scheme'].dirty || angForm.controls['scheme'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['scheme'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"\">Customer<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedmemNo\" #scheme formControlName=\"memNo\"\r\n                                        bindValue=\"bankacno\" bindLabel=\"NAME\" (change)=\"getIntro1($event);\">\r\n                                        <ng-option *ngFor=\"let item of director\" [value]=\"item\">\r\n                                            {{item.label}} {{item.name}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['memNo'].invalid && (angForm.controls['memNo'].dirty || angForm.controls['memNo'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['memNo'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"FROM_DATE\">Date<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"FROM_DATE\" id=\"FROM_DATE\"\r\n                                    [(ngModel)]=\"fromdate\" [bsValue]=\"bsValue\"  class=\"form-control\"  appButton minlength=\"10\" maxlength=\"10\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"  [maxDate]=\"maxDate\"\r\n                                        formControlName=\"FROM_DATE\"\r\n                                        required bsDatepicker />\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['FROM_DATE'].invalid && (angForm.controls['FROM_DATE'].dirty || angForm.controls['FROM_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['FROM_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input type=\"checkbox\" class=\"border-checkbox\" id=\"PRINT_CUSTID\"\r\n                                        formControlName=\"PRINT_CUSTID\">\r\n                                    <label class=\"border-checkbox-label\" for=\"PRINT_CUSTID\">Print Close Accounts?\r\n                                        </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-9\"></div>\r\n                        <div class=\"col-md-1\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\r\n                                (click)=\"view($event); getdata(); clicked = true \">View</button>\r\n                        </div>\r\n                        <div class=\"col-md-1\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm\" value=\"submit\"\r\n                                (click)=\"close()\">Close</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                          <textarea [style.width.px]=\"textareaWidth\" rows=\"10\" readonly>{{ tableHtml }}</textarea>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <textarea [style.width.px]=\"textareaWidth\" rows=\"10\" readonly>{{ tableHtml1 }}</textarea>\r\n                          </div> \r\n                          <div class=\"col-12\">\r\n                            <textarea [style.width.px]=\"textareaWidth\" rows=\"10\" readonly>{{ tableHtml2 }}</textarea>\r\n                          </div>\r\n                      </div>\r\n                      <div class=\"row justify-content-center\">\r\n                        <div class=\"col-sm\">\r\n                          <button type=\"button\" class=\"btn btn-outline-primary btn-sm btn-submit\" (click)=\"printTextArea()\"\r\n                           >Print</button>\r\n                        </div>\r\n                \r\n                      </div>\r\n                    <div class=\"row\" *ngIf=\"isShow\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\">\r\n                                    <h5>Report Frame</h5>\r\n                                </div>\r\n                                <div *ngIf=\"showRepo\">\r\n                                    <app-iframe5 [url]='iframe5url' ></app-iframe5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\nimport {DataTablesModule} from 'angular-datatables';\r\n\r\nimport { MemberLiablityViewComponent } from './member-liablity-view.component';\r\nimport { MemberLiablityViewRoutingModule } from './member-liablity-view-routing.module'\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { Iframe5Module } from '../../reports/pigmy-report/iframe5/iframe5.module';\r\nimport { DirectorMasterDropdownService } from 'src/app/shared/dropdownService/director-master-dropdown.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MemberLiablityViewRoutingModule,    \r\n    NgbModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DataTablesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    Iframe5Module,HttpClientModule\r\n\r\n  ],\r\n  declarations: [MemberLiablityViewComponent],\r\n  providers:[{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },\r\n  SchemeCodeDropdownService,\r\n  SchemeAccountNoService,\r\n  DirectorMasterDropdownService\r\n]\r\n})\r\nexport class MemberLiablityViewModule { }"],"sourceRoot":"webpack:///"}