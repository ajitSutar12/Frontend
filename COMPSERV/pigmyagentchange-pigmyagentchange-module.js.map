{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/master/maintainance/pigmyagentchange/pigmyagentchange-routing.module.ts","./src/app/theme/master/maintainance/pigmyagentchange/pigmyagentchange.component.ts","./src/app/theme/master/maintainance/pigmyagentchange/pigmyagentchange.component.html","./src/app/theme/master/maintainance/pigmyagentchange/pigmyagentchange.module.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"pigmyagentchange-pigmyagentchange-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PigmyagentchangeComponent } from './pigmyagentchange.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PigmyagentchangeComponent,\r\n    data: {\r\n      title: 'Pigmy Agent Change',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PigmyagentchangeRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-pigmyagentchange',\r\n  templateUrl: './pigmyagentchange.component.html',\r\n  styleUrls: ['./pigmyagentchange.component.scss']\r\n})\r\nexport class PigmyagentchangeComponent implements OnInit {\r\n\r\n  url = environment.base_url;\r\n  angForm: FormGroup;\r\n\r\n  code\r\n  code1\r\n  AC_TYPE: boolean = false\r\n  AC_TYPE1: boolean = false\r\n  scheme\r\n  // SchemeCodeDropdownDropdown: any[];\r\n  PGSchemeCode: any[];\r\n  SchemeCodeDropdownDropdown: any[];\r\n  schemeType: string = 'AG'\r\n  pgScheme: string = 'PG'\r\n\r\n  schemeCode\r\n  introducerACNo\r\n  obj: any;\r\n\r\n\r\n  ngPigmy: any = null\r\n  OwnbranchMasterDropdown: any[];\r\n\r\n\r\n\r\n  selectedBranch\r\n  selectedBranch1\r\n  branchOption: any;\r\n  ngIntroducer: any = null\r\n  ngIntroducer1: any = null\r\n  ngIntroducer2: any = null\r\n  acno: any = null\r\n  ngBranch: any = null\r\n  RDATE1: any = null;\r\n  fromdate: any = null\r\n  // accountOpenDate: any = null\r\n  maxDate: any;\r\n  minDate: any;\r\n  bsValue = new Date();\r\n  todate: any = null;\r\n\r\n\r\n\r\n\r\n  constructor(private fb: FormBuilder,  private systemParameter: SystemMasterParametersService,\r\n    public schemeCodeDropdownService: SchemeCodeDropdownService, private schemeAccountNoService: SchemeAccountNoService, private _ownbranchmasterservice: OwnbranchMasterService,) {this.systemParameter.getFormData(1).subscribe(data => {\r\n      this.maxDate = moment(data.CURRENT_DATE, 'DD/MM/YYYY')\r\n      this.maxDate = this.maxDate._d\r\n      this.minDate = this.maxDate._d\r\n    }) }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n\r\n    // this.systemParameter.getFormData(1).subscribe(data => {\r\n    //   this.angForm.patchValue({\r\n    //     RDATE1: data.CURRENT_DATE\r\n    //   })\r\n    // })\r\n\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branchOption = data;\r\n      this.selectedBranch = user.branchId;\r\n      this.selectedBranch1 = user.branchId;\r\n\r\n    })\r\n\r\n\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n\r\n      this.SchemeCodeDropdownDropdown = data;\r\n    })\r\n    this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data => {\r\n      var filtered = data.filter(function (scheme) {\r\n\r\n        return (scheme.id == 'AG');\r\n      });\r\n      this.scheme = filtered;\r\n\r\n      this.code = this.scheme[0].value\r\n    })\r\n    this.schemeCodeDropdownService.getSchemeCodeList(this.pgScheme).pipe(first()).subscribe(data => {\r\n\r\n      var filtered = data.filter(function (scheme) {\r\n\r\n        return (scheme.id == 'PG');\r\n      });\r\n      this.PGSchemeCode = filtered;\r\n    })\r\n\r\n    this.systemParameter.getFormData(1).subscribe(data => {\r\n      let year = moment(data.CURRENT_DATE, \"DD/MM/YYYY\").year()\r\n      // this.fromdate = `01/04/${year - 1}`      \r\n      this.todate = data.CURRENT_DATE\r\n\r\n      this.fromdate = moment(`01/04/${year - 1}`, 'DD/MM/YYYY')\r\n      this.fromdate = this.fromdate._d\r\n    })\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      AC_TYPE: ['', [Validators.required]],\r\n      branch_code: ['', [Validators.required]],\r\n      AC_INTRACNO: ['', [Validators.required]],\r\n      AC_TYPE1: ['', [Validators.required]],\r\n      RDATE: ['', [Validators.required]],\r\n      PIGMY_ACTYPE: ['', [Validators.required]],\r\n      branch_code1: ['', [Validators.required]],\r\n      RDATE1: ['', [Validators.required]],\r\n      AC_INTRACNO1: ['', [Validators.required]],\r\n      AC_INTROBRANCH: ['', [Validators.required]],\r\n      AC_INTRACNO2: ['', [Validators.required]],\r\n\r\n    })\r\n    this.angForm.controls['AC_TYPE1'].disable()\r\n    this.angForm.controls['AC_INTRACNO2'].disable()\r\n    this.angForm.controls['RDATE'].disable()\r\n    \r\n\r\n  }\r\n  getschemename: any\r\n\r\n\r\n  getScheme(value) {\r\n    this.schemeCode = value.name\r\n  }\r\n  getBranch() {\r\n    this.getIntroducer()\r\n  }\r\n  getIntro(event) {\r\n    this.getschemename = event.name\r\n    this.getIntroducer()\r\n  }\r\n\r\n  getIntroducer() {\r\n    if (this.ngPigmy != null && this.selectedBranch != null) {\r\n      this.obj = [this.ngPigmy, this.selectedBranch]\r\n      this.schemeAccountNoService.getPigmyAccountSchemeList1(this.obj).subscribe(data => {\r\n        this.introducerACNo = data;\r\n\r\n        console.log(this.introducerACNo, 'introducer')\r\n      })\r\n    }\r\n    else {\r\n      this.ngIntroducer1 = null\r\n      this.introducerACNo = null\r\n    }\r\n  }\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n\r\n            <div class=\"card-header\">\r\n                <h5>Pigmy Agent Change</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <div class=\"card-block\">\r\n\r\n                <form [formGroup]=\"angForm\" novalidate>\r\n                    <div class=\"solid\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Branch Code<sub\r\n                                        class=\"required\">*</sub></label></div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select bindValue=\"value\" bindLabel=\"label\" [(ngModel)]=\"selectedBranch\"\r\n                                            formControlName=\"branch_code\" #branchcode autofocus (change)=\" getBranch()\">\r\n                                            <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                                {{values.label}}</ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"angForm.controls['branch_code'].invalid && (angForm.controls['branch_code'].dirty || angForm.controls['branch_code'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"angForm.controls['branch_code'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_Scheme\">Scheme<sub\r\n                                        class=\"required\">*</sub></label></div>\r\n                            <div class=\"col-sm-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select bindValue=\"value\" [(ngModel)]=\"ngPigmy\" id=\"PIGMY_ACTYPE\"\r\n                                            bindLabel=\"label\" formControlName=\"PIGMY_ACTYPE\" (change)=\"getIntroducer()\"\r\n                                            title=\"Compulsory Selection\" required placeholder=\"Pimgy Scheme\">\r\n                                            <ng-option *ngFor=\"let values of PGSchemeCode\" [value]=\"values\">\r\n                                                {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"angForm.controls['PIGMY_ACTYPE'].invalid && (angForm.controls['PIGMY_ACTYPE'].dirty || angForm.controls['PIGMY_ACTYPE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"angForm.controls['PIGMY_ACTYPE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Pigmy Account No.<sub\r\n                                        class=\"required\">*</sub></label></div>\r\n\r\n                            <div class=\"col-sm-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"AC_INTRACNO\" bindValue=\"value\" [(ngModel)]=\"ngIntroducer1\"\r\n                                            formControlName=\"AC_INTRACNO\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                            placeholder=\"Account Number\" (change)=\"getIntroducer()\">\r\n                                            <ng-option *ngFor=\"let values of introducerACNo\" [value]=\"values\">\r\n                                                {{values.label}} {{values.name}}</ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"angForm.controls['AC_INTRACNO'].invalid && (angForm.controls['AC_INTRACNO'].dirty || angForm.controls['AC_INTRACNO'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"angForm.controls['AC_INTRACNO'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <div class=\"solid\">\r\n                                        <h1><span>Current Agent</span></h1>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_Scheme\">Scheme<sub\r\n                                                        class=\"required\">*</sub></label></div>\r\n                                            <div class=\"col-sm-2\">\r\n                                                <div class=\"form-group form-primary form-static-label\">\r\n                                                    <span class=\"border-lable-flt\" autofocus>\r\n                                                        <ng-select bindValue=\"value\" [(ngModel)]=\"code\" id=\"AC_TYPE1\"\r\n                                                            formControlName=\"AC_TYPE1\" \r\n                                                            title=\"Compulsory Selection\" required placeholder=\"Scheme\"\r\n                                                            (change)=\"getScheme($event)\">\r\n                                                            <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                                                {{values.label}}</ng-option>\r\n                                                        </ng-select>\r\n\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div class=\"form-group form-primary form-static-label\"\r\n                                                    *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                                    class=\"alert alert-danger\">\r\n                                                    <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                                        This field is required\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Pigmy Account\r\n                                                    No.<sub class=\"required\">*</sub></label></div>\r\n\r\n                                            <div class=\"col-sm-2\">\r\n                                                <div class=\"form-group form-primary form-static-label\">\r\n                                                    <span class=\"border-lable-flt\">\r\n                                                        <ng-select id=\"AC_INTRACNO2\" bindValue=\"value\"\r\n                                                            [(ngModel)]=\"ngIntroducer\" formControlName=\"AC_INTRACNO2\"\r\n                                                            bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                                            (focus)=\"getIntroducer()\" placeholder=\"Account Number\">\r\n                                                            <ng-option *ngFor=\"let values of introducerACNo\"\r\n                                                                [value]=\"values\">\r\n                                                                {{values.label}} {{values.name}}</ng-option>\r\n                                                        </ng-select>\r\n\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div class=\"form-group form-primary form-static-label\"\r\n                                                    *ngIf=\"angForm.controls['AC_INTRACNO2'].invalid && (angForm.controls['AC_INTRACNO2'].dirty || angForm.controls['AC_INTRACNO2'].touched)\"\r\n                                                    class=\"alert alert-danger\">\r\n                                                    <div *ngIf=\"angForm.controls['AC_INTRACNO2'].errors?.required\">\r\n                                                        This field is required\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                            <div class=\"col-sm-12 col-md-2  \"><label for=\"AC_PARTICULAR\">Agent Form\r\n                                                    Date</label>\r\n                                            </div>\r\n                                            <div class=\"col-md-2\">\r\n                                                <div class=\"form-group input-group\">\r\n                                                    <span class=\"border-lable-flt\">\r\n                                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"date\"\r\n                                                            id=\"date\" formControlName=\"RDATE\" class=\"form-control\"\r\n                                                            [maxDate]=\"maxDate\" bsDatepicker required>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div class=\"form-group form-primary form-static-label\"\r\n                                                    *ngIf=\"angForm.controls['RDATE'].invalid && (angForm.controls['RDATE'].dirty || angForm.controls['RDATE'].touched)\"\r\n                                                    class=\"alert alert-danger\">\r\n                                                    <div *ngIf=\"angForm.controls['RDATE'].errors?.required\">\r\n                                                        This field is required\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                    <div class=\"solid\">\r\n                        <h1><span>New Agent</span></h1>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Branch Code<sub\r\n                                        class=\"required\">*</sub></label></div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\" >\r\n                                        <ng-select bindValue=\"value\" bindLabel=\"label\" [(ngModel)]=\"selectedBranch1\"\r\n                                            formControlName=\"branch_code1\" #branchcode autofocus\r\n                                            (change)=\"getIntroducer()\" [disabled]>\r\n                                            <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                                {{values.label}}</ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"angForm.controls['branch_code1'].invalid && (angForm.controls['branch_code1'].dirty || angForm.controls['branch_code1'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"angForm.controls['branch_code1'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_Scheme\">Scheme<sub\r\n                                        class=\"required\">*</sub></label></div>\r\n                            <div class=\"col-sm-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\" autofocus>\r\n                                        <ng-select bindValue=\"value\" [(ngModel)]=\"code\" id=\"AC_TYPE\"\r\n                                            formControlName=\"AC_TYPE\" [disabled]=\"AC_TYPE\" title=\"Compulsory Selection\"\r\n                                            required placeholder=\"Scheme\" (change)=\"getScheme($event)\" [disabled]>\r\n                                            <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                                {{values.label}}</ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n\r\n\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_Scheme\">Account Number<sub\r\n                                        class=\"required\">*</sub></label></div>\r\n\r\n                            <div class=\"col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"AC_INTRACNO1\" bindValue=\"value\" [(ngModel)]=\"ngIntroducer2\"\r\n                                            formControlName=\"AC_INTRACNO1\" bindLabel=\"label\"\r\n                                            title=\"Compulsory Selection\" (focus)=\"getIntroducer()\"\r\n                                            placeholder=\"Account Number\">\r\n                                            <ng-option *ngFor=\"let values of introducerACNo\" [value]=\"values\">\r\n                                                {{values.label}} {{values.name}}</ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"angForm.controls['AC_INTRACNO1'].invalid && (angForm.controls['AC_INTRACNO1'].dirty || angForm.controls['AC_INTRACNO1'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"angForm.controls['AC_INTRACNO1'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-12 col-md-2  \"><label for=\"AC_PARTICULAR\">Change Date</label>\r\n                            </div>\r\n                            <div class=\"col-md-2\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                             placeholder=\"dd/mm/yyyy\" name=\"date\" id=\"date1\"\r\n                                            formControlName=\"RDATE1\" [(ngModel)]=\"todate\" class=\"form-control\" [bsValue]=\"bsValue\"\r\n                                            [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"fromdate\"\r\n                                            [maxDate]=\"maxDate\" bsDatepicker >\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"angForm.controls['RDATE1'].invalid && (angForm.controls['RDATE1'].dirty || angForm.controls['RDATE1'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"angForm.controls['RDATE1'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PigmyagentchangeRoutingModule } from './pigmyagentchange-routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n// import { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { PigmyagentchangeComponent } from './pigmyagentchange.component';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\n\r\n\r\n@NgModule({\r\n  \r\n  imports: [\r\n    CommonModule,\r\n    PigmyagentchangeRoutingModule,\r\n    SharedModule,\r\n    FormsModule, ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n  \r\n    NgSelectModule\r\n  \r\n  ],\r\n  providers: [SchemeCodeDropdownService,OwnbranchMasterService, SchemeAccountNoService,SystemMasterParametersService, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },],\r\n  declarations: [PigmyagentchangeComponent],\r\n  bootstrap: [PigmyagentchangeComponent]\r\n})\r\nexport class PigmyagentchangeModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class SystemMasterParametersService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  // url = \"http://localhost:4000/system-master-parameters\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        let errorMessage = 'Please add valid length';\r\n        Swal.fire('Kindly Add Valid Length !');\r\n        return throwError(errorMessage);\r\n      })\r\n    )\r\n  }\r\n\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/system-master-parameters/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getData(): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}