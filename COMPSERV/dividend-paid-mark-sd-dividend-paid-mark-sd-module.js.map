{"version":3,"sources":["./src/app/shared/dropdownService/salary-division-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/transaction/dividend-pay/dividend-paid-mark-sd/dividend-paid-mark-sd-routing.module.ts","./src/app/theme/transaction/dividend-pay/dividend-paid-mark-sd/dividend-paid-mark-sd.component.ts","./src/app/theme/transaction/dividend-pay/dividend-paid-mark-sd/dividend-paid-mark-sd.component.html","./src/app/theme/transaction/dividend-pay/dividend-paid-mark-sd/dividend-paid-mark-sd.module.ts"],"names":[],"mappings":"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","file":"dividend-paid-mark-sd-dividend-paid-mark-sd-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SalaryDMasterdropdownService {\r\n    salaryObject = new Array();\r\n    // // salary-division-master\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    public getSalaryMasterList() {\r\n        this.salaryObject = []\r\n        return this.http.get<any>(this.url + '/salary-division-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.NAME, value: element.id, name: element.CODE};\r\n                    this.salaryObject.push(obj)\r\n                });\r\n                return this.salaryObject;\r\n            }));\r\n    }\r\n    public getSalaryDMasterList(branch) {\r\n        this.salaryObject = []\r\n        return this.http.get<any>(this.url + '/salary-division-master/getBranch/' + branch)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.NAME, value: element.id, name: element.CODE};\r\n                    this.salaryObject.push(obj)\r\n                });\r\n                return this.salaryObject;\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { DividendPaidMarkSDComponent} from './dividend-paid-mark-sd.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  DividendPaidMarkSDComponent,\r\n    data: {\r\n      title: 'Dividend Paid MSD',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class  DividendPaidMarkSDRoutingModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { first } from 'rxjs/operators';\r\nimport { SalaryDMasterdropdownService } from 'src/app/shared/dropdownService/salary-division-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-dividend-paid-mark-sd',\r\n  templateUrl: './dividend-paid-mark-sd.component.html',\r\n  styleUrls: ['./dividend-paid-mark-sd.component.scss']\r\n})\r\nexport class DividendPaidMarkSDComponent implements OnInit {\r\n  angForm: FormGroup;\r\n  clicked = false;\r\n  showRepo: boolean = false;\r\n  url = environment.base_url;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private salaryDMasterdropdownService: SalaryDMasterdropdownService,\r\n    private http: HttpClient,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,) { }\r\n\r\n\r\n  //ngfor variables\r\n  s_Div\r\n  schemename\r\n  acc_number\r\n  date\r\n  Branchcode\r\n  //ngmodel variables\r\n  selectedBranch\r\n  selectedSDiv\r\n  particulars\r\n  sname\r\n  account_no\r\n  selectedSubSDiv\r\n  selectedTransScheme\r\n  obj: any;\r\n  selectedTransBranch\r\n  introducerACNo: any;\r\n  Schemecode: any\r\n  schemeType: string = 'SH'\r\n  Narration\r\n  date1\r\n  getIntroducer() {\r\n    // debugger\r\n    this.obj = [this.selectedTransScheme, this.selectedTransBranch]\r\n\r\n\r\n    this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n      // console.log(data);\r\n\r\n      this.introducerACNo = data;\r\n    })\r\n\r\n  }\r\n\r\n  subSdivision\r\n  narr\r\n  Date\r\n  ngOnInit(): void {\r\n\r\n    this.createForm();\r\n\r\n    // this.http.get('http://192.168.137.1:3000/employee/getBranchCode').subscribe((data: any) => {\r\n    this.http.get(this.url+'/employee/getBranchCode').subscribe((data: any) => {\r\n\r\n      this.Branchcode = data\r\n      console.log(\"branch\", this.Branchcode);\r\n    })\r\n\r\n    // this.http.get('http://192.168.137.1:3000/employee/Salarydiv').subscribe((data: any) => {\r\n    this.http.get(this.url+'/employee/Salarydiv').subscribe((data: any) => {\r\n\r\n      this.s_Div = data\r\n      console.log(\"sal\", this.s_Div)\r\n    })\r\n\r\n    // this.http.get('http://192.168.137.1:3000/employee/SubSalarydiv').subscribe((data: any) => {\r\n    this.http.get(this.url+'/employee/SubSalarydiv').subscribe((data: any) => {\r\n\r\n\r\n      this.subSdivision = data\r\n      console.log(this.subSdivision)\r\n    })\r\n    // this.http.get('http://192.168.137.1:3000/employee/Narration').subscribe((data: any) => {\r\n      this.http.get(this.url+'/employee/Narration').subscribe((data: any) => {\r\n\r\n      this.narr = data\r\n      console.log(this.narr)\r\n    })\r\n\r\n    // this.http.get('http://192.168.137.1:3000/employee/WarrentDt').subscribe((data: any) => {\r\n    this.http.get(this.url+'/employee/WarrentDt').subscribe((data: any) => {\r\n\r\n      // console.log(data);\r\n\r\n      this.Date = data\r\n      console.log(this.Date)\r\n    })\r\n\r\n    //Scheme Code Dropdown\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n\r\n      var filtered = data.filter(function (Schemecode) {\r\n        return (Schemecode.name == 'SH');\r\n      });\r\n      this.Schemecode = filtered;\r\n      this.getIntroducer()\r\n\r\n    })\r\n\r\n  }\r\n  acType\r\n  getid\r\n  getScheme(event) {\r\n    this.acType = event.value\r\n    this.getid = event.id\r\n  }\r\n\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      // traNo: ['', [Validators.required]],\r\n      date: ['', [Validators.required]],\r\n     \r\n      // particulars: ['', [Validators.required]],\r\n      // Narration: ['', [Validators.required]],\r\n      // scheme: ['', [Validators.required]],\r\n      branch: ['', [Validators.required]],\r\n      scode: ['', [Validators.required]],\r\n      sdiv: ['', [Validators.required]],\r\n      subsd: ['', [Validators.required]],\r\n      narration: ['', [Validators.required]],\r\n\r\n    });\r\n  }\r\n\r\n\r\n  tableData\r\n  id\r\n  totalAmount\r\n  TotalAmt\r\n  totalBalanceInput\r\n  wDate\r\n  getdate(event) {\r\n    this.wDate = event.WARRENT_DATE\r\n  }\r\n\r\n  saldiv(event) {\r\n\r\n    let obj = {\r\n\r\n      'ACTYPE': this.acType,\r\n      'WARRENT_DATE': this.wDate,\r\n      'AC_SALARYDIVISION_CODE': event.CODE,\r\n      'BRANCH_CODE': this.branchid\r\n\r\n\r\n    }\r\n    // this.http.post('http://192.168.137.1:3000/employee/getSalaryDividend', obj).subscribe((data: any) => {\r\n    this.http.post(this.url+'/employee/getSalaryDividend', obj).subscribe((data: any) => {\r\n      // console.log(data);\r\n\r\n      // this.tableData = data\r\n      this.tableData = data.map((row: any) => {\r\n        return { ...row, checkboxChecked: true };\r\n      });\r\n      this.id = data[0].id\r\n      console.log(this.tableData)\r\n      this.totalBalance = this.tableData.reduce((total, row) => total + parseFloat(row.DIVIDEND_AMOUNT), 0);\r\n      this.totalBalance = parseFloat(this.totalBalance.toFixed(2));\r\n\r\n\r\n      console.log(this.totalBalance)\r\n      this.updatedtable = [...this.tableData];\r\n      console.log(\"before\", this.updatedtable)\r\n\r\n    });\r\n\r\n  }\r\n  updatedtable: any[] = [];\r\n  totalBalance\r\n  UpdatedId\r\n  CheckboxChange(row) {\r\n    row.checkboxChecked = !row.checkboxChecked;\r\n    this.updateTotalBalance();\r\n    if (row.checkboxChecked) {\r\n      if (!this.updatedtable.includes(row)) {\r\n        this.updatedtable.push(row);\r\n      }\r\n    } else {\r\n      const index = this.updatedtable.findIndex(item => item === row);\r\n      if (index !== -1) {\r\n        this.updatedtable.splice(index, 1);\r\n      }\r\n    }\r\n    console.log(\"after\", this.updatedtable)\r\n    for (let i = 0; i < this.updatedtable.length; i++){\r\n      this.UpdatedId.push(this.tableData[i].id)\r\n    }\r\n  }\r\n\r\n\r\n  updateTotalBalance() {\r\n    this.totalBalance = this.tableData.reduce((total, row) => {\r\n      if (row.checkboxChecked) {\r\n        return total + parseFloat(row.DIVIDEND_AMOUNT);\r\n      } else {\r\n        return total;\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n\r\n  reset() {\r\n    this.angForm.controls['branch'].reset()\r\n    // this.angForm.controls['tlAmt'].reset()\r\n    this.angForm.controls['date'].reset()\r\n    this.angForm.controls['sdiv'].reset()\r\n    this.angForm.controls['subsd'].reset()\r\n    this.angForm.controls['narration'].reset()\r\n    this.angForm.controls['scode'].reset()\r\n  }\r\n\r\n  branchid\r\n  getbranchcode(event) {\r\n    this.branchid = event.id\r\n  }\r\n  submit() {\r\n    if (this.angForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let formValues = this.angForm.value;\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n\r\n    let obj = {\r\n      \"BRANCH_CODE\":this.branchid,\r\n      'id': this.id,\r\n      'date': this.wDate,\r\n      'data': this.updatedtable\r\n\r\n    };\r\n\r\n    // this.http.post('http://192.168.137.1:3000/employee/setDivpaidtran', obj).subscribe(\r\n    this.http.post(this.url+'/employee/setDivpaidtran', obj).subscribe(\r\n\r\n      (response) => {\r\n        console.log(response)\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success',\r\n          text: 'Data submitted successfully',\r\n        });\r\n      },\r\n\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Batch Transfer Voucher-Companywise </h5>\r\n            </div>\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Branch Code<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedBranch\" formControlName=\"branch\"\r\n                                        (change)=\"getbranchcode($event)\">\r\n                                        <ng-option *ngFor=\"let item of Branchcode\" [value]=\"item\">\r\n                                            {{item.CODE}} {{item.NAME}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['branch'].invalid && (angForm.controls['branch'].dirty || angForm.controls['branch'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['branch'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Scheme<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedTransScheme\" #scheme formControlName=\"scode\"\r\n                                        bindValue=\"value\" bindLabel=\"label\"\r\n                                        (change)=\"getIntroducer();getScheme($event)\">\r\n                                        <ng-option *ngFor=\"let item of Schemecode\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['scode'].invalid && (angForm.controls['scode'].dirty || angForm.controls['scode'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['scode'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"Date\">Warrent Date<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    \r\n                                    <ng-select [(ngModel)]=\"date\" #scheme formControlName=\"date\"  (change)=\"getdate($event)\">\r\n                                        <ng-option *ngFor=\"let item of Date\" [value]=\"item\">\r\n                                            {{item.WARRENT_DATE}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['date'].invalid && (angForm.controls['date'].dirty || angForm.controls['date'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['date'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Salary Division<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedSDiv\" #scheme formControlName=\"sdiv\"\r\n                                        (change)=\"saldiv($event)\">\r\n                                        <ng-option *ngFor=\"let item of s_Div\" [value]=\"item\">\r\n                                            {{item.CODE}} {{item.NAME}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['sdiv'].invalid && (angForm.controls['sdiv'].dirty || angForm.controls['sdiv'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['sdiv'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_BRANCH\">Sub Salary Division<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedSubSDiv\" #scheme formControlName=\"subsd\">\r\n                                        <ng-option *ngFor=\"let item of subSdivision\" [value]=\"item\">\r\n                                            {{item.CODE}} {{item.NAME}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['subsd'].invalid && (angForm.controls['subsd'].dirty || angForm.controls['subsd'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['subsd'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                       \r\n                    </div>\r\n\r\n                    <div class=\"card-body\" id=\"cb\">\r\n                        <h1><span>Credit Amount Details</span></h1>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"solid\">\r\n\r\n                                    <table class=\"table table-bordered table-hover compact\">\r\n                                        <thead style=\"text-align: center;\">\r\n\r\n                                            <td>Scheme</td>\r\n                                            <td>A/C No</td>\r\n                                            <td>Name</td>\r\n                                            <td>Amount</td>\r\n                                            <td>Is Valid</td>\r\n\r\n\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let row of tableData\">  \r\n                                                <td>{{ row.S_ACNOTYPE }}</td>\r\n                                                <td>{{ row.BANKACNO }}</td>\r\n                                                <td>{{ row.AC_NAME }}</td>\r\n                                                <td style=\"text-align: end;\">{{ row.DIVIDEND_AMOUNT }}</td>\r\n                                                <!-- <td>{{ row.DIVIDEND_STATUS }}</td> -->\r\n                                                <td> <input type=\"checkbox\" checked [(ngModel)]=\"row.checkboxChecked\"\r\n                                                        (change)=\"CheckboxChange(row)\"></td>\r\n\r\n\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"row\" style=\"margin-top: 29px; margin-bottom: 29px;\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"Narration\">Narration<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"Narration\" formControlName=\"narration\">\r\n                                        <ng-option *ngFor=\"let item of narr\" [value]=\"item\">\r\n                                            {{item.NARRATION}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['narration'].invalid && (angForm.controls['narration'].dirty || angForm.controls['narration'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['narration'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"tlAmt\">Total Amount</label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-1\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <!-- <input type=\"text\" name=\"tlAmt\" class=\"form-control\" placeholder=\" \" id=\"tlAmt\"\r\n                                        maxlength=\"10\" formControlName=\"tlAmt\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" [(ngModel)]=\"TotalAmt\"> -->\r\n                                    <input type=\"text\" value=\"{{ totalBalance }}\">\r\n\r\n                                </span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <!-- <div class=\"col-sm-12 col-md-1\"> <label for=\"usercode\">User Code</label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-1\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"usercode\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"usercode\" maxlength=\"10\" formControlName=\"usercode\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\">\r\n                                </span>\r\n                            </div>\r\n\r\n                        </div> -->\r\n                    </div>\r\n\r\n                    <!-- <div class=\"card-body\" id=\"cb\">\r\n                        <h1><span>Search</span></h1>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-1\"> <label for=\"scheme\">Scheme\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-3\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n\r\n                                        <ng-select [(ngModel)]=\"sname\" formControlName=\"scheme\" bindValue=\"value\"\r\n                                            bindLabel=\"label\">\r\n                                            <ng-option *ngFor=\"let item of schemename\" [value]=\"item\">\r\n                                                {{item.id}} {{item.label}}</ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-1\"> <label for=\"acno\">A/c No.\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-3\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n\r\n                                        <ng-select [(ngModel)]=\"account_no\" formControlName=\"acno\" bindValue=\"value\"\r\n                                            bindLabel=\"label\">\r\n                                            <ng-option *ngFor=\"let item of acc_number\" [value]=\"item\">\r\n                                                {{item.id}} {{item.label}}</ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <button class=\"btn  btn-outline-primary btn-sm\">Search</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div> -->\r\n\r\n\r\n\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <!-- <button class=\"btn  btn-outline-primary btn-sm\" (click)=\"close()\">Close</button> -->\r\n\r\n                            <button class=\"btn  btn-outline-primary btn-sm\" (click)=\"reset()\">Cancel</button>\r\n\r\n                            <button class=\"btn  btn-outline-primary btn-sm\" (click)=\" submit()\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </form>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n\r\nimport { DividendPaidMarkSDRoutingModule } from './dividend-paid-mark-sd-routing.module';\r\n\r\n\r\nimport { DividendPaidMarkSDComponent } from './dividend-paid-mark-sd.component';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { SalaryDMasterdropdownService } from 'src/app/shared/dropdownService/salary-division-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DividendPaidMarkSDRoutingModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DataTablesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n  ],\r\n  declarations: [DividendPaidMarkSDComponent],\r\n  providers:[{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },\r\n  SalaryDMasterdropdownService,\r\n  SchemeCodeDropdownService,\r\n  SchemeAccountNoService\r\n]\r\n})\r\nexport class  DividendPaidMarkSDModule { }"],"sourceRoot":"webpack:///"}