{"version":3,"sources":["./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/utility/scheme-ate/scheme-ate-routing.module.ts","./src/app/theme/utility/scheme-ate/scheme-ate.component.ts","./src/app/theme/utility/scheme-ate/scheme-ate.component.html","./src/app/theme/utility/scheme-ate/scheme-ate.module.ts"],"names":[],"mappings":"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","file":"scheme-ate-scheme-ate-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { SchemeATEComponent } from './scheme-ate.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  SchemeATEComponent ,\r\n    data: {\r\n      title: 'Scheme ATE',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class  SchemeATERoutingModule { }\r\n","import { coreDirectives } from '@agm/core/core.module';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// import { TranslateService } from '@ngx-translate/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-scheme-ate',\r\n  templateUrl: './scheme-ate.component.html',\r\n  styleUrls: ['./scheme-ate.component.scss']\r\n})\r\nexport class SchemeATEComponent implements OnInit {\r\n  angForm: FormGroup;\r\n  obj: any[];\r\n  transferSchemeDetails: any;\r\n  tScheme: any;\r\n  ngacno: null;\r\n  selectedValue\r\n  tableData\r\n  tableData1\r\n  secondtable\r\n  url = environment.base_url;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService, \r\n    private http: HttpClient) {\r\n    // this.translate.setDefaultLang(environment.setLang);\r\n    this.selectedValue = null\r\n  }\r\n\r\n\r\n  //ngmodel variables\r\n  selectedTSfrom\r\n  selectedTSto\r\n  selectedAcfrom\r\n  selectedActo\r\n  schemeCode\r\n\r\n\r\n  //ngfor variables\r\n  ts_From = []\r\n  ts_To\r\n  ac_From\r\n  ac_To\r\n  Schemefrom\r\n  Schemeto\r\n  accnoTo\r\n  clicked = false;\r\n  showRepo: boolean = false;\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      var allscheme = data.filter(function (scheme) {\r\n        return (scheme.name == 'SB' || scheme.name == 'TD' || scheme.name == 'GS' || scheme.name == 'AG' || scheme.name == 'PG' || scheme.name == 'LN' || scheme.name == 'DS' || scheme.name == 'CC' || scheme.name == 'SH')\r\n      });\r\n      this.Schemefrom = allscheme;\r\n\r\n\r\n    })\r\n\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      var allscheme = data.filter(function (scheme) {\r\n        return (scheme.name == 'SB' || scheme.name == 'TD' || scheme.name == 'GS' || scheme.name == 'AG' || scheme.name == 'PG' || scheme.name == 'LN' || scheme.name == 'DS' || scheme.name == 'CC' || scheme.name == 'SH')\r\n      });\r\n      this.ts_To = allscheme.slice(0, 18);\r\n    })\r\n  }\r\n\r\n\r\n  branchid\r\n  schemeid\r\n  sname\r\n  getScheme(event) {\r\n    this.schemeid = event.value\r\n    this.sname = event.label\r\n    // this.selectedValue = event.name\r\n    let obj = {\r\n      'SCHEMAST_ID': event.value,\r\n\r\n      // 'BRANCH_CODE':this.branchid\r\n    }\r\n    // this.http.post('http://192.168.1.180:3000/employee/getAcno', obj).subscribe((data: any) => {\r\n    this.http.post(this.url+'/employee/getAcno', obj).subscribe((data: any) => {\r\n\r\n      // console.log(data);\r\n\r\n      this.ac_From = data\r\n      this.ac_To = data\r\n\r\n      // console.log(this.ac_From)\r\n      // console.log(this.ac_To)\r\n    })\r\n\r\n  }\r\n  acNo\r\n  getAcnofrom(event) {\r\n    this.acNo = event.acno\r\n  }\r\n\r\n  custid\r\n  legbal: any[] = [];\r\n  custmerid1: any[] = []\r\n  Gacno\r\n  AcNoType\r\n  Acno\r\n  getAcno(event) {\r\n    let userData = JSON.parse(localStorage.getItem(\"user\"));\r\n    this.branchid = userData.branchId;\r\n    let obj = {\r\n      'SCHEMAST_ID': this.schemeid,\r\n      'BRANCH_CODE': this.branchid,\r\n      'AC_NO1': this.acNo,\r\n      'AC_NO2': event.acno\r\n    }\r\n    // this.http.post('http://192.168.1.180:3000/employee/SchemeTransf', obj).subscribe((data: any) => {\r\n    this.http.post(this.url+'/employee/SchemeTransf', obj).subscribe((data: any) => {\r\n\r\n      // console.log(data);\r\n\r\n      this.tableData = data\r\n\r\n      this.custid = data[2].ac_custid\r\n\r\n      for (let i = 0; i < this.tableData.length; i++) {\r\n\r\n        this.legbal.push(this.tableData[i].LEDGER_BAL);\r\n        this.custmerid1.push(this.tableData[i].ac_custid);\r\n        this.AcNoType = this.tableData[i].S_ACNOTYPE;;\r\n        this.Acno = this.tableData[i].ac_no;\r\n        this.Gacno = this.tableData[i].S_GLACNO;\r\n      }\r\n      console.log(this.legbal)\r\n      console.log('customer1', this.custmerid1)\r\n      console.log(\"first tabel\", this.tableData)\r\n\r\n\r\n    })\r\n\r\n  }\r\n  Gacno1\r\n  AcNoType1\r\n  Acno1\r\n  custmerid2: any[] = []\r\n  sname1\r\n  getAccountNo(event) {\r\n   \r\n    let obj1 = {\r\n      'SCHEMAST_ID': this.schemeid1,\r\n\r\n      'AC_NO1': this.acNo,\r\n      'AC_NO2': event.acno,\r\n      // 'acCustIds': this.custid,\r\n      'SCHEMAST_ID2': this.schemeid,\r\n      'BRANCH_CODE': this.branchid,\r\n\r\n    }\r\n    // this.http.post('http://192.168.1.180:3000/employee/SchemeTransf2', obj1).subscribe((data: any) => {\r\n    this.http.post(this.url+'/employee/SchemeTransf2', obj1).subscribe((data: any) => {\r\n\r\n      this.secondtable = data\r\n      console.log(\"response1\", this.tableData)\r\n      console.log(\"response2\", this.secondtable)\r\n\r\n      for (let i = 0; i < this.secondtable.length; i++) {\r\n\r\n        this.custmerid2.push(this.secondtable[i].ac_custid);\r\n        this.AcNoType1 = this.secondtable[i].S_ACNOTYPE;;\r\n        this.Acno1 = this.secondtable[i].ac_no;\r\n        this.Gacno1 = this.secondtable[i].S_GLACNO;\r\n      }\r\n      console.log('customer2', this.custmerid2)\r\n\r\n\r\n      // this only for UI view \r\n      let newTableObj: any[] = [];\r\n      this.tableData.forEach(element => {\r\n        let temp = this.secondtable.filter(ele => ele.ac_custid == element.ac_custid);\r\n        if (temp.length == 0) {\r\n          newTableObj.push({\r\n            // LEDGER_BAL: \"\", S_APPL: \"\", ac_custid: \"\", ac_name: \"\", ac_no: \"\", acno:  \"\"\r\n            S_APPL: \"\", ac_no: 0, ac_name: \"\", ac_custid: \"\"\r\n          }\r\n          );\r\n        } else {\r\n          newTableObj.push(temp[0])\r\n        }\r\n      });\r\n      this.secondtable = newTableObj;\r\n      console.log(\"new Response : \", newTableObj)\r\n      // this only for UI view  : this code end here\r\n\r\n      console.log('new', this.secondtable);\r\n    })\r\n  }\r\n\r\n  schemeid1\r\n  getSchemeid(event) {\r\n    this.sname1 = event.label\r\n    this.schemeid1 = event.value\r\n\r\n    let obj = {\r\n      'SCHEMAST_ID': event.value,\r\n\r\n\r\n    }\r\n    // this.http.post('http://192.168.1.180:3000/employee/getAcno', obj).subscribe((data: any) => {\r\n    this.http.post(this.url+'/employee/getAcno', obj).subscribe((data: any) => {\r\n\r\n\r\n\r\n      this.ac_From = data\r\n      this.ac_To = data\r\n\r\n      // console.log(this.ac_From)\r\n      // console.log(this.ac_To)\r\n    })\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      schemefrom: ['', [Validators.required]],\r\n      schemeto: ['', [Validators.required]],\r\n      acfrom: ['', [Validators.required]],\r\n      acto: ['', [Validators.required]],\r\n      tramt: ['', [Validators.required]],\r\n\r\n    });\r\n  }\r\n  // selectLanguage(event: any) {\r\n  //   this.translate.use(event.target.value);\r\n  // }\r\n\r\n\r\n\r\n  reset() {\r\n    // this.angForm.controls['schemefrom'].reset()\r\n    this.angForm.controls['acfrom'].reset()\r\n    this.angForm.controls['acto'].reset()\r\n\r\n  }\r\n  // close() {\r\n  //   this.resetForm()\r\n  // }\r\n\r\n  // resetForm() {\r\n  //   // this.createForm()\r\n  //   // this.ngForm.controls. Print_Code.reset();\r\n  //   this.showRepo = false;\r\n  //   this.clicked = false;\r\n  // }\r\n\r\n\r\n\r\n\r\n  newValue\r\n  getvalue(event: any) {\r\n    this.newValue = event.target.value;\r\n    console.log(this.newValue);\r\n\r\n  }\r\n  commonValues: any[] = [];\r\n  value\r\n  balance = []\r\n\r\n  updatedLegbal: any[] = [];\r\n\r\n  amt\r\n  calAmt() {\r\n\r\n    this.value = parseFloat(this.newValue);\r\n    this.custmerid1.forEach(id => {\r\n      if (this.custmerid2.includes(id)) {\r\n        const index = this.custmerid1.indexOf(id);\r\n        if (index !== -1) {\r\n          if (this.legbal[index] !== 0) {\r\n            if (this.legbal[index] > 0) {\r\n              this.updatedLegbal.push(0);\r\n            } else {\r\n              //  this.updatedLegbal.push(this.value);\r\n              if (Math.abs(this.legbal[index]) < this.value) {\r\n                this.updatedLegbal.push(this.legbal[index]);\r\n              } else {\r\n                this.updatedLegbal.push(this.value);\r\n              }\r\n\r\n            }\r\n          } else {\r\n            this.updatedLegbal.push(this.legbal[index]);\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        this.updatedLegbal.push(0);\r\n      }\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n    this.secondtable.forEach((row, index) => {\r\n      row.amount = this.updatedLegbal[index];\r\n    });\r\n\r\n    console.log('Updated legbal:', this.updatedLegbal);\r\n\r\n  }\r\n  brachid\r\n  date\r\n  userid\r\n  narr\r\n  Submit() {\r\n    if (this.angForm.invalid) {\r\n      return;\r\n    }\r\n    let formValues = this.angForm.value;\r\n    let userData = JSON.parse(localStorage.getItem(\"user\"));\r\n    this.date = userData.branch.syspara.CURRENT_DATE;\r\n    this.brachid = userData.branch.id,\r\n    // this.userid = userData.id\r\n    this.narr = \"From \" + this.sname + \" To \" + this.sname1\r\n    let obj = {\r\n      \"TRAN_DATE\": this.date,\r\n      'BRANCH_CODE': this.brachid,\r\n      // 'TRAN_ACNOTYPE': this.AcNoType,\r\n      // 'TRAN_ACNOTYPE1': this.AcNoType1,\r\n      'TRAN_ACTYPE': this.schemeid,\r\n      'TRAN_ACTYPE1': this.schemeid1,\r\n      'NARRATION': this.narr,\r\n      // 'USER_CODE': this.userid\r\n      // 'TRAN_ACNO': this.Acno,\r\n      // 'TRAN_ACNO1': this.Acno1,\r\n      // 'TRAN_GLACNO': this.Gacno,\r\n      // 'TRAN_GLACNO1': this.Gacno1,\r\n      'data':this.tableData,\r\n      'data1':this.secondtable,\r\n    };\r\n\r\n    // this.http.post('http://192.168.1.180:3000/employee/SchemeTransferinsert', obj).subscribe(\r\n    this.http.post(this.url+'/employee/SchemeTransferinsert', obj).subscribe(\r\n\r\n      (response) => {\r\n        console.log(response)\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success',\r\n          text: 'Data submitted successfully',\r\n        });\r\n      },\r\n\r\n    );\r\n  }\r\n\r\n}\r\n//  customerId: number;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>{{'Utility.Scheme_Amount_Transfer.Title' | translate}}</h5>\r\n            </div>\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-3\"> <label\r\n                                for=\"AC_BRANCH\">{{'Utility.Scheme_Amount_Transfer.Transfer_Scheme_From' |\r\n                                translate}}<sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedTSfrom\" #scheme formControlName=\"trSfrom\"\r\n                                        bindValue=\"value\">\r\n                                        <ng-option *ngFor=\"let item of ts_From\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                    <ng-select id=\"trSfrom\" formControlName=\"trSfrom\" title=\"Compulsory Selection\"\r\n                                        placeholder=\"Scheme\">\r\n                                        <ng-option *ngFor=\"let values of allScheme\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['trSfrom'].invalid && (angForm.controls['trSfrom'].dirty || angForm.controls['trSfrom'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['trSfrom'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-3\"> <label\r\n                                for=\"AC_BRANCH\">{{'Utility.Scheme_Amount_Transfer.Transfer_Scheme_To' | translate}}<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedTSto\" #scheme formControlName=\"trSto\"\r\n                                        bindValue=\"value\" bindLabel=\"label\">\r\n                                        <ng-option [disabled]=\"selectedValue.value==item.value\"\r\n                                            *ngFor=\"let item of ts_To\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['trSto'].invalid && (angForm.controls['trSto'].dirty || angForm.controls['trSto'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['trSto'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-3\"> <label\r\n                                for=\"AC_BRANCH\">{{'Utility.Scheme_Amount_Transfer.A/C_To1' | translate}}<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedAcfrom\" #scheme formControlName=\"acfrom\"\r\n                                        bindValue=\"value\" bindLabel=\"label\">\r\n                                        <ng-option *ngFor=\"let item of ac_From\" [value]=\"item\">\r\n                                            {{item.label}} {{item.name}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['acfrom'].invalid && (angForm.controls['acfrom'].dirty || angForm.controls['acfrom'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['acfrom'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-3\"> <label\r\n                                for=\"AC_BRANCH\">{{'Utility.Scheme_Amount_Transfer.A/C_To' | translate}}<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedActo\" #scheme formControlName=\"acto\"\r\n                                        bindValue=\"value\" bindLabel=\"label\">\r\n                                        <ng-option *ngFor=\"let item of ac_To\" [value]=\"item\">\r\n                                            {{item.label}} {{item.name}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['acto'].invalid && (angForm.controls['acto'].dirty || angForm.controls['acto'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['acto'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-3\"> <label\r\n                                for=\"AC_BRANCH\">{{'Utility.Scheme_Amount_Transfer.Transfer_Amount' | translate}}<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"INSTALLMENT_NO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"INSTALLMENT_NO\" maxlength=\"10\" formControlName=\"tramt\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['tramt'].invalid && (angForm.controls['tramt'].dirty || angForm.controls['tramt'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['tramt'].errors?.pattern || angForm.controls['tramt'].errors?.required || angForm.controls['tramt'].errors?.maxlength\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"solid\">\r\n\r\n                                <table class=\"table table-bordered table-hover compact\">\r\n                                    <thead>\r\n                                        <td>Account Number</td>\r\n                                        <td>Account Name</td>\r\n                                        <td>Ledger Balance</td>\r\n\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let row of tableData\">\r\n                                            <td>{{ row.accountNumber }}</td>\r\n                                            <td>{{ row.AccountName }}</td>\r\n                                            <td style=\"text-align: end;\">{{ row.LedgerBalance }}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"solid\">\r\n\r\n                                <table class=\"table table-bordered table-hover compact\">\r\n                                    <thead>\r\n                                        <td>Account Number</td>\r\n                                        <td>Account Name</td>\r\n                                        <td>Amount</td>\r\n\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let row of tableData\">\r\n                                            <td>{{ row.accountNumber }}</td>\r\n                                            <td>{{ row.AccountName }}</td>\r\n                                            <td style=\"text-align: end;\">{{ row.Amount }}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <button class=\"btn  btn-outline-primary btn-sm\" (click)=\"close()\">{{'Utility.Action.close' |\r\n                                translate}}</button>\r\n\r\n                            <button class=\"btn  btn-outline-primary btn-sm\">{{'Utility.Action.Update' |\r\n                                translate}}</button>\r\n\r\n                            <button class=\"btn  btn-outline-primary btn-sm\">{{'Utility.Action.Cancel' |\r\n                                translate}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div> -->\r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Scheme Amount Transfer</h5>\r\n            </div>\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-3\"> <label\r\n                                for=\"AC_BRANCH\">Transfer Scheme From<sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedTSfrom\" #scheme formControlName=\"schemefrom\"\r\n                                        (change)=\"getScheme($event)\">\r\n                                        <ng-option *ngFor=\"let item of Schemefrom\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['schemefrom'].invalid && (angForm.controls['schemefrom'].dirty || angForm.controls['schemefrom'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['schemefrom'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-3\"> <label\r\n                                for=\"AC_BRANCH\">Transfer Scheme To<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\" selectedTSto\" #scheme formControlName=\"schemeto\"\r\n                                        (change)=\"getSchemeid($event)\">\r\n                                        <ng-option *ngFor=\"let item of ts_To\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['schemeto'].invalid && (angForm.controls['schemeto'].dirty || angForm.controls['schemeto'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['schemeto'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-3\"> <label\r\n                                for=\"AC_BRANCH\">A/c From<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedAcfrom\" #scheme formControlName=\"acfrom\"\r\n                                        (change)=\"getAcnofrom($event)\">\r\n                                        <ng-option *ngFor=\"let item of ac_From\" [value]=\"item\">\r\n                                            {{item.acno}} {{item.ac_name}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['acfrom'].invalid && (angForm.controls['acfrom'].dirty || angForm.controls['acfrom'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['acfrom'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-3\"> <label\r\n                                for=\"AC_BRANCH\">A/c To<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedActo\" #scheme formControlName=\"acto\"\r\n                                        (change)=\"getAcno($event); getAccountNo($event)\">\r\n                                        <ng-option *ngFor=\"let item of ac_To\" [value]=\"item\">\r\n                                            {{item.acno}} {{item.ac_name}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['acto'].invalid && (angForm.controls['acto'].dirty || angForm.controls['acto'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['acto'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-3\"> <label\r\n                                for=\"AC_BRANCH\">Transfer Amount<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"INSTALLMENT_NO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"INSTALLMENT_NO\" maxlength=\"10\" formControlName=\"tramt\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\" (change)=\"getvalue($event)\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['tramt'].invalid && (angForm.controls['tramt'].dirty || angForm.controls['tramt'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['tramt'].errors?.pattern || angForm.controls['tramt'].errors?.required || angForm.controls['tramt'].errors?.maxlength\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <button class=\"btn  btn-outline-primary btn-sm\" (click)=\" calAmt(); \">Calculate</button>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <button class=\"btn  btn-outline-primary btn-sm\" (click)=\"reset()\">Cancel\r\n                                </button>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"solid\">\r\n\r\n                                <table class=\"table table-bordered table-hover compact\">\r\n                                    <thead>\r\n                                        <td>Account Number</td>\r\n                                        <td>Customar Id</td>\r\n                                        <td>Account Name</td>\r\n                                        <td>Ledger Balance</td>\r\n                                        \r\n\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let row of tableData\">\r\n                                            <td>{{ row.ac_no }}</td>\r\n                                            <td>{{ row.ac_custid }}</td>\r\n                                            <td>{{ row.ac_name }}</td>\r\n                                            <td style=\"text-align: end;\">{{ row.LEDGER_BAL}}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"solid\">\r\n\r\n                                <table class=\"table table-bordered table-hover compact\">\r\n                                    <thead>\r\n                                        <td>Account Number</td>\r\n                                        <td>Customar Id</td>\r\n                                        <td>Account Name</td>\r\n                                        <td>Amount</td>\r\n\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let row of secondtable\">\r\n                                            <td>{{ row.ac_no }}</td>\r\n                                            <td>{{ row.ac_custid }}</td>\r\n                                            <td>{{ row.ac_name }}</td>\r\n                                            <td  style=\"text-align: end;\">{{ row.amount }}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <!-- <button class=\"btn  btn-outline-primary btn-sm\" (click)=\"close()\">{{'Utility.Action.close' |\r\n                                translate}}</button> -->\r\n\r\n                            <button class=\"btn  btn-outline-primary btn-sm\" (click)=\"Submit()\">Submit</button>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\nimport { SchemeATEComponent } from './scheme-ate.component';\r\nimport { SchemeATERoutingModule } from './scheme-ate-routing.module';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport {DataTablesModule} from 'angular-datatables';\r\n\r\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SchemeATERoutingModule,\r\n    SharedModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DataTablesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    HttpClientModule,\r\n//     TranslateModule.forRoot({\r\n//   loader:{\r\n//     provide:TranslateLoader,\r\n//     useFactory:HttpLoaderFactory,\r\n//     deps:[HttpClient]\r\n//   }\r\n// })\r\n  ],\r\n  declarations: [SchemeATEComponent],\r\n  providers:[{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },\r\n  SchemeCodeDropdownService,\r\n  SchemeAccountNoService,\r\n]\r\n})\r\nexport class SchemeATEModule { }\r\n// export function HttpLoaderFactory(http:HttpClient){\r\n//   return new TranslateHttpLoader(http);\r\n// }\r\n"],"sourceRoot":"webpack:///"}