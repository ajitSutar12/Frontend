{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/utility/interest-posting/interest-calculation/interest-calculation-routing.module.ts","./src/app/theme/utility/interest-posting/interest-calculation/interest-calculation.component.ts","./src/app/theme/utility/interest-posting/interest-calculation/interest-calculation.component.html","./src/app/theme/utility/interest-posting/interest-calculation/interest-calculation.module.ts","./src/app/theme/utility/interest-posting/interest-calculation/interest-calculation.service.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"interest-calculation-interest-calculation-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {InterestCalculationComponent} from './interest-calculation.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: InterestCalculationComponent,\r\n    data: {\r\n      title: 'Interest Calculation',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InterestCalculationRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\n// import { nullSafeIsEquivalent } from '@angular/compiler/src/output/output_ast';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SystemMasterParametersService } from '../../scheme-parameters/system-master-parameters/system-master-parameters.service';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { InterestPostingFlagUpdationService } from 'src/app/theme/master/maintainance/interest-posting-flag-updation/interest-posting-flag-updation.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service';\r\nimport { elementAt } from 'rxjs-compat/operator/elementAt';\r\nimport { CurrentSchemeService } from './interest-calculation.service';\r\nimport Swal from 'sweetalert2';\r\nimport { data, event } from 'jquery';\r\nimport { async } from 'rxjs/internal/scheduler/async';\r\nimport * as moment from 'moment';\r\n@Component({\r\n  selector: 'app-interest-calculation',\r\n  templateUrl: './interest-calculation.component.html',\r\n  styleUrls: ['./interest-calculation.component.scss']\r\n})\r\nexport class InterestCalculationComponent implements OnInit {\r\n  formSubmitted = false;\r\n  //api\r\n  url = environment.base_url;\r\n\r\n\r\n  // date variables\r\n  maxDate: Date;\r\n  minDate: Date;\r\n  intuptodate: any = null\r\n  InterestArr = []\r\n  // Formgroup variable\r\n  angForm: FormGroup;\r\n  isSchemeWise: boolean;\r\n  isAccountWise: boolean;\r\n  isSelectiveAccountWise: boolean;\r\n\r\n  // dropdown variables\r\n  ngBranchCode: any = null\r\n  ngscheme: any = null\r\n  ngfromac: any = null\r\n  ngtoac: any = null\r\n  scheme: any;\r\n\r\n  fromAc: any\r\n  toAc: any\r\n\r\n\r\n  branch_code: any;\r\n  arrTable: any;\r\n  showButton: boolean = true;\r\n  showTable: boolean = false;\r\n  mem: any[];\r\n  getschemename: any;\r\n  schemeACNo: any[];\r\n  UpdateData: [];\r\n  schemeDataList: any;\r\n  codeList: any;\r\n  selectedSchemeData: any;\r\n  schemewiseRadio: boolean = true;\r\n  modalClass: string = 'modalHide';\r\n  constructor(\r\n    private fb: FormBuilder, private http: HttpClient,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private _service: InterestPostingFlagUpdationService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private systemParameter: SystemMasterParametersService,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private config: NgSelectConfig,\r\n    private _serviceScheme: CurrentSchemeService\r\n  ) {\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    $('#loading').hide();\r\n\r\n    this.getSystemParaDate()\r\n    this.createForm();\r\n\r\n    // this.http.get(this.url + '/scheme-parameters/FlagInterest').subscribe((data) => {\r\n    //   this.scheme = data\r\n    // })\r\n\r\n    this._serviceScheme.getSchemeCodeList().subscribe(data => {\r\n      this.schemeDataList = data;\r\n      this.codeList = [...new Map(data.map(item => [item['S_ACNOTYPE'], item])).values()]\r\n      console.log(this.codeList, 'Codelist')\r\n    }, err => {\r\n      console.log('Scheme Parameter Not Loading :', err);\r\n    })\r\n\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      var filtered = data.filter(function (scheme) {\r\n        return (scheme.intapp == '1');\r\n      });\r\n      console.log('filter', filtered);\r\n      this.scheme = filtered;\r\n    })\r\n\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n    })\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      INT_UPTO_DATE: ['', [Validators.required]],\r\n      Ledger_Date: [''],\r\n      INT_CAL: [''],\r\n      BRANCH: ['', [Validators.required]],\r\n      AC_TYPE: ['', [Validators.required]],\r\n      FROM_AC: ['', [Validators.required]],\r\n      TO_AC: ['', [Validators.required]],\r\n      AC_NO: ['', [Validators.required]],\r\n      BRANCH1: ['', [Validators.required]],\r\n      AC_TYPE1: ['', [Validators.required]],\r\n\r\n    });\r\n  }\r\n\r\n  getSelectedCodeScheme(ele) {\r\n    let code = ele;\r\n    this.selectedSchemeData = this.schemeDataList.filter(c => c.S_ACNOTYPE == code)\r\n  }\r\n  submit() {\r\n    var FormValue = this.angForm.value;\r\n    if (FormValue.INT_CAL == \"\") {\r\n      Swal.fire(\"Oops...\", \"Please choose any option for Interest Calculation\", \"error\");\r\n      return;\r\n    } else if (FormValue.INT_CAL == 'Form1') {\r\n      if (FormValue.BRANCH == '' || FormValue.AC_TYPE == '' || this.selectedSchemeDataForOption1.length == 0) {\r\n        Swal.fire(\"Oops...\", \"Please select required field value\", \"error\");\r\n        return;\r\n      } else {\r\n        this.modalClass = 'modalShow';\r\n        this.showButton = false;\r\n        let datetobind = moment(FormValue.INT_UPTO_DATE, 'DD/MM/YYYY')\r\n        let apiObj = {\r\n          option: 0,\r\n          obj: {\r\n            SchemeCode: this.selectedSchemeDataForOption1\r\n          },\r\n          schemeType: FormValue.AC_TYPE,\r\n          branch_code: FormValue.BRANCH,\r\n          date: moment(datetobind).format('DD/MM/YYYY')\r\n        }\r\n\r\n        //Send Data for Interest Calculation Scheme Wise;\r\n        this._service.IntrestCalculation(apiObj).subscribe((data) => {\r\n          this.modalClass = 'modalHide';\r\n          Swal.fire(\"Success\", \"Interest Calculation Successfully Completed\", \"success\");\r\n          this.ngOnInit()\r\n          this.showButton = true;\r\n        },\r\n          // err => {\r\n          //   console.log(err);\r\n          //   this.modalClass = 'modalHide';\r\n          //   this.showButton = true;\r\n          // })\r\n          (error) => {\r\n            console.log(error, 'err')\r\n            this.modalClass = 'modalHide';\r\n            Swal.fire('Oops!', error?.error?.message, 'error');\r\n            this.showButton = true;\r\n          })\r\n      }\r\n    } else if (FormValue.INT_CAL == 'Form2') {\r\n      if (FormValue.BRANCH == '' || FormValue.AC_TYPE == '' || FormValue.FROM_AC == '' || FormValue.TO_AC == '') {\r\n        Swal.fire(\"Oops...\", \"Please select required field value\", \"error\");\r\n      } else {\r\n        this.modalClass = 'modalShow';\r\n        this.showButton = false;\r\n        let apiObj = {\r\n          option: 1,\r\n          obj: {\r\n            SchemeCode: [FormValue.AC_TYPE],\r\n            Range: {\r\n              StartAcNO: FormValue.FROM_AC,\r\n              EndAcNo: FormValue.TO_AC\r\n            }\r\n          },\r\n          schemeType: FormValue.AC_TYPE,\r\n          branch_code: FormValue.BRANCH,\r\n          date: FormValue.INT_UPTO_DATE\r\n        }\r\n\r\n        //Send Data for Interest Calculation Scheme Wise;\r\n        this._service.IntrestCalculation(apiObj).subscribe(data => {\r\n          this.modalClass = 'modalHide';\r\n          Swal.fire(\"Success\", \"Interest Calculation Successfully Completed\", \"success\");\r\n          this.ngOnInit()\r\n          this.showButton = true;\r\n        }, (error) => {\r\n          console.log(error, 'err')\r\n          this.modalClass = 'modalHide';\r\n          Swal.fire('Oops!', error?.error?.message, 'error');\r\n          this.showButton = true;\r\n        })\r\n      }\r\n    } else {\r\n      if (FormValue.BRANCH1 == '' || FormValue.AC_TYPE1 == '' || this.InterestArr.length == 0) {\r\n        Swal.fire(\"Oops...\", \"Please select required field value\", \"error\");\r\n      } else {\r\n        this.modalClass = 'modalShow';\r\n        this.showButton = false;\r\n        let AccountData = this.InterestArr.map(x => `'${x}'`).join(',')\r\n\r\n        let apiObj = {\r\n          option: 2,\r\n          obj: {\r\n            SchemeCode: [FormValue.AC_TYPE1],\r\n            SelectiveData: AccountData\r\n          },\r\n          schemeType: FormValue.AC_TYPE1,\r\n          branch_code: FormValue.BRANCH,\r\n          date: FormValue.INT_UPTO_DATE\r\n        }\r\n\r\n        //Send Data for Interest Calculation Scheme Wise;\r\n        this._service.IntrestCalculation(apiObj).subscribe(data => {\r\n          this.modalClass = 'modalHide';\r\n          Swal.fire(\"Success\", \"Interest Calculation Successfully Completed\", \"success\");\r\n          this.ngOnInit()\r\n          this.showButton = true;\r\n        }, err => {\r\n          console.log(err);\r\n          this.showButton = true;\r\n        })\r\n      }\r\n    }\r\n  }\r\n  select() {\r\n    this.InterestArr = []\r\n    var memFrom = this.angForm.controls['FROM_AC'].value\r\n    var memTo = this.angForm.controls['TO_AC'].value\r\n    if (this.angForm.controls['FROM_AC'].value <= this.angForm.controls['TO_AC'].value) {\r\n\r\n      this.mem = [memFrom, memTo, this.ngscheme, this.ngBranchCode, this.getschemename]\r\n      this.http.get(this.url + '/interest-calculation/accounts/' + this.mem).subscribe((data) => {\r\n        this.arrTable = data;\r\n        this.arrTable.forEach(element => {\r\n          var object = {\r\n            AC_NO: element.AC_NO,\r\n            AC_NAME: element.AC_NAME,\r\n          }\r\n          this.InterestArr.push(object)\r\n        });\r\n      });\r\n    }\r\n    else {\r\n      Swal.fire(\"To Account Number Must Be Greater Than From Account Number\");\r\n      this.InterestArr = []\r\n      this.angForm.patchValue({\r\n        TO_AC: ''\r\n      })\r\n    }\r\n  }\r\n  resetForm() {\r\n\r\n  }\r\n\r\n  //clear scheme and account no\r\n  getBranch() {\r\n    this.ngscheme = null\r\n    this.ngfromac = null\r\n    this.ngtoac = null\r\n    this.arrTable = []\r\n    this.InterestArr = []\r\n  }\r\n\r\n  //get scheme wise account number\r\n  getSchemeAcno(event) {\r\n    debugger\r\n    let obj = [this.ngscheme, this.ngBranchCode]\r\n    this.ngfromac = null\r\n    this.ngtoac = null\r\n\r\n    switch (event.name) {\r\n\r\n      case 'SB':\r\n        this.schemeAccountNoService.getSavingSchemeList1(obj).subscribe(data => {\r\n          this.fromAc = data;\r\n          this.toAc = data\r\n          this.schemeACNo = data\r\n\r\n        })\r\n\r\n        break;\r\n\r\n      case 'CA':\r\n        this.schemeAccountNoService.getCurrentAccountSchemeList1(obj).subscribe(data => {\r\n          this.fromAc = data;\r\n          this.toAc = data\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n\r\n      case 'LN':\r\n        this.schemeAccountNoService.getTermLoanSchemeList1(obj).subscribe(data => {\r\n          this.fromAc = data;\r\n          this.toAc = data\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n\r\n      case 'TD':\r\n        this.schemeAccountNoService.getTermDepositSchemeList1(obj).subscribe(data => {\r\n          this.fromAc = data;\r\n          this.toAc = data\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n\r\n      case 'DS':\r\n        this.schemeAccountNoService.getDisputeLoanSchemeList1(obj).subscribe(data => {\r\n          this.fromAc = data;\r\n          this.toAc = data\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n\r\n      case 'CC':\r\n        this.schemeAccountNoService.getCashCreditSchemeList1(obj).subscribe(data => {\r\n          this.fromAc = data;\r\n          this.toAc = data\r\n          this.schemeACNo = data\r\n          console.log(this.schemeACNo)\r\n        })\r\n        break;\r\n\r\n      case 'PG':\r\n        this.schemeAccountNoService.getPigmyAccountSchemeList1(obj).subscribe(data => {\r\n          this.fromAc = data;\r\n          this.toAc = data\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n\r\n      case 'IV':\r\n        this.schemeAccountNoService.getInvestmentSchemeList1(obj).subscribe(data => {\r\n          this.fromAc = data;\r\n          this.toAc = data\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n\r\n      case 'GL':\r\n        this.schemeAccountNoService.getInvestmentSchemeList1(obj).subscribe(data => {\r\n          this.fromAc = data;\r\n          this.toAc = data\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n    }\r\n\r\n    console.log(event.name)\r\n    console.log(this.fromAc)\r\n    console.log(this.toAc)\r\n\r\n\r\n  }\r\n  //load table according account range\r\n  AccountWiseData = new Array()\r\n  getTable(event) {\r\n    debugger\r\n    // this.InterestArr = []\r\n    this.showTable = true\r\n    let searchData = this.InterestArr.filter(ele => ele.AC_NO === event.value);\r\n    if (searchData.length != 0) {\r\n      Swal.fire('Oops...!', 'Your selected Account Already Exists in Table', 'error');\r\n    } else {\r\n      let obj = {\r\n        AC_NO: event.bankacno,\r\n        AC_NAME: event.name\r\n      }\r\n      this.AccountWiseData.push(obj);\r\n      this.InterestArr.push(event.bankacno)\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  isSelect(value) {\r\n    if (value == 1) {\r\n      this.isSchemeWise = true;\r\n      this.isAccountWise = false;\r\n      this.isSelectiveAccountWise = false;\r\n      this.ngBranchCode = null\r\n      this.ngscheme = null\r\n      this.ngfromac = null\r\n      this.ngtoac = null\r\n      // this.angForm.controls['BRANCH'].reset()\r\n      // this.angForm.controls['AC_TYPE'].reset()\r\n      // this.angForm.controls['FROM_AC'].reset()\r\n      // this.angForm.controls['TO_AC'].reset()\r\n      // this.angForm.controls['BRANCH1'].reset()\r\n      // this.angForm.controls['AC_TYPE1'].reset()\r\n      // this.angForm.controls['AC_NO'].reset()\r\n\r\n    }\r\n    if (value == 2) {\r\n      this.isSchemeWise = false;\r\n      this.isAccountWise = true;\r\n      this.isSelectiveAccountWise = false;\r\n      this.angForm.controls['BRANCH1'].reset()\r\n      this.angForm.controls['AC_TYPE1'].reset()\r\n      this.angForm.controls['AC_NO'].reset()\r\n\r\n    }\r\n    if (value == 3) {\r\n      this.isSchemeWise = false;\r\n      this.isAccountWise = false;\r\n      this.isSelectiveAccountWise = true;\r\n      this.angForm.controls['BRANCH'].reset()\r\n      this.angForm.controls['FROM_AC'].reset()\r\n      this.angForm.controls['TO_AC'].reset()\r\n    }\r\n\r\n  }\r\n\r\n  //  //update checkbox status in array\r\n  //  checkInterestFlag(uptodate, ledgerdate, flag) {\r\n  //   let isIntUpdate: boolean = false\r\n  //   if (flag.target.checked) {\r\n  //     isIntUpdate = true\r\n  //   }\r\n  //   else {\r\n  //     isIntUpdate = false\r\n  //   }\r\n  //   if (this.InterestArr.length != 0) {\r\n  //     if (this.InterestArr.some(item => item.INT_UPTO_DATE === uptodate)) {\r\n  //       this.InterestArr.forEach((element) => {\r\n  //         if (element.INT_UPTO_DATE == uptodate) {\r\n  //           element['IS_POST_INT_AC'] = isIntUpdate\r\n  //         }\r\n  //       })\r\n  //     }\r\n  //     else {\r\n  //       var object = {\r\n  //         INT_UPTO_DATE: uptodate,\r\n  //         Ledger_Date: ledgerdate,\r\n\r\n  //       }\r\n  //       this.InterestArr.push(object)\r\n  //     }\r\n  //   }\r\n  //   else {\r\n  //     var object = {\r\n  //       INT_UPTO_DATE: uptodate,\r\n  //       Ledger_Date: ledgerdate,\r\n\r\n  //     }\r\n  //     this.InterestArr.push(object)\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n\r\n  //get sys para current date\r\n  getSystemParaDate() {\r\n    this.systemParameter.getFormData(1).subscribe(data => {\r\n      this.angForm.patchValue({\r\n        'INT_UPTO_DATE': data.CURRENT_DATE,\r\n        'Ledger_Date': data.CURRENT_DATE,\r\n      })\r\n    })\r\n  }\r\n\r\n  selectedSchemeDataForOption1 = new Array();\r\n  //Add into SchemeList\r\n  AddSchemeData(ele, data) {\r\n    console.log(ele);\r\n    console.log(data);\r\n\r\n    if (ele.target.checked) {\r\n      // this.selectedSchemeData.push(data);\r\n      if (this.selectedSchemeDataForOption1.length == 0) {\r\n        this.selectedSchemeDataForOption1.push(data.id)\r\n      } else {\r\n        let result = this.selectedSchemeDataForOption1.filter(ele => ele == data.id);\r\n        if (result.length == 0) {\r\n          this.selectedSchemeDataForOption1.push(data.id)\r\n        }\r\n      }\r\n    } else {\r\n      let index = this.selectedSchemeDataForOption1.findIndex(ele => ele === data.id)\r\n      delete this.selectedSchemeDataForOption1[index];\r\n      console.log(this.selectedSchemeDataForOption1);\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Interest Calculation</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"INT_UPTO_DATE\">Interest Upto Date</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"INT_UPTO_DATE\" id=\"INT_UPTO_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"intuptodate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"INT_UPTO_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                                   \r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['INT_UPTO_DATE'].invalid && (angForm.controls['INT_UPTO_DATE'].dirty || angForm.controls['INT_UPTO_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['INT_UPTO_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"Ledger_Date\">Ledger Date</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" class=\"form-control\"\r\n                                                    [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" bsDatepicker\r\n                                                     formControlName=\"Ledger_Date\" disabled>\r\n                                                   \r\n                                </span>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\"\r\n                                 (click)=\"submit()\">Calculate</button>\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                    \r\n                            <div class=\"form-radio\">\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" formControlName=\"INT_CAL\" name=\"INT_CAL\" value=\"Form1\"\r\n                                            id=\"form1\" (change)=\"isSelect(1)\" checked=\"checked\">\r\n                                        <i class=\"helper\"></i>Scheme Wise\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" value=\"Form2\" formControlName=\"INT_CAL\" id=\"form2\"\r\n                                            name=\"INT_CAL\" (change)=\"isSelect(2)\">\r\n                                        <i class=\"helper\"></i>Account Wise\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"radio radio-inline\">\r\n                                    <label>\r\n                                        <input type=\"radio\" value=\"Form3\" formControlName=\"INT_CAL\" id=\"form3\"\r\n                                            name=\"INT_CAL\" (change)=\"isSelect(3)\">\r\n                                        <i class=\"helper\"></i>Selective Account Wise\r\n                                    </label>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\" id=\"FORM1\" *ngIf=\"isSchemeWise\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH\">Branch<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                    formControlName=\"BRANCH\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                    [ngClass]=\"{'form-submitted': formSubmitted}\" (change)=\"getBranch()\"\r\n                                    placeholder=\"Branch\">\r\n                                    <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                        {{values.label}}</ng-option>\r\n                                </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                            *ngIf=\"angForm.controls['BRANCH'].invalid && (angForm.controls['BRANCH'].dirty || angForm.controls['BRANCH'].touched)\"\r\n                            class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>     \r\n                                \r\n                        </div>\r\n                        \r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Code<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Scheme Code\"\r\n                                        (change)=\"getSelectedCodeScheme($event)\">\r\n                                        <ng-option *ngFor=\"let values of codeList\" [value]=\"values.S_ACNOTYPE\">\r\n                                            {{values.S_ACNOTYPE}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                            *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                            class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>     \r\n                            \r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"table-responsive\">\r\n                                <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n                                        class=\"table table-striped table-bordered table-hover compact\">\r\n                                        <thead>\r\n                                            <td>Scheme Code</td>\r\n                                            <td>Scheme Name</td>\r\n                                            <td class=\"td_center\">Is Post Interest?</td>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let item of selectedSchemeData\">\r\n                                                <td>{{item.S_APPL}}</td>\r\n                                                <td>{{item.S_NAME}}</td>\r\n                                                <td><input type=\"checkbox\" class=\"form-control\" (change)=\"AddSchemeData($event,item)\"></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                </table>\r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\" id=\"FORM2\" *ngIf=\"isAccountWise\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH\">Branch<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                    formControlName=\"BRANCH\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                    [ngClass]=\"{'form-submitted': formSubmitted}\" (change)=\"getBranch()\"\r\n                                    placeholder=\"Branch\">\r\n                                    <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                        {{values.label}}</ng-option>\r\n                                </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                            *ngIf=\"angForm.controls['BRANCH'].invalid && (angForm.controls['BRANCH'].dirty || angForm.controls['BRANCH'].touched)\"\r\n                            class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>     \r\n                                \r\n                        </div>\r\n                        \r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Code<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Scheme Code\"\r\n                                        (change)=\"getSchemeAcno($event)\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.id}} {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                            *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                            class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>     \r\n                            \r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_AC\">From A/c<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"FROM_AC\" bindValue=\"bankacno\" [(ngModel)]=\"ngfromac\" (change)=\"select()\"\r\n                                    formControlName=\"FROM_AC\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                    [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"From A/c\">\r\n                                    <ng-option *ngFor=\"let values of fromAc\" [value]=\"values\">\r\n                                        {{values.label}} {{values.name}}</ng-option>\r\n                                </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                            *ngIf=\"angForm.controls['FROM_AC'].invalid && (angForm.controls['FROM_AC'].dirty || angForm.controls['FROM_AC'].touched)\"\r\n                            class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['FROM_AC'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>   \r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_AC\">To A/c<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"TO_AC\" bindValue=\"bankacno\" [(ngModel)]=\"ngtoac\" formControlName=\"TO_AC\"\r\n                                    bindLabel=\"label\" title=\"Compulsory Selection\" (change)=\"select()\"\r\n                                    [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"To A/c\">\r\n                                    <ng-option *ngFor=\"let values of toAc\" [value]=\"values\">\r\n                                        {{values.label}} {{values.name}}</ng-option>\r\n                                </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                            *ngIf=\"angForm.controls['TO_AC'].invalid && (angForm.controls['TO_AC'].dirty || angForm.controls['TO_AC'].touched)\"\r\n                            class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TO_AC'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>       \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\" id=\"FORM3\" *ngIf=\"isSelectiveAccountWise\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH1\">Branch<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH1\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                    formControlName=\"BRANCH1\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                    [ngClass]=\"{'form-submitted': formSubmitted}\" (change)=\"getBranch()\"\r\n                                    placeholder=\"Branch\">d\r\n                                    <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                        {{values.label}}</ng-option>\r\n                                </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                            *ngIf=\"angForm.controls['BRANCH1'].invalid && (angForm.controls['BRANCH1'].dirty || angForm.controls['BRANCH1'].touched)\"\r\n                            class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH1'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>     \r\n                                \r\n                        </div>\r\n                       \r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE1\">Scheme Code<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE1\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE1\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Scheme Code\"\r\n                                        (change)=\"getSchemeAcno($event)\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.id}} {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                            *ngIf=\"angForm.controls['AC_TYPE1'].invalid && (angForm.controls['AC_TYPE1'].dirty || angForm.controls['AC_TYPE1'].touched)\"\r\n                            class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE1'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>     \r\n                            \r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_NO\">Select Account<sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_NO\" bindValue=\"bankacno\" [(ngModel)]=\"ngtoac\" formControlName=\"AC_NO\"\r\n                                    bindLabel=\"label\" title=\"Compulsory Selection\" (change)=\"getTable($event)\"\r\n                                    [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"Select Account\">\r\n                                    <ng-option *ngFor=\"let values of schemeACNo\" [value]=\"values\">\r\n                                        {{values.label}} {{values.name}}</ng-option>\r\n                                </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                            *ngIf=\"angForm.controls['AC_NO'].invalid && (angForm.controls['AC_NO'].dirty || angForm.controls['AC_NO'].touched)\"\r\n                            class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>       \r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12\">\r\n                            <div *ngIf=\"showTable\">\r\n                                <div class=\"col-12\">\r\n                                    <div class=\"table-responsive\">\r\n                                        <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n                                        class=\"table table-striped table-bordered table-hover compact\">\r\n                                            <thead>\r\n                                                <td class=\"td_right\">Account Number</td>\r\n                                                <td>Account Name</td>\r\n                                                \r\n                                            </thead>\r\n                                            <tbody *ngIf=\"InterestArr?.length != 0\">\r\n                                                <tr *ngFor=\"let data of AccountWiseData;let indexOfelement = index\">\r\n                                                    <td class=\"td_right\">{{data.AC_NO}}</td>\r\n                                                    <td>{{data.AC_NAME == '' || data.AC_NAME == null ? '-' :\r\n                                                        data.AC_NAME}}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                            <tbody *ngIf=\"InterestArr?.length == 0\">\r\n                                                <tr>\r\n                                                    <td colspan=\"6\" class=\"no-data-available\"\r\n                                                        style=\"text-align: center;\">\r\n                                                        No data!\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div [class]=\"modalClass\"><!-- Place at bottom of page --> </div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InterestCalculationComponent } from './interest-calculation.component';\r\nimport { InterestCalculationRoutingModule } from './interest-calculation-routing.module';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { SystemMasterParametersService } from '../../scheme-parameters/system-master-parameters/system-master-parameters.service';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { InterestPostingFlagUpdationService } from 'src/app/theme/master/maintainance/interest-posting-flag-updation/interest-posting-flag-updation.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { CurrentSchemeService } from './interest-calculation.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    InterestCalculationRoutingModule,\r\n    DataTablesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot()\r\n  ],\r\n  declarations: [InterestCalculationComponent],\r\n  providers:[SystemMasterParametersService,OwnbranchMasterService,SchemeCodeDropdownService,CurrentSchemeService,InterestPostingFlagUpdationService,SchemeAccountNoService,{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },]\r\n})\r\nexport class InterestCalculationModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport {environment} from '../../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class CurrentSchemeService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    \r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n    getSchemeCodeList(): Observable<any> {\r\n        return this.http.get(this.url + '/scheme-parameters')\r\n    }\r\n    // //Insertion Operation\r\n    // postData(data: any): Observable<any> {\r\n    //     return this.http.post(this.url + '/interest-calculation/insert', data).pipe(map((res) => res),\r\n    //         catchError((error) => {\r\n    //             Swal.fire('Please Input Proper Data!');\r\n    //             return throwError(error);\r\n    //         })\r\n    //     )\r\n    // }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/interest-calculation/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    //submit data for form\r\n    postData(data1: any): Observable<any> {\r\n        return this.http.post(this.url + '/interest-calculation/update', data1).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                let errorMessage = 'Please add valid length';\r\n                console.log(error)\r\n                return throwError(errorMessage);\r\n            })\r\n        )\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/interest-calculation/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    //Get Scheme Data\r\n    SchemeDetails():Observable<any>{\r\n        return this.http.get(this.url+'/scheme-parameters').pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class SystemMasterParametersService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  // url = \"http://localhost:4000/system-master-parameters\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        let errorMessage = 'Please add valid length';\r\n        Swal.fire('Kindly Add Valid Length !');\r\n        return throwError(errorMessage);\r\n      })\r\n    )\r\n  }\r\n\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/system-master-parameters/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getData(): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}