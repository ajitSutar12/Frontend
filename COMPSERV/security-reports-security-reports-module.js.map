{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/reports/loan-report/security-reports/all-security-sumarry-report/all-security-sumarry-report.component.ts","./src/app/theme/reports/loan-report/security-reports/all-security-sumarry-report/all-security-sumarry-report.component.html","./src/app/theme/reports/loan-report/security-reports/gold-silver-stock/gold-silver-stock.component.ts","./src/app/theme/reports/loan-report/security-reports/gold-silver-stock/gold-silver-stock.component.html","./src/app/theme/reports/loan-report/security-reports/security-reports-routing.module.ts","./src/app/theme/reports/loan-report/security-reports/security-reports.component.ts","./src/app/theme/reports/loan-report/security-reports/security-reports.component.html","./src/app/theme/reports/loan-report/security-reports/security-reports.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5-routing.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.html","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"security-reports-security-reports-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport * as moment from 'moment';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-all-security-sumarry-report',\r\n  templateUrl: './all-security-sumarry-report.component.html',\r\n  styleUrls: ['./all-security-sumarry-report.component.scss']\r\n})\r\nexport class AllSecuritySumarryReportComponent implements OnInit {\r\n  ngForm: FormGroup;\r\n  ngbranch\r\n  branchOption: any;\r\n  formSubmitted = false;\r\n  scode: any = null;\r\n  scheme: any[];\r\n  transferSchemeDetails: any;\r\n  tScheme\r\n  accountedit1\r\n  getschemename: any;\r\n  getbankAcNo: any;\r\n  getbankAcNo2: any;\r\n  name: any;\r\n  startAcNo: any;\r\n  introducerACNo;\r\n  branch_code: any;\r\n  ngBranchCode: any = null;\r\n  ngscheme: any = null;\r\n  obj: any;\r\n  ngAcnoFrom: any = null;\r\n  ngAcnoTo: any = null;\r\n  schemeACNo\r\n  schemeACNo1\r\n  showRepo: boolean;\r\n  fromdate: any;\r\n  todate: any;\r\n  branchName: string;\r\n  iframe5url:any='';\r\n  report_url = environment.report_url;\r\n  clicked: boolean;\r\n  showLoading: boolean;\r\n  defaultDate: any;\r\n  schemeType:any=[];\r\n  //date\r\nbsValue = new Date();\r\nend_date: String;\r\nmaxDate: Date;\r\nminDate: Date;\r\nurl = environment.base_url;\r\n\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private _ownbranchmasterservice: OwnbranchMasterService,\r\n    public schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private sanitizer: DomSanitizer,\r\n    private http: HttpClient,\r\n\r\n  ) { \r\n    this.end_date = moment().format('DD/MM/YYYY');\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.createForm();\r\n\r\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branchOption = data;\r\n    });\r\n\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n\r\n      var filtered = data.filter(function (scheme) {\r\n        return (scheme.name == 'SH');\r\n      });\r\n      this.scheme = filtered;\r\n      console.log(this.scheme);\r\n\r\n\r\n\r\n      // this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\r\n      //   this.dates = data.CURRENT_DATE;\r\n      // });\r\n\r\n      // this.schemeAccountNoService.getShareMasterAcListForBalUpdation(this.obj).pipe(first()).subscribe(data => {\r\n      //   this.schemeACNo = data\r\n\r\n      // })\r\n\r\n    })\r\n\r\n    this.http.get(this.url+'/ledger-view/schems').subscribe((data: any) => {\r\n      this.schemeType = data\r\n      console.log(this.schemeType)\r\n    })\r\n  }\r\n  accountedit: any = null\r\n  getdata() {\r\n    this.ngscheme = null;\r\n    this.accountedit = null;\r\n  }\r\n  schemechange(event) {\r\n\r\n    this.getschemename = event.name\r\n    this.ngscheme = event.value\r\n    this.getAccountlist()\r\n  }\r\n  getAccountlist() {\r\n    this.accountedit = null\r\n    \r\n   \r\n    let obj = [this.ngscheme, this.ngbranch]\r\n    switch (this.getschemename) {\r\n      case 'SH':\r\n        this.schemeAccountNoService.getShareMasterAcListForBalUpdation(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n          this.schemeACNo1 = data\r\n          console.log(\"acNo\",this.schemeACNo);\r\n        })\r\n        break;\r\n    }\r\n\r\n  }\r\n  getIntro (event) {\r\n    this.getschemename = event.name\r\n    this.getIntroducer()\r\n  }\r\n  getIntroducer() {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  createForm() {\r\n    this.ngForm = this.fb.group({\r\n\r\n      BRANCH_CODE: [\"\", [Validators.required]],\r\n      Scheme_code:[\"\",[Validators.required]],\r\n      AC_TYPE:[''],\r\n      AC_TYPE1:[''],\r\n      Schemewise1:[''],\r\n      AC_TYPE2: ['', [Validators.required]],\r\n      end_date: [\"\", [Validators.required]],\r\n\r\n\r\n      \r\n    });\r\n  }\r\n\r\n  getTransferAccountList(event) {\r\n    this.transferSchemeDetails = event\r\n    this.tScheme = event.name\r\n\r\n  }\r\n  getaccont\r\n  getIntTrans(event) {\r\n    this.getschemename = event.name\r\n    this.getaccont = event.label\r\n\r\n    this.getInterestTransfer()\r\n  }\r\n  getIntTranscus(event) {\r\n    this.getbankAcNo = event.bankacno\r\n    this.name = event.name\r\n\r\n  }\r\n  getIntTrans1(event) {\r\n    this.getbankAcNo2 = event.bankacno\r\n    this.getInterestTransfer()\r\n    this.getschemename = event.name\r\n    this.introducerACNo = []\r\n    this.startAcNo = null\r\n  }\r\n  getInterestTransfer() {\r\n\r\n    // let data: any = localStorage.getItem('user');\r\n    // let result = JSON.parse(data);\r\n    // let branchCode = result.branch.id;\r\n    this.obj = [this.ngscheme, this.ngBranchCode]\r\n    switch (this.getschemename) {\r\n\r\n      case 'SH':\r\n        this.schemeAccountNoService.getTermDepositSchemeList1(this.obj).subscribe(data => {\r\n          this.introducerACNo = data;\r\n          this.ngAcnoFrom = null\r\n          this.introducerACNo = data;\r\n          this.ngAcnoTo = null\r\n        })\r\n        break;\r\n    }\r\n  }\r\n  reset() {\r\n    this.ngForm.controls['end_date'].reset()\r\n    this.ngForm.controls['AC_TYPE2'].reset()\r\n    this.ngForm.controls['AC_TYPE1'].reset()\r\n    this.ngForm.controls['AC_TYPE'].reset()\r\n    this.ngForm.controls['Scheme_code'].reset()\r\n\r\n\r\n   }\r\n\r\n  close(){\r\n    this. reset();\r\n    this.showRepo = false;\r\n    this.clicked = false;\r\n   }\r\n\r\n  view(event) {\r\n\r\n\r\n    event.preventDefault();\r\n    this.formSubmitted = true;\r\n\r\n    let userData = JSON.parse(localStorage.getItem('user'));\r\n    let bankName = userData.branch.syspara.BANK_NAME;\r\n    let branchName = userData.branch.NAME;\r\n\r\n\r\n    if (this.ngForm.valid) {\r\n\r\n      this.showRepo = true;\r\n      let obj = this.ngForm.value\r\n      let Date1 = moment(obj.end_date).format('DD/MM/YYYY');\r\n\r\n\r\n      // let radio = obj.SUBMISSION\r\n      let branch = obj.BRANCH;\r\n      let Schemecode = obj.Scheme_code;\r\n      let startingaccount= this.getaccont;\r\n\r\n      this.iframe5url = this.report_url + \"examples/allsecuritysummary.php/?&branchname='\" + branchName + \"'&Bankname='\" + bankName + \"'&AC_RECOVERY_CLERK='\" + bankName + \"'&branch='\" + this.ngbranch + \"'&edate='\" + Date1+\"'&startingaccount='\"+ startingaccount+\"'&endingaccount='\"+startingaccount;\r\n      // this.iframe5url = this.report_url + \"examples/CLERKWISE.php/?&branchname='kotoli'&sdate='01/04/2022'&AC_TYPE='50100'&AC_RECOVERY_CLERK='2'\";\r\n\r\n      console.log(this.iframe5url);\r\n      this.iframe5url = this.sanitizer.bypassSecurityTrustResourceUrl(this.iframe5url);\r\n    }\r\n    else {\r\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(() => { this.clicked = false });\r\n    }\r\n  }\r\n\r\n  onLoad(){\r\n    this.showLoading = false;\r\n\r\n  }\r\n  resetForm() {\r\n  this.ngForm.controls.Scheme_code.reset();\r\n  this.ngForm.controls.AC_TYPE.reset();\r\n  this.ngForm.controls.AC_TYPE1.reset();\r\n  this.ngForm.controls.Schemewise.reset();\r\n  this.ngForm.controls.Schemewise1.reset();\r\n  this.ngForm.controls['end_date'].reset();\r\n\r\n    this.showRepo = false;\r\n    this.clicked=false;\r\n  }\r\n\r\n\r\n}\r\n","\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>All Security Summary Report</h5>\r\n            </div>\r\n            <div class=\"card\">\r\n                <form [formGroup]=\"ngForm\">\r\n                    <div class=\"card-block\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\r\n                                        class=\"required\">*</sub></label></div>\r\n                            <div class=\"col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngbranch\"\r\n                                            formControlName=\"BRANCH_CODE\" bindLabel=\"label\" placeholder=\"\"\r\n                                            (change)=\"getdata()\">\r\n                                            <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                                {{values.label}}</ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['BRANCH_CODE'].invalid && (ngForm.controls['BRANCH_CODE'].dirty || ngForm.controls['BRANCH_CODE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Type<sub class=\"required\">*\r\n                            </sub></label></div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"AC_TYPE2\" [(ngModel)]=\"ngscheme\" formControlName=\"AC_TYPE2\"\r\n                                            title=\"Compulsory Selection\" (change)=\"getIntro($event)\"\r\n                                            placeholder=\"Scheme Type\" required>\r\n                                            <ng-option *ngFor=\"let values of schemeType\" [value]=\"values\">\r\n                                                {{values.S_NAME}}</ng-option>\r\n                                                <!-- <ng-option>Ln</ng-option> -->\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['AC_TYPE2'].invalid && (ngForm.controls['AC_TYPE2'].dirty || ngForm.controls['AC_TYPE2'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['AC_TYPE2'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\" Date\">Scheme Code<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Scheme_code\" bindValue=\"value\" bindLabel=\"label\"\r\n                                            [(ngModel)]=\"ngscheme\" (change)=\"schemechange($event)\">\r\n                                            <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                                {{values.id}}  {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Scheme_code'].invalid && (ngForm.controls['Scheme_code'].dirty || ngForm.controls['Scheme_code'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['Scheme_code'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <!-- <div class=\"col-sm-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Scheme_code\" bindValue=\"value\" bindLabel=\"label\"\r\n                                        [(ngModel)]=\"ngscheme\" (change)=\"schemechange($event)\">\r\n                                            <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                                {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n\r\n                            </div> -->\r\n\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\" Date\">Starting Account<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"AC_TYPE\" [(ngModel)]=\"accountedit\" formControlName=\"AC_TYPE\"\r\n                                            (change)=\"getIntTrans($event)\">\r\n                                            <ng-option *ngFor=\"let values of schemeACNo\" [value]=\"values\">\r\n                                                {{values.label}} {{values.name}} </ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\" Date\">Ending Account<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"AC_TYPE1\" [(ngModel)]=\"accountedit1\" formControlName=\"AC_TYPE1\"\r\n                                            (change)=\"getIntTrans1($event)\">\r\n                                            <ng-option *ngFor=\"let values of schemeACNo1\" [value]=\"values\">\r\n                                                {{values.label}} {{values.name}} </ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-1\">\r\n                                <label>Date<sub class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"end_date\" id=\"end_date\"\r\n                                            class=\"form-control\" appDateValidation [bsValue]=\"bsValue\"\r\n                                            formControlName=\"end_date\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                            [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                            bsDatepicker>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"ngForm.controls['end_date'].invalid &&\r\n                                (ngForm.controls['end_date'].dirty ||ngForm.controls['end_date'].touched) \"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['end_date'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                      <div class=\"row\">\r\n                            <div class=\"col-md-9\"></div>\r\n                            <div class=\"col-md-2\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\r\n                                    (click)=\"view($event);\">View</button>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-1\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" (click)=\"close()\">Close</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        <h5>Report Frame</h5>\r\n                                    </div>\r\n                                    <div *ngIf=\"showRepo\">\r\n                                        <app-iframe5 [url]='iframe5url' (load)=\"onLoad()\"></app-iframe5>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport * as moment from 'moment';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-gold-silver-stock',\r\n  templateUrl: './gold-silver-stock.component.html',\r\n  styleUrls: ['./gold-silver-stock.component.scss']\r\n})\r\nexport class GoldSilverStockComponent implements OnInit {\r\n\r\n  ngForm: FormGroup\r\n  // for dropdown ng module\r\n  formSubmitted = false;\r\n  iframe5url: any = '';\r\n  \r\n  \r\n  Schemewise\r\n  ngbranch: any = null;\r\n  scode: any = null;\r\n  //ngfor\r\n  scheme: any[];\r\n  branchOption: any[];\r\n  clicked: boolean = false;\r\n  showRepo: boolean = false;\r\n  showLoading: boolean = false;\r\n  transferSchemeDetails: any;\r\n  tScheme\r\n  branchName: any;\r\n  schemeType:any=[];\r\n  getschemename: any;\r\n  ngscheme: any = null\r\n  //date\r\n  bsValue = new Date();\r\n  start_date: string;\r\n  end_date: String;\r\n  maxDate: Date;\r\n  minDate: Date;\r\n  report_url = environment.report_url;\r\n  \r\n  \r\n  constructor(private fb: FormBuilder,\r\n   private _ownbranchmasterservice: OwnbranchMasterService,\r\n   private sanitizer: DomSanitizer,\r\n   public schemeCodeDropdownService: SchemeCodeDropdownService,\r\n   private http: HttpClient,\r\n  \r\n  \r\n  ) {\r\n   this.start_date = moment().format('DD/MM/YYYY');\r\n   this.end_date = moment().format('DD/MM/YYYY');\r\n   this.maxDate = new Date();\r\n   this.minDate = new Date();\r\n   this.minDate.setDate(this.minDate.getDate() - 1);\r\n   this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n   this.createForm()\r\n   //branchlist\r\n   this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\r\n     this.branchOption = data;\r\n   })\r\n  \r\n   this.http.get('http://192.168.1.108:7266/ledger-view/schems').subscribe((data: any) => {\r\n     this.schemeType = data\r\n     console.log(this.schemeType)\r\n   })\r\n   // Scheme Code\r\n   this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n  \r\n     var filtered = data.filter(function (scheme) {\r\n       return (scheme.name == 'LN' || scheme.name == 'CC');\r\n     });\r\n     this.scheme = filtered;\r\n  \r\n     // this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\r\n     //   this.dates = data.CURRENT_DATE;\r\n     });\r\n  \r\n  \r\n  }\r\n  createForm() {\r\n   this.ngForm = this.fb.group({\r\n     BRANCH_CODE: ['', [Validators.required]],\r\n    //  AC_TYPE1: ['', [Validators.required]],\r\n     Scheme_code: [\"\", [Validators.required]],\r\n     start_date: [\"\", [Validators.required]],\r\n     end_date: [\"\", [Validators.required]],\r\n    //  Schemewise:['SUBMISSION']\r\n  \r\n      });\r\n     }\r\n     getBranch(event) {\r\n       this.ngbranch = event.value\r\n       this.branchName = event.branchName\r\n     }\r\n    getIntro (event) {\r\n       this.getschemename = event.name\r\n       this.getIntroducer()\r\n     }\r\n     getIntroducer() {\r\n       throw new Error('Method not implemented.');\r\n     }\r\n  \r\n     onLoad() {\r\n       this.showLoading = false;\r\n   \r\n     }\r\n    \r\n  \r\n     view(event) {\r\n       debugger\r\n   \r\n   \r\n       event.preventDefault();\r\n       this.formSubmitted = true;\r\n   \r\n       let userData = JSON.parse(localStorage.getItem('user'));\r\n       let bankName = userData.branch.syspara.BANK_NAME;\r\n       let branchName = userData.branch.NAME;\r\n   \r\n   \r\n       if (this.ngForm.valid) {\r\n   \r\n         this.showRepo = true;\r\n         let obj = this.ngForm.value\r\n         let Date = moment(obj.start_date).format('DD/MM/YYYY');\r\n         let Date1 = moment(obj.end_date).format('DD/MM/YYYY');\r\n  \r\n         let scheme = obj.Scheme_code\r\n   \r\n         let branch = obj.BRANCH_CODE;\r\n   \r\n         let schemeName = this.tScheme\r\n   \r\n         //  let startingcode= obj.Starting_Account;\r\n         // let endingcode =obj.Ending_Account;\r\n   \r\n         this.iframe5url = this.report_url + \"examples/Gold_silver_stock_report.php/?&branchname='\"+ branchName +\"'&sdate='\"+ Date +\"'&bankName='\"+ bankName +\"'&bankName='\"+ bankName +\"'&branch='\"+ this.ngbranch +\"'\"+\"'&edate='\"+Date1+\"'&Scheme='\"+schemeName;\r\n         // this.iframe5url = this.report_url + \"examples/CLERKWISE.php/?&branchname='kotoli'&sdate='01/04/2022'&AC_TYPE='50100'&AC_RECOVERY_CLERK='2'\";\r\n   \r\n         console.log(this.iframe5url);\r\n         this.iframe5url = this.sanitizer.bypassSecurityTrustResourceUrl(this.iframe5url);\r\n       }\r\n       else {\r\n         Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(() => { this.clicked = false });\r\n       }\r\n     }\r\n     reset() {\r\n       this.ngForm.controls['start_date'].reset()\r\n       this.ngForm.controls['end_date'].reset()\r\n       // this.ngForm.controls['AC_TYPE1'].reset()\r\n       this.ngForm.controls['Scheme_code'].reset()\r\n  \r\n   \r\n      }\r\n   \r\n      // close(){\r\n      //  this. reset();\r\n      //  this.showRepo = false;\r\n      //  this.clicked = false;\r\n      // }\r\n      close(){\r\n        this. reset();\r\n        this.showRepo = false;\r\n        this.clicked = false;\r\n       }\r\n  \r\n  \r\n  }\r\n  \r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Gold Silver Stock Report</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <div class=\"card\">\r\n                <form [formGroup]=\"ngForm\">\r\n                    <div class=\"card-block\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-1\"> <label for=\"Branch\">Branch <sub\r\n                                        class=\"required\">*</sub></label></div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngbranch\"\r\n                                            (change)=\"getBranch($event)\" formControlName=\"BRANCH_CODE\" bindLabel=\"label\"\r\n                                            placeholder=\"Branch\">\r\n                                            <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                                {{values.label}}</ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['BRANCH_CODE'].invalid && (ngForm.controls['BRANCH_CODE'].dirty || ngForm.controls['BRANCH_CODE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme Type<sub class=\"required\">*\r\n                                    </sub></label></div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"AC_TYPE1\" [(ngModel)]=\"ngscheme\" formControlName=\"AC_TYPE1\"\r\n                                            title=\"Compulsory Selection\" (change)=\"getIntro($event)\"\r\n                                            placeholder=\"Scheme Type\" required> -->\r\n                                            <!-- <ng-option *ngFor=\"let values of schemeType\" [value]=\"values\">\r\n                                                 {{values.S_NAME}}</ng-option> -->\r\n                                                <!-- <ng-option>Ln</ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>  -->\r\n                                <!-- <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['AC_TYPE1'].invalid && (ngForm.controls['AC_TYPE1'].dirty || ngForm.controls['AC_TYPE1'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['AC_TYPE1'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div> -->\r\n                            <!-- </div> -->\r\n                            <div class=\"col-sm-12 col-md-1\"> <label for=\" Date\">Scheme Code<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Scheme_code\" bindValue=\"value\" bindLabel=\"label\"\r\n                                            [(ngModel)]=\"scode\">\r\n                                            <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                                {{values.name}} {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span> \r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Scheme_code'].invalid && (ngForm.controls['Scheme_code'].dirty || ngForm.controls['Scheme_code'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['Scheme_code'].errors?.required\"> \r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <label>Starting Date<sub class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"start_date\" id=\"start_date\"\r\n                                            class=\"form-control\" appDateValidation [bsValue]=\"bsValue\"\r\n                                            formControlName=\"start_date\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                            [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                            bsDatepicker>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"ngForm.controls['start_date'].invalid &&\r\n                                    (ngForm.controls['start_date'].dirty ||ngForm.controls['start_date'].touched) \"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['start_date'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <label>Ending Date<sub class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"end_date\" id=\"end_date\"\r\n                                            class=\"form-control\" appDateValidation [bsValue]=\"bsValue\"\r\n                                            formControlName=\"end_date\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                            [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                            bsDatepicker>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\" *ngIf=\"ngForm.controls['end_date'].invalid &&\r\n                                (ngForm.controls['end_date'].dirty ||ngForm.controls['end_date'].touched) \"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['end_date'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- <div class=\"col-md-4\">\r\n                            <div class=\"checkbox checkbox-primary\">\r\n                                <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                    <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\"\r\n                                        [checked]=\"Schemewise == true\" formControlName=\"Schemewise\">\r\n                                    <label class=\"border-checkbox-label\" for=\"checkbox1\">Closed Account Print Recvied?\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                        <!-- <div class=\"row\" *ngIf=\"ngForm.controls['SUBMISSION'].value === 'RETURN'\">\r\n                            <div class=\"col-sm\">\r\n                                <div class=\"checkbox checkbox-primary\">\r\n                                    <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                        <input class=\"border-checkbox\" type=\"checkbox\" id=\"checkbox1\"\r\n                                            [checked]=\"Schemewise == true\" formControlName=\"Schemewise\">\r\n                                        <label class=\"border-checkbox-label\" for=\"checkbox1\">Closed Account Print Recvied?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-9\"></div>\r\n                            <div class=\"col-md-2\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\r\n                                    (click)=\"view($event); clicked = true \">View</button>\r\n                            </div>\r\n                            <div class=\"col-md-1\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\"(click)=\" close()\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        <h5>Report Frame</h5>\r\n                                    </div>\r\n                                    <div *ngIf=\"showRepo\">\r\n                                    <app-iframe5 [url]='iframe5url' (load)=\"onLoad()\"></app-iframe5>\r\n    \r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SecurityReportsComponent } from './security-reports.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SecurityReportsComponent,\r\n    data: {\r\n      title: 'Security Reports',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SecurityReportsRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-security-reports',\r\n  templateUrl: './security-reports.component.html',\r\n  styleUrls: ['./security-reports.component.scss']\r\n})\r\nexport class SecurityReportsComponent implements OnInit {\r\n  narationmasterTrue: boolean = true;\r\n  goldSilverStock:boolean = false;\r\n  constructor() { \r\n    console.log('hii')\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  OpenLink(val) {\r\n    // \r\n    if (val == 1) {\r\n      this.narationmasterTrue = true;\r\n      this.goldSilverStock = false;\r\n    }\r\n    else if (val == 2) {\r\n      this.goldSilverStock = true;\r\n      this.narationmasterTrue = false;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n}\r\n","\r\n<div class=\"row\">\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Other security reports</h5>\r\n            </div>\r\n            <div class=\"card-block scroll\">\r\n                <div class=\"col-md-12\">\r\n                    <ul class=\"basic-list\">\r\n                        <li>\r\n                            <h6> <a (click)=\"OpenLink(1)\" routerLink=\"/reports/loan-report/security-reports\"\r\n                                    routerLinkActive=\"active\" [ngClass]=\"{'isActive': narationmasterTrue}\"\r\n                                    class=\"text-right f-w-600\" id=\"pointer\">1.all-security-sumarry-report works</a></h6>\r\n                        </li>   \r\n                        <li>\r\n                            <h6> <a (click)=\"OpenLink(2)\" routerLink=\"/reports/loan-report/security-reports\"\r\n                                    routerLinkActive=\"active\" [ngClass]=\"{'isActive': goldSilverStock}\"\r\n                                    class=\"text-right f-w-600\" id=\"pointer\">2.Gold Silver Stock</a></h6>\r\n                        </li>        \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-9\">\r\n        <div class=\"card-block\">\r\n            <div *ngIf=\"narationmasterTrue\">\r\n                <app-all-security-sumarry-report></app-all-security-sumarry-report>\r\n            </div>\r\n            <div *ngIf=\"goldSilverStock\">\r\n                <app-gold-silver-stock></app-gold-silver-stock>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SecurityReportsRoutingModule } from './security-reports-routing.module';\r\nimport { SecurityReportsComponent } from './security-reports.component';\r\nimport { AllSecuritySumarryReportComponent } from './all-security-sumarry-report/all-security-sumarry-report.component';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { Iframe5Module } from '../../pigmy-report/iframe5/iframe5.module';\r\nimport{GoldSilverStockComponent} from './gold-silver-stock/gold-silver-stock.component';\r\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [SecurityReportsComponent, AllSecuritySumarryReportComponent,GoldSilverStockComponent],\r\n  providers: [OwnbranchMasterService,\r\n    SchemeCodeDropdownService,\r\n    SchemeAccountNoService,SystemMasterParametersService\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SecurityReportsRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    PerfectScrollbarModule,\r\n    HttpClientModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    Iframe5Module\r\n  ]\r\n})\r\nexport class SecurityReportsModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:Iframe5Component,\r\n    data: {\r\n      title: 'Iframe5',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class Iframe5RoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { Iframe5RoutingModule } from './iframe5-routing.module';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [Iframe5Component],\r\n  imports: [\r\n    CommonModule,\r\n    Iframe5RoutingModule\r\n  ],\r\n  exports:[Iframe5Component]\r\n})\r\nexport class Iframe5Module { }\r\n","import { Component, OnInit,Input } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-iframe5',\r\n  templateUrl: './iframe5.component.html',\r\n  styleUrls: ['./iframe5.component.scss']\r\n})\r\nexport class Iframe5Component implements OnInit {\r\n  @Input() url: any;\r\n  \r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer) {\r\n    this.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.url);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <form  novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"embed-responsive embed-responsive-16by9\">\r\n                        <div class=\"loader\">\r\n                            <img src=\"assets/Loading.gif\">\r\n                        </div>\r\n                        <iframe [src]=\"url\"></iframe>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class SystemMasterParametersService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  // url = \"http://localhost:4000/system-master-parameters\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        let errorMessage = 'Please add valid length';\r\n        Swal.fire('Kindly Add Valid Length !');\r\n        return throwError(errorMessage);\r\n      })\r\n    )\r\n  }\r\n\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/system-master-parameters/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getData(): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}