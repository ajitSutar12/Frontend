{"version":3,"sources":["./src/app/shared/dropdownService/city-master-dropdown.service.ts","./src/app/theme/reports/npa-reports/citiwise-npa-reg/citiwise-npa-reg-routing.module.ts","./src/app/theme/reports/npa-reports/citiwise-npa-reg/citiwise-npa-reg.component.ts","./src/app/theme/reports/npa-reports/citiwise-npa-reg/citiwise-npa-reg.component.html","./src/app/theme/reports/npa-reports/citiwise-npa-reg/citiwise-npa-reg.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5-routing.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIqB;AACf;;;AAG1C,MAAM,iBAAiB;IAO1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QANpC,qBAAgB,GAAG,IAAI,KAAK,EAAE,CAAC;QAG/B,OAAO;QACP,mBAAmB;QACnB,QAAG,GAAG,qEAAW,CAAC,QAAQ,CAAC;IACa,CAAC;IAEzC,yBAAyB;IACzB,kCAAkC;IAClC,2DAA2D;IAC3D,6BAA6B;IAC7B,uCAAuC;IACvC,4EAA4E;IAC5E,kDAAkD;IAClD,kBAAkB;IAClB,4CAA4C;IAC5C,eAAe;IACf,IAAI;IAEJ,WAAW;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,cAAc,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IAEM,YAAY;QACf,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAG,cAAc,CAAC;aAC/C,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClB,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAG,IAAI,EAAE,OAAO,CAAC,IAAI;iBAC3E,CAAC;gBACF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC;YACnC,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;kFApCQ,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB;6FAAjB,iBAAiB;cAD7B,wDAAU;;;;;;;;;;;;;;ACPX;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACgB;;;AAEvE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAG,mFAAuB;QACnC,IAAI,EAAE;YACJ,KAAK,EAAE,6BAA6B;YACpC,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,0DAA0D;YACnE,MAAM,EAAE,IAAI;SACb;KACF;CACF,CAAC;AAMK,MAAM,2BAA2B;;0GAA3B,2BAA2B;gLAA3B,2BAA2B,kBAH7B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,2BAA2B,uFAF5B,4DAAY;6FAEX,2BAA2B;cAJvC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACO;AAEpE,yBAAyB;AACM;AAKE;AAC0B;AAKpB;AAI0C;;;;;;;;;;;;;ICIrC,gFACI;IAAA,uDAAgB;IAAA,4DAAY;;;IADgB,4EAAgB;IAC5D,0DAAgB;IAAhB,0FAAgB;;;IAY5B,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IALV,0EAGI;IAAA,2HACI;IAER,4DAAM;;;IAHG,0DAAuD;IAAvD,qLAAuD;;;IAcpD,gFACI;IAAA,uDAA+B;IAAA,4DAAY;;;IADN,6EAAgB;IACrD,0DAA+B;IAA/B,gHAA+B;;;IAQ3C,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IALV,0EAGI;IAAA,2HACI;IAER,4DAAM;;;IAHG,0DAAuD;IAAvD,qLAAuD;;;IAoC5D,gFACI;IAAA,uDAAuB;IAAA,4DAAY;;;IADK,6EAAgB;IACxD,0DAAuB;IAAvB,kGAAuB;;;IAmD3B,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IALV,0EAGI;IAAA,2HACI;IAER,4DAAM;;;IAHG,0DAAiD;IAAjD,yKAAiD;;;IAqBtD,sEAEI;IAAA,oFACJ;IAAA,4DAAM;;;IANV,0EAGI;IAAA,2HAEI;IAER,4DAAM;;;IAHE,0DAAoF;IAApF,sNAAoF;;;;IAuCxF,sEACI;IAAA,kFAAgE;IAAhC,+TAAiB;IAAC,4DAAc;IAEpE,4DAAM;;;IAFW,0DAAkB;IAAlB,kFAAkB;;ADpLhE,MAAM,uBAAuB;IAyClC,YACU,EAAe,EACf,uBAA+C,EAC/C,eAA8C,EAC/C,yBAAoD,EACnD,SAAuB,EACvB,UAA6B,EAC7B,IAAgB;QANhB,OAAE,GAAF,EAAE,CAAa;QACf,4BAAuB,GAAvB,uBAAuB,CAAwB;QAC/C,oBAAe,GAAf,eAAe,CAA+B;QAC/C,8BAAyB,GAAzB,yBAAyB,CAA2B;QACnD,cAAS,GAAT,SAAS,CAAc;QACvB,eAAU,GAAV,UAAU,CAAmB;QAC7B,SAAI,GAAJ,IAAI,CAAY;QA/C1B,eAAU,GAAQ,EAAE,CAAC;QAErB,kBAAa,GAAG,KAAK,CAAC;QACtB,WAAM,GAAQ,IAAI;QAIlB,eAAU,GAAQ,IAAI,KAAK,EAAE,CAAC;QAM9B,yBAAyB;QACzB,aAAQ,GAAQ,IAAI;QACpB,aAAQ,GAAQ,IAAI,CAAC;QACrB,UAAK,GAAQ,IAAI,CAAC;QAIlB,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAY,KAAK,CAAC;QAC1B,gBAAW,GAAY,KAAK,CAAC;QAI7B,MAAM;QACN,WAAM,GAAQ,IAAI;QAClB,YAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAIrB,eAAU,GAAG,wEAAW,CAAC,UAAU,CAAC;QACpC,aAAQ,GAAG,wEAAW,CAAC,QAAQ,CAAC;QAiB9B,IAAI,CAAC,MAAM,GAAG,mCAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC9C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE;QACjB,YAAY;QACZ,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;YAExC,IAAI,KAAK,GAAQ,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC9C,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,MAAM,CAAC,QAAQ,IAAI,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAE,CAAC,EAAE;gBAC7D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC;aAC7D;QAAI,CAAC,CAAC;QAET,cAAc;QACd,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAE/E,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,MAAM;gBACzC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;YAC7E,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YAEvB,wEAAwE;YACxE,qCAAqC;YACrC,MAAM;QAER,CAAC,CAAC;QACF,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAEhF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAEnB,wEAAwE;YACxE,qCAAqC;YACrC,MAAM;QAER,CAAC,CAAC;QAEF,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC7D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnD,IAAI,IAAI,GAAG,mCAAM,CAAC,IAAI,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,IAAI,EAAE;YACzD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY;YAE/B,IAAI,CAAC,QAAQ,GAAG,mCAAM,CAAC,SAAS,IAAI,GAAG,CAAC,EAAE,EAAE,YAAY,CAAC;YACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE;QAClC,CAAC,CAAC;QAEF,IAAI,IAAI,GAAQ,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE;YACrC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE;YAC5C,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI;SAErC;aACI;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE;YAC7C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI;SAErC;IACH,CAAC;IAGD,sBAAsB,CAAC,KAAK;QAC1B,IAAI,CAAC,qBAAqB,GAAG,KAAK;QAClC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI;QAGzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK;QAE1B,IAAI,KAAK,GAAQ,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC;QACpC,IAAI,IAAI,GAAG;YACT,kDAAkD;YAClD,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,WAAW,EAAE,IAAI,CAAC,QAAQ;SAE3B;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjB,mHAAmH;QACnH,qGAAqG;QACrG,yGAAyG;QACvG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAE,iCAAiC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAW,EAAE,EAAE;YAC1F,IAAI,CAAC,SAAS,GAAG,IAAI;YAErB,8BAA8B;QAChC,CAAC,CAAC;QAIF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAG5B,CAAC;IAED,OAAO,CAAC,KAAK;QACX,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,WAAW;IACrC,CAAC;IAMD,gBAAgB,CAAC,KAAK;QAEpB,IAAI,GAAG,GAAG;YACR,aAAa,EAAE,IAAI,CAAC,UAAU;SAC/B;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAE,uCAAuC,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC7F,IAAI,CAAC,SAAS,GAAG,IAAI;YACrB,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc;gBACvC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc;gBACtC,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc;gBACvC,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc;gBAEzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,oBAAoB;YACpB,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,yCAAyC;YACzC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,CAAC;SACd,CAAC,CAAC;IAEL,CAAC;IAGD,sCAAsC;IACtC,qCAAqC;IACrC,+BAA+B;IAC/B,yBAAyB;IACzB,MAAM;IACN,WAAW;IACX,0BAA0B;IAC1B,MAAM;IACN,wCAAwC;IACxC,gEAAgE;IAChE,gDAAgD;IAChD,uCAAuC;IACvC,oDAAoD;IACpD,YAAY;IACZ,WAAW;IACX,QAAQ;IACR,aAAa;IACb,uBAAuB;IACvB,uBAAuB;IACvB,kBAAkB;IAClB,sCAAsC;IACtC,UAAU;IACV,sCAAsC;IACtC,QAAQ;IACR,MAAM;IACN,WAAW;IACX,qBAAqB;IACrB,qBAAqB;IACrB,gBAAgB;IAChB,oCAAoC;IACpC,QAAQ;IACR,oCAAoC;IACpC,MAAM;IACN,IAAI;IACJ,wBAAwB;IACxB,gBAAgB;IAChB,6BAA6B;IAC7B,yEAAyE;IACzE,IAAI;IAEJ,0BAA0B;IAC1B,kBAAkB;IAClB,+BAA+B;IAC/B,0EAA0E;IAC1E,IAAI;IACJ,WAAW;QACT,MAAM,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,IAAI,CAAC,KAAK;QAGR,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACxD,IAAI,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;QACjD,IAAI,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;QAGtC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YAErB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAErB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK;YAC3B,IAAI,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC;YAE7B,IAAI,IAAI,GAAG,mCAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACjD,IAAI,KAAK,GAAG,mCAAM,CAAC,IAAI,EAAE,YAAY,CAAC;YACtC,gBAAgB;YAChB,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE;gBACzD,GAAG,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY;aACzD;iBACI;gBACH,IAAI,IAAI,GAAG,mCAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBACtD,IAAI,MAAM,GAAG,mCAAM,CAAC,IAAI,EAAE,YAAY,CAAC;gBACvC,GAAG,CAAC,YAAY,CAAC,GAAG,IAAI;aACzB;YACD,cAAc;YACd,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE;gBACvD,GAAG,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY;aACvD;iBACI;gBACH,IAAI,IAAI,GAAG,mCAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBACpD,IAAI,KAAK,GAAG,mCAAM,CAAC,IAAI,EAAE,YAAY,CAAC;gBACtC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI;aACvB;YAED,IAAI,MAAM,GAAG,GAAG,CAAC,WAAW;YAE5B,IAAI,MAAM,GAAG,GAAG,CAAC,WAAW,CAAC;YAC7B,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC;YACvB,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC;YACrB,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;YAC9B,IAAI,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC;YACvC,IAAI,IAAI,GAAC,GAAG,CAAC,OAAO,CAAC;YACrB,IAAG,IAAI,IAAI,IAAI,EAAC;gBACd,IAAI,GAAG,CAAC;aACT;iBACD;gBACE,IAAI,GAAC,CAAC;aACP;YACD,IAAG,MAAM,IAAI,CAAC,EAAC;gBACZ,IAAI,CAAC,UAAU,GAAC,aAAa,CAAC;aAChC;YACE,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,UAAU,GAAE,uCAAuC,GAAE,QAAQ,GAAE,YAAY,GAAE,IAAI,CAAC,UAAU,GAAC,aAAa,GAAE,MAAM,GAAC,cAAc,GAAC,OAAO,GAAC,iBAAiB,GAAC,IAAI,CAAC,WAAW,GAAC,gBAAgB,GAAC,IAAI,CAAC,UAAU,GAAC,iBAAiB,GAAC,IAAI,CAAC,WAAW,GAAC,mBAAmB,GAAC,IAAI,CAAC,aAAa,GAAC,cAAc,GAAC,UAAU,GAAC,iBAAiB,GAAC,IAAI,CAAC,QAAQ,GAAC,UAAU,GAAC,MAAM,GAAC,SAAS,GAAC,IAAI,GAAC,OAAO,GAAC,IAAI,GAAC,GAAG,CAAC;YAC5Z,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAIjF;aACI;YACH,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,kCAAkC,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,EAAC,CAAC,CAAC,CAAC;SAC3G;IACH,CAAC;IACD,KAAK;QACH,IAAI,CAAC,SAAS,EAAE;IAElB,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAE3B,CAAC;IACD,SAAS;QACP,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAEzC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IACD,OAAO,CAAC,GAAsB;QAC5B,GAAG,CAAC,IAAI,EAAE;IACZ,CAAC;IAED,SAAS,CAAC,KAAK;QACb,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK;QAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU;IACpC,CAAC;;8FA9UU,uBAAuB;uGAAvB,uBAAuB;kEAEvB,yFAAoB;;;;;QC/BhC,yEACG;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,gFAAqB;QAAA,4DAAK;QAC9B,wEACI;QAAA,gFAAoB;QAAA,yEAAuB;QAAA,8DAAE;QAAA,4DAAM;QAAA,4EACvD;QAAA,4DAAK;QACT,4DAAM;QACN,0EAEI;QAAA,2EACI;QAAA,0EACI;QAAA,0EACI;QAAA,0EAAiC;QAAA,4EAAoB;QAAA,mEAAO;QAAA,0EAC/B;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAC5C,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFAGI;QAH6D,kMAAsB,mGACzE,qBAAiB,IADwD;QAGnF,kIACI;QACR,4DAAY;QAKhB,4DAAO;QACX,4DAAM;QAEN,sHAGI;QAIR,4DAAM;QAEN,0EAAiC;QAAA,6EAAmB;QAAA,uEAAW;QAAA,0EAClC;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAC5C,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFAEI;QADA,+LAAmB,mGAAW,kCAA8B,IAAzC;QACnB,kIACI;QACR,4DAAY;QAEhB,4DAAO;QACX,4DAAM;QACN,sHAGI;QAIR,4DAAM;QAuBN,2EAAiC;QAAA,6EAAmB;QAAA,oEAAQ;QAAA,0EACvC;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAC5C,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFAGI;QAHkC,8LAAkB,mGAC1C,mBAAe,IAD2B;QAGpD,kIACI;QACR,4DAAY;QAEhB,4DAAO;QACX,4DAAM;QAEV,4DAAM;QAwBF,4DAAM;QACH,0EAGC;QAAA,0EAAiC;QAAA,6EAAmB;QAAA,sEAAU;QAAA,0EACjC;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAC5C,4DAAM;QACL,2EACG;QAAA,2EACI;QAAA,4EACK;QAAA,iFAIW;QAHoB,+LAAmB;QAGnD,4DAAY;QAEhB,4DAAO;QACX,4DAAM;QACN,sHAGI;QAIR,4DAAM;QACN,2EAAuB;QAAA,6EAAwB;QAAA,oEAAQ;QAAA,0EAAsB;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAQ;QAC5F,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFAIY;QAHR,iMAAqB;QAGzB,4DAAY;QAEhB,4DAAO;QACX,4DAAM;QACN,sHAGI;QAKR,4DAAM;QAEV,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,6EAEA;QAF4D,uJAAU,4BAAwB,IAAC;QAA/F,4DAEA;QAAA,6EAAmD;QAAA,mFAC/C;QAAA,4DAAQ;QAChB,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QAGN,0EACI;QAAA,sEAA4B;QAC5B,2EACI;QAAA,8EACyC;QAArC,+IAAS,gBAAY,SAAC,iBAAa,IAAC;QAAC,gEAAI;QAAA,4DAAS;QAE1D,4DAAM;QACN,2EACI;QAAA,8EAAiE;QAAlB,gJAAS,WAAO,IAAC;QAAC,iEAAK;QAAA,4DAAS;QACnF,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACzB,4DAAM;QACN,sHACI;QAGR,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAlNgB,2DAAoB;QAApB,iFAAoB;QAS+D,2DAAsB;QAAtB,iFAAsB;QAGxE,0DAAoC;QAApC,qFAAoC;QAWvD,0DAAkI;QAAlI,wMAAkI;QAe1H,0DAAmB;QAAnB,8EAAmB;QACR,0DAA6B;QAA7B,+EAA6B;QAOhD,0DAAkI;QAAlI,wMAAkI;QAmChG,0DAAkB;QAAlB,6EAAkB;QAGzC,0DAAgC;QAAhC,kFAAgC;QA0CrC,2DAAc;QAAd,2EAAc;QAQpB,0DAAsH;QAAtH,4LAAsH;QAa9G,0DAAqB;QAArB,gFAAqB;QAQ7B,0DAAgH;QAAhH,sLAAgH;QA4BtD,2DAAoB;QAApB,iFAAoB;QAczE,2DAAgB;QAAhB,8EAAgB;;6FDnL5C,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;kBAGE,uDAAS;mBAAC,yFAAoB;;;;;;;;;;;;;;AE/BjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AACnF,kDAAkD;AACH;AAEiC;AACT;AACG;AACM;AAC1B;AACC;AACW;AACN;AAC+C;AACH;AAE0C;AACzF;AACW;AAC4B;AACmC;AAC9C;AACgB;AACL;;;AAiCzF,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,mBAZpB,CAAC,yHAAsB;QAChC,sHAAyB;QACzB,8GAAsB,EAAC,iJAAwB,EAAC,gKAA6B,EAAE,sHAAyB,EAAE,yHAAsB,EAAC,mGAAgB,EAAC,mHAAwB;QAC1K,gKAA6B,EAAC,8GAAiB;QAC/C;YACE,OAAO,EAAE,uEAAiB;YAC1B,QAAQ,EAAE,kFAAmB;YAC7B,KAAK,EAAE,IAAI;SACZ;KACF,YAzBQ;YACP,4DAAY;YACZ,4FAA2B;YAC3B,yEAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,oEAAS;YAET,mEAAc;YACd,2EAAkB,CAAC,OAAO,EAAE;YAC5B,yEAAgB,CAAC,OAAO,EAAE;YAE1B,kFAAa;SACd;mIAeU,oBAAoB,mBA7BhB,mFAAuB,aAEpC,4DAAY;QACZ,4FAA2B;QAC3B,yEAAY;QACZ,0DAAW;QACX,kEAAmB;QACnB,oEAAS;QAET,mEAAc,0JAId,kFAAa;6FAgBJ,oBAAoB;cA9BhC,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,mFAAuB,CAAC;gBACvC,OAAO,EAAE;oBACP,4DAAY;oBACZ,4FAA2B;oBAC3B,yEAAY;oBACZ,0DAAW;oBACX,kEAAmB;oBACnB,oEAAS;oBAET,mEAAc;oBACd,2EAAkB,CAAC,OAAO,EAAE;oBAC5B,yEAAgB,CAAC,OAAO,EAAE;oBAE1B,kFAAa;iBACd;gBAED,OAAO,EAAC,EAAE;gBACV,SAAS,EAAE,CAAC,yHAAsB;oBAChC,sHAAyB;oBACzB,8GAAsB,EAAC,iJAAwB,EAAC,gKAA6B,EAAE,sHAAyB,EAAE,yHAAsB,EAAC,mGAAgB,EAAC,mHAAwB;oBAC1K,gKAA6B,EAAC,8GAAiB;oBAC/C;wBACE,OAAO,EAAE,uEAAiB;wBAC1B,QAAQ,EAAE,kFAAmB;wBAC7B,KAAK,EAAE,IAAI;qBACZ;iBACF;gBACD,OAAO,EAAC,CAAC,oEAAsB,EAAC,8DAAgB,CAAC;aAClD;;;;;;;;;;;;;;ACtDD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACQ;;;AAC/D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAC,2EAAgB;QAC1B,IAAI,EAAE;YACJ,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,0DAA0D;YACnE,MAAM,EAAE,IAAI;SACb;KACF;CACF,CAAC;AAMK,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBAHtB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,oBAAoB,uFAFrB,4DAAY;6FAEX,oBAAoB;cAJhC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEiB;AACD;;AAWxD,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,kBANf;YACP,4DAAY;YACZ,4EAAoB;SACrB;mIAGU,aAAa,mBAPT,2EAAgB,aAE7B,4DAAY;QACZ,4EAAoB,aAEb,2EAAgB;6FAEd,aAAa;cARzB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,2EAAgB,CAAC;gBAChC,OAAO,EAAE;oBACP,4DAAY;oBACZ,4EAAoB;iBACrB;gBACD,OAAO,EAAC,CAAC,2EAAgB,CAAC;aAC3B;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAwD;;;AAQjD,MAAM,gBAAgB;IAI3B,YACU,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;QAC/B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrE,CAAC;IAED,QAAQ;IACR,CAAC;;gFAVU,gBAAgB;gGAAhB,gBAAgB;QCR7B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEACJ;QAAA,4DAAM;QACN,uEAA6B;QACjC,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAN0B,0DAAW;QAAX,6IAAW;;6FDD9B,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;kBAEE,mDAAK","file":"citiwise-npa-reg-citiwise-npa-reg-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class cityMasterService {\r\n    cityMasterObject = new Array();\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    //// city-master\"; \r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // public getcityList() {\r\n    //     this.cityMasterObject = [];\r\n    //     return this.http.get<any>(this.url + '/city-master')\r\n    //         .pipe(map(ele => {\r\n    //             ele.forEach(element => {\r\n    //                 let obj = { label:element.CITY_NAME, value: element.id };\r\n    //                 this.cityMasterObject.push(obj)\r\n    //             });\r\n    //             return this.cityMasterObject;\r\n    //         }));\r\n    // }\r\n\r\n    getcityList(): Observable<any> {\r\n        return this.http.get(this.url + '/city-master').pipe(catchError(this.handleError));\r\n    }\r\n\r\n    public getcityList1() {\r\n        this.cityMasterObject = [];\r\n        return this.http.get<any>(this.url + '/city-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CITY_NAME, value: element.id , name: element.name\r\n                    };\r\n                    this.cityMasterObject.push(obj)\r\n                });\r\n                return this.cityMasterObject;\r\n            }));\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CitiwiseNpaRegComponent } from './citiwise-npa-reg.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  CitiwiseNpaRegComponent,\r\n    data: {\r\n      title: 'Transaction Amount Movement',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CitiwiseNpaRegRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { CommonModule } from '@angular/common';\r\n// Displaying Sweet Alert\r\nimport Swal from \"sweetalert2\";\r\n// Used to Call API\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Router } from \"@angular/router\";\r\nimport * as moment from 'moment';\r\nimport { environment } from \"src/environments/environment\";\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { OwnbranchMasterService } from \"src/app/shared/dropdownService/own-branch-master-dropdown.service\";\r\nimport { SchemeCodeDropdownService } from \"src/app/shared/dropdownService/scheme-code-dropdown.service\";\r\nimport { SchemeAccountNoService } from \"src/app/shared/dropdownService/schemeAccountNo.service\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { SchemeTypeDropdownService } from \"src/app/shared/dropdownService/scheme-type-dropdown.service\";\r\nimport { IOption } from \"ng-select\";\r\nimport { SystemMasterParametersService } from \"src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\r\nimport { ReportFrameComponent } from \"../../report-frame/report-frame.component\";\r\nimport { NgSelectComponent } from \"@ng-select/ng-select\";\r\nimport { newArray } from '@angular/compiler/src/util';\r\nimport { cityMasterService } from 'src/app/shared/dropdownService/city-master-dropdown.service';\r\n\r\n@Component({\r\n  selector: 'app-citiwise-npa-reg',\r\n  templateUrl: './citiwise-npa-reg.component.html',\r\n  styleUrls: ['./citiwise-npa-reg.component.scss']\r\n})\r\nexport class CitiwiseNpaRegComponent implements OnInit {\r\n  iframe5url: any = '';\r\n  @ViewChild(ReportFrameComponent) child: ReportFrameComponent;\r\n  formSubmitted = false;\r\n  ngCity: any = null\r\n\r\n  //fromgroup\r\n  ngForm: FormGroup\r\n  selectcity: any = new Array();\r\n  Ecity: any;\r\n  Scity: any;\r\n  startcity: any;\r\n  endcity: any;\r\n  nCity: any;\r\n  // for dropdown ng module\r\n  fromdate: any = null\r\n  ngbranch: any = null;\r\n  scode: any = null;\r\n  //ngfor\r\n  scheme: any[];\r\n  branchOption: any[];\r\n  clicked: boolean = false;\r\n  showRepo: boolean = false;\r\n  showLoading: boolean = false;\r\n  transferSchemeDetails: any;\r\n  tScheme: any;\r\n\r\n  //date\r\n  todate: any = null\r\n  bsValue = new Date();\r\n\r\n  maxDate: Date;\r\n  minDate: Date;\r\n  report_url = environment.report_url;\r\n  base_url = environment.base_url;\r\n  branchName: any;\r\n  city: any;\r\n  InterestArr: [];\r\n  AC_TYPE: any;\r\n  glDetails: any;\r\n  nasf: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private _ownbranchmasterservice: OwnbranchMasterService,\r\n    private systemParameter: SystemMasterParametersService,\r\n    public schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private sanitizer: DomSanitizer,\r\n    private cityMaster: cityMasterService,\r\n    private http: HttpClient,\r\n\r\n  ) {\r\n    this.todate = moment().format('DD/MM/YYYY');\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n    //branchlist\r\n    this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branchOption = data;\r\n      console.log(this.branchOption, \"sjhjd\");\r\n\r\n      let data1: any = localStorage.getItem('user');\r\n      let result = JSON.parse(data1);\r\n      if (result.branchId == 100 && result.RoleDefine[0].Role.id==1) {\r\n        this.branchOption.push({ value: '0', label: 'Consolidate' })\r\n      }    })\r\n\r\n    // Scheme Code\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n\r\n      var filtered = data.filter(function (scheme) {\r\n        return (scheme.name == 'LN' || scheme.name == 'CC' || scheme.name == 'DS');\r\n      });\r\n      this.scheme = filtered;\r\n\r\n      // this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\r\n      //   this.todate = data.CURRENT_DATE;\r\n      // });\r\n\r\n    })\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data1 => {\r\n\r\n      console.log(data1);\r\n\r\n      // this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\r\n      //   this.todate = data.CURRENT_DATE;\r\n      // });\r\n\r\n    })\r\n\r\n    this.cityMaster.getcityList().pipe(first()).subscribe((data) => {\r\n      this.city = data;\r\n    });\r\n\r\n    this.systemParameter.getFormData(1).subscribe(data => {\r\n      let year = moment(data.CURRENT_DATE, \"DD/MM/YYYY\").year()\r\n      this.todate = data.CURRENT_DATE\r\n\r\n      this.fromdate = moment(`01/04/${year - 1}`, \"DD/MM/YYYY\")\r\n      this.fromdate = this.fromdate._d\r\n    })\r\n\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    if (result.RoleDefine[0].Role.id == 1) {\r\n      this.ngbranch = result.branch.id\r\n      this.ngForm.controls['BRANCH_CODE'].enable()\r\n      this.branchName = result.branch.NAME\r\n\r\n    }\r\n    else {\r\n      this.ngForm.controls['BRANCH_CODE'].disable()\r\n      this.ngbranch = result.branch.id\r\n      this.branchName = result.branch.NAME\r\n\r\n    }\r\n  }\r\n\r\n  reportDate\r\n  getTransferAccountList(event) {\r\n    this.transferSchemeDetails = event\r\n    this.tScheme = event.name\r\n\r\n\r\n    this.AC_TYPE = event.value\r\n\r\n    let data1: any = localStorage.getItem('user');\r\n    let result1 = JSON.parse(data1);\r\n    let BRANCH_CODE = result1.branch.id;\r\n    let obj1 = {\r\n      // date: moment(this.fordate).format('DD/MM/YYYY')\r\n      AC_TYPE: this.AC_TYPE,\r\n      BRANCH_CODE: this.ngbranch,\r\n      // branch_code: this.ngbranch,\r\n    }\r\n\r\n    console.log(obj1)\r\n    // let queryParams = `?AC_TYPE=${encodeURIComponent(this.AC_TYPE)}&BRANCH_CODE=${encodeURIComponent(BRANCH_CODE)}`;\r\n    // this.http.post<any>(this.url + '/npa-classification-master/dropdown ', obj1).subscribe((data) => {\r\n    // this.http.post('http://192.168.1.113:7276/npa-classification-master/data', obj1).subscribe((data) => {\r\n      this.http.get(this.base_url +'/npa-classification-master/data').subscribe((data: any[]) => {\r\n      this.glDetails = data\r\n\r\n      // console.log(this.glDetails)\r\n    })\r\n\r\n\r\n\r\n    console.log(this.tScheme);\r\n\r\n\r\n  }\r\n\r\n  getDate(event) {\r\n    this.reportDate = event.REPORT_DATE\r\n  }\r\n\r\n  percentZero\r\n  percentTen\r\n  percentFive\r\n  percentTwenty\r\n  percentageDetail(event) {\r\n\r\n    let obj = {\r\n      \"REPORT_DATE\": this.reportDate\r\n    }\r\n\r\n    this.http.post(this.base_url +'/npa-classification-master/percentage', obj).subscribe((data) => {\r\n      this.glDetails = data\r\n      this.percentZero=data[0].NPA_PERCENTAGE,\r\n      this.percentTen=data[1].NPA_PERCENTAGE,\r\n      this.percentFive=data[2].NPA_PERCENTAGE,\r\n      this.percentTwenty=data[3].NPA_PERCENTAGE,\r\n\r\n      console.log(this.glDetails)\r\n    })\r\n  }\r\n\r\n  createForm() {\r\n    this.ngForm = this.fb.group({\r\n      BRANCH_CODE: ['', [Validators.required]],\r\n      Scheme_code: [\"\", [Validators.required]],\r\n      // START_DATE: [''],\r\n      NPA_Date: [''],\r\n      // END_DATE: ['', [Validators.required]],\r\n      Scity: ['', [Validators.required]],\r\n      Ecity: ['', [Validators.required]],\r\n      npa_per: [''],\r\n    });\r\n\r\n  }\r\n\r\n\r\n  // checkInterestFlag(id, acno, flag) {\r\n  //   let isIntUpdate: boolean = false\r\n  //   if (flag.target.checked) {\r\n  //     isIntUpdate = true\r\n  //   }\r\n  //   else {\r\n  //     isIntUpdate = false\r\n  //   }\r\n  //   if (this.InterestArr.length != 0) {\r\n  //     if (this.InterestArr.some(item => item.AC_NO === acno)) {\r\n  //       this.InterestArr.forEach((element) => {\r\n  //         if (element.AC_NO == acno) {\r\n  //           element['IS_POST_INT_AC'] = isIntUpdate\r\n  //         }\r\n  //       })\r\n  //     }\r\n  //     else {\r\n  //       var object = {\r\n  //         AC_NO: acno,\r\n  //         id: id,\r\n  //         IS_POST_INT_AC: isIntUpdate\r\n  //       }\r\n  //       this.InterestArr.push(object)\r\n  //     }\r\n  //   }\r\n  //   else {\r\n  //     var object = {\r\n  //       AC_NO: acno,\r\n  //       id: id,\r\n  //       IS_POST_INT_AC: isIntUpdate\r\n  //     }\r\n  //     this.InterestArr.push(object)\r\n  //   }\r\n  // }\r\n  // //checks all checkbox\r\n  // selectAll() {\r\n  //   const checkedTrue = true\r\n  //   this.InterestArr.forEach(item => item.IS_POST_INT_AC = checkedTrue);\r\n  // }\r\n\r\n  // //unchecks all checkbox\r\n  // deselectAll() {\r\n  //   const checkedFalse = false\r\n  //   this.InterestArr.forEach(item => item.IS_POST_INT_AC = checkedFalse);\r\n  // }\r\n  scrollToTop() {\r\n    window.scrollTo({ top: 200, behavior: 'smooth' });\r\n  } \r\n\r\n  view(event) {\r\n\r\n\r\n    event.preventDefault();\r\n    this.formSubmitted = true;\r\n\r\n    let userData = JSON.parse(localStorage.getItem('user'));\r\n    let bankName = userData.branch.syspara.BANK_NAME;\r\n    let branchName = userData.branch.NAME;\r\n\r\n\r\n    if (this.ngForm.valid) {\r\n\r\n      this.showRepo = true;\r\n\r\n      let obj = this.ngForm.value\r\n      let cityCode = obj.AC_CTCODE;\r\n\r\n      let Date = moment(obj.date).format('DD/MM/YYYY');\r\n      let tDate = moment(Date, 'DD/MM/YYYY')\r\n      //for start date\r\n      if (this.fromdate == userData.branch.syspara.CURRENT_DATE) {\r\n        obj['START_DATE'] = userData.branch.syspara.CURRENT_DATE\r\n      }\r\n      else {\r\n        let date = moment(this.fromdate).format('DD/MM/YYYY');\r\n        let toDate = moment(date, 'DD/MM/YYYY')\r\n        obj['START_DATE'] = date\r\n      }\r\n      //for end date\r\n      if (this.todate == userData.branch.syspara.CURRENT_DATE) {\r\n        obj['END_DATE'] = userData.branch.syspara.CURRENT_DATE\r\n      }\r\n      else {\r\n        let date = moment(this.todate).format('DD/MM/YYYY');\r\n        let tDate = moment(date, 'DD/MM/YYYY')\r\n        obj['END_DATE'] = date\r\n      }\r\n\r\n      let scheme = obj.Scheme_code\r\n\r\n      let branch = obj.BRANCH_CODE;\r\n      let FROMCT = obj.Scity;\r\n      let TOCT = obj.Ecity;\r\n      let schemeName = this.tScheme;\r\n      let npaDate = obj.NPA_Date.REPORT_DATE;\r\n      let flag=obj.npa_per;\r\n      if(flag == true){\r\n        flag = 1\r\n      }else\r\n      {\r\n        flag=0\r\n      }\r\n      if(branch == 0){\r\n         this.branchName='Consolidate';\r\n      }\r\n         this.iframe5url=this.report_url+ \"examples/citywiseNPA.php/?&bankname='\"+ bankName +\"'&Branch='\"+ this.branchName+\"'&AC_TYPE='\"+ scheme+\"'&Npa_Date='\"+npaDate+\"'&percentZero='\"+this.percentZero+\"'&percentTen='\"+this.percentTen+\"'&percentFive='\"+this.percentFive+\"'&percentTwenty='\"+this.percentTwenty+\"'&ACNOTYPE='\"+schemeName+\"'&BRANCH_CODE='\"+this.ngbranch+\"'&FROM='\"+FROMCT+\"'&flag=\"+flag+\"&TO='\"+TOCT+\"'\";\r\n      console.log(this.iframe5url); \r\n       this.iframe5url=this.sanitizer.bypassSecurityTrustResourceUrl(this.iframe5url); \r\n\r\n\r\n     \r\n    }\r\n    else {\r\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(() => { this.clicked = false });\r\n    }\r\n  }\r\n  close() {\r\n    this.resetForm()\r\n\r\n  }\r\n  onLoad() {\r\n    this.showLoading = false;\r\n\r\n  }\r\n  resetForm() {\r\n    this.ngForm.controls.Scheme_code.reset();\r\n\r\n    this.showRepo = false;\r\n    this.clicked = false;\r\n  }\r\n  onFocus(ele: NgSelectComponent) {\r\n    ele.open()\r\n  }\r\n\r\n  getBranch(event) {\r\n    this.ngbranch = event.value\r\n    this.branchName = event.branchName\r\n  }\r\n}"," <div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Citywise NPA Register</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <div class=\"card\">\r\n\r\n                <form [formGroup]=\"ngForm\">\r\n                    <div class=\"card-block\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-1\"> <label for=\"Branch\">Branch <sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" binfdlable=\"lable\" [(ngModel)]=\"ngbranch\"\r\n                                            (change)=\"getBranch($event)\" formControlName=\"BRANCH_CODE\" bindLabel=\"label\"\r\n                                            placeholder=\"Branch\">\r\n                                            <ng-option *ngFor =\"let values of branchOption\" [value]=\"values\">\r\n                                                {{values.label}}</ng-option>\r\n                                        </ng-select>\r\n                                         \r\n                                         <!-- <ng-select>\r\n\r\n                                         </ng-select> -->\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['BRANCH_CODE'].invalid && (ngForm.controls['BRANCH_CODE'].dirty || ngForm.controls['BRANCH_CODE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-12 col-md-1\"> <label for=\" Date\">Scheme Code<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-2 col-md-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Scheme_code\" bindValue=\"value\" bindLabel=\"label\"\r\n                                            [(ngModel)]=\"scode\" (change)=\"getTransferAccountList($event)\">\r\n                                            <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                                {{values.id}} {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Scheme_code'].invalid && (ngForm.controls['Scheme_code'].dirty || ngForm.controls['Scheme_code'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['Scheme_code'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"col-md-1\"> <label for=\"START_DATE\">NPA Date<sub class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-md-2\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"START_DATE\" id=\"START_DATE\"\r\n                                            class=\"form-control\" [(ngModel)]=\"fromdate\" [bsValue]=\"bsValue\"\r\n                                            [maxDate]=\"maxDate\" [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                            formControlName=\"START_DATE\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                            bsDatepicker>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['START_DATE'].invalid && (ngForm.controls['START_DATE'].dirty || ngForm.controls['START_DATE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div\r\n                                        *ngIf=\"ngForm.controls['START_DATE'].errors?.required ||ngForm.controls['START_DATE'].invalid\">\r\n                                        This field is required.\r\n                                    </div>\r\n                                </div>\r\n                            </div> -->\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\" Date\">NPA DATE<sub\r\n                                class=\"required\">*</sub></label>\r\n                    </div>\r\n                    <div class=\"col-sm-2 col-md-2\">\r\n                        <div class=\"form-group form-primary form-static-label\">\r\n                            <span class=\"border-lable-flt\">\r\n                                <ng-select formControlName=\"NPA_Date\" [(ngModel)]=\"nasf\"\r\n                                    (change)=\"getDate($event);\" >\r\n                                    \r\n                                    <ng-option *ngFor=\"let values of glDetails\" [value]=\"values\">\r\n                                        {{values.REPORT_DATE}} </ng-option>\r\n                                </ng-select>\r\n\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                            <!-- <div class=\"col-sm-12 col-md-1\"> <label for=\" Date\">Report Date<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"END_DATE\" id=\"END_DATE\"\r\n                                            [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" class=\"form-control\"\r\n                                            [(ngModel)]=\"todate\" formControlName=\"END_DATE\" appButton minlength=\"8\"\r\n                                            maxlength=\"10\"\r\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                            bsDatepicker>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['END_DATE'].invalid && (ngForm.controls['END_DATE'].dirty || ngForm.controls['END_DATE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div\r\n                                        *ngIf=\"ngForm.controls['END_DATE'].errors?. maxlength || ngForm.controls['END_DATE'].errors?. minlength || ngForm.controls['END_DATE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div> -->\r\n                        </div>\r\n                           <div class=\"row\">\r\n                           \r\n\r\n                            <div class=\"col-sm-12 col-md-1\"> <label for=\" Date\">Start City<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                             <div class=\"col-sm-2\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                         <ng-select formControlName=\"Scity\" bindValue=\"value\" bindLabel=\"label\"\r\n                                          [items]=\"city\" bindValue=\"id\" [(ngModel)]=\"nCity\"\r\n                                            bindLabel=\"CITY_NAME\">\r\n                                        \r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Scity'].invalid && (ngForm.controls['Scity'].dirty || ngForm.controls['Scheme_code'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['Scity'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-1\"> <label for=\"START_DATE\">End City<sub class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-md-2\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Ecity\"\r\n                                            [(ngModel)]=\"endcity\"[items]=\"city\" bindValue=\"id\" [(ngModel)]=\"ngCity\"\r\n                                            bindLabel=\"CITY_NAME\" >\r\n                                            \r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Ecity'].invalid && (ngForm.controls['Ecity'].dirty || ngForm.controls['Ecity'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div\r\n                                        *ngIf=\"ngForm.controls['Ecity'].errors?.required ||ngForm.controls['Ecity'].invalid\">\r\n                                        This field is required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div> \r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm\">\r\n                                <div class=\"checkbox checkbox-primary\">\r\n                                    <div class=\"border-checkbox-group border-checkbox-group-primary\">\r\n                                        <input type=\"checkbox\" class=\"border-checkbox\" id=\"npa_per\" (change)=\"percentageDetail($event)\"\r\n                                            formControlName=\"npa_per\">\r\n                                        <label class=\"border-checkbox-label\" for=\"npa_per\">Percentwise NPA Report\r\n                                            </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-9\"></div>\r\n                            <div class=\"col-md-2\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\r\n                                    (click)=\"view($event);scrollToTop()\">View</button>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-1\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" (click)=\"close()\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        <h5>Report Frame</h5>\r\n                                    </div>\r\n                                    <div *ngIf=\"showRepo\">\r\n                                        <app-iframe5 [url]='iframe5url' (load)=\"onLoad()\"></app-iframe5>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\n// import { CommonModule } from '@angular/common';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CitiwiseNpaRegRoutingModule } from './citiwise-npa-reg-routing.module';\r\nimport { CitiwiseNpaRegComponent } from './citiwise-npa-reg.component';\r\nimport { Iframe5Module } from '../../pigmy-report/iframe5/iframe5.module';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { TermDepositSchemeService } from 'src/app/theme/utility/scheme-parameters/term-deposit-scheme/term-deposit-scheme.service';\r\nimport { RepayModeService } from 'src/app/shared/dropdownService/repay-mode.service';\r\nimport { InstallmentMethodService } from 'src/app/shared/dropdownService/installment-method.service';\r\nimport { cityMasterService } from 'src/app/shared/dropdownService/city-master-dropdown.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CitiwiseNpaRegComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CitiwiseNpaRegRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n   \r\n    NgSelectModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n \r\n    Iframe5Module\r\n  ],\r\n  \r\n  exports:[],\r\n  providers: [OwnbranchMasterService, \r\n    SchemeCodeDropdownService, \r\n    SchemeAccountNoService,TermDepositSchemeService,SystemMasterParametersService, SchemeCodeDropdownService, OwnbranchMasterService,RepayModeService,InstallmentMethodService,\r\n    SystemMasterParametersService,cityMasterService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UserAuthInterceptor,\r\n      multi: true\r\n    },\r\n  ],\r\n  schemas:[CUSTOM_ELEMENTS_SCHEMA,NO_ERRORS_SCHEMA]\r\n})\r\nexport class CitiwiseNpaRegModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:Iframe5Component,\r\n    data: {\r\n      title: 'Iframe5',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class Iframe5RoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { Iframe5RoutingModule } from './iframe5-routing.module';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [Iframe5Component],\r\n  imports: [\r\n    CommonModule,\r\n    Iframe5RoutingModule\r\n  ],\r\n  exports:[Iframe5Component]\r\n})\r\nexport class Iframe5Module { }\r\n","import { Component, OnInit,Input } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-iframe5',\r\n  templateUrl: './iframe5.component.html',\r\n  styleUrls: ['./iframe5.component.scss']\r\n})\r\nexport class Iframe5Component implements OnInit {\r\n  @Input() url: any;\r\n  \r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer) {\r\n    this.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.url);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <form  novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"embed-responsive embed-responsive-16by9\">\r\n                        <div class=\"loader\">\r\n                            <img src=\"assets/Loading.gif\">\r\n                        </div>\r\n                        <iframe [src]=\"url\"></iframe>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}