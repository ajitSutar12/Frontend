{"version":3,"sources":["./src/app/shared/dropdownService/director-master-dropdown.service.ts","./src/app/theme/reports/npa-reports/directorwise-npa-reg/directorwise-npa-reg-routing.module.ts","./src/app/theme/reports/npa-reports/directorwise-npa-reg/directorwise-npa-reg.component.ts","./src/app/theme/reports/npa-reports/directorwise-npa-reg/directorwise-npa-reg.component.html","./src/app/theme/reports/npa-reports/directorwise-npa-reg/directorwise-npa-reg.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5-routing.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5.module.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.ts","./src/app/theme/reports/pigmy-report/iframe5/iframe5/iframe5.component.html"],"names":[],"mappings":"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","file":"directorwise-npa-reg-directorwise-npa-reg-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class DirectorMasterDropdownService {\r\n\r\n    //  // director-master\";\r\n    url = environment.base_url;\r\n    directorMasterObject = new Array();\r\n    directorObject = new Array();\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getDirectorMasterList() {\r\n        this.directorMasterObject = []\r\n        return this.http.get<any>(this.url + '/director-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.NAME, value: element.id, name:element.IS_CURRENT_BODY_MEMBER };\r\n                    this.directorMasterObject.push(obj)\r\n                });\r\n                return this.directorMasterObject;\r\n            }));\r\n    }\r\n\r\n    public getDirectorMastertrueList() {\r\n        this.directorObject = []\r\n        return this.http.get<any>(this.url + '/director-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                \r\n                    if(element.IS_CURRENT_BODY_MEMBER == true){\r\n                        let obj = { label: element.NAME, value: element.id};\r\n                        this.directorObject.push(obj)\r\n                    }\r\n                   \r\n                });\r\n                return this.directorObject;\r\n            }));\r\n\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DirectorwiseNpaRegComponent } from './directorwise-npa-reg.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  DirectorwiseNpaRegComponent,\r\n    data: {\r\n      title: 'Transaction Amount Movement',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DirectorwiseNpaRegRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\n// Displaying Sweet Alert\r\nimport Swal from \"sweetalert2\";\r\n// Used to Call API\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { Router } from \"@angular/router\";\r\nimport * as moment from 'moment'; \r\nimport { environment } from \"src/environments/environment\";\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { OwnbranchMasterService } from \"src/app/shared/dropdownService/own-branch-master-dropdown.service\";\r\nimport { SchemeCodeDropdownService } from \"src/app/shared/dropdownService/scheme-code-dropdown.service\";\r\nimport { SchemeAccountNoService } from \"src/app/shared/dropdownService/schemeAccountNo.service\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { SchemeTypeDropdownService } from \"src/app/shared/dropdownService/scheme-type-dropdown.service\";\r\nimport { IOption } from \"ng-select\";\r\nimport { SystemMasterParametersService } from \"src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service\";\r\nimport { ReportFrameComponent } from \"../../report-frame/report-frame.component\";\r\nimport { NgSelectComponent } from \"@ng-select/ng-select\";\r\nimport { DirectorMasterDropdownService } from 'src/app/shared/dropdownService/director-master-dropdown.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-directorwise-npa-reg',\r\n  templateUrl: './directorwise-npa-reg.component.html',\r\n  styleUrls: ['./directorwise-npa-reg.component.scss']\r\n})\r\nexport class DirectorwiseNpaRegComponent implements OnInit {\r\n    iframe5url:any='';\r\n    @ViewChild(ReportFrameComponent ) child: ReportFrameComponent ; \r\n  formSubmitted = false;  \r\n  Accschemeno:any =new Array(                           );\r\n  base_url = environment.base_url;\r\n  nasf\r\n  \r\n  //fromgroup\r\n  ngForm:FormGroup\r\n   // for dropdown ng module\r\n   fromdate: any = null\r\n   ngbranch: any = null; \r\n   scode: any = null;\r\n   Acno:any;\r\n   Anac:any;\r\n   //ngfor\r\n   scheme: any[];\r\n  branchOption: any[];\r\n  clicked:boolean=false;\r\n  showRepo: boolean = false;\r\n  showLoading:boolean = false;\r\n  transferSchemeDetails: any;\r\n  tScheme\r\n  \r\n   //date\r\n  todate: any = null\r\n  bsValue = new Date();\r\n  Anamat:any;\r\n  \r\n  maxDate: Date;\r\n    minDate: Date;\r\n    report_url = environment.report_url;\r\n    branchName: any;\r\n  Accnumber: any;\r\n  obj1: any[];\r\n  savingMasterService: any;\r\n  introducerACNo: any;\r\n  director: any[];\r\n  directors: any[];\r\n  glDetails: any;\r\n  AC_TYPE: any;\r\n  \r\n    constructor(\r\n      private fb: FormBuilder,\r\n      private _ownbranchmasterservice: OwnbranchMasterService,\r\n      private systemParameter:SystemMasterParametersService,\r\n      public schemeCodeDropdownService: SchemeCodeDropdownService,\r\n      private directorMasterDropdown: DirectorMasterDropdownService,\r\n      private sanitizer: DomSanitizer,\r\n      private http: HttpClient,\r\n     \r\n    ) {\r\n      this.todate = moment().format('DD/MM/YYYY');\r\n      this.maxDate = new Date();\r\n      this.minDate = new Date();\r\n      this.minDate.setDate(this.minDate.getDate() - 1); \r\n      this.maxDate.setDate(this.maxDate.getDate())\r\n    }\r\n  \r\n    ngOnInit(): void {\r\n      this.createForm()\r\n     //branchlist\r\n     this._ownbranchmasterservice.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branchOption = data;\r\n      let data1: any = localStorage.getItem('user');\r\n      let result = JSON.parse(data1);\r\n      if (result.branchId == 100 && result.RoleDefine[0].Role.id==1) {\r\n        this.branchOption.push({ value: '0', label: 'Consolidate' })\r\n      }    })\r\n\r\n\r\n      this.directorMasterDropdown.getDirectorMastertrueList().pipe(first()).subscribe(data => {\r\n        this.director = data;\r\n        console.log(this.director);\r\n        \r\n      })\r\n  \r\n   // Scheme Code\r\n   this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      \r\n    var filtered = data.filter(function (scheme) {\r\n      return ( scheme.name == 'LN' || scheme.name == 'CC' || scheme.name == 'DS');\r\n    });\r\n    this.scheme = filtered;\r\n   \r\n    // this.systemParameter.getFormData(1).pipe(first()).subscribe(data => {\r\n    //   this.todate = data.CURRENT_DATE;\r\n    // });\r\n  \r\n  })\r\n  this.systemParameter.getFormData(1).subscribe(data => {\r\n    let year = moment(data.CURRENT_DATE, \"DD/MM/YYYY\").year()\r\n    this.todate = data.CURRENT_DATE\r\n    \r\n    this.fromdate = moment(`01/04/${year - 1}`, \"DD/MM/YYYY\")\r\n    this.fromdate = this.fromdate._d\r\n  })\r\n \r\n \r\n    let data: any = localStorage.getItem('user');\r\n      let result = JSON.parse(data);\r\n      if (result.RoleDefine[0].Role.id == 1) {\r\n        this.ngbranch = result.branch.id\r\n        this.ngForm.controls['BRANCH_CODE'].enable()\r\n        this.branchName = result.branch.NAME\r\n  \r\n      }\r\n      else {\r\n        this.ngForm.controls['BRANCH_CODE'].disable()\r\n        this.ngbranch = result.branch.id\r\n        this.branchName = result.branch.NAME\r\n  \r\n      }\r\n    }\r\n  \r\n    getTransferAccountList(event) {\r\n      this.transferSchemeDetails = event\r\n      this.tScheme = event.name\r\n      this.AC_TYPE=event.value\r\n      let data1: any = localStorage.getItem('user');\r\n      let result1 = JSON.parse(data1);\r\n      let BRANCH_CODE = result1.branch.id;\r\n      let obj1 = {\r\n        // date: moment(this.fordate).format('DD/MM/YYYY')\r\n        AC_TYPE:this.AC_TYPE, \r\n        BRANCH_CODE: this.ngbranch,\r\n        // branch_code: this.ngbranch,\r\n      }\r\n     \r\n\r\n      // this.http.post('http://192.168.1.113:7276/npa-classification-master/data' ,obj1).subscribe((data) => {\r\n        this.http.post(this.base_url +'/npa-classification-master/data',obj1).subscribe((data: any[]) => {\r\n        this.glDetails = data\r\n    \r\n          console.log(this.glDetails)\r\n        })\r\n    }\r\n    getIntroducer() {\r\n      this.obj1 = [this.ngbranch, this.scode]\r\n      switch (this.Accnumber) {\r\n       \r\n        case 'LN':\r\n          this.savingMasterService.getTermLoanSchemeList1(this.obj1).subscribe(data => {\r\n            this.introducerACNo = data;\r\n            console.log(data);\r\n            \r\n          \r\n          })\r\n          break;\r\n  \r\n        case 'CC':\r\n          this.savingMasterService.getCashCreditSchemeList1(this.obj1).subscribe(data => {\r\n            this.introducerACNo = data;\r\n            \r\n          })\r\n          break;\r\n  \r\n        case 'DS':\r\n          this.savingMasterService.getAnamatSchemeList1(this.obj1).subscribe(data => {\r\n            this.introducerACNo = data;\r\n           \r\n          })\r\n          break;\r\n       \r\n      }\r\n    }\r\n   \r\n    createForm() {\r\n      this.ngForm = this.fb.group({\r\n        BRANCH_CODE: ['', [Validators.required]],\r\n        Scheme_code: [\"\",[ Validators.required]],\r\n        Start_DATE: ['', [Validators.required]],\r\n        // END_DATE: ['', [Validators.required]],\r\n        Acno: ['', [Validators.required]],\r\n        Anac: ['', [Validators.required]],\r\n       \r\n      });\r\n     \r\n    }\r\n    scrollToTop() {\r\n      window.scrollTo({ top: 200, behavior: 'smooth' });\r\n    } \r\n    view(event:any) {\r\n    \r\n      event.preventDefault();\r\n      this.formSubmitted = true;\r\n  \r\n      let userData = JSON.parse(localStorage.getItem('user'));\r\n      let bankName = userData.branch.syspara.BANK_NAME;\r\n      let branchName = userData.branch.NAME;\r\n  \r\n  \r\n      if(this.ngForm.valid){\r\n  \r\n     this.showRepo = true;\r\n      let obj = this.ngForm.value\r\n  \r\n      let Date = moment(obj.date).format('DD/MM/YYYY');\r\n      let tDate = moment(Date, 'DD/MM/YYYY')\r\n        //for start date\r\n        if(this.fromdate == userData.branch.syspara.CURRENT_DATE)\r\n        {\r\n          obj['START_DATE'] =userData.branch.syspara.CURRENT_DATE\r\n        }\r\n        else{\r\n        let date = moment(this.fromdate).format('DD/MM/YYYY');\r\n        let toDate = moment(date, 'DD/MM/YYYY')\r\n        obj['START_DATE']=date \r\n      }\r\n     //for end date\r\n      if(this.todate == userData.branch.syspara.CURRENT_DATE)\r\n      {\r\n        obj['END_DATE'] =userData.branch.syspara.CURRENT_DATE\r\n      }\r\n      else{\r\n      let date = moment(this.todate).format('DD/MM/YYYY');\r\n      let tDate = moment(date, 'DD/MM/YYYY')\r\n      obj['END_DATE']=date \r\n     }\r\n    let Start_DATE = obj.Start_DATE.REPORT_DATE;\r\n    let scheme = obj.Scheme_code\r\n    let branch = obj.BRANCH_CODE;\r\n    let schemeName = this.tScheme\r\n  let startdir=obj.Acno\r\n  let enddir=obj.Anac\r\n      //  let startingcode= obj.Starting_Account;\r\n      // let endingcode =obj.Ending_Account;\r\n      // this.iframe5url=this.report_url+ \"examples/transactionless.php/?&bankname='\"+ bankName +\"'&Branch='\"+ this.branchName +\"'&sdate='\"+ obj.START_DATE +\"'&edate='\"+ obj.END_DATE +\"'&AC_TYPE='\"+ scheme +\"'&ACNOTYPE='\"+ schemeName +\"' &BRANCH_CODE='\"+branch+\"'\";\r\n   \r\n      if(branch == 0){\r\n        this.branchName='Consolidate';\r\n     }\r\n\r\n    this.iframe5url=this.report_url+ \"examples/RecommandedByDirectowiseNPARegisterReport.php?AC_TYPE=\"+scheme+\"&BRANCH_CODE=\"+this.ngbranch+\"&BranchName=\"+this.branchName+\"&startdir=\"+startdir+\"&enddir=\"+enddir+\"&NPA_DATE='\"+Start_DATE+\"'&bankName='\"+bankName+\"'\";\r\n    console.log(this.iframe5url); \r\n     this.iframe5url=this.sanitizer.bypassSecurityTrustResourceUrl(this.iframe5url); \r\n    }\r\n    else {\r\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning').then(()=>{ this.clicked=false});\r\n    }\r\n    }\r\n    close(){\r\n      this.resetForm()\r\n  \r\n    }\r\n    onLoad(){\r\n      this.showLoading = false;\r\n  \r\n    }\r\n    resetForm() {\r\n    this.ngForm.controls.Scheme_code.reset();\r\n  \r\n      this.showRepo = false;\r\n      this.clicked=false;\r\n    }\r\n    onFocus(ele: NgSelectComponent) {\r\n      ele.open()\r\n    }\r\n    getBranch(event) {\r\n      this.ngbranch = event.value\r\n      this.branchName = event.branchName\r\n    }\r\n  }\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Directorwise NPA  Report</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <div class=\"card\">\r\n                <form [formGroup]=\"ngForm\">\r\n                    <div class=\"card-block\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\"Branch\">Branch <sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-3\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngbranch\"\r\n                                            (change)=\"getBranch($event)\" formControlName=\"BRANCH_CODE\" bindLabel=\"label\"\r\n                                            placeholder=\"Branch\">\r\n                                            <ng-option *ngFor=\"let values of branchOption\" [value]=\"values\">\r\n                                                {{values.label}}</ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['BRANCH_CODE'].invalid && (ngForm.controls['BRANCH_CODE'].dirty || ngForm.controls['BRANCH_CODE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-2\"> <label for=\" Date\">Scheme Code<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-2 col-md-3\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Scheme_code\" bindValue=\"value\" bindLabel=\"label\"\r\n                                            [(ngModel)]=\"scode\" (change)=\"getTransferAccountList($event)\">\r\n                                            <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                                {{values.id}} {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Scheme_code'].invalid && (ngForm.controls['Scheme_code'].dirty || ngForm.controls['Scheme_code'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div *ngIf=\"ngForm.controls['Scheme_code'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-2\"> <label for=\"START_DATE\">Start Director<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Acno\" bindValue=\"value\" bindLabel=\"label\"\r\n                                            [(ngModel)]=\"Accnumber\">\r\n                                            <ng-option *ngFor=\"let values of director\" [value]=\"values\">\r\n                                                {{values.value}} {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Acno'].invalid && (ngForm.controls['Acno'].dirty || ngForm.controls['Acno'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div\r\n                                        *ngIf=\"ngForm.controls['Acno'].errors?.required ||ngForm.controls['Acno'].invalid\">\r\n                                        This field is required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-2\"> <label for=\"START_DATE\">End Director<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Anac\" bindValue=\"value\" bindLabel=\"label\"\r\n                                            [(ngModel)]=\"Anamat\">\r\n                                            <ng-option *ngFor=\"let values of director\" [value]=\"values\">\r\n                                                {{values.value}} {{values.label}} </ng-option>\r\n                                        </ng-select>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Anac'].invalid && (ngForm.controls['Anac'].dirty || ngForm.controls['Anac'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div\r\n                                        *ngIf=\"ngForm.controls['Anac'].errors?.required ||ngForm.controls['Anac'].invalid\">\r\n                                        This field is required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <!-- <div class=\"col-md-2\"></div> -->\r\n                            <div class=\"col-md-2\"> <label for=\"START_DATE\">NPA Date<sub class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-3\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <!-- <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"Start_DATE\" id=\"Start_DATE\"\r\n                                            [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" class=\"form-control\"\r\n                                            [(ngModel)]=\"fromdate\" formControlName=\"Start_DATE\" appButton minlength=\"8\"\r\n                                            maxlength=\"10\"\r\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                            bsDatepicker>\r\n                                    </span> -->\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <ng-select formControlName=\"Start_DATE\" [(ngModel)]=\"fromdate\"\r\n                                            (change)=\"getTransferAccountList($event)\">\r\n                                            \r\n                                            <ng-option *ngFor=\"let values of glDetails\" [value]=\"values\">\r\n                                                {{values.REPORT_DATE}} </ng-option>\r\n                                        </ng-select>\r\n\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['Start_DATE'].invalid && (ngForm.controls['Start_DATE'].dirty || ngForm.controls['Start_DATE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div\r\n                                        *ngIf=\"ngForm.controls['Start_DATE'].errors?. maxlength || ngForm.controls['Start_DATE'].errors?. minlength || ngForm.controls['END_DATE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                           \r\n                            <!-- <div class=\"col-sm-12 col-md-2\"> <label for=\" Date\">Report Date<sub\r\n                                        class=\"required\">*</sub></label>\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-3\">\r\n                                <div class=\"form-group input-group\">\r\n                                    <span class=\"border-lable-flt\">\r\n                                        <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"END_DATE\" id=\"END_DATE\"\r\n                                            [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" class=\"form-control\"\r\n                                            [(ngModel)]=\"todate\" formControlName=\"END_DATE\" appButton minlength=\"8\"\r\n                                            maxlength=\"10\"\r\n                                            (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                            bsDatepicker>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\"\r\n                                    *ngIf=\"ngForm.controls['END_DATE'].invalid && (ngForm.controls['END_DATE'].dirty || ngForm.controls['END_DATE'].touched)\"\r\n                                    class=\"alert alert-danger\">\r\n                                    <div\r\n                                        *ngIf=\"ngForm.controls['END_DATE'].errors?. maxlength || ngForm.controls['END_DATE'].errors?. minlength || ngForm.controls['END_DATE'].errors?.required\">\r\n                                        This field is required\r\n                                    </div>\r\n                                </div>\r\n                            </div> -->\r\n                        </div>\r\n                        \r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-9\"></div>\r\n                            <div class=\"col-md-2\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" value=\"submit\" [disabled]=\"clicked\"\r\n                                    (click)=\"view($event);scrollToTop()\">View</button>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-1\">\r\n                                <button class=\"btn btn-outline-primary btn-sm\" (click)=\"close()\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        <h5>Report Frame</h5>\r\n                                    </div>\r\n                                    <div *ngIf=\"showRepo\">\r\n                                        <app-iframe5 [url]='iframe5url' (load)=\"onLoad()\"></app-iframe5>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DirectorwiseNpaRegRoutingModule } from './directorwise-npa-reg-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { Iframe5Module } from '../../pigmy-report/iframe5/iframe5.module';\r\n\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { SchemeTypeDropdownService } from 'src/app/shared/dropdownService/scheme-type-dropdown.service';\r\nimport { NpaRegisterComponent } from '../npa-register/npa-register.component';\r\nimport { DirectorwiseNpaRegComponent } from './directorwise-npa-reg.component';\r\nimport { DirectorMasterDropdownService } from 'src/app/shared/dropdownService/director-master-dropdown.service';\r\n\r\n\r\n@NgModule({\r\n \r\n  imports: [\r\n    CommonModule,\r\n    DirectorwiseNpaRegRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    PerfectScrollbarModule, \r\n    NgSelectModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    Iframe5Module\r\n  ],\r\n  declarations: [DirectorwiseNpaRegComponent],\r\n  exports:[DirectorwiseNpaRegComponent],\r\n  providers: [\r\n    {\r\n\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: PERFECT_SCROLLBAR_CONFIG,\r\n\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UserAuthInterceptor,\r\n      multi: true\r\n    },\r\n    SystemMasterParametersService,\r\n    OwnbranchMasterService,\r\n    SchemeCodeDropdownService,\r\n    SchemeAccountNoService,\r\n    SchemeTypeDropdownService,\r\n    DirectorMasterDropdownService\r\n\r\n  ],\r\n})\r\nexport class DirectorwiseNpaRegModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:Iframe5Component,\r\n    data: {\r\n      title: 'Iframe5',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class Iframe5RoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { Iframe5RoutingModule } from './iframe5-routing.module';\r\nimport { Iframe5Component } from './iframe5/iframe5.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [Iframe5Component],\r\n  imports: [\r\n    CommonModule,\r\n    Iframe5RoutingModule\r\n  ],\r\n  exports:[Iframe5Component]\r\n})\r\nexport class Iframe5Module { }\r\n","import { Component, OnInit,Input } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-iframe5',\r\n  templateUrl: './iframe5.component.html',\r\n  styleUrls: ['./iframe5.component.scss']\r\n})\r\nexport class Iframe5Component implements OnInit {\r\n  @Input() url: any;\r\n  \r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer) {\r\n    this.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.url);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <form  novalidate>\r\n                <div class=\"card-block\">\r\n                    <div class=\"embed-responsive embed-responsive-16by9\">\r\n                        <div class=\"loader\">\r\n                            <img src=\"assets/Loading.gif\">\r\n                        </div>\r\n                        <iframe [src]=\"url\"></iframe>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}