{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/transaction/member-transfer/branch-and-salary-dc/branch-and-salary-dc-routing.module.ts","./src/app/theme/transaction/member-transfer/branch-and-salary-dc/branch-and-salary-dc.component.ts","./src/app/theme/transaction/member-transfer/branch-and-salary-dc/branch-and-salary-dc.component.html","./src/app/theme/transaction/member-transfer/branch-and-salary-dc/branch-and-salary-dc.module.ts"],"names":[],"mappings":"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","file":"branch-and-salary-dc-branch-and-salary-dc-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE, branchName: element.NAME };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { BranchAndSalaryDCComponent} from './branch-and-salary-dc.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:  BranchAndSalaryDCComponent,\r\n    data: {\r\n      title: 'Branch & Salary DC',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class  BranchAndSalaryDCRoutingModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { first } from 'rxjs/operators';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-branch-and-salary-dc',\r\n  templateUrl: './branch-and-salary-dc.component.html',\r\n  styleUrls: ['./branch-and-salary-dc.component.scss']\r\n})\r\nexport class BranchAndSalaryDCComponent implements OnInit {\r\n  angForm: FormGroup;\r\n\r\n  //Dropdown variables\r\n  Branch: any\r\n  Schemecode: any\r\n  Membernumber: any\r\n  Newbranch: any\r\n  NewSdivision: any\r\n  subSdivision: any\r\n  NewsubSdivision\r\n\r\n  branch_code: any;\r\n  introducerACNo: any;\r\n  obj: any;\r\n  schemeType: string = 'SH'\r\n\r\n  \r\n  url = environment.base_url;\r\n  selectedTransScheme\r\n  selectedTransBranch\r\n  selectedTransMemno\r\n  selectedNewBranch\r\n  selectedNewSDiv\r\n  selectedSubSDiv\r\n  selectedSDiv\r\n  selectednewSubSDiv\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private http: HttpClient  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    //for Branch Dropdown\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n      // this.getIntroducer()\r\n    })\r\n\r\n\r\n    //Scheme Code Dropdown\r\n    this.schemeCodeDropdownService.getSchemeCodeList(this.schemeType).pipe(first()).subscribe(data => {\r\n      this.Schemecode = data\r\n      // this.Schemecode = data[0].value\r\n      // this.getIntroducer();\r\n    })\r\n\r\n    // this.http.post('http://192.168.137.1:3000/employee/getNewSaldiv',{}).subscribe((data: any) => {\r\n    this.http.post(this.url+'/employee/getNewSaldiv',{}).subscribe((data: any) => {\r\n\r\n      // console.log(data);\r\n\r\n      this.NewSdivision = data\r\n\r\n      console.log(this.NewSdivision)\r\n    })\r\n\r\n\r\n    // this.http.post('http://192.168.137.1:3000/employee/getNewSubSaldiv',{}).subscribe((data: any) => {\r\n    this.http.post(this.url+'/employee/getNewSubSaldiv',{}).subscribe((data: any) => {\r\n\r\n      // console.log(data);\r\n\r\n      this.NewsubSdivision = data\r\n\r\n      console.log(this.NewsubSdivision)\r\n    })\r\n\r\n\r\n\r\n  }\r\n\r\n  accountNumbers\r\n  getIntroducer(event) {\r\n    // debugger\r\n    // this.obj = [this.selectedTransScheme, this.selectedTransBranch]\r\n\r\n    let obj = {\r\n      'sAppl': event.name\r\n    }\r\n\r\n    this.schemeAccountNoService.getShareSchemeList1(this.obj).subscribe(data => {\r\n      // console.log(data);\r\n\r\n      this.introducerACNo = data;\r\n    })\r\n\r\n    // this.http.post('http://192.168.137.1:3000/employee/MemberCode', obj).subscribe((data: any) => {\r\n    this.http.post(this.url+'/employee/MemberCode', obj).subscribe((data: any) => {\r\n\r\n      // console.log(data);\r\n\r\n      this.accountNumbers = data;\r\n\r\n      console.log(\"mem\",  this.introducerACNo)\r\n    })\r\n  }\r\n\r\n  banckAcNo\r\n  salDiv\r\n  subsalDiv\r\n  getBankNo(event) {\r\n    this.banckAcNo = event.SHMASTER_BANKACNO\r\n    this.salDiv = event.SHMASTER_AC_SALARYDIVISION_CODE\r\n    this.subsalDiv = event.SHMASTER_SUB_SALARYDIVISION_CODE\r\n\r\n    \r\n  }\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      branch: ['', [Validators.required]],\r\n      scode: ['', [Validators.required]],\r\n      memno: ['', [Validators.required]],\r\n      // salaryDiv: ['', [Validators.required]],\r\n      newbranch: ['', [Validators.required]],\r\n      newsd: ['', [Validators.required]],\r\n      fdate: ['', [Validators.required]],\r\n      // subsd: ['', [Validators.required]],\r\n      Nsubsd : ['', [Validators.required]],\r\n    });\r\n  }\r\n  reset() {\r\n    this.angForm.controls['branch'].reset()\r\n    this.angForm.controls['scode'].reset()\r\n    this.angForm.controls['memno'].reset()\r\n    this.angForm.controls['newbranch'].reset()\r\n    this.angForm.controls['newsd'].reset()\r\n    this.angForm.controls['Nsubsd'].reset()\r\n    this.angForm.controls['fdate'].reset()\r\n  }\r\n\r\n\r\n  submit() {\r\n    if (this.angForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    // let selected = this.shemeDetails[0];\r\n    let formValues = this.angForm.value;\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    // this.salaryDiv=data;\r\n\r\n    // console.log(selected);\r\n\r\n    const obj = {\r\n      BANKACNO: this.banckAcNo,\r\n      AC_TYPE: formValues.scode,\r\n      AC_BRANCH: formValues.branch,\r\n      AC_NEWBRANCH: formValues.newbranch,\r\n      AC_SALDIV: this.salDiv,\r\n      AC_NEWSALDIV: formValues.newsd,\r\n      AC_FROMDATE:moment(formValues.fdate, 'DD/MM/YYYY').format('DD/MM/YYYY'),\r\n\r\n\r\n    };\r\n\r\n    // this.http.post('http://192.168.137.1:3000/employee/MemberTransferHis', obj).subscribe(\r\n    this.http.post(this.url+'/employee/MemberTransferHis', obj).subscribe(\r\n\r\n      (response) => {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success',\r\n          text: 'Data submitted successfully',\r\n        });\r\n      },\r\n\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Member Transfer History</h5>\r\n            </div>\r\n\r\n            <form [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Branch<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedTransBranch\" #scheme formControlName=\"branch\"\r\n                                        bindValue=\"value\" bindLabel=\"label\">\r\n                                        <ng-option *ngFor=\"let item of branch_code\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['branch'].invalid && (angForm.controls['branch'].dirty || angForm.controls['branch'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['branch'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Scheme Code<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedTransScheme\" #scheme formControlName=\"scode\"\r\n                                        bindValue=\"value\" bindLabel=\"label\" (change)=\"getIntroducer($event)\">\r\n                                        <ng-option *ngFor=\"let item of Schemecode\" [value]=\"item\">\r\n                                            {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['scode'].invalid && (angForm.controls['scode'].dirty || angForm.controls['scode'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['scode'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Member Number<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <!-- <ng-select [(ngModel)]=\"selectedTransMemno\" #scheme formControlName=\"memno\" \r\n                                        bindValue=\"bankacno\" bindLabel=\"NAME\"  (change)=\"getBankNo($event)\" >\r\n                                        <ng-option *ngFor=\"let item of accountNumbers\" [value]=\"item\">\r\n                                            {{item.SHMASTER_AC_NO}} {{item.SHMASTER_AC_NAME}}</ng-option>\r\n                                    </ng-select> -->\r\n                                    <ng-select [(ngModel)]=\"selectedTransMemno\" #scheme formControlName=\"memno\"\r\n                                        (change)=\"getBankNo($event)\">\r\n                                        <ng-option *ngFor=\"let item of accountNumbers\" [value]=\"item\">\r\n                                            {{item.SHMASTER_AC_NO}} {{item.SHMASTER_AC_NAME}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['memno'].invalid && (angForm.controls['memno'].dirty || angForm.controls['memno'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['memno'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <!-- (change)=\"getTransferAccountList($event)\"\r\n                        (focus)=\"onFocus(scheme)\"> -->\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"INSTALLMENT_NO\">Salary Division<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                                    <div class=\"col-sm-12 col-md-3\">\r\n                                        <div class=\"form-group form-primary form-static-label\">\r\n                                            <!-- <span class=\"border-lable-flt\">\r\n                                                <ng-select [(ngModel)]=\"selectedSDiv\" formControlName=\"salaryDiv\">\r\n                                                    <ng-option *ngFor=\"let item of salDiv\" [value]=\"item\">\r\n                                                        {{item.AC_SALARYDIVISION_CODE}}</ng-option>\r\n                                                </ng-select>\r\n                                            </span> -->\r\n                                            <input type=\"text\" value=\"{{ salDiv }}\" style=\"width: 100%;\" >\r\n                                        </div>\r\n                                        <!-- <div class=\"form-group form-primary form-static-label\"\r\n                                            *ngIf=\"angForm.controls['salaryDiv'].invalid && (angForm.controls['salaryDiv'].dirty || angForm.controls['salaryDiv'].touched)\"\r\n                                            class=\"alert alert-danger\">\r\n                                            <div *ngIf=\"angForm.controls['salaryDiv'].errors?.required\">\r\n                                                This field is required.\r\n                                            </div>\r\n                                        </div> -->\r\n            \r\n                                    </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Sub Salary Division<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <!-- <ng-select [(ngModel)]=\"selectedSubSDiv\" #scheme formControlName=\"subsd\">\r\n                                        <ng-option *ngFor=\"let item of subSdivision\" [value]=\"item\">\r\n                                            {{item.SUB_SALARYDIVISION_CODE}}</ng-option>\r\n                                    </ng-select> -->\r\n                                    <input type=\"text\" value=\"{{ subsalDiv }}\" style=\"width: 100%;\">\r\n                                </span>\r\n                            </div>\r\n                            <!-- <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['subsd'].invalid && (angForm.controls['subsd'].dirty || angForm.controls['subsd'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['subsd'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div> -->\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">New Branch<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedNewBranch\" #scheme formControlName=\"newbranch\"\r\n                                        bindValue=\"value\" bindLabel=\"label\">\r\n                                        <ng-option *ngFor=\"let item of branch_code\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['newbranch'].invalid && (angForm.controls['newbranch'].dirty || angForm.controls['newbranch'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['newbranch'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">New Salary Division<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedNewSDiv\" #scheme formControlName=\"newsd\">\r\n                                        <ng-option *ngFor=\"let item of NewSdivision\" [value]=\"item\">\r\n                                            {{item.CODE}} {{item.NAME}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['newsd'].invalid && (angForm.controls['newsd'].dirty || angForm.controls['newsd'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['newsd'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">New Sub Salary Division<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectednewSubSDiv\" #scheme formControlName=\"Nsubsd\">\r\n                                        <ng-option *ngFor=\"let item of NewsubSdivision\" [value]=\"item\">\r\n                                            {{item.CODE}} {{item.NAME}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['Nsubsd'].invalid && (angForm.controls['Nsubsd'].dirty || angForm.controls['Nsubsd'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['Nsubsd'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\" Date\">From Date<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"Date\" id=\"Date\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" class=\"form-control\"\r\n                                        formControlName=\"fdate\" appButton minlength=\"10\" maxlength=\"10\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['fdate'].invalid && (angForm.controls['fdate'].dirty || angForm.controls['fdate'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['fdate'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n\r\n        <button class=\"btn  btn-outline-primary btn-sm\" (click)=\"reset()\">Cancel</button>\r\n\r\n        <button class=\"btn  btn-outline-primary btn-sm\" (click)=\" submit()\">Submit</button>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\nimport { BranchAndSalaryDCRoutingModule } from './branch-and-salary-dc-routing.module';\r\n\r\n\r\nimport { BranchAndSalaryDCComponent } from './branch-and-salary-dc.component';\r\nimport {DataTablesModule} from 'angular-datatables';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BranchAndSalaryDCRoutingModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DataTablesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n  ],\r\n  declarations: [BranchAndSalaryDCComponent],\r\n  providers:[{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },\r\n  OwnbranchMasterService,\r\n  SchemeCodeDropdownService,\r\n  SchemeAccountNoService\r\n]\r\n})\r\nexport class  BranchAndSalaryDCModule{ }"],"sourceRoot":"webpack:///"}