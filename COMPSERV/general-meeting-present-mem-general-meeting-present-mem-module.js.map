{"version":3,"sources":["./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/master/shares/general-meeting-present-mem/general-meeting-present-mem-routing.module.ts","./src/app/theme/master/shares/general-meeting-present-mem/general-meeting-present-mem.component.ts","./src/app/theme/master/shares/general-meeting-present-mem/general-meeting-present-mem.component.html","./src/app/theme/master/shares/general-meeting-present-mem/general-meeting-present-mem.module.ts"],"names":[],"mappings":"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","file":"general-meeting-present-mem-general-meeting-present-mem-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY, IS_RECURRING_TYPE: element.IS_RECURRING_TYPE };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = {\r\n                        label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE, installmentType: element.S_INSTTYPE, IS_DEPO_LOAN: element.IS_DEPO_LOAN, IS_GOLD_LOAN: element.IS_GOLD_LOAN,\r\n                        FIXED_MATURITY_AMT: element.FIXED_MATURITY_AMT, IS_WEEKLY_REPAY: element.IS_WEEKLY_REPAY\r\n                    };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE, code: element.S_APPL };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GeneralMeetingPresentMemComponent } from './general-meeting-present-mem.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    component: GeneralMeetingPresentMemComponent,\r\n    data: {\r\n      title: 'General Meeting Present Mem',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GeneralMeetingPresentMemRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { AnyCnameRecord } from 'dns';\r\nimport * as moment from 'moment';\r\nimport { first } from 'rxjs/operators';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport Swal from 'sweetalert2';\r\n// import { HttpClient, HttpParams } from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-general-meeting-present-mem',\r\n  templateUrl: './general-meeting-present-mem.component.html',\r\n  styleUrls: ['./general-meeting-present-mem.component.scss']\r\n})\r\nexport class GeneralMeetingPresentMemComponent implements OnInit {\r\n  // @ViewChild('AC_NO') AC_NO!: ElementRef<HTMLInputElement>;\r\n  // @ViewChild('AC_NAME') AC_NAME!: ElementRef<HTMLInputElement>;\r\n\r\n  formSubmitted = false;\r\n  angForm: FormGroup;\r\n  // currentYear: number;\r\n  //ngmodel variables\r\n  selectedScheme\r\n  selectedmfrom\r\n  selectedmto\r\n  selectedItems: AnyCnameRecord;\r\n  showRepo: boolean = false;\r\n  clicked: boolean;\r\n  flag: any;\r\n\r\n  //ngfor variables\r\n  Scheme\r\n  m_from\r\n  m_to\r\n  obj: any;\r\n  selectedDate: any;\r\n  userData: any;\r\n  AC_ACNOTYPE: any;\r\n  selected: any;\r\n  salaryDiv: any;\r\n  wdate: any;\r\n  // AC_NO: any;\r\n  // AC_NAME: any;\r\n  // shemeDetails: any\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder, private http: HttpClient,\r\n    public schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private _schemeService: SchemeAccountNoService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.createForm();\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      // console.log(data)\r\n      var filtered = data.filter(function (Schemecode) {\r\n        return (Schemecode.name == 'SH');\r\n      });\r\n      this.Scheme = filtered;\r\n      this.getIntroducer();\r\n\r\n    })\r\n    this.http.post('http://192.168.1.157:7276/share-master/getSalaryDivisionCode',{}).subscribe((data1: any) => {\r\n      this.salaryDiv = data1\r\n      console.log(data1);\r\n      // this.salary=data;\r\n     \r\n    });\r\n  }\r\n\r\n\r\n\r\n  getIntro(event) {\r\n    this.getschemename = event.name\r\n    this.getIntroducer()\r\n  }\r\n\r\n  getschemename: any\r\n  getIntroducer() {\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    let branchCode = result.branch.id;\r\n    this.obj = [this.selectedScheme, branchCode]\r\n\r\n\r\n    switch (this.getschemename) {\r\n\r\n      case 'SH':\r\n        this._schemeService.getShareSchemeList1(this.obj).subscribe(data => {\r\n          this.m_from = data;\r\n          this.m_to = data;\r\n\r\n        })\r\n        break;\r\n\r\n    }\r\n\r\n  }\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      scheme: ['', [Validators.required]],\r\n      wdate: ['', [Validators.required]],\r\n      year: ['', [Validators.required]],\r\n      myear: ['', [Validators.required]],\r\n      memfrom: ['', [Validators.required]],\r\n      memto: ['', [Validators.required]]\r\n\r\n    });\r\n  }\r\n  selectAll() {\r\n    const areAllSelected = this.shemeDetails.every(item => item.isSelected);\r\n    if (areAllSelected) {\r\n      this.unselectAll();\r\n    } else {\r\n      this.shemeDetails.forEach(item => item.isSelected = true);\r\n      this.updateSelectedSchemeIds();\r\n\r\n\r\n    }\r\n  }\r\n  updateSelectedSchemeIds() {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  unselectAll() {\r\n    this.shemeDetails.forEach(item => item.isSelected = false);\r\n    this.updateSelectedSchemeIds();\r\n  }\r\n  isShow: boolean = false\r\n\r\n\r\n  getCheck() {\r\n    if (this.angForm.controls.year.value && this.angForm.controls.myear.value) {\r\n      this.isShow = false;\r\n    } else {\r\n      this.isShow = true;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  shemeDetails: any[]\r\n  getYear(event) {\r\n    let userData = JSON.parse(localStorage.getItem('user'));\r\n    let myear = event.target.value;\r\n\r\n    const obj = {\r\n      \"year\": myear\r\n\r\n    }\r\n    this.http.post('http://192.168.1.157:7276/share-master/getmeetinglist', obj).subscribe((data: any) => {\r\n      // console.log(data);\r\n\r\n      this.shemeDetails = data\r\n\r\n      console.log(this.shemeDetails)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  getdate(event) {\r\n    const selectedDate = event.target.value;\r\n    // console.log('Selected date:', selectedDate);\r\n  }\r\n\r\n\r\n\r\n  selectedIds: any = [];\r\n  toggleSelection(item: any) {\r\n    item.isSelected = !item.isSelected;\r\n\r\n    if (item.isSelected) {\r\n      this.selectedIds.push(item);\r\n    } else {\r\n      const index = this.selectedIds.indexOf(item.id);\r\n      if (index !== -1) {\r\n        this.selectedIds.splice(index, 1);\r\n      }\r\n\r\n    }\r\n    this.updateSelectedSchemeIds();\r\n  }\r\n\r\n\r\n\r\n  \r\n   \r\n\r\n  submit() {\r\n    if (this.angForm.invalid) {\r\n      return;\r\n    }\r\n    let demo = this.selectedIds;\r\n    let formValues = this.angForm.value;\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n  \r\n\r\n    const obj = {\r\n      ACTYPE: formValues.scheme,\r\n      MEETING_DATE: moment(formValues.wdate, 'DD/MM/YYYY').format('DD/MM/YYYY'),\r\n      MEETING_FROM_YEAR: formValues.year,\r\n      MEETING_TO_YEAR: formValues.myear,\r\n      ACNOTYPE: this.getschemename,\r\n      USER: result.id,\r\n      arrdata: demo,\r\n      OFFICER_CODE: result.id,\r\n      AC_SALARYDIVISION_CODE: this.salaryDiv.AC_SALARYDIVISION_CODE,\r\n      SUB_SALARYDIVISION_CODE:this.salaryDiv.SUB_SALARYDIVISION_CODE,\r\n\r\n    };\r\n\r\n    this.http.post('http://192.168.1.157:7276/share-master/insertmeeting', obj).subscribe(\r\n      (response) => {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success',\r\n          text: 'Data submitted successfully',\r\n        });\r\n      },\r\n\r\n    );\r\n  }\r\n\r\n\r\n  close() {\r\n    this.resetForm()\r\n    this.selectedItems = null;\r\n\r\n  }\r\n  resetForm() {\r\n    this.angForm.controls.scheme.reset();\r\n    // this.angForm.controls.BRANCH_CODE.reset();\r\n    this.angForm.controls.wdate.reset();\r\n    this.angForm.controls.year.reset();\r\n    this.angForm.controls.myear.reset();\r\n    this.angForm.controls.memfrom.reset();\r\n    this.angForm.controls.memto.reset();\r\n    this.angForm.controls.checked.reset();\r\n\r\n\r\n\r\n    this.selectedItems = null;\r\n\r\n    this.showRepo = false;\r\n    this.clicked = false;\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>General Meeting Present Member</h5>\r\n            </div>\r\n            <form [formGroup]=\"angForm\" novalidate>\r\n\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Scheme<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedScheme\" #scheme formControlName=\"scheme\"\r\n                                        bindValue=\"value\" bindLabel=\"label\"\r\n                                        (change)=\"getIntro($event);getIntroducer();\">\r\n                                        <ng-option *ngFor=\"let item of Scheme\" [value]=\"item\">\r\n                                            {{item.id}} {{item.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['scheme'].invalid && (angForm.controls['scheme'].dirty || angForm.controls['scheme'].touched)\"\r\n                                class=\"alert alert-danger\">`\r\n                                <div *ngIf=\"angForm.controls['scheme'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"Date\">Date<sub class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"Date\" id=\"Date\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" class=\"form-control\"\r\n                                        formControlName=\"wdate\" appButton minlength=\"10\" (change)=\"getdate($event)\"\r\n                                        maxlength=\"10\" \r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['wdate'].invalid && (angForm.controls['wdate'].dirty || angForm.controls['wdate'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['wdate'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-1\" *ngIf=\"isShow\"> <label for=\"AC_BRANCH\">Year\r\n                                <sub class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-1\" *ngIf=\"isShow\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"INSTALLMENT_NO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"INSTALLMENT_NO\" maxlength=\"4\" formControlName=\"year\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['year'].invalid && (angForm.controls['year'].dirty || angForm.controls['year'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['year'].errors?.pattern || angForm.controls['year'].errors?.required || angForm.controls['year'].errors?.maxlength\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"pt-2\" *ngIf=\"isShow\">-</div>\r\n                        <div class=\"col-sm-12 col-md-1\" *ngIf=\"isShow\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"INSTALLMENT_NO\" class=\"form-control\" placeholder=\" \"\r\n                                        id=\"INSTALLMENT_NO\" maxlength=\"4\" formControlName=\"myear\"\r\n                                        (change)=\"getYear($event)\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['myear'].invalid && (angForm.controls['myear'].dirty || angForm.controls['myear'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['myear'].errors?.pattern || angForm.controls['myear'].errors?.required || angForm.controls['myear'].errors?.maxlength\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Member from<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedmfrom\" #scheme formControlName=\"memfrom\"\r\n                                        bindValue=\"value\" bindLabel=\"label\">\r\n                                        <ng-option *ngFor=\"let item of m_from\" [value]=\"item\">\r\n                                            {{item.label}} {{item.name}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['memfrom'].invalid && (angForm.controls['memfrom'].dirty || angForm.controls['memfrom'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['memfrom'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_BRANCH\">Member To<sub\r\n                                    class=\"required\">*</sub></label>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select [(ngModel)]=\"selectedmto\" #scheme formControlName=\"memto\"\r\n                                        bindValue=\"value\" bindLabel=\"label\" (change)=\"getCheck()\">\r\n                                        <ng-option *ngFor=\"let item of m_to\" [value]=\"item\">\r\n                                            {{item.label}} {{item.name}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['memto'].invalid && (angForm.controls['memto'].dirty || angForm.controls['memto'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['memto'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12\">\r\n                        <button class=\"btn btn-outline-primary btn-sm\" (click)=\"selectAll()\">Select All</button>\r\n                        <button class=\"btn btn-outline-primary btn-sm\" (click)=\"unselectAll()\">Unselect All</button>\r\n\r\n                        <div class=\"table-responsive\">\r\n                            <table class=\"table table-striped table-bordered table-hover compact\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Member No</th>\r\n                                        <th>Member Name</th>\r\n                                        <th>Present/Absent</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let item of shemeDetails\">\r\n                                        <td>{{item.AC_NO}}</td>\r\n                                        <td>{{item.AC_NAME}}</td>\r\n                                        <td><input type=\"checkbox\" class=\"form-control\" formControlName=\"checked\"\r\n                                                [checked]=\"item.isSelected\" (change)=\"toggleSelection(item)\"></td>\r\n\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <button class=\"btn  btn-outline-primary btn-sm\" (click)=\"close()\">Close</button>\r\n\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"submit()\" [disabled]=\"angForm.invalid\">Submit</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GeneralMeetingPresentMemRoutingModule } from './general-meeting-present-mem-routing.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GeneralMeetingPresentMemComponent } from './general-meeting-present-mem.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [GeneralMeetingPresentMemComponent],\r\n  imports: [\r\n    CommonModule,\r\n    GeneralMeetingPresentMemRoutingModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DataTablesModule,\r\n    NgbModule,\r\n    // BrowserModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n    \r\n  ],\r\n\r\n  providers:[{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },\r\n  SchemeCodeDropdownService,\r\n  SchemeAccountNoService\r\n]\r\n\r\n\r\n\r\n})\r\nexport class GeneralMeetingPresentMemModule { }\r\n"],"sourceRoot":"webpack:///"}