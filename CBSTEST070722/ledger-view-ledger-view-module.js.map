{"version":3,"sources":["./src/app/shared/dropdownService/ac-master-dropdown.service.ts","./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/view/ledger-view/ledger-view-routing.module.ts","./src/app/theme/view/ledger-view/ledger-view.component.ts","./src/app/theme/view/ledger-view/ledger-view.component.html","./src/app/theme/view/ledger-view/ledger-view.module.ts"],"names":[],"mappings":"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","file":"ledger-view-ledger-view-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ACMasterDropdownService {\r\n\r\n    // // gl-account-master\"; \r\n    url = environment.base_url;\r\n    acMasterObject = new Array();\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getACMasterList() {\r\n        this.acMasterObject = [];\r\n        return this.http.get<any>(this.url + '/gl-account-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\r\n                    this.acMasterObject.push(obj)\r\n                });\r\n                return this.acMasterObject;\r\n            }));\r\n    }\r\n\r\n    public getACMasterList1() {\r\n        this.acMasterObject = [];\r\n        return this.http.get<any>(this.url + '/gl-account-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { AC_NAME: element.AC_NAME, id: element.id, AC_NO: element.AC_NO };\r\n                    this.acMasterObject.push(obj)\r\n                });\r\n                return this.acMasterObject;\r\n            }));\r\n    }\r\n\r\n    public getACMasterbranch(branchid) {\r\n        this.acMasterObject = [];\r\n        return this.http.get<any>(this.url + '/gl-account-master/branch/' + branchid)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.AC_NAME, value: element.id, name: element.AC_NO };\r\n                    // let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id };\r\n                    let obj = { label: element.AC_NO + ' ' + element.AC_NAME + ' ', value: element.id, name: element.AC_NO };\r\n                    this.acMasterObject.push(obj)\r\n                });\r\n                return this.acMasterObject;\r\n            }));\r\n    }\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n//import {GeneralLedgerComponent} from './general-ledger.component';\r\nimport { LedgerViewComponent } from './ledger-view.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LedgerViewComponent,\r\n    data: {\r\n      title: 'Ledger View',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LedgerViewRoutingModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { ACMasterDropdownService } from 'src/app/shared/dropdownService/ac-master-dropdown.service'\r\nimport { environment } from 'src/environments/environment';\r\nimport { first } from 'rxjs/operators';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs-compat';\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { LegderViewService } from './ledger-view.service'\r\n@Component({\r\n  selector: 'app-ledger-view',\r\n  templateUrl: './ledger-view.component.html',\r\n  styleUrls: ['./ledger-view.component.scss']\r\n})\r\nexport class LedgerViewComponent implements OnInit {\r\n  angForm: FormGroup;\r\n  formSubmitted = false;\r\n  //api \r\n  url = environment.base_url;\r\n  // dropdown variables\r\n  ngscheme: any = null\r\n  accountedit: any = null\r\n  allScheme: any[]\r\n  schemeACNo: any;\r\n  scheme: any[];\r\n  GLACNooption: any[];\r\n  branch_code//from ownbranchmaster\r\n  ngBranchCode: any = null\r\n  // Date variables\r\n  todate: any = null;\r\n  fromdate: any = null\r\n  accountOpenDate: any = null\r\n  maxDate: Date;\r\n  minDate: Date;\r\n  bsValue = new Date();\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  // for grid variable declaration\r\n  dormantac: boolean = false\r\n  acclosedon: boolean = false\r\n  freezeac: boolean = false\r\n  obj: any\r\n  getschemename: any\r\n  bankacno\r\n  acCloseDate\r\n  freezStataus\r\n  transactions\r\n  tableData = []\r\n  drcr\r\n  debitTotal: number = 0\r\n  creditTotal: number = 0\r\n  normalInt: number = 0\r\n  recpayInt: number = 0\r\n  overDueAmt: number = 0\r\n  penalInt: number = 0\r\n  recpenalInt: number = 0\r\n  otherAmount: number = 0\r\n  addedPenal: number = 0\r\n  grandTotal: number = 0\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private ACMasterDropdownService: ACMasterDropdownService,\r\n    private ownbranchMasterService: OwnbranchMasterService,\r\n    private config: NgSelectConfig,\r\n    private _service: LegderViewService\r\n  ) {\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate());\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n    // this.bsRangeValue = [this.bsValue, this.maxDate];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      var allscheme = data.filter(function (scheme) {\r\n        return (scheme.name == 'SB' || scheme.name == 'CA' || scheme.name == 'AG' || scheme.name == 'GS' || scheme.name == 'PG' || scheme.name == 'TD' || scheme.name == 'LN' || scheme.name == 'DS' || scheme.name == 'CC' || scheme.name == 'GL')\r\n      });\r\n      this.allScheme = allscheme;\r\n    })\r\n\r\n    this.schemeCodeDropdownService.getTermDepositSchemePatD().pipe(first()).subscribe(data => {\r\n      this.allScheme.push(data)\r\n    })\r\n    //branch List\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n    })\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      BRANCH_CODE: ['', [Validators.required]],\r\n      AC_TYPE: ['', [Validators.required]],\r\n      AC_NO: ['', [Validators.required]],\r\n      FROM_DATE: ['', [Validators.required]],\r\n      TO_DATE: ['', [Validators.required]],\r\n      AC_OPDATE: ['', [Validators.required]],\r\n      AMOUNT: [''],\r\n    });\r\n  }\r\n\r\n  schemechange(event) {\r\n    this.getschemename = event.name\r\n    this.ngscheme = event.value\r\n    this.getAccountlist()\r\n  }\r\n\r\n  // Fetching account from seleted scheme\r\n  getAccountlist() {\r\n    this.accountedit = null\r\n    this.tableData = []\r\n    this.transactions = null\r\n    this.debitTotal = 0\r\n    this.creditTotal = 0\r\n    this.normalInt = 0\r\n    this.recpayInt = 0\r\n    this.overDueAmt = 0\r\n    this.penalInt = 0\r\n    this.recpenalInt = 0\r\n    this.otherAmount = 0\r\n    this.addedPenal = 0\r\n    this.grandTotal = 0\r\n    let obj = [this.ngscheme, this.ngBranchCode]\r\n    switch (this.getschemename) {\r\n      case 'SB':\r\n        this.schemeAccountNoService.getSavingMasterAcListForBalUpdation(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n      case 'CA':\r\n        this.schemeAccountNoService.getCurrentMasterAcListForBalUpdation(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n      case 'AG':\r\n        this.schemeAccountNoService.getPigmyAgentMasterAcListForBalUpdation(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n      case 'GS':\r\n        this.schemeAccountNoService.getAnamatMasterAcListForBalUpdation(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n      case 'PG':\r\n        this.schemeAccountNoService.getPigmyAccountMasterAcListForBalUpdation(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n      case 'TD':\r\n        this.schemeAccountNoService.getTermDepositMasterAcListForBalUpdation(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n      case 'LN':\r\n        this.schemeAccountNoService.getTermLoanMasterAcListForBalUpdation(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n      case 'DS':\r\n        this.schemeAccountNoService.getDisputeLoanMasterAcListForBalUpdation(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n      case 'CC':\r\n        this.schemeAccountNoService.getCashCreditMasterAcListForBalUpdation(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n      case 'GL':\r\n        this.schemeAccountNoService.getGeneralLedgerMasterAcListForBalUpdation(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n      case 'IV':\r\n        this.schemeAccountNoService.getInvestmentMasterAcListForBalUpdation(obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  //get account details\r\n  getAccountDetails(event) {\r\n    debugger\r\n    this.tableData = []\r\n    this.transactions = null\r\n    this.debitTotal = 0\r\n    this.creditTotal = 0\r\n    this.normalInt = 0\r\n    this.recpayInt = 0\r\n    this.overDueAmt = 0\r\n    this.penalInt = 0\r\n    this.recpenalInt = 0\r\n    this.otherAmount = 0\r\n    this.addedPenal = 0\r\n    this.grandTotal = 0\r\n    this.bankacno = event.bankacno\r\n    this.dormantac = event.dormant\r\n    this.acclosedon = event.acClose == null || event.acClose == '' ? false : true\r\n    this.acCloseDate = event.acClose == null || event.acClose == '' ? '' : event.acClose\r\n    this.freezeac = event.freez == null || event.freez == '' ? false : true\r\n    this.freezStataus = event.freez == null || event.freez == '' ? '' : event.freez\r\n    let maturedAmount = Number(event.autoMaturedPayableAmt) + Number(event.autoMaturedIntrestAmt)\r\n    this.angForm.patchValue({\r\n      AC_OPDATE: event.opendate,\r\n      AMOUNT: maturedAmount\r\n    })\r\n    this.accountOpenDate = moment(event.opendate, 'DD/MM/YYYY')\r\n    this.accountOpenDate = this.accountOpenDate._d\r\n  }\r\n\r\n  //transactions list in table\r\n  getTransactionsDeatils() {\r\n    this.tableData = []\r\n    this.debitTotal = 0\r\n    this.creditTotal = 0\r\n    this.normalInt = 0\r\n    this.recpayInt = 0\r\n    this.overDueAmt = 0\r\n    this.penalInt = 0\r\n    this.recpenalInt = 0\r\n    this.otherAmount = 0\r\n    this.addedPenal = 0\r\n    this.grandTotal = 0\r\n    this.transactions = null\r\n    let obj = [this.getschemename, this.ngscheme, this.bankacno, moment(this.angForm.controls['FROM_DATE'].value).format('DD/MM/YYYY'), moment(this.angForm.controls['TO_DATE'].value).format('DD/MM/YYYY')]\r\n    this.http.post(this.url + '/ledger-view/ledgerView', obj).subscribe((data) => {\r\n      let closeBal = 0\r\n      let grandOpening = 0\r\n      grandOpening = Math.abs(data[0]?.openingBal)\r\n      closeBal = Math.abs(data[0]?.openingBal)\r\n      data[0]?.openingBal < 0 ? this.drcr = 'Cr' : this.drcr = 'Dr'\r\n      // this.transactions = data\r\n      this.transactions = this.sortData(data);\r\n      if (this.transactions.length != 0) {\r\n        let obj = {\r\n          TRAN_DATE: moment(this.angForm.controls['FROM_DATE'].value).format('DD/MM/YYYY'),\r\n          NARRATION: 'Opening Balance',\r\n          closeBalance: closeBal\r\n        }\r\n        this.tableData.push(obj)\r\n        this.transactions.forEach((element) => {\r\n          if (element.TRAN_SOURCETYPE != 'Opening Balance' && element.TRAN_STATUS != '2') {\r\n            //record wise other amount \r\n            let otherAmt = 0\r\n            otherAmt = Number(element.OTHER1_AMOUNT) + Number(element.OTHER2_AMOUNT) + Number(element.OTHER3_AMOUNT) + Number(element.OTHER4_AMOUNT) + Number(element.OTHER5_AMOUNT) + Number(element.OTHER6_AMOUNT) + Number(element.OTHER7_AMOUNT) + Number(element.OTHER8_AMOUNT) + Number(element.OTHER9_AMOUNT) + Number(element.OTHER11_AMOUNT)\r\n            element['otherAmt'] = otherAmt\r\n\r\n            //total credit and debit amount\r\n            if (element.TRAN_STATUS != '0') {\r\n              if (element.TRAN_DRCR == 'D') { this.debitTotal = this.debitTotal + Number(element.TRAN_AMOUNT) }\r\n              if (element.TRAN_DRCR == 'C') { this.creditTotal = this.creditTotal + Number(element.TRAN_AMOUNT) }\r\n              //closing balance calculation\r\n              if (this.drcr == 'Cr') {\r\n                element.TRAN_DRCR == 'C' ? closeBal = closeBal + Number(element.TRAN_AMOUNT) : closeBal = closeBal - Number(element.TRAN_AMOUNT)\r\n                element['closeBalance'] = closeBal\r\n              }\r\n              else if (this.drcr == 'Dr') {\r\n                element.TRAN_DRCR == 'D' ? closeBal = closeBal + Number(element.TRAN_AMOUNT) : closeBal = closeBal - Number(element.TRAN_AMOUNT)\r\n                element['closeBalance'] = closeBal\r\n              }\r\n              //column wise total amount\r\n              element.INTEREST_AMOUNT != undefined ? this.normalInt = this.normalInt + Number(element.INTEREST_AMOUNT) : this.normalInt = this.normalInt + 0\r\n              element.RECPAY_INT_AMOUNT != undefined ? this.recpayInt = this.recpayInt + Number(element.RECPAY_INT_AMOUNT) : this.recpayInt = this.recpayInt + 0\r\n              element.OTHER10_AMOUNT != undefined ? this.overDueAmt = this.overDueAmt + Number(element.OTHER10_AMOUNT) : this.overDueAmt = this.overDueAmt + 0\r\n              element.PENAL_INTEREST != undefined ? this.penalInt = this.penalInt + Number(element.PENAL_INTEREST) : this.penalInt = this.penalInt + 0\r\n              element.REC_PENAL_INT_AMOUNT != undefined ? this.recpenalInt = this.recpenalInt + Number(element.REC_PENAL_INT_AMOUNT) : this.recpenalInt = this.recpenalInt + 0\r\n              element.ADDED_PENAL_INTEREST != undefined ? this.addedPenal = this.addedPenal + Number(element.ADDED_PENAL_INTEREST) : this.addedPenal = this.addedPenal + 0\r\n              this.otherAmount = this.otherAmount + otherAmt\r\n            }\r\n            else {\r\n              element['closeBalance'] = closeBal\r\n            }\r\n            this.tableData.push(element)\r\n          }\r\n        });\r\n        console.log(this.tableData, 'table')\r\n        //grand total amount\r\n        this.grandTotal = this.creditTotal + grandOpening\r\n\r\n      }\r\n      else {\r\n        this.tableData = []\r\n        this.debitTotal = 0\r\n        this.creditTotal = 0\r\n        this.normalInt = 0\r\n        this.recpayInt = 0\r\n        this.overDueAmt = 0\r\n        this.penalInt = 0\r\n        this.recpenalInt = 0\r\n        this.otherAmount = 0\r\n        this.addedPenal = 0\r\n        this.grandTotal = 0\r\n        Swal.fire('Info', 'No Records Found', 'info')\r\n      }\r\n    })\r\n\r\n    console.log(this.tableData, 'sorted data')\r\n  }\r\n\r\n  sortData(data) {\r\n    return data.sort((a, b) => {\r\n      return <any>new Date(a.TRAN_DATE) - <any>new Date(b.TRAN_DATE);\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Ledger View</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"BRANCH_CODE\">Branch<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-1\"> <label for=\"AC_TYPE\">Scheme<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-3\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        (change)=\"schemechange($event)\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        required placeholder=\"Scheme\">\r\n                                        <ng-option *ngFor=\"let values of allScheme\" [value]=\"values\">\r\n                                            {{values.id}} {{values.label}} </ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\" *ngIf=\"dormantac\">\r\n                            <div><label style=\"color: #1e5bc5\">Dormant Account</label></div>\r\n                        </div>\r\n                        <div class=\"col-sm\" *ngIf=\"acclosedon\">\r\n                            <div><label style=\"color: #1e5bc5\">Account Closed On:\r\n                                    {{acCloseDate}}</label></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_NO\">Account Number<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_NO\" bindValue=\"value\" [(ngModel)]=\"accountedit\"\r\n                                        formControlName=\"AC_NO\" bindLabel=\"label\" (change)=\"getAccountDetails($event)\"\r\n                                        title=\"Compulsory Selection\" required placeholder=\"Account No.\">\r\n                                        <ng-option *ngFor=\"let values of schemeACNo\" [value]=\"values\">\r\n                                            {{values.label}} {{values.name}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_NO'].invalid && (angForm.controls['AC_NO'].dirty || angForm.controls['AC_NO'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\" *ngIf=\"freezeac\">\r\n                            <div><label style=\"color: #1e5bc5\">Freez\r\n                                    Status:{{freezStataus}}</label></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"FROM_DATE\">From Date<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"FROM_DATE\" id=\"FROM_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"fromdate\" [bsValue]=\"bsValue\"\r\n                                        [minDate]=\"accountOpenDate\" [maxDate]=\"maxDate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"FROM_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['FROM_DATE'].invalid && (angForm.controls['FROM_DATE'].dirty || angForm.controls['FROM_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['FROM_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TO_DATE\">To Date<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"TO_DATE\" id=\"TO_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"todate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [minDate]=\"fromdate\"\r\n                                        [maxDate]=\"maxDate\" [ngClass]=\"{'form-submitted': formSubmitted}\"\r\n                                        formControlName=\"TO_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['TO_DATE'].invalid && (angForm.controls['TO_DATE'].dirty || angForm.controls['TO_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['TO_DATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_OPDATE\">Account Opening Date</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AC_OPDATE\" id=\"AC_OPDATE\"\r\n                                        class=\"form-control\" formControlName=\"AC_OPDATE\" disabled>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_OPDATE'].invalid && (angForm.controls['AC_OPDATE'].dirty || angForm.controls['AC_OPDATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_OPDATE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-3\"><label for=\"AMOUNT\">Matured But Not Paid Amount</label></div>\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"AMOUNT\" class=\"form-control\" placeholder=\" \" id=\"AMOUNT\"\r\n                                        formControlName=\"AMOUNT\" disabled>\r\n                                </span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\"\r\n                                (click)=\"getTransactionsDeatils()\">View</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"col-12\">\r\n            <div class=\"table-responsive\">\r\n                <table [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table\" *ngIf=\"tableData?.length != 0\">\r\n                    <thead>\r\n                        <td class=\"td_center\">Date</td>\r\n                        <td>Cheque Number</td>\r\n                        <td>Particulars</td>\r\n                        <td class=\"td_center\">Transaction Type</td>\r\n                        <td class=\"td_right\">Debit Amount</td>\r\n                        <td class=\"td_right\">Credit Amount</td>\r\n                        <td class=\"td_right\">Closing Balance</td>\r\n                        <td class=\"td_center\">Officer ID</td>\r\n                        <td>Normal Interest</td>\r\n                        <td>Recbl/Payable Interest</td>\r\n                        <td>Overdue Interest</td>\r\n                        <td>Penal Interest</td>\r\n                        <td>Receivable Penal</td>\r\n                        <td class=\"td_right\">Other Amount</td>\r\n                        <td>Added Penal</td>\r\n                        <td class=\"td_right\">Voucher Number</td>\r\n                    </thead>\r\n                    <tbody *ngIf=\"tableData?.length != 0\">\r\n                        <tr *ngFor=\"let data of tableData; \r\n                        let indexOfelement = index\">\r\n                            <td>{{data.TRAN_DATE}}</td>\r\n                            <td>{{data.CHEQUE_NO}}</td>\r\n                            <td [ngClass]=\"{'form-submitted': formSubmitted}\">{{data.NARRATION}}</td>\r\n                            <td>{{data.TRAN_TYPE}}</td>\r\n                            <td class=\"td_right\">{{data.TRAN_DRCR=='D'?data.TRAN_AMOUNT:''}}</td>\r\n                            <td class=\"td_right\">{{data.TRAN_DRCR=='C'?data.TRAN_AMOUNT:''}}</td>\r\n                            <td class=\"td_right\">{{data.closeBalance}} {{drcr}}</td>\r\n                            <td>{{data.OFFICER_CODE}}</td>\r\n                            <td class=\"td_right\">{{data.INTEREST_AMOUNT}}</td>\r\n                            <td class=\"td_right\">{{data.RECPAY_INT_AMOUNT}}</td>\r\n                            <td class=\"td_right\">{{data.OTHER10_AMOUNT}}</td>\r\n                            <td class=\"td_right\">{{data.PENAL_INTEREST}}</td>\r\n                            <td class=\"td_right\">{{data.REC_PENAL_INT_AMOUNT}}</td>\r\n                            <td class=\"td_right\">{{data.otherAmt}}</td>\r\n                            <td class=\"td_right\">{{data.ADDED_PENAL_INTEREST}}</td>\r\n                            <td class=\"td_right\">{{data.TRAN_NO}}</td>\r\n                        </tr>\r\n                        <tr style=\"font-weight: 600px;\">\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td>Total</td>\r\n                            <td></td>\r\n                            <td class=\"td_right\">{{debitTotal}}</td>\r\n                            <td class=\"td_right\">{{creditTotal}}</td>\r\n                            <td></td>\r\n                            <td>Balance</td>\r\n                            <td class=\"td_right\">{{normalInt}}</td>\r\n                            <td class=\"td_right\">{{recpayInt}}</td>\r\n                            <td class=\"td_right\">{{overDueAmt}}</td>\r\n                            <td class=\"td_right\">{{penalInt}}</td>\r\n                            <td class=\"td_right\">{{recpenalInt}}</td>\r\n                            <td class=\"td_right\">{{otherAmount}}</td>\r\n                            <td class=\"td_right\">{{addedPenal}}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr style=\"font-weight: 600px;\">\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td style=\"font-weight: 600px;\">Total Deposit Amount</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td style=\"font-weight: 600px;\" class=\"td_right\">{{creditTotal}}</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr style=\"color: green;\">\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td style=\" font-size: 13px;\"><strong> Grand Total</strong></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td style=\" font-size: 13px;\" class=\"td_right\"><strong>{{grandTotal}}</strong></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tbody *ngIf=\"tableData?.length == 0\">\r\n                        <tr>\r\n                            <td colspan=\"13\" class=\"no-data-available\" style=\"text-align: center;\">\r\n                                No data!\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { LedgerViewRoutingModule } from './ledger-view-routing.module'\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LedgerViewComponent } from './ledger-view.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { BsDatepickerModule, DatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { ACMasterDropdownService } from 'src/app/shared/dropdownService/ac-master-dropdown.service';\r\nimport { OwnbranchMasterService } from 'src/app/shared/dropdownService/own-branch-master-dropdown.service';\r\nimport { LegderViewService } from './ledger-view.service'\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LedgerViewRoutingModule,\r\n    SharedModule,\r\n    DataTablesModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot(),\r\n  ],\r\n  declarations: [LedgerViewComponent],\r\n  providers: [SchemeCodeDropdownService, SchemeAccountNoService, ACMasterDropdownService, OwnbranchMasterService, LegderViewService,{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },]\r\n})\r\nexport class LedgerViewModule { }\r\n"],"sourceRoot":"webpack:///"}