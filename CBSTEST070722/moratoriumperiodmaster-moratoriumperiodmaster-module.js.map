{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/master/maintainance/moratoriumperiodmaster/moratorium-period-master.service.ts","./src/app/theme/master/maintainance/moratoriumperiodmaster/moratoriumperiodmaster-routing.module.ts","./src/app/theme/master/maintainance/moratoriumperiodmaster/moratoriumperiodmaster.component.ts","./src/app/theme/master/maintainance/moratoriumperiodmaster/moratoriumperiodmaster.component.html","./src/app/theme/master/maintainance/moratoriumperiodmaster/moratoriumperiodmaster.module.ts","./src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service.ts"],"names":[],"mappings":"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","file":"moratoriumperiodmaster-moratoriumperiodmaster-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class MoratoriumPeriod {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  url = environment.base_url;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/moratorium-period-master/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        Swal.fire('Please Input Proper Data !');\r\n        return throwError(error);\r\n      })\r\n    )\r\n  }\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/moratorium-period-master/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/moratorium-period-master/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/moratorium-period-master/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { MoratoriumperiodmasterComponent} from './moratoriumperiodmaster.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MoratoriumperiodmasterComponent,\r\n    data: {\r\n      title: 'Moratorium Period Master',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MoratoriumPeriodMasterRoutingModule { }\r\n","import { Component, OnInit, ElementRef, ViewChild, } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { IOption } from 'ng-select';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { Subject } from \"rxjs\";\r\nimport { first } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\n// Service File For Handling CRUD Operation\r\nimport { MoratoriumPeriod } from './moratorium-period-master.service';\r\nimport { SystemMasterParametersService } from 'src/app/theme/utility/scheme-parameters/system-master-parameters/system-master-parameters.service';\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { OwnbranchMasterService } from '../../../../shared/dropdownService/own-branch-master-dropdown.service'\r\n// Handling datatable data\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n// For fetching values from backend\r\ninterface MoratoriumPeriodMaster {\r\n  AC_ACNOTYPE: string;\r\n  AC_TYPE: string;\r\n  AC_NO: number;\r\n  INSTALLMENT_NO: number;\r\n  PERIOD: number;\r\n  TRAN_DATE: Date;\r\n  // USER_CODE:string;\r\n  AC_RESO_NO: string;\r\n  AC_RESO_DATE: Date\r\n}\r\n\r\n@Component({\r\n  selector: 'app-moratoriumperiodmaster',\r\n  templateUrl: './moratoriumperiodmaster.component.html',\r\n  styleUrls: ['./moratoriumperiodmaster.component.scss']\r\n})\r\nexport class MoratoriumperiodmasterComponent implements OnInit {\r\n  @ViewChild(\"autofocus\") myInputField: ElementRef;//input field autofocus\r\n  formSubmitted = false;\r\n  //api \r\n  url = environment.base_url;\r\n\r\n  angForm: FormGroup;\r\n\r\n  // For reloading angular datatable after CRUD operation\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  // dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  // Store data from backend\r\n  moratoriumperiodmaster: MoratoriumPeriodMaster[];\r\n\r\n  // for date \r\n  resolutiondate: any = null\r\n  maxDate: Date;\r\n  minDate: Date;\r\n\r\n  //Datatable variable\r\n  dtExportButtonOptions: any = {};\r\n  Data: any;\r\n\r\n  //variables for pagination\r\n  page: number = 1;\r\n  passenger: any;\r\n  itemsPerPage = 10;\r\n  totalItems: any;\r\n  currentJustify = 'start';\r\n  active = 1;\r\n  activeKeep = 1;\r\n\r\n  // Variables for search \r\n  filterObject: { name: string; type: string; }[];\r\n  filter: any;\r\n  filterForm: FormGroup;\r\n\r\n  // Filter Variable\r\n  filterData = {};\r\n\r\n\r\n  // Variables for hide/show add and update button\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n  newbtnShow: boolean = false;\r\n  //variable to get Id to update\r\n  updateID: number = 0;\r\n\r\n  //dropdown variables\r\n  scheme: any\r\n  schemeedit: any = null\r\n  accountedit: any = null\r\n  schemeACNo: unknown;\r\n  Accountno: any;\r\n  openingDate: any;\r\n  datemax: any;\r\n  AC_ACNOTYPE: any;\r\n  branch_code\r\n\r\n  branchCode\r\n  obj: any\r\n  getschemename: any\r\n  ngBranchCode: any = null\r\n  updatecheckdata: any\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private moratoriumPeriod: MoratoriumPeriod,\r\n    public schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private systemParameter: SystemMasterParametersService,\r\n    private_router: Router,\r\n    private config: NgSelectConfig,\r\n    private ownbranchMasterService: OwnbranchMasterService,) {\r\n    this.maxDate = new Date();\r\n    this.minDate = new Date();\r\n    this.minDate.setDate(this.minDate.getDate() - 1);\r\n    this.maxDate.setDate(this.maxDate.getDate())\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSystemParaDate()\r\n    this.createForm();\r\n    // Fetching Server side data\r\n    this.dtExportButtonOptions = {\r\n      pagingType: 'full_numbers',\r\n      paging: true,\r\n      pageLength: 10,\r\n      serverSide: true,\r\n      processing: true,\r\n      ajax: (dataTableParameters: any, callback) => {\r\n        dataTableParameters.minNumber = dataTableParameters.start + 1;\r\n        dataTableParameters.maxNumber =\r\n          dataTableParameters.start + dataTableParameters.length;\r\n        let datatableRequestParam: any;\r\n        this.page = dataTableParameters.start / dataTableParameters.length;\r\n\r\n        dataTableParameters.columns.forEach(element => {\r\n\r\n          if (element.search.value != '') {\r\n            let string = element.search.value;\r\n            this.filterData[element.data] = string;\r\n          } else {\r\n            let getColumnName = element.data;\r\n            let columnValue = element.value;\r\n            if (this.filterData.hasOwnProperty(element.data)) {\r\n\r\n              let value = this.filterData[getColumnName];\r\n              if (columnValue != undefined || value != undefined) {\r\n                delete this.filterData[element.data];\r\n              }\r\n            }\r\n          }\r\n        });\r\n        dataTableParameters['filterData'] = this.filterData;\r\n        this.http\r\n          .post<DataTableResponse>(\r\n            this.url + '/moratorium-period-master',\r\n            dataTableParameters\r\n          ).subscribe(resp => {\r\n            this.moratoriumperiodmaster = resp.data;\r\n            callback({\r\n              recordsTotal: resp.recordsTotal,\r\n              recordsFiltered: resp.recordsTotal,\r\n              data: []\r\n            });\r\n          });\r\n      },\r\n      columnDefs: [{\r\n        targets: '_all',\r\n        defaultContent: \"\"\r\n      }],\r\n      columns: [\r\n        {\r\n          title: 'Action',\r\n        },\r\n\r\n        {\r\n          title: 'Scheme',\r\n          data: 'AC_TYPE'\r\n        },\r\n\r\n        {\r\n          title: 'Account Number',\r\n          data: 'AC_NO'\r\n        },\r\n\r\n        {\r\n          title: 'Installment Number',\r\n          data: 'INSTALLMENT_NO'\r\n        },\r\n        {\r\n          title: 'Moratorium Period',\r\n          data: 'PERIOD'\r\n        },\r\n\r\n        {\r\n          title: 'Resolution Date',\r\n          data: 'AC_RESO_DATE'\r\n        },\r\n\r\n        {\r\n          title: 'Resolution Number',\r\n          data: 'AC_RESO_NO'\r\n        },\r\n\r\n      ],\r\n      dom: 'Blrtip',\r\n    }\r\n\r\n    this.http.get(this.url + '/scheme-parameters/moratorium').subscribe((data) => {\r\n      this.scheme = data\r\n    })\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n    })\r\n\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    if (result.RoleDefine[0].Role.id == 1) {\r\n      this.angForm.controls['BRANCH_CODE'].enable()\r\n    }\r\n    else {\r\n      this.angForm.controls['BRANCH_CODE'].disable()\r\n      this.ngBranchCode = result.branch.id\r\n    }\r\n\r\n  }\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      AC_TYPE: ['', [Validators.required, Validators.pattern]],\r\n      AC_NO: ['', [Validators.required, Validators.pattern]],\r\n      INSTALLMENT_NO: ['', [Validators.required, Validators.pattern]],\r\n      PERIOD: ['', [Validators.required, Validators.pattern]],\r\n      AC_RESO_DATE: ['', [Validators.required, Validators.pattern]],\r\n      AC_RESO_NO: ['', [Validators.required, Validators.pattern]],\r\n      TRAN_DATE: [''],\r\n      BRANCH_CODE: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  //get scheme value and type\r\n  schemechange(event) {\r\n    this.getschemename = event.S_ACNOTYPE\r\n    this.schemeedit = event.id\r\n    this.getSchemeAccount()\r\n  }\r\n\r\n  //get agent account number after branch selection\r\n  getBranch(event) {\r\n    this.branchCode = event.name\r\n    this.schemeedit = null\r\n    this.getSchemeAccount()\r\n  }\r\n\r\n  //get account no according scheme for introducer\r\n  getSchemeAccount() {\r\n    this.obj = [this.schemeedit, this.ngBranchCode]\r\n    this.accountedit = null\r\n    switch (this.getschemename) {\r\n      case 'LN':\r\n        this.schemeAccountNoService.getTermLoanSchemeList1(this.obj).pipe(first()).subscribe(data => {\r\n          this.schemeACNo = data;\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  Accountnochange(event) {\r\n    this.Accountno = event.value;\r\n    this.accountedit = event.value\r\n  }\r\n\r\n  // Method to insert data into database through NestJS\r\n  submit() {\r\n    let resolutiondate\r\n    this.formSubmitted = true;\r\n    if (this.angForm.valid) {\r\n      const formVal = this.angForm.value;\r\n      const dataToSend = {\r\n        AC_TYPE: this.schemeedit,\r\n        AC_NO: this.Accountno,\r\n        'BRANCH_CODE': this.ngBranchCode,\r\n        'INSTALLMENT_NO': formVal.INSTALLMENT_NO,\r\n        'PERIOD': formVal.PERIOD,\r\n        'TRAN_DATE': formVal.TRAN_DATE,\r\n        'AC_RESO_NO': formVal.AC_RESO_NO,\r\n        'AC_RESO_DATE': (formVal.AC_RESO_DATE == '' || formVal.AC_RESO_DATE == 'Invalid date' || formVal.AC_RESO_DATE == undefined || formVal.AC_RESO_DATE == null) ? resolutiondate = '' : resolutiondate = moment(formVal.AC_RESO_DATE).format('DD/MM/YYYY'),\r\n      }\r\n      this.moratoriumPeriod.postData(dataToSend).subscribe(data1 => {\r\n        Swal.fire('Success!', 'Data Added Successfully !', 'success');\r\n        this.formSubmitted = false;\r\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n          dtInstance.ajax.reload()\r\n        });\r\n      }, (error) => {\r\n        console.log(error)\r\n      })\r\n      //To clear form\r\n      this.resetForm();\r\n    }\r\n    else {\r\n      Swal.fire('Warning!', 'Please Fill All Mandatory Field!', 'warning');\r\n    }\r\n  }\r\n\r\n  //get sys para current date\r\n  getSystemParaDate() {\r\n    this.systemParameter.getFormData(1).subscribe(data => {\r\n      this.angForm.patchValue({\r\n        'TRAN_DATE': data.CURRENT_DATE,\r\n      })\r\n    })\r\n  }\r\n\r\n  //cancel button function\r\n  addNewData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n    this.newbtnShow = false;\r\n    this.resetForm();\r\n    this.schemeedit = null\r\n    this.accountedit = null\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    if (result.RoleDefine[0].Role.id == 1) {\r\n      this.angForm.controls['BRANCH_CODE'].enable()\r\n    }\r\n    else {\r\n      this.angForm.controls['BRANCH_CODE'].disable()\r\n      this.ngBranchCode = result.branch.id\r\n    }\r\n  }\r\n\r\n  //Method for append data into fields\r\n  editClickHandler(id) {\r\n    let resolutiondate\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n    this.newbtnShow = true;\r\n    this.moratoriumPeriod.getFormData(id).subscribe(data => {\r\n      this.updatecheckdata = data\r\n      this.updateID = data.id;\r\n      this.schemeedit = data.AC_TYPE\r\n      this.ngBranchCode = data.BRANCH_CODE\r\n      this.getschemename = data.AC_ACNOTYPE\r\n      this.getSchemeAccount()\r\n      this.angForm.patchValue({\r\n        'AC_ACNOTYPE': data.AC_ACNOTYPE,\r\n        'INSTALLMENT_NO': data.INSTALLMENT_NO,\r\n        'PERIOD': data.PERIOD,\r\n        'TRAN_DATE': data.TRAN_DATE,\r\n        'AC_RESO_NO': data.AC_RESO_NO,\r\n        'AC_RESO_DATE': (data.AC_RESO_DATE == 'Invalid date' || data.AC_RESO_DATE == '' || data.AC_RESO_DATE == null) ? resolutiondate = '' : resolutiondate = data.AC_RESO_DATE,\r\n      })\r\n      this.accountedit = data.AC_NO\r\n    })\r\n  }\r\n\r\n\r\n  //Method for update data \r\n  updateData() {\r\n    let resolutiondate\r\n    let data = this.angForm.value;\r\n    data['id'] = this.updateID;\r\n    if (this.updatecheckdata.AC_RESO_DATE != data.AC_RESO_DATE) {\r\n      (data.AC_RESO_DATE == 'Invalid date' || data.AC_RESO_DATE == '' || data.AC_RESO_DATE == null) ? (resolutiondate = '', data['AC_RESO_DATE'] = resolutiondate) : (resolutiondate = data.AC_RESO_DATE, data['AC_RESO_DATE'] = moment(resolutiondate).format('DD/MM/YYYY'))\r\n    }\r\n    this.moratoriumPeriod.updateData(data).subscribe(() => {\r\n      Swal.fire('Success!', 'Record Updated Successfully !', 'success');\r\n      this.showButton = true;\r\n      this.updateShow = false;\r\n      this.newbtnShow = false;\r\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n        dtInstance.ajax.reload()\r\n      });\r\n      this.resetForm();\r\n    })\r\n  }\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n    this.getSystemParaDate()\r\n    this.ngBranchCode = null\r\n    this.schemeedit = null\r\n    this.accountedit = null\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    if (result.RoleDefine[0].Role.id == 1) {\r\n      this.angForm.controls['BRANCH_CODE'].enable()\r\n    }\r\n    else {\r\n      this.angForm.controls['BRANCH_CODE'].disable()\r\n      this.ngBranchCode = result.branch.id\r\n    }\r\n  }\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // this.myInputField.nativeElement.focus();\r\n\r\n    this.dtTrigger.next();\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      $('#moratoriumperiodtable tfoot tr').appendTo('#moratoriumperiodtable thead');\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup change', function () {\r\n          if (this['value'] != '') {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          } else {\r\n            that\r\n              .search(this['value'])\r\n              .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Moratorium Period Master</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"angForm\" novalidate #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"BRANCH_CODE\">Branch<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH_CODE\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                        formControlName=\"BRANCH_CODE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" (change)=\"getBranch($event)\"\r\n                                        placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['BRANCH_CODE'].invalid && (angForm.controls['BRANCH_CODE'].dirty || angForm.controls['BRANCH_CODE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['BRANCH_CODE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"TRAN_DATE\">Transaction Date</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" name=\"TRAN_DATE\" class=\"form-control\" formControlName=\"TRAN_DATE\"\r\n                                        disabled>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_TYPE\">Scheme<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"id\" [(ngModel)]=\"schemeedit\"\r\n                                        (change)=\"schemechange($event)\" formControlName=\"AC_TYPE\" bindLabel=\"label\"\r\n                                        title=\"Compulsory Selection\" required placeholder=\"Scheme\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.S_APPL}} {{values.S_NAME}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_TYPE'].invalid && (angForm.controls['AC_TYPE'].dirty || angForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_NO\">Account Number<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_NO\" bindValue=\"value\" [(ngModel)]=\"accountedit\"\r\n                                        (change)=\"Accountnochange($event)\" formControlName=\"AC_NO\" bindLabel=\"label\"\r\n                                        title=\"Compulsory Selection\" required placeholder=\"Account No.\">\r\n                                        <ng-option *ngFor=\"let values of schemeACNo\" [value]=\"values\">\r\n                                            {{values.label}} {{values.name}}</ng-option>\r\n                                    </ng-select>\r\n\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_NO'].invalid && (angForm.controls['AC_NO'].dirty || angForm.controls['AC_NO'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"angForm.controls['AC_NO'].errors?.required\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"INSTALLMENT_NO\">Installment Number<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" style=\"text-align: right;\" name=\"INSTALLMENT_NO\"\r\n                                        class=\"form-control\" placeholder=\" \" pattern=\"^[0-9]+$\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                        title=\"Input allowed only 0-9\" maxlength=\"3\" id=\"INSTALLMENT_NO\"\r\n                                        formControlName=\"INSTALLMENT_NO\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['INSTALLMENT_NO'].invalid && (angForm.controls['INSTALLMENT_NO'].dirty || angForm.controls['INSTALLMENT_NO'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['INSTALLMENT_NO'].errors?.pattern || angForm.controls['INSTALLMENT_NO'].errors?.required || angForm.controls['INSTALLMENT_NO'].errors?.maxlength\">\r\n                                    This field is required and Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"PERIOD\">Moratorium Period(in months)</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" style=\"text-align: right;\" name=\"PERIOD\" class=\"form-control\"\r\n                                        placeholder=\" \" (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                        id=\"PERIOD\" #month pattern=\"^[0-9]+$\" maxlength=\"3\"\r\n                                        title=\"Input allowed only 0-9\" formControlName=\"PERIOD\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['PERIOD'].invalid && (angForm.controls['PERIOD'].dirty || angForm.controls['PERIOD'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['PERIOD'].errors?.pattern || angForm.controls['PERIOD'].errors?.required || angForm.controls['PERIOD'].errors?.maxlength\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_RESO_DATE\">Resolution Date<sub\r\n                                    class=\"required\">*</sub></label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" placeholder=\"dd/mm/yyyy\" name=\"AC_RESO_DATE\" id=\"AC_RESO_DATE\"\r\n                                        class=\"form-control\" [(ngModel)]=\"resolutiondate\"\r\n                                        [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\" [maxDate]=\"maxDate\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" formControlName=\"AC_RESO_DATE\"\r\n                                        (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                        bsDatepicker>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_RESO_DATE'].invalid && (angForm.controls['AC_RESO_DATE'].dirty || angForm.controls['AC_RESO_DATE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['AC_RESO_DATE'].errors?.pattern || angForm.controls['AC_RESO_DATE'].errors?.required || angForm.controls['AC_RESO_DATE'].errors?.maxlength\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-2\"> <label for=\"AC_RESO_NO\">Resolution Number</label></div>\r\n                        <div class=\"col-sm-12 col-md-2\">\r\n                            <div class=\"form-group input-group\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <input type=\"text\" style=\"text-align: right;\" name=\"AC_RESO_NO\" class=\"form-control\"\r\n                                        placeholder=\" \" (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                        id=\"AC_RESO_NO\" pattern=\"^[0-9]+$\" maxlength=\"3\" title=\"Input allowed only 0-9\"\r\n                                        formControlName=\"AC_RESO_NO\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"angForm.controls['AC_RESO_NO'].invalid && (angForm.controls['AC_RESO_NO'].dirty || angForm.controls['AC_RESO_NO'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div\r\n                                    *ngIf=\"angForm.controls['AC_RESO_NO'].errors?.pattern || angForm.controls['AC_RESO_NO'].errors?.required || angForm.controls['AC_RESO_NO'].errors?.maxlength\">\r\n                                    Input allowed only 0-9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n\r\n                            <button class=\"btn btn-outline-primary btn-sm\" style=\"float: right;\"\r\n                                (click)=\"submit($event)\" *ngIf=\"showButton\">Submit</button>\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button> &nbsp;\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"addNewData()\"\r\n                                *ngIf=\"newbtnShow\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card shadow\">\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"moratoriumperiodtable\" datatable [dtOptions]=\"dtExportButtonOptions\"\r\n                                [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover compact\">\r\n                                <tbody *ngIf=\"moratoriumperiodmaster?.length != 0\">\r\n                                    <tr *ngFor=\"let data of moratoriumperiodmaster\">\r\n                                        <td><span class=\"fa fa-fw fa-edit field-icon\" id=\"editbutton\"\r\n                                                (click)=\"editClickHandler(data.id)\" placement=\"bottom\"\r\n                                                ngbTooltip=\"Edit\"></span> &nbsp;\r\n\r\n                                        </td>\r\n                                        <td class=\"td_right\">{{data.AC_TYPE == null ? '-':data.moratoriumScheme.S_APPL}}\r\n                                        </td>\r\n                                        <td class=\"td_right\">{{data.AC_NO}}</td>\r\n                                        <td class=\"td_right\">{{data.INSTALLMENT_NO}}</td>\r\n                                        <td class=\"td_right\">{{data.PERIOD}}</td>\r\n                                        <td class=\"td_center\">{{data.AC_RESO_DATE}}</td>\r\n                                        <td class=\"td_right\">{{data.AC_RESO_NO}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"moratoriumperiodmaster?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"6\" class=\"no-data-available\">No data!</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot #filters class=\"filters\">\r\n                                    <tr class=\"testing\">\r\n                                        <th class=\"testing\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_TYPE\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_NO\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"INSTALLMENT_NO\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"PERIOD\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_RESO_DATE\"></th>\r\n                                        <th><input type=\"text\" class=\"form-control\" name=\"AC_RESO_NO\"></th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MoratoriumperiodmasterComponent } from './moratoriumperiodmaster.component';\r\nimport { MoratoriumPeriodMasterRoutingModule } from './moratoriumperiodmaster-routing.module'\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { MoratoriumPeriod } from './moratorium-period-master.service';\r\nimport { SchemeAccountNoService } from 'src/app/shared/dropdownService/schemeAccountNo.service';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { SystemMasterParametersService } from '../../../utility/scheme-parameters/system-master-parameters/system-master-parameters.service'\r\nimport { SchemeCodeDropdownService } from 'src/app/shared/dropdownService/scheme-code-dropdown.service';\r\nimport { OwnbranchMasterService } from '../../../../shared/dropdownService/own-branch-master-dropdown.service'\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    FormsModule, ReactiveFormsModule,\r\n    MoratoriumPeriodMasterRoutingModule,\r\n    DataTablesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot()\r\n\r\n  ],\r\n  declarations: [MoratoriumperiodmasterComponent],\r\n  bootstrap: [MoratoriumperiodmasterComponent],\r\n  providers: [\r\n    MoratoriumPeriod,\r\n    SchemeCodeDropdownService,\r\n    SchemeAccountNoService,\r\n    SystemMasterParametersService,\r\n    OwnbranchMasterService,\r\n    {\r\n\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UserAuthInterceptor,\r\n      multi: true\r\n    },]\r\n})\r\n\r\n\r\nexport class MoratoriumPeriodMasterModule { }","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment'\r\n\r\n@Injectable()\r\nexport class SystemMasterParametersService {\r\n  // Variable for handleError\r\n  [x: string]: any;\r\n  // API \r\n  // url = \"http://localhost:4000/system-master-parameters\";\r\n  url = environment.base_url;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Insertion Operation\r\n  postData(data: any): Observable<any> {\r\n    return this.http.post(this.url + '/system-master-parameters/insert', data).pipe(map((res) => res),\r\n      catchError((error) => {\r\n        let errorMessage = 'Please add valid length';\r\n        Swal.fire('Kindly Add Valid Length !');\r\n        return throwError(errorMessage);\r\n      })\r\n    )\r\n  }\r\n\r\n  // For append data\r\n  getFormData(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/' + id).pipe(catchError(this.handleError));\r\n  }\r\n  //Updation Operation\r\n  updateData(data): Observable<any> {\r\n    return this.http.put(this.url + '/system-master-parameters/update', data);\r\n  }\r\n  //Deletion Operation\r\n  deleteData(id: any): Observable<any> {\r\n    return this.http.delete(this.url + '/system-master-parameters/delete/' + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getData(): Observable<any> {\r\n    return this.http.get(this.url + '/system-master-parameters/').pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}