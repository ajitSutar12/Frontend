{"version":3,"sources":["./src/app/theme/auth/login/basic-login/basic-login-routing.module.ts","./src/app/theme/auth/login/basic-login/basic-login.component.ts","./src/app/theme/auth/login/basic-login/basic-login.component.html","./src/app/theme/auth/login/basic-login/basic-login.module.ts"],"names":[],"mappings":"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","file":"basic-login-basic-login-module.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {BasicLoginComponent} from './basic-login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BasicLoginComponent,\r\n    data: {\r\n      title: 'Simple Login'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BasicLoginRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { AuthService } from '../../auth.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-basic-login',\r\n  templateUrl: './basic-login.component.html',\r\n  styleUrls: ['./basic-login.component.scss']\r\n})\r\nexport class BasicLoginComponent implements OnInit {\r\n\r\n  isInvalidNumber: boolean = false;\r\n  isInvalidPassword: boolean = false;\r\n  mobileno: string;\r\n  password: string;\r\n  passType: string = 'password';\r\n  resetPassword: boolean = false;\r\n  forgetPassword: boolean = true;\r\n  constructor(private router: Router, private _authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\r\n  }\r\n  login() {\r\n    let dataObject = {\r\n      \"username\": this.mobileno,\r\n      \"password\": this.password\r\n    }\r\n    this._authService.login(dataObject).subscribe(data => {\r\n      console.log(data);\r\n      localStorage.setItem('token', data.access_token);\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n      localStorage.setItem('system_master', JSON.stringify(data.system_master))\r\n      let passwordExpDate = data.user.EXP_DATE;\r\n      let nowDate = moment().format('YYYY-MM-DD');\r\n      let dateData = moment(passwordExpDate).format('YYYY-MM-DD');\r\n      console.log(dateData);\r\n      console.log(nowDate);\r\n      if (moment(dateData).isAfter(nowDate)) {\r\n        // window.open('/CBS/dashboard/default', \"_blank\", \"toolbar=yes,scrollbars=yes,fullscreen=1,resizable=yes,top=00,left=1000,width=5000,height=1000\");\r\n        // window.open('/CBS/dashboard/default','','toolbar=0,titlebar=0,fullscreen=1,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width=800,height=600,left = 82,top = 54');\r\n        // window.open('/dashboard/default', \"_blank\", \"toolbar=yes,scrollbars=yes,fullscreen=1,resizable=yes,top=00,left=1000,width=5000,height=1000\");\r\n        this.router.navigate(['/dashboard/default']);\r\n\r\n      } else {\r\n        this.resetPassword = true;\r\n        this.forgetPassword = false;\r\n        Swal.fire('Error!', 'Your password is expired please reset your password', 'error');\r\n      }\r\n    }, err => {\r\n\r\n      if (err.error.statusCode == 401) {\r\n        Swal.fire({\r\n          title: '',\r\n          text: \"Your access denied\",\r\n          icon: 'error',\r\n          confirmButtonColor: '#229954',\r\n          confirmButtonText: 'OK'\r\n        })\r\n      } else if (err.error.statusCode == 400) {\r\n        Swal.fire({\r\n          title: '',\r\n          text: err.error.message,\r\n          icon: 'error',\r\n          confirmButtonColor: '#229954',\r\n          confirmButtonText: 'OK'\r\n        })\r\n      } else {\r\n        Swal.fire({\r\n          title: '',\r\n          text: \"Please Check Your Mobile Number And Password\",\r\n          icon: 'error',\r\n          confirmButtonColor: '#229954',\r\n          confirmButtonText: 'OK'\r\n        })\r\n      }\r\n\r\n    })\r\n  }\r\n  showHidePassword() {\r\n    if (this.passType == 'password') {\r\n      this.passType = 'text';\r\n    }\r\n    else {\r\n      this.passType = 'password';\r\n    }\r\n  }\r\n}\r\n","<section class=\"login-block\">\r\n    <!-- Container-fluid starts -->\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <form  action=\"javascript:\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-7\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-body\">\r\n                                    <img src=\"assets/images/modal/bank.png\" class=\"img-fluid\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-5\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-body\">\r\n                                    <div class=\"row m-b-20\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <h3 class=\"text-center\">Sign In</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-11\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input type=\"text\" name=\"mobileno\" class=\"form-control\" placeholder=\" \" id=\"mobileno\"\r\n                                                        required pattern=\"^[A-Za-z]+$\" maxlength=\"10\" \r\n                                                        [(ngModel)]=\"mobileno\" title=\"Input allowed only A-Z\" >\r\n                                                    <label for=\"mobileno\">User Name<sub class=\"required\">* </sub></label>\r\n                                                </span>\r\n                                            </div>\r\n                                            <!-- <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['User_Name'].invalid && (angForm.controls['F_NAME'].dirty || angForm.controls['F_NAME'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div\r\n                                                    *ngIf=\"angForm.controls['F_NAME'].errors?.pattern || angForm.controls['F_NAME'].errors?.required\">\r\n                                                    This field is required and Input allowed only A-Z\r\n                                                </div>\r\n                                            </div> -->\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-11\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input [type]=\"passType\" name=\"password\" class=\"form-control\" placeholder=\" \" id=\"password\"\r\n                                                        required pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" maxlength=\"10\" \r\n                                                        [(ngModel)]=\"password\" title=\"Input allowed only A-Z\" >\r\n                                                        <div style=\"    display: block;\r\n                                                        margin-left: 95%;\r\n                                                        margin-top: -10%;\">\r\n                                                            <span toggle=\"#password-field\"\r\n                                                      style=\" margin: 12px 0px 0px -19px\"\r\n                                                         class=\"fa fa-fw fa-eye field-icon toggle-password\"\r\n                                                         (click)=\"showHidePassword()\"></span>\r\n                                                        </div>\r\n                                                        \r\n                                                    <label for=\"password\">Password<sub class=\"required\">* </sub></label>\r\n                                                </span>\r\n                                            </div>\r\n                                            <!-- <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['User_Name'].invalid && (angForm.controls['F_NAME'].dirty || angForm.controls['F_NAME'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div\r\n                                                    *ngIf=\"angForm.controls['F_NAME'].errors?.pattern || angForm.controls['F_NAME'].errors?.required\">\r\n                                                    This field is required and Input allowed only A-Z\r\n                                                </div>\r\n                                            </div> -->\r\n                                        </div>\r\n                                        <!-- <div class=\"col-sm\">\r\n                                            <div class=\"form-group input-group\">\r\n                                                <span class=\"border-lable-flt\">\r\n                                                    <input [type]=\"passType\" name=\"password\" [(ngModel)]=\"password\"\r\n                                                    class=\"form-control\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                                                    minlength=\"8\" maxlength=\"8\"\r\n                                                    title=\"Must contain at least one number, one uppercase, lowercase latter and at least 8 characters\"\r\n                                                    style=\"width: 90%;\" >\r\n                                                    <span toggle=\"#password-field\"\r\n                                           style=\"display: absolute; margin: 5% 0% 0% 90%; font-size: 95%; cursor: pointer;\"\r\n                                            class=\"fa fa-fw fa-eye field-icon toggle-password\"\r\n                                            (click)=\"showHidePassword()\"></span>\r\n                                                    <label for=\"password\">Password<sub class=\"required\">* </sub></label>\r\n                                                </span>\r\n                                            </div>\r\n                                            <!-- <div class=\"form-group form-primary form-static-label\"\r\n                                                *ngIf=\"angForm.controls['User_Name'].invalid && (angForm.controls['F_NAME'].dirty || angForm.controls['F_NAME'].touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div\r\n                                                    *ngIf=\"angForm.controls['F_NAME'].errors?.pattern || angForm.controls['F_NAME'].errors?.required\">\r\n                                                    This field is required and Input allowed only A-Z\r\n                                                </div>\r\n                                            </div> \r\n                                        </div> -->\r\n                                        <div class=\"col-sm\">\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n\r\n                                    <!-- <div class=\"form-group form-primary\">\r\n                                        <input type=\"text\" name=\"email\" class=\"form-control\" required=\"\">\r\n                                        <span class=\"form-bar\"></span>\r\n                                        <label class=\"float-label\">Your Email Address</label>\r\n                                    </div>\r\n                                    <div class=\"form-group form-primary\">\r\n                                        <input type=\"password\" name=\"password\" class=\"form-control\" required=\"\">\r\n                                        <span class=\"form-bar\"></span>\r\n                                        <label class=\"float-label\">Password</label>\r\n                                    </div> -->\r\n                                    <!-- <div class=\"form-group form-primary form-static-label\">\r\n                                        <input type=\"text\" name=\"mobileno\" [(ngModel)]=\"mobileno\" class=\"form-control\"\r\n                                            minlength=\"10\" maxlength=\"10\" pattern=\"^[0-9]+$\"\r\n                                            title=\"Please Enter Mobile Number\">\r\n                                        <span class=\"form-bar\"></span>\r\n                                        <label class=\"float-label\">Your Mobile Number</label>\r\n                                        <label class=\"invalid\">Invalid Number</label>\r\n                                        *ngIf=\"isInvalidNumber\"\r\n                                    </div> -->\r\n                                    <!-- <div class=\"form-group form-primary form-static-label\">\r\n                                        <input [type]=\"passType\" name=\"password\" [(ngModel)]=\"password\"\r\n                                            class=\"form-control\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                                            minlength=\"8\" maxlength=\"8\"\r\n                                            title=\"Must contain at least one number, one uppercase, lowercase latter and at least 8 characters\"\r\n                                            style=\"width: 90%;\">\r\n                                        <span toggle=\"#password-field\"\r\n                                            style=\"font-size: 20px;color: #262d38; cursor: pointer;\"\r\n                                            class=\"fa fa-fw fa-eye field-icon toggle-password\"\r\n                                            (click)=\"showHidePassword()\"></span>\r\n                                        <span class=\"form-bar\"></span>\r\n                                        <label class=\"float-label\">Password</label>\r\n                                        <label class=\"invalid\" *ngIf=\"isInvalidPassword\">Invalid Password</label>\r\n                                    </div> -->\r\n                                    <div class=\"row m-t-25 text-left\">\r\n                                        <div class=\"col-12\">\r\n                                            <!-- <div class=\"checkbox-fade fade-in-primary d-\">\r\n                                                <label>\r\n                                                    <span class=\"text-inverse\" *ngIf=\"resetPassword\">Reset Password</span>\r\n                                                 \r\n                                                </label>\r\n                                            </div> -->\r\n                                            <div class=\"forgot-phone text-right f-left\">\r\n                                                <a [routerLink]=\"['/auth/resetpassword']\" class=\"text-right f-w-600\"> \r\n                                                    Reset Password?</a>\r\n                                            </div>\r\n                                            <div class=\"forgot-phone text-right f-right\" *ngIf=\"forgetPassword\">\r\n                                                <a [routerLink]=\"['/auth/forgot']\" class=\"text-right f-w-600\"> Forgot\r\n                                                    Password?</a>\r\n                                                <!-- <a [routerLink]=\"['/']\" class=\"text-right f-w-600\">Reset Password</a> -->\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row m-t-30\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <!-- <a [routerLink]=\"['/dashboard/default']\"><button type=\"button\" class=\"btn btn-primary btn-md btn-block waves-light text-center m-b-20\" mdbRippleRadius><b>Sign in</b></button></a> -->\r\n                                            <button\r\n                                                class=\"btn btn-primary btn-md btn-block waves-light text-center m-b-20\"\r\n                                                (click)=\"login()\" mdbRippleRadius>\r\n                                                <b style=\"color: white;\">Sign in</b>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-8\">\r\n                                        </div>\r\n                                        <div class=\"col-md-4 text-right f-right\">\r\n                                            <img src=\"assets/images/comp.png\" alt=\"small-logo.png\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <!-- end of form -->\r\n            </div>\r\n            <!-- end of col-sm-12 -->\r\n        </div>\r\n        <!-- end of row -->\r\n    </div>\r\n    <!-- end of container-fluid -->\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BasicLoginComponent } from './basic-login.component';\r\nimport { BasicLoginRoutingModule } from './basic-login-routing.module';\r\nimport { SharedModule } from '../../../../shared/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthService } from '../../auth.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BasicLoginRoutingModule,\r\n    SharedModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [BasicLoginComponent],\r\n  providers:[AuthService]\r\n})\r\nexport class BasicLoginModule { }\r\n"],"sourceRoot":"webpack:///"}