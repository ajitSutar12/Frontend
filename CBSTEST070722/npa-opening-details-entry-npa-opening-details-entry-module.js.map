{"version":3,"sources":["./src/app/shared/dropdownService/own-branch-master-dropdown.service.ts","./src/app/shared/dropdownService/scheme-code-dropdown.service.ts","./src/app/theme/master/maintainance/npa-opening-details-entry/npa-opening-details-entry-routing.module.ts","./src/app/theme/master/maintainance/npa-opening-details-entry/npa-opening-details-entry.component.ts","./src/app/theme/master/maintainance/npa-opening-details-entry/npa-opening-details-entry.component.html","./src/app/theme/master/maintainance/npa-opening-details-entry/npa-opening-details-entry.module.ts","./src/app/theme/master/maintainance/npa-opening-details-entry/npa-opening-details-entry.service.ts"],"names":[],"mappings":"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","file":"npa-opening-details-entry-npa-opening-details-entry-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IOption } from 'ng-select';\r\nimport { map } from 'rxjs/operators';\r\n// Used to Call API\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class OwnbranchMasterService {\r\n    OwnbranchMasterObject = new Array();\r\n    // API \r\n    //// own-branch-master\"; \r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getOwnbranchList() {\r\n        this.OwnbranchMasterObject = []\r\n        return this.http.get<any>(this.url + '/own-branch-master')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.CODE + ' ' + element.NAME, value: element.id, name: element.CODE };\r\n                    this.OwnbranchMasterObject.push(obj)\r\n                });\r\n                return this.OwnbranchMasterObject;\r\n            }));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class SchemeCodeDropdownService {\r\n    schemeCodeObject = new Array();\r\n    schemeObject = new Array();\r\n    // // scheme-parameters\";\r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getSchemeCodeList(scheme) {\r\n        this.schemeCodeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/' + scheme)\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_APPL, id: element.S_ACNOTYPE, dividend: element.DIVIDEND_PERCENTAGE, divMethod: element.INTEREST_RULE, isAddBonus: element.IS_ADD_BONUS_IN_DIVIDEND, INT_ROUND_OFF: element.INT_ROUND_OFF };\r\n                    this.schemeCodeObject.push(obj)\r\n                });\r\n                return this.schemeCodeObject;\r\n            }));\r\n    }\r\n\r\n\r\n    public getAllSchemeList() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE, prematureRate: element.LESS_PREMATURE_INT_RATE, schemeMethod: element.INTEREST_RULE, monthDays: element.S_INTCALTP, Quarterly: element.COMPOUND_INT_BASIS, interestUptoCalDate: element.IS_INTUPTODATE, afterMatureIntRate: element.AFTER_MATURE_INT_RATE, rebateRate: element.REBATE_INTRATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getAllSchemeList1() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n\r\n                return this.schemeObject;\r\n            }));\r\n\r\n    }\r\n\r\n    public getTermDepositSchemeRD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/term/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    // let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n\r\n                    let obj = { label: element.S_NAME, value: element.id, name: element.S_ACNOTYPE, id: element.S_APPL, glacno: element.S_GLACNO, intapp: element.S_INT_APPLICABLE, SVR_CHARGE_GLCODE: element.SVR_CHARGE_GLCODE, SVR_CHARGE_RATE: element.SVR_CHARGE_RATE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositSchemePatD() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/pat/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n    public getTermDepositeScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_ACNOTYPE + ' ' + element.S_APPL, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getTdReceiptScheme() {\r\n        return this.http.get<any>(this.url + '/scheme-parameters/')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.RECEIPT_TYPE, value: element.id };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n    public getAllSchemeListINT() {\r\n        this.schemeObject = []\r\n        return this.http.get<any>(this.url + '/scheme-parameters/interest')\r\n            .pipe(map(ele => {\r\n                ele.forEach(element => {\r\n                    let obj = { label: element.S_APPL + ' ' + element.S_NAME, value: element.id, name: element.S_ACNOTYPE };\r\n                    this.schemeObject.push(obj)\r\n                });\r\n                return this.schemeObject;\r\n            }));\r\n    }\r\n\r\n\r\n}","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { NpaOpeningDetailsEntryComponent } from './npa-opening-details-entry.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NpaOpeningDetailsEntryComponent,\r\n    data: {\r\n      title: 'NPA Opening Details Entry',\r\n      icon: 'icon-home',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NpaOpeningDetailsEntryRoutingModule { }\r\n","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { NpaOpeningDetailsEntryService } from './npa-opening-details-entry.service';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service'\r\nimport { SchemeAccountNoService } from '../../../../shared/dropdownService/schemeAccountNo.service'\r\nimport { environment } from \"src/environments/environment\";\r\nimport { first } from 'rxjs/operators';\r\nimport { Subject } from \"rxjs\";\r\nimport { OwnbranchMasterService } from '../../../../shared/dropdownService/own-branch-master-dropdown.service'\r\n// Angular Datatable Directive\r\nimport { DataTableDirective } from \"angular-datatables\";\r\nclass DataTableResponse {\r\n  data: any[];\r\n  draw: number;\r\n  recordsFiltered: number;\r\n  recordsTotal: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-npa-opening-details-entry',\r\n  templateUrl: './npa-opening-details-entry.component.html',\r\n  styleUrls: ['./npa-opening-details-entry.component.scss']\r\n})\r\n\r\nexport class NpaOpeningDetailsEntryComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  //api\r\n  url = environment.base_url;\r\n  formSubmitted = false;\r\n\r\n  httpData: any;\r\n  dtExportButtonOptions: any = {};\r\n  makeForm: any;\r\n\r\n  npaOpeningForm: FormGroup;\r\n\r\n  showButton: boolean = true;\r\n  updateShow: boolean = false;\r\n\r\n\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n\r\n  //dropdown ngmodel variables\r\n\r\n  ngscheme: any = null\r\n  ngfromac: any = null\r\n  ngtoac: any = null\r\n  scheme\r\n  ngBranchCode: any = null\r\n  branch_code\r\n  ToAC\r\n  fromAC\r\n  getschemename\r\n  showTable: boolean = false\r\n  mem\r\n  arrTable: any;\r\n  npaEntryArray = []\r\n  gridData: any;\r\n  Code: any;\r\n  filtername: any;\r\n  constructor(private fb: FormBuilder, private http: HttpClient,\r\n    private _npaService: NpaOpeningDetailsEntryService,\r\n    private schemeCodeDropdownService: SchemeCodeDropdownService,\r\n    private schemeAccountNoService: SchemeAccountNoService,\r\n    private ownbranchMasterService: OwnbranchMasterService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 10,\r\n      dom: 'ftip'\r\n    };\r\n    this.createForm()\r\n    this.schemeCodeDropdownService.getAllSchemeList().pipe(first()).subscribe(data => {\r\n      var allscheme = data.filter(function (scheme) {\r\n        return (scheme.name == 'LN' || scheme.name == 'CC' || scheme.name == 'DS');\r\n      });\r\n      this.scheme = allscheme;\r\n    })\r\n    this.ownbranchMasterService.getOwnbranchList().pipe(first()).subscribe(data => {\r\n      this.branch_code = data;\r\n    })\r\n\r\n    let data: any = localStorage.getItem('user');\r\n    let result = JSON.parse(data);\r\n    if (result.RoleDefine[0].Role.id == 1) {\r\n      this.npaOpeningForm.controls['BRANCH'].enable()\r\n    }\r\n    else {\r\n      this.npaOpeningForm.controls['BRANCH'].disable()\r\n      this.ngBranchCode = result.branch.id\r\n    }\r\n  }\r\n  createForm() {\r\n    this.npaOpeningForm = this.fb.group({\r\n      AC_TYPE: ['', [Validators.required]],\r\n      FROM_AC: ['', [Validators.required]],\r\n      TO_AC: ['', [Validators.required]],\r\n      BRANCH: ['', [Validators.required]]\r\n    });\r\n  }\r\n  getBranch() {\r\n    this.ngscheme = null\r\n    this.ngfromac = null\r\n    this.ngtoac = null\r\n    this.arrTable = []\r\n    this.npaEntryArray = []\r\n  }\r\n  //get account no according scheme\r\n  getAccountList(event) {\r\n    this.ngfromac = null\r\n    this.ngtoac = null\r\n    this.arrTable = []\r\n    this.npaEntryArray = []\r\n    let obj = [this.ngscheme, this.ngBranchCode]\r\n    switch (event.name) {\r\n      case 'DS':\r\n        this.schemeAccountNoService.getDisputeLoanSchemeList1(obj).pipe(first()).subscribe(data => {\r\n          this.ToAC = data\r\n          this.fromAC = data\r\n        })\r\n        break;\r\n\r\n      case 'LN':\r\n        this.schemeAccountNoService.getTermLoanSchemeList1(obj).pipe(first()).subscribe(data => {\r\n          this.ToAC = data\r\n          this.fromAC = data\r\n        })\r\n\r\n        break;\r\n\r\n      case 'CC':\r\n        this.schemeAccountNoService.getCashCreditSchemeList1(obj).pipe(first()).subscribe(data => {\r\n          this.ToAC = data\r\n          this.fromAC = data\r\n        })\r\n        break;\r\n    }\r\n    this.getschemename = event.name\r\n  }\r\n  getTable() {\r\n    this.arrTable = []\r\n    this.npaEntryArray = []\r\n    var memFrom = this.npaOpeningForm.controls['FROM_AC'].value\r\n    var memTo = this.npaOpeningForm.controls['TO_AC'].value\r\n    if (this.npaOpeningForm.controls['FROM_AC'].value <= this.npaOpeningForm.controls['TO_AC'].value) {\r\n      this.showTable = true\r\n      this.mem = [memFrom, memTo, this.ngscheme, this.ngBranchCode, this.getschemename]\r\n      this.http.get(this.url + '/term-loan-master/npaopening/' + this.mem).subscribe((data) => {\r\n        this.arrTable = data;\r\n        this.gridData = data;\r\n      });\r\n    }\r\n    else {\r\n      Swal.fire(\"To Account Number Must Be Greater Than From Account Number\");\r\n      this.npaOpeningForm.patchValue({\r\n        TO_AC: ''\r\n      })\r\n      this.arrTable = []\r\n      this.npaEntryArray = []\r\n    }\r\n  }\r\n\r\n  //filter object\r\n  filterObject(ele, type) {\r\n    let matchArray = new Array()\r\n    this.arrTable = [];\r\n    this.gridData.forEach(element => {\r\n      if (type == 'AC_NAME') {\r\n        if (JSON.stringify(element.AC_NAME).includes(ele.target.value.toUpperCase())) {\r\n          this.arrTable.push(element);\r\n        }\r\n      } else {\r\n        if (JSON.stringify(element.AC_NO).includes(ele.target.value)) {\r\n          this.arrTable.push(element);\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n  //select content of field\r\n  selectAllContent($event) {\r\n    $event.target.select();\r\n  }\r\n  //push receipt no into object\r\n  getLastTranDate(id, acno, AC_ACTDATE, OP_POSTED_INT, AC_OP_TOTAL_DEPOSITAMT, IS_DISPUTE_LOAN) {\r\n    if (AC_ACTDATE != '' || AC_ACTDATE != 'Invalid date') {\r\n      if (this.npaEntryArray.length != 0) {\r\n        if (this.npaEntryArray.some(item => item.AC_NO === acno)) {\r\n          this.npaEntryArray.forEach((element) => {\r\n            if (element.AC_NO == acno) {\r\n              element['AC_ACTDATE'] = AC_ACTDATE\r\n            }\r\n          })\r\n        }\r\n        else {\r\n          var object = {\r\n            AC_ACTDATE: AC_ACTDATE,\r\n            AC_NO: acno,\r\n            id: id,\r\n            OP_POSTED_INT: OP_POSTED_INT,\r\n            AC_OP_TOTAL_DEPOSITAMT: AC_OP_TOTAL_DEPOSITAMT,\r\n            IS_DISPUTE_LOAN: IS_DISPUTE_LOAN\r\n          }\r\n          this.npaEntryArray.push(object)\r\n        }\r\n      }\r\n      else {\r\n        var object = {\r\n          AC_ACTDATE: AC_ACTDATE,\r\n          AC_NO: acno,\r\n          id: id,\r\n          OP_POSTED_INT: OP_POSTED_INT,\r\n          AC_OP_TOTAL_DEPOSITAMT: AC_OP_TOTAL_DEPOSITAMT,\r\n          IS_DISPUTE_LOAN: IS_DISPUTE_LOAN\r\n        }\r\n        this.npaEntryArray.push(object)\r\n      }\r\n    }\r\n  }\r\n\r\n  //push amount in npaEntryArray array\r\n  getPostedInterest(id, acno, OP_POSTED_INT, AC_ACTDATE, AC_OP_TOTAL_DEPOSITAMT, IS_DISPUTE_LOAN) {\r\n    if (OP_POSTED_INT != '') {\r\n      if (this.npaEntryArray.length != 0) {\r\n        if (this.npaEntryArray.some(item => item.AC_NO === acno)) {\r\n          this.npaEntryArray.forEach((element) => {\r\n            if (element.AC_NO == acno) {\r\n              element['OP_POSTED_INT'] = OP_POSTED_INT\r\n            }\r\n          })\r\n        }\r\n        else {\r\n          var object = {\r\n            AC_ACTDATE: AC_ACTDATE,\r\n            AC_NO: acno,\r\n            id: id,\r\n            OP_POSTED_INT: OP_POSTED_INT,\r\n            AC_OP_TOTAL_DEPOSITAMT: AC_OP_TOTAL_DEPOSITAMT,\r\n            IS_DISPUTE_LOAN: IS_DISPUTE_LOAN\r\n          }\r\n          this.npaEntryArray.push(object)\r\n        }\r\n      }\r\n      else {\r\n        var object = {\r\n          AC_ACTDATE: AC_ACTDATE,\r\n          AC_NO: acno,\r\n          id: id,\r\n          OP_POSTED_INT: OP_POSTED_INT,\r\n          AC_OP_TOTAL_DEPOSITAMT: AC_OP_TOTAL_DEPOSITAMT,\r\n          IS_DISPUTE_LOAN: IS_DISPUTE_LOAN\r\n        }\r\n        this.npaEntryArray.push(object)\r\n      }\r\n    }\r\n  }\r\n\r\n  getDepositAmount(id, acno, AC_OP_TOTAL_DEPOSITAMT, AC_ACTDATE, OP_POSTED_INT, IS_DISPUTE_LOAN) {\r\n\r\n    if (AC_OP_TOTAL_DEPOSITAMT != '') {\r\n      if (this.npaEntryArray.length != 0) {\r\n        if (this.npaEntryArray.some(item => item.AC_NO === acno)) {\r\n          this.npaEntryArray.forEach((element) => {\r\n            if (element.AC_NO == acno) {\r\n              element['AC_OP_TOTAL_DEPOSITAMT'] = AC_OP_TOTAL_DEPOSITAMT\r\n            }\r\n          })\r\n        }\r\n        else {\r\n          var object = {\r\n            AC_ACTDATE: AC_ACTDATE,\r\n            AC_NO: acno,\r\n            id: id,\r\n            OP_POSTED_INT: OP_POSTED_INT,\r\n            AC_OP_TOTAL_DEPOSITAMT: AC_OP_TOTAL_DEPOSITAMT,\r\n            IS_DISPUTE_LOAN: IS_DISPUTE_LOAN\r\n          }\r\n          this.npaEntryArray.push(object)\r\n        }\r\n      }\r\n      else {\r\n        var object = {\r\n          AC_ACTDATE: AC_ACTDATE,\r\n          AC_NO: acno,\r\n          id: id,\r\n          OP_POSTED_INT: OP_POSTED_INT,\r\n          AC_OP_TOTAL_DEPOSITAMT: AC_OP_TOTAL_DEPOSITAMT,\r\n          IS_DISPUTE_LOAN: IS_DISPUTE_LOAN\r\n        }\r\n        this.npaEntryArray.push(object)\r\n      }\r\n    }\r\n  }\r\n\r\n  checkDisputeFlag(id, acno, flag, AC_ACTDATE, OP_POSTED_INT, AC_OP_TOTAL_DEPOSITAMT) {\r\n\r\n    let isDispute: boolean = false\r\n    if (flag.target.checked) {\r\n      isDispute = true\r\n    }\r\n    else {\r\n      isDispute = false\r\n    }\r\n\r\n    if (this.npaEntryArray.length != 0) {\r\n      if (this.npaEntryArray.some(item => item.AC_NO === acno)) {\r\n        this.npaEntryArray.forEach((element) => {\r\n          if (element.AC_NO == acno) {\r\n            element['IS_DISPUTE_LOAN'] = isDispute\r\n          }\r\n        })\r\n      }\r\n      else {\r\n        var object = {\r\n          AC_ACTDATE: AC_ACTDATE,\r\n          AC_NO: acno,\r\n          id: id,\r\n          OP_POSTED_INT: OP_POSTED_INT,\r\n          AC_OP_TOTAL_DEPOSITAMT: AC_OP_TOTAL_DEPOSITAMT,\r\n          IS_DISPUTE_LOAN: isDispute\r\n        }\r\n        this.npaEntryArray.push(object)\r\n      }\r\n    }\r\n    else {\r\n      var object = {\r\n        AC_ACTDATE: AC_ACTDATE,\r\n        AC_NO: acno,\r\n        id: id,\r\n        OP_POSTED_INT: OP_POSTED_INT,\r\n        AC_OP_TOTAL_DEPOSITAMT: AC_OP_TOTAL_DEPOSITAMT,\r\n        IS_DISPUTE_LOAN: isDispute\r\n      }\r\n      this.npaEntryArray.push(object)\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    let dataObj = this.npaOpeningForm.value;\r\n    dataObj['gridData'] = this.arrTable;\r\n\r\n    if (this.npaEntryArray.length != 0) {\r\n      const dataToSend = {\r\n        'npaEntryArray': this.npaEntryArray\r\n      };\r\n      this._npaService.postData(dataToSend).subscribe(\r\n        (data) => {\r\n          Swal.fire(\"Success!\", \"Data Updated Successfully !\", \"success\");\r\n\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n      //To clear form\r\n      this.resetForm();\r\n      this.arrTable = []\r\n      this.npaEntryArray = []\r\n    }\r\n  }\r\n\r\n  resetForm() {\r\n    this.createForm()\r\n    this.ngscheme = null\r\n    this.ngfromac = null\r\n    this.ngtoac = null\r\n    this.ngBranchCode = null\r\n    this.arrTable = []\r\n    this.npaEntryArray = []\r\n  }\r\n  //function for edit button clicked\r\n  editClickHandler(info: any): void {\r\n    this.showButton = false;\r\n    this.updateShow = true;\r\n  }\r\n\r\n  //function for delete button clicked\r\n  delClickHandler(info: any): void {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"Do you want to delete A/c no  data\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#229954',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your data has been deleted.',\r\n          'success'\r\n        )\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          'Your data is safe.',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  updateData() {\r\n    this.showButton = true;\r\n    this.updateShow = false;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dtTrigger.next();\r\n    // this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n    //   $('#npaopeningdetailstable tfoot tr').appendTo('#npaopeningdetailstable thead');\r\n    //   dtInstance.columns().every(function () {\r\n    //     const that = this;\r\n    //     $('input', this.footer()).on('keyup change', function () {\r\n    //       if (this['value'] != '') {\r\n    //         that\r\n    //           .search(this['value'])\r\n    //           .draw();\r\n    //       } else {\r\n    //         that\r\n    //           .search(this['value'])\r\n    //           .draw();\r\n    //       }\r\n    //     });\r\n    //   });\r\n    // });\r\n  }\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5>Opening NPA Details Entry</h5>\r\n                <h6 style=\"float: right; font-size: 12px; color: black;\" class=\"requiredlable\">\r\n                    Fields marked with (<sub class=\"required\"> * </sub>) are mandatory\r\n                </h6>\r\n            </div>\r\n            <form action=\"javascript:\" [formGroup]=\"npaOpeningForm\" novalidate (ngSubmit)=\"submit()\" #myform=\"ngForm\">\r\n                <div class=\"card-block\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"BRANCH\" bindValue=\"value\" [(ngModel)]=\"ngBranchCode\"\r\n                                        formControlName=\"BRANCH\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" (change)=\"getBranch()\"\r\n                                        placeholder=\"Branch\">\r\n                                        <ng-option *ngFor=\"let values of branch_code\" [value]=\"values\">\r\n                                            {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                    <label for=\"BRANCH\">Branch</label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"npaOpeningForm.controls['BRANCH'].invalid && (npaOpeningForm.controls['BRANCH'].dirty || npaOpeningForm.controls['BRANCH'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"npaOpeningForm.controls['BRANCH'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"AC_TYPE\" bindValue=\"value\" [(ngModel)]=\"ngscheme\"\r\n                                        formControlName=\"AC_TYPE\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required\r\n                                        (change)=\"getAccountList($event)\" placeholder=\"Scheme Code\">\r\n                                        <ng-option *ngFor=\"let values of scheme\" [value]=\"values\">\r\n                                            {{values.id}} {{values.label}}</ng-option>\r\n                                    </ng-select>\r\n                                    <label for=\"AC_TYPE\">Scheme Code<sub class=\"required\"> * </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"npaOpeningForm.controls['AC_TYPE'].invalid && (npaOpeningForm.controls['AC_TYPE'].dirty || npaOpeningForm.controls['AC_TYPE'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"npaOpeningForm.controls['AC_TYPE'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"FROM_AC\" bindValue=\"value\" [(ngModel)]=\"ngfromac\"\r\n                                        formControlName=\"FROM_AC\" bindLabel=\"label\" title=\"Compulsory Selection\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"From A/C\">\r\n                                        <ng-option *ngFor=\"let values of fromAC\" [value]=\"values\">\r\n                                            {{values.label}} {{values.name}}</ng-option>\r\n                                    </ng-select>\r\n                                    <label for=\"FROM_AC\">From Account Number<sub class=\"required\"> * </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"npaOpeningForm.controls['FROM_AC'].invalid && (npaOpeningForm.controls['FROM_AC'].dirty || npaOpeningForm.controls['FROM_AC'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"npaOpeningForm.controls['FROM_AC'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"form-group form-primary form-static-label\">\r\n                                <span class=\"border-lable-flt\">\r\n                                    <ng-select id=\"TO_AC\" bindValue=\"value\" [(ngModel)]=\"ngtoac\" formControlName=\"TO_AC\"\r\n                                        bindLabel=\"label\" title=\"Compulsory Selection\" (change)=\"getTable()\"\r\n                                        [ngClass]=\"{'form-submitted': formSubmitted}\" required placeholder=\"To A/C\">\r\n                                        <ng-option *ngFor=\"let values of ToAC\" [value]=\"values\">\r\n                                            {{values.label}} {{values.name}}</ng-option>\r\n                                    </ng-select>\r\n                                    <label for=\"TO_AC\">To Account Number<sub class=\"required\"> * </sub></label>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"form-group form-primary form-static-label\"\r\n                                *ngIf=\"npaOpeningForm.controls['TO_AC'].invalid && (npaOpeningForm.controls['TO_AC'].dirty || npaOpeningForm.controls['TO_AC'].touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div *ngIf=\"npaOpeningForm.controls['TO_AC'].errors?.required\">\r\n                                    This field is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-1\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" *ngIf=\"showButton\"\r\n                                [disabled]=\"npaOpeningForm.invalid\">Update</button>\r\n                            <button class=\"btn btn-outline-primary btn-sm\" (click)=\"updateData()\"\r\n                                *ngIf=\"updateShow\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div *ngIf=\"showTable\">\r\n                                <div class=\"col-12\">\r\n\r\n                                    <div class=\"table-responsive\">\r\n                                        <div class=\"scroll\">\r\n                                            <table class=\"table table-striped table-bordered table-hover compact\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <td class=\"td_right\">Account Number</td>\r\n                                                        <td>Account Name</td>\r\n                                                        <td class=\"td_center\">Last Transaction Date</td>\r\n                                                        <td class=\"td_right\">Total Posted Interest</td>\r\n                                                        <td class=\"td_right\">Total Deposit Amount</td>\r\n                                                        <td class=\"td_center\">Is Dispute Loan</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td><input type=\"text\" class=\"form-control\"\r\n                                                                (keyup)=\"filterObject($event,'AC_NO')\"></td>\r\n                                                        <td><input type=\"text\" class=\"form-control\"\r\n                                                                style=\"text-transform:uppercase;\"\r\n                                                                (keyup)=\"filterObject($event,'AC_NAME')\"></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                        <td></td>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody *ngIf=\"arrTable?.length != 0\">\r\n                                                    <tr *ngFor=\"let data of arrTable;\r\n                                                let indexOfelement = index\">\r\n                                                        <td class=\"td_right\">{{data.AC_NO}}</td>\r\n                                                        <td>{{data.AC_NAME == '' || data.AC_NAME == null ? '-' :\r\n                                                            data.AC_NAME}}</td>\r\n                                                        <td class=\"td_center\">\r\n                                                            <input type=\"text\" name=\"AC_ACTDATE\" id=\"AC_ACTDATE\"\r\n                                                                placeholder=\"dd/mm/yyyy\" class=\"form-control\"\r\n                                                                [bsConfig]=\"{ dateInputFormat: 'DD/MM/YYYY' }\"\r\n                                                                value=\"{{data.AC_ACTDATE == null || data.AC_ACTDATE == '' ? '' : data.AC_ACTDATE }}\"\r\n                                                                #AC_ACTDATE\r\n                                                                (keypress)=\"($event.charCode >= 48 && $event.charCode < 58) || $event.charCode == 47\"\r\n                                                                (bsValueChange)=\"getLastTranDate(data.id,data.AC_NO,AC_ACTDATE.value,OP_POSTED_INT.value,AC_OP_TOTAL_DEPOSITAMT.value,IS_DISPUTE_LOAN.value)\"\r\n                                                                bsDatepicker>\r\n                                                        </td>\r\n\r\n                                                        <td class=\"td_right\">\r\n                                                            <input style=\"text-align: right;\" type=\"text\"\r\n                                                                class=\"form-control\" (focus)=\"selectAllContent($event)\"\r\n                                                                name=\"OP_POSTED_INT\" id=\"OP_POSTED_INT\"\r\n                                                                value=\"{{data.OP_POSTED_INT == null || data.OP_POSTED_INT == '' ? 0 : data.OP_POSTED_INT }}\"\r\n                                                                #OP_POSTED_INT\r\n                                                                (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                                                (focusout)=\"getPostedInterest(data.id,data.AC_NO,OP_POSTED_INT.value,AC_ACTDATE.value,AC_OP_TOTAL_DEPOSITAMT.value,IS_DISPUTE_LOAN.value)\">\r\n                                                        </td>\r\n\r\n                                                        <td class=\"td_right\">\r\n                                                            <input style=\"text-align: right;\" type=\"text\"\r\n                                                                class=\"form-control\" (focus)=\"selectAllContent($event)\"\r\n                                                                name=\"AC_OP_TOTAL_DEPOSITAMT\"\r\n                                                                id=\"AC_OP_TOTAL_DEPOSITAMT\"\r\n                                                                value=\"{{data.AC_OP_TOTAL_DEPOSITAMT == null || data.AC_OP_TOTAL_DEPOSITAMT == '' ? 0 : data.AC_OP_TOTAL_DEPOSITAMT }}\"\r\n                                                                #AC_OP_TOTAL_DEPOSITAMT\r\n                                                                (keypress)=\"($event.charCode >= 48 && $event.charCode < 58)\"\r\n                                                                (focusout)=\"getDepositAmount(data.id,data.AC_NO,AC_OP_TOTAL_DEPOSITAMT.value,AC_ACTDATE.value,OP_POSTED_INT.value,IS_DISPUTE_LOAN.value)\">\r\n                                                        </td>\r\n\r\n                                                        <td class=\"td_center\">\r\n                                                            <input type=\"checkbox\" class=\"border-checkbox\"\r\n                                                                id=\"IS_DISPUTE_LOAN\" #IS_DISPUTE_LOAN\r\n                                                                [value]=\"data.IS_DISPUTE_LOAN==='1' ? true : null\"\r\n                                                                [attr.checked]=\"data.IS_DISPUTE_LOAN==='1' ? true :null\"\r\n                                                                (change)=\"checkDisputeFlag(data.id,data.AC_NO,$event,AC_ACTDATE.value,OP_POSTED_INT.value,AC_OP_TOTAL_DEPOSITAMT.value)\">\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody *ngIf=\"arrTable?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"6\" class=\"no-data-available\"\r\n                                                            style=\"text-align: center;\">\r\n                                                            No data!\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NpaOpeningDetailsEntryComponent } from './npa-opening-details-entry.component';\r\nimport { NpaOpeningDetailsEntryRoutingModule } from './npa-opening-details-entry-routing.module'\r\n// import { SelectModule } from 'ng-select';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { SchemeCodeDropdownService } from '../../../../shared/dropdownService/scheme-code-dropdown.service'\r\nimport { SchemeAccountNoService } from '../../../../shared/dropdownService/schemeAccountNo.service'\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NpaOpeningDetailsEntryService } from './npa-opening-details-entry.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UserAuthInterceptor } from 'src/app/user-auth.interceptor';\r\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { OwnbranchMasterService } from '../../../../shared/dropdownService/own-branch-master-dropdown.service'\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgbModule,\r\n    NpaOpeningDetailsEntryRoutingModule,\r\n    DataTablesModule,\r\n    // SelectModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    DatepickerModule.forRoot()\r\n  ],\r\n  providers: [SchemeCodeDropdownService, SchemeAccountNoService, NpaOpeningDetailsEntryService,OwnbranchMasterService, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: UserAuthInterceptor,\r\n    multi: true\r\n  },],\r\n  declarations: [NpaOpeningDetailsEntryComponent],\r\n  bootstrap: [NpaOpeningDetailsEntryComponent]\r\n})\r\nexport class NpaOpeningDetailsEntryModule { }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { environment } from '../../../../../environments/environment';\r\n@Injectable()\r\nexport class NpaOpeningDetailsEntryService {\r\n    [x: string]: any;\r\n    httpData: any;\r\n    // API \r\n    url = environment.base_url;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //get data for form\r\n    loadData(): Observable<any> {\r\n        return this.http.get(this.url).pipe(\r\n            map((res) => res)\r\n        )\r\n    }\r\n\r\n    //submit data for form\r\n    postData(data1: any): Observable<any> {\r\n        return this.http.post(this.url + '/term-loan-master/entryNpa', data1).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                let errorMessage = 'Please add valid length';\r\n                console.log(error)\r\n                // window.alert(errorMessage);\r\n                return throwError(errorMessage);\r\n            })\r\n        )\r\n    }\r\n\r\n    //delete record from table\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    // updateData(data): Observable<any> {\r\n\r\n    //     let result = this.http.post(this.url + '/update/', data).pipe(catchError(this.handleError));\r\n    //     console.log(result);\r\n    //     return result;\r\n    // }\r\n\r\n    // updateData(id:any,data:any):Observable<any>{\r\n    //   return this.http.post(this.url +'/update/'+id,data).pipe(catchError(this.handleError));\r\n    // }\r\n\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/term-loan-master/' + id).pipe(catchError(this.handleError));\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}